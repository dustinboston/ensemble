{
  "endOfFileToken": {
    "kind": "EndOfFileToken"
  },
  "fileName": "data/dts/lib.es2021.promise.d.ts",
  "hasNoDefaultLib": true,
  "isDeclarationFile": true,
  "kind": "SourceFile",
  "libReferenceDirectives": [],
  "referencedFiles": [],
  "statements": [
    {
      "heritageClauses": [
        {
          "kind": "HeritageClause",
          "token": "ExtendsKeyword",
          "types": [
            {
              "expression": {
                "kind": "Identifier",
                "text": "Error"
              },
              "kind": "ExpressionWithTypeArguments"
            }
          ]
        }
      ],
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "errors"
          },
          "type": {
            "elementType": {
              "kind": "AnyKeyword"
            },
            "kind": "ArrayType"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "AggregateError"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "ConstructSignature",
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "errors"
              },
              "type": {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "AnyKeyword"
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "Iterable"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "message"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "StringKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "AggregateError"
            }
          }
        },
        {
          "kind": "CallSignature",
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "errors"
              },
              "type": {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "AnyKeyword"
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "Iterable"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "message"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "StringKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "AggregateError"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "prototype"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "AggregateError"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "AggregateErrorConstructor"
      }
    },
    {
      "declarationList": {
        "declarations": [
          {
            "kind": "VariableDeclaration",
            "name": {
              "kind": "Identifier",
              "text": "AggregateError"
            },
            "type": {
              "kind": "TypeReference",
              "typeName": {
                "kind": "Identifier",
                "text": "AggregateErrorConstructor"
              }
            }
          }
        ],
        "kind": "VariableDeclarationList"
      },
      "kind": "FirstStatement",
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ]
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "any"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "values"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "T"
                }
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "indexType": {
                      "kind": "NumberKeyword"
                    },
                    "kind": "IndexedAccessType",
                    "objectType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "Awaited"
                }
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "Promise"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "any"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "values"
              },
              "type": {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      },
                      {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "PromiseLike"
                        }
                      }
                    ]
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "Iterable"
                }
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "Awaited"
                }
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "Promise"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "PromiseConstructor"
      }
    }
  ],
  "text": "/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib=\"true\"/>\n\ninterface AggregateError extends Error {\n    errors: any[];\n}\n\ninterface AggregateErrorConstructor {\n    new (errors: Iterable<any>, message?: string): AggregateError;\n    (errors: Iterable<any>, message?: string): AggregateError;\n    readonly prototype: AggregateError;\n}\n\ndeclare var AggregateError: AggregateErrorConstructor;\n\n/**\n * Represents the completion of an asynchronous operation\n */\ninterface PromiseConstructor {\n    /**\n     * The any function returns a promise that is fulfilled by the first given promise to be fulfilled, or rejected with an AggregateError containing an array of rejection reasons if all of the given promises are rejected. It resolves all elements of the passed iterable to promises as it runs this algorithm.\n     * @param values An array or iterable of Promises.\n     * @returns A new Promise.\n     */\n    any<T extends readonly unknown[] | []>(values: T): Promise<Awaited<T[number]>>;\n\n    /**\n     * The any function returns a promise that is fulfilled by the first given promise to be fulfilled, or rejected with an AggregateError containing an array of rejection reasons if all of the given promises are rejected. It resolves all elements of the passed iterable to promises as it runs this algorithm.\n     * @param values An array or iterable of Promises.\n     * @returns A new Promise.\n     */\n    any<T>(values: Iterable<T | PromiseLike<T>>): Promise<Awaited<T>>;\n}\n",
  "typeReferenceDirectives": []
}
