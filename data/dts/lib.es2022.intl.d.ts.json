{
  "endOfFileToken": {
    "kind": "EndOfFileToken"
  },
  "fileName": "data/dts/lib.es2022.intl.d.ts",
  "hasNoDefaultLib": true,
  "isDeclarationFile": true,
  "kind": "SourceFile",
  "libReferenceDirectives": [],
  "referencedFiles": [],
  "statements": [
    {
      "body": {
        "kind": "ModuleBlock",
        "statements": [
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "localeMatcher"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "best fit"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "lookup"
                      }
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "granularity"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "grapheme"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "word"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "sentence"
                      }
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "SegmenterOptions"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "segment"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "input"
                    },
                    "type": {
                      "kind": "StringKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Segments"
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "resolvedOptions"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ResolvedSegmenterOptions"
                  }
                }
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "Segmenter"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "locale"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "granularity"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "grapheme"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "word"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "sentence"
                      }
                    }
                  ]
                }
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ResolvedSegmenterOptions"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "containing"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "codeUnitIndex"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "SegmentData"
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "iterator"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "SegmentData"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "IterableIterator"
                  }
                }
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "Segments"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "segment"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "index"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "input"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "isWordLike"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "SegmentData"
            }
          },
          {
            "declarationList": {
              "declarations": [
                {
                  "kind": "VariableDeclaration",
                  "name": {
                    "kind": "Identifier",
                    "text": "Segmenter"
                  },
                  "type": {
                    "kind": "TypeLiteral",
                    "members": [
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "Identifier",
                          "text": "prototype"
                        },
                        "type": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Segmenter"
                          }
                        }
                      },
                      {
                        "kind": "ConstructSignature",
                        "parameters": [
                          {
                            "kind": "Parameter",
                            "name": {
                              "kind": "Identifier",
                              "text": "locales"
                            },
                            "questionToken": {
                              "kind": "QuestionToken"
                            },
                            "type": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "LocalesArgument"
                              }
                            }
                          },
                          {
                            "kind": "Parameter",
                            "name": {
                              "kind": "Identifier",
                              "text": "options"
                            },
                            "questionToken": {
                              "kind": "QuestionToken"
                            },
                            "type": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "SegmenterOptions"
                              }
                            }
                          }
                        ],
                        "type": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Segmenter"
                          }
                        }
                      },
                      {
                        "kind": "MethodSignature",
                        "name": {
                          "kind": "Identifier",
                          "text": "supportedLocalesOf"
                        },
                        "parameters": [
                          {
                            "kind": "Parameter",
                            "name": {
                              "kind": "Identifier",
                              "text": "locales"
                            },
                            "type": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "LocalesArgument"
                              }
                            }
                          },
                          {
                            "kind": "Parameter",
                            "name": {
                              "kind": "Identifier",
                              "text": "options"
                            },
                            "questionToken": {
                              "kind": "QuestionToken"
                            },
                            "type": {
                              "kind": "TypeReference",
                              "typeArguments": [
                                {
                                  "kind": "TypeReference",
                                  "typeName": {
                                    "kind": "Identifier",
                                    "text": "SegmenterOptions"
                                  }
                                },
                                {
                                  "kind": "LiteralType",
                                  "literal": {
                                    "kind": "StringLiteral",
                                    "text": "localeMatcher"
                                  }
                                }
                              ],
                              "typeName": {
                                "kind": "Identifier",
                                "text": "Pick"
                              }
                            }
                          }
                        ],
                        "type": {
                          "elementType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "UnicodeBCP47LocaleIdentifier"
                            }
                          },
                          "kind": "ArrayType"
                        }
                      }
                    ]
                  }
                }
              ],
              "kind": "VariableDeclarationList"
            },
            "kind": "FirstStatement"
          },
          {
            "kind": "FunctionDeclaration",
            "name": {
              "kind": "Identifier",
              "text": "supportedValuesOf"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "key"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "calendar"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "collation"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "currency"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "numberingSystem"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "timeZone"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "unit"
                      }
                    }
                  ]
                }
              }
            ],
            "type": {
              "elementType": {
                "kind": "StringKeyword"
              },
              "kind": "ArrayType"
            }
          }
        ]
      },
      "kind": "ModuleDeclaration",
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Intl"
      }
    }
  ],
  "text": "/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib=\"true\"/>\n\ndeclare namespace Intl {\n    /**\n     * An object with some or all properties of the `Intl.Segmenter` constructor `options` parameter.\n     *\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/Segmenter#parameters)\n     */\n    interface SegmenterOptions {\n        /** The locale matching algorithm to use. For information about this option, see [Intl page](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_negotiation). */\n        localeMatcher?: \"best fit\" | \"lookup\" | undefined;\n        /** The type of input to be split */\n        granularity?: \"grapheme\" | \"word\" | \"sentence\" | undefined;\n    }\n\n    interface Segmenter {\n        /**\n         * Returns `Segments` object containing the segments of the input string, using the segmenter's locale and granularity.\n         *\n         * @param input - The text to be segmented as a `string`.\n         *\n         * @returns A new iterable Segments object containing the segments of the input string, using the segmenter's locale and granularity.\n         */\n        segment(input: string): Segments;\n        resolvedOptions(): ResolvedSegmenterOptions;\n    }\n\n    interface ResolvedSegmenterOptions {\n        locale: string;\n        granularity: \"grapheme\" | \"word\" | \"sentence\";\n    }\n\n    interface Segments {\n        /**\n         * Returns an object describing the segment in the original string that includes the code unit at a specified index.\n         *\n         * @param codeUnitIndex - A number specifying the index of the code unit in the original input string. If the value is omitted, it defaults to `0`.\n         */\n        containing(codeUnitIndex?: number): SegmentData;\n\n        /** Returns an iterator to iterate over the segments. */\n        [Symbol.iterator](): IterableIterator<SegmentData>;\n    }\n\n    interface SegmentData {\n        /** A string containing the segment extracted from the original input string. */\n        segment: string;\n        /** The code unit index in the original input string at which the segment begins. */\n        index: number;\n        /** The complete input string that was segmented. */\n        input: string;\n        /**\n         * A boolean value only if granularity is \"word\"; otherwise, undefined.\n         * If granularity is \"word\", then isWordLike is true when the segment is word-like (i.e., consists of letters/numbers/ideographs/etc.); otherwise, false.\n         */\n        isWordLike?: boolean;\n    }\n\n    const Segmenter: {\n        prototype: Segmenter;\n\n        /**\n         * Creates a new `Intl.Segmenter` object.\n         *\n         * @param locales - A string with a [BCP 47 language tag](http://tools.ietf.org/html/rfc5646), or an array of such strings.\n         *  For the general form and interpretation of the `locales` argument,\n         *  see the [`Intl` page](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\n         *\n         * @param options - An [object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/Segmenter#parameters)\n         *  with some or all options of `SegmenterOptions`.\n         *\n         * @returns [Intl.Segmenter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segments) object.\n         *\n         * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter).\n         */\n        new (locales?: LocalesArgument, options?: SegmenterOptions): Segmenter;\n\n        /**\n         * Returns an array containing those of the provided locales that are supported without having to fall back to the runtime's default locale.\n         *\n         * @param locales - A string with a [BCP 47 language tag](http://tools.ietf.org/html/rfc5646), or an array of such strings.\n         *  For the general form and interpretation of the `locales` argument,\n         *  see the [`Intl` page](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\n         *\n         * @param options An [object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/supportedLocalesOf#parameters).\n         *  with some or all possible options.\n         *\n         * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter/supportedLocalesOf)\n         */\n        supportedLocalesOf(locales: LocalesArgument, options?: Pick<SegmenterOptions, \"localeMatcher\">): UnicodeBCP47LocaleIdentifier[];\n    };\n\n    /**\n     * Returns a sorted array of the supported collation, calendar, currency, numbering system, timezones, and units by the implementation.\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/supportedValuesOf)\n     *\n     * @param key A string indicating the category of values to return.\n     * @returns A sorted array of the supported values.\n     */\n    function supportedValuesOf(key: \"calendar\" | \"collation\" | \"currency\" | \"numberingSystem\" | \"timeZone\" | \"unit\"): string[];\n}\n",
  "typeReferenceDirectives": []
}
