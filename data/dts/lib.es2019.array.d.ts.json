{
  "endOfFileToken": {
    "kind": "EndOfFileToken"
  },
  "fileName": "data/dts/lib.es2019.array.d.ts",
  "hasNoDefaultLib": true,
  "isDeclarationFile": true,
  "kind": "SourceFile",
  "libReferenceDirectives": [],
  "referencedFiles": [],
  "statements": [
    {
      "kind": "TypeAliasDeclaration",
      "name": {
        "kind": "Identifier",
        "text": "FlatArray"
      },
      "type": {
        "indexType": {
          "checkType": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Depth"
            }
          },
          "extendsType": {
            "kind": "LiteralType",
            "literal": {
              "kind": "PrefixUnaryExpression",
              "operand": {
                "kind": "FirstLiteralToken",
                "text": "1"
              }
            }
          },
          "falseType": {
            "kind": "LiteralType",
            "literal": {
              "kind": "StringLiteral",
              "text": "recur"
            }
          },
          "kind": "ConditionalType",
          "trueType": {
            "kind": "LiteralType",
            "literal": {
              "kind": "StringLiteral",
              "text": "done"
            }
          }
        },
        "kind": "IndexedAccessType",
        "objectType": {
          "kind": "TypeLiteral",
          "members": [
            {
              "kind": "PropertySignature",
              "name": {
                "kind": "Identifier",
                "text": "done"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "Arr"
                }
              }
            },
            {
              "kind": "PropertySignature",
              "name": {
                "kind": "Identifier",
                "text": "recur"
              },
              "type": {
                "checkType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Arr"
                  }
                },
                "extendsType": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "InferType",
                      "typeParameter": {
                        "kind": "TypeParameter",
                        "name": {
                          "kind": "Identifier",
                          "text": "InnerArr"
                        }
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ReadonlyArray"
                  }
                },
                "falseType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Arr"
                  }
                },
                "kind": "ConditionalType",
                "trueType": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "InnerArr"
                      }
                    },
                    {
                      "indexType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "Depth"
                        }
                      },
                      "kind": "IndexedAccessType",
                      "objectType": {
                        "elements": [
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "PrefixUnaryExpression",
                              "operand": {
                                "kind": "FirstLiteralToken",
                                "text": "1"
                              }
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "0"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "1"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "2"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "3"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "4"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "5"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "6"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "7"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "8"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "9"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "10"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "11"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "12"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "13"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "14"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "15"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "16"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "17"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "18"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "19"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "FirstLiteralToken",
                              "text": "20"
                            }
                          }
                        ],
                        "kind": "TupleType"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "FlatArray"
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "flatMap"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "callback"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "this"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "This"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "index"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "elementType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      },
                      "kind": "ArrayType"
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "U"
                      }
                    },
                    {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "U"
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ReadonlyArray"
                      }
                    }
                  ]
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "This"
                }
              }
            }
          ],
          "type": {
            "elementType": {
              "kind": "TypeReference",
              "typeName": {
                "kind": "Identifier",
                "text": "U"
              }
            },
            "kind": "ArrayType"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "flat"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "this"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "A"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "depth"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "D"
                }
              }
            }
          ],
          "type": {
            "elementType": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "A"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "D"
                  }
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "FlatArray"
              }
            },
            "kind": "ArrayType"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "ReadonlyArray"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "flatMap"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "callback"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "this"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "This"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "index"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "elementType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      },
                      "kind": "ArrayType"
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "U"
                      }
                    },
                    {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "U"
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ReadonlyArray"
                      }
                    }
                  ]
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "This"
                }
              }
            }
          ],
          "type": {
            "elementType": {
              "kind": "TypeReference",
              "typeName": {
                "kind": "Identifier",
                "text": "U"
              }
            },
            "kind": "ArrayType"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "flat"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "this"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "A"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "depth"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "D"
                }
              }
            }
          ],
          "type": {
            "elementType": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "A"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "D"
                  }
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "FlatArray"
              }
            },
            "kind": "ArrayType"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Array"
      }
    }
  ],
  "text": "/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib=\"true\"/>\n\ntype FlatArray<Arr, Depth extends number> = {\n    done: Arr;\n    recur: Arr extends ReadonlyArray<infer InnerArr> ? FlatArray<InnerArr, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][Depth]>\n        : Arr;\n}[Depth extends -1 ? \"done\" : \"recur\"];\n\ninterface ReadonlyArray<T> {\n    /**\n     * Calls a defined callback function on each element of an array. Then, flattens the result into\n     * a new array.\n     * This is identical to a map followed by flat with depth 1.\n     *\n     * @param callback A function that accepts up to three arguments. The flatMap method calls the\n     * callback function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callback function. If\n     * thisArg is omitted, undefined is used as the this value.\n     */\n    flatMap<U, This = undefined>(\n        callback: (this: This, value: T, index: number, array: T[]) => U | ReadonlyArray<U>,\n        thisArg?: This,\n    ): U[];\n\n    /**\n     * Returns a new array with all sub-array elements concatenated into it recursively up to the\n     * specified depth.\n     *\n     * @param depth The maximum recursion depth\n     */\n    flat<A, D extends number = 1>(\n        this: A,\n        depth?: D,\n    ): FlatArray<A, D>[];\n}\n\ninterface Array<T> {\n    /**\n     * Calls a defined callback function on each element of an array. Then, flattens the result into\n     * a new array.\n     * This is identical to a map followed by flat with depth 1.\n     *\n     * @param callback A function that accepts up to three arguments. The flatMap method calls the\n     * callback function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callback function. If\n     * thisArg is omitted, undefined is used as the this value.\n     */\n    flatMap<U, This = undefined>(\n        callback: (this: This, value: T, index: number, array: T[]) => U | ReadonlyArray<U>,\n        thisArg?: This,\n    ): U[];\n\n    /**\n     * Returns a new array with all sub-array elements concatenated into it recursively up to the\n     * specified depth.\n     *\n     * @param depth The maximum recursion depth\n     */\n    flat<A, D extends number = 1>(\n        this: A,\n        depth?: D,\n    ): FlatArray<A, D>[];\n}\n",
  "typeReferenceDirectives": []
}
