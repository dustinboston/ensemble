{
  "endOfFileToken": {
    "kind": "EndOfFileToken"
  },
  "fileName": "data/dts/lib.deno.unstable.d.ts",
  "hasNoDefaultLib": true,
  "isDeclarationFile": true,
  "kind": "SourceFile",
  "libReferenceDirectives": [
    {
      "fileName": "deno.ns"
    },
    {
      "fileName": "deno.broadcast_channel"
    },
    {
      "fileName": "deno.webgpu"
    },
    {
      "fileName": "esnext"
    },
    {
      "fileName": "es2022.intl"
    }
  ],
  "referencedFiles": [],
  "statements": [
    {
      "body": {
        "kind": "ModuleBlock",
        "statements": [
          {
            "exportClause": {
              "elements": [],
              "kind": "NamedExports"
            },
            "kind": "ExportDeclaration"
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "remoteAddr"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Deno"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "NetAddr"
                    }
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "completed"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "VoidKeyword"
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ServeHandlerInfo"
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "umask"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "mask"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            ],
            "type": {
              "kind": "NumberKeyword"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeNumberType"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "u8"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "i8"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "u16"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "i16"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "u32"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "i32"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "f32"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "f64"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeBigIntType"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "u64"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "i64"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "usize"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "isize"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeBooleanType"
            },
            "type": {
              "kind": "LiteralType",
              "literal": {
                "kind": "StringLiteral",
                "text": "bool"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativePointerType"
            },
            "type": {
              "kind": "LiteralType",
              "literal": {
                "kind": "StringLiteral",
                "text": "pointer"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeBufferType"
            },
            "type": {
              "kind": "LiteralType",
              "literal": {
                "kind": "StringLiteral",
                "text": "buffer"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeFunctionType"
            },
            "type": {
              "kind": "LiteralType",
              "literal": {
                "kind": "StringLiteral",
                "text": "function"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeVoidType"
            },
            "type": {
              "kind": "LiteralType",
              "literal": {
                "kind": "StringLiteral",
                "text": "void"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeStructType"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "modifiers": [
                    {
                      "kind": "ReadonlyKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "struct"
                  },
                  "type": {
                    "kind": "TypeOperator",
                    "type": {
                      "elementType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "NativeType"
                        }
                      },
                      "kind": "ArrayType"
                    }
                  }
                }
              ]
            }
          },
          {
            "declarationList": {
              "declarations": [
                {
                  "kind": "VariableDeclaration",
                  "name": {
                    "kind": "Identifier",
                    "text": "brand"
                  },
                  "type": {
                    "kind": "TypeOperator",
                    "type": {
                      "kind": "SymbolKeyword"
                    }
                  }
                }
              ],
              "kind": "VariableDeclarationList"
            },
            "kind": "FirstStatement",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ]
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeU8Enum"
            },
            "type": {
              "kind": "IntersectionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "u8"
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "brand"
                        },
                        "kind": "ComputedPropertyName"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeI8Enum"
            },
            "type": {
              "kind": "IntersectionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "i8"
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "brand"
                        },
                        "kind": "ComputedPropertyName"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeU16Enum"
            },
            "type": {
              "kind": "IntersectionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "u16"
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "brand"
                        },
                        "kind": "ComputedPropertyName"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeI16Enum"
            },
            "type": {
              "kind": "IntersectionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "i16"
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "brand"
                        },
                        "kind": "ComputedPropertyName"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeU32Enum"
            },
            "type": {
              "kind": "IntersectionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "u32"
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "brand"
                        },
                        "kind": "ComputedPropertyName"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeI32Enum"
            },
            "type": {
              "kind": "IntersectionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "i32"
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "brand"
                        },
                        "kind": "ComputedPropertyName"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeTypedPointer"
            },
            "type": {
              "kind": "IntersectionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "pointer"
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "brand"
                        },
                        "kind": "ComputedPropertyName"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeTypedFunction"
            },
            "type": {
              "kind": "IntersectionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "function"
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "brand"
                        },
                        "kind": "ComputedPropertyName"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeType"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativeNumberType"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativeBigIntType"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativeBooleanType"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativePointerType"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativeBufferType"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativeFunctionType"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativeStructType"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "NativeResultType"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativeType"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativeVoidType"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ToNativeType"
            },
            "type": {
              "checkType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "T"
                }
              },
              "extendsType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "NativeStructType"
                }
              },
              "falseType": {
                "checkType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                },
                "extendsType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativeNumberType"
                  }
                },
                "falseType": {
                  "checkType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  "extendsType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "NativeBigIntType"
                    }
                  },
                  "falseType": {
                    "checkType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    },
                    "extendsType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "NativeBooleanType"
                      }
                    },
                    "falseType": {
                      "checkType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      },
                      "extendsType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "NativePointerType"
                        }
                      },
                      "falseType": {
                        "checkType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        },
                        "extendsType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NativeFunctionType"
                          }
                        },
                        "falseType": {
                          "checkType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          },
                          "extendsType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "NativeBufferType"
                            }
                          },
                          "falseType": {
                            "kind": "NeverKeyword"
                          },
                          "kind": "ConditionalType",
                          "trueType": {
                            "kind": "UnionType",
                            "types": [
                              {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "BufferSource"
                                }
                              },
                              {
                                "kind": "LiteralType",
                                "literal": {
                                  "kind": "NullKeyword"
                                }
                              }
                            ]
                          }
                        },
                        "kind": "ConditionalType",
                        "trueType": {
                          "checkType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          },
                          "extendsType": {
                            "kind": "TypeReference",
                            "typeArguments": [
                              {
                                "kind": "InferType",
                                "typeParameter": {
                                  "kind": "TypeParameter",
                                  "name": {
                                    "kind": "Identifier",
                                    "text": "U"
                                  }
                                }
                              }
                            ],
                            "typeName": {
                              "kind": "Identifier",
                              "text": "NativeTypedFunction"
                            }
                          },
                          "falseType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "PointerValue"
                            }
                          },
                          "kind": "ConditionalType",
                          "trueType": {
                            "kind": "UnionType",
                            "types": [
                              {
                                "kind": "TypeReference",
                                "typeArguments": [
                                  {
                                    "kind": "TypeReference",
                                    "typeName": {
                                      "kind": "Identifier",
                                      "text": "U"
                                    }
                                  }
                                ],
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "PointerValue"
                                }
                              },
                              {
                                "kind": "LiteralType",
                                "literal": {
                                  "kind": "NullKeyword"
                                }
                              }
                            ]
                          }
                        }
                      },
                      "kind": "ConditionalType",
                      "trueType": {
                        "checkType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        },
                        "extendsType": {
                          "kind": "TypeReference",
                          "typeArguments": [
                            {
                              "kind": "InferType",
                              "typeParameter": {
                                "kind": "TypeParameter",
                                "name": {
                                  "kind": "Identifier",
                                  "text": "U"
                                }
                              }
                            }
                          ],
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NativeTypedPointer"
                          }
                        },
                        "falseType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PointerValue"
                          }
                        },
                        "kind": "ConditionalType",
                        "trueType": {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "U"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "NullKeyword"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "kind": "ConditionalType",
                    "trueType": {
                      "kind": "BooleanKeyword"
                    }
                  },
                  "kind": "ConditionalType",
                  "trueType": {
                    "kind": "BigIntKeyword"
                  }
                },
                "kind": "ConditionalType",
                "trueType": {
                  "checkType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  "extendsType": {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "InferType",
                        "typeParameter": {
                          "kind": "TypeParameter",
                          "name": {
                            "kind": "Identifier",
                            "text": "U"
                          }
                        }
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "NativeU8Enum"
                    }
                  },
                  "falseType": {
                    "checkType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    },
                    "extendsType": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "InferType",
                          "typeParameter": {
                            "kind": "TypeParameter",
                            "name": {
                              "kind": "Identifier",
                              "text": "U"
                            }
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "NativeI8Enum"
                      }
                    },
                    "falseType": {
                      "checkType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      },
                      "extendsType": {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "kind": "InferType",
                            "typeParameter": {
                              "kind": "TypeParameter",
                              "name": {
                                "kind": "Identifier",
                                "text": "U"
                              }
                            }
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "NativeU16Enum"
                        }
                      },
                      "falseType": {
                        "checkType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        },
                        "extendsType": {
                          "kind": "TypeReference",
                          "typeArguments": [
                            {
                              "kind": "InferType",
                              "typeParameter": {
                                "kind": "TypeParameter",
                                "name": {
                                  "kind": "Identifier",
                                  "text": "U"
                                }
                              }
                            }
                          ],
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NativeI16Enum"
                          }
                        },
                        "falseType": {
                          "checkType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          },
                          "extendsType": {
                            "kind": "TypeReference",
                            "typeArguments": [
                              {
                                "kind": "InferType",
                                "typeParameter": {
                                  "kind": "TypeParameter",
                                  "name": {
                                    "kind": "Identifier",
                                    "text": "U"
                                  }
                                }
                              }
                            ],
                            "typeName": {
                              "kind": "Identifier",
                              "text": "NativeU32Enum"
                            }
                          },
                          "falseType": {
                            "checkType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            },
                            "extendsType": {
                              "kind": "TypeReference",
                              "typeArguments": [
                                {
                                  "kind": "InferType",
                                  "typeParameter": {
                                    "kind": "TypeParameter",
                                    "name": {
                                      "kind": "Identifier",
                                      "text": "U"
                                    }
                                  }
                                }
                              ],
                              "typeName": {
                                "kind": "Identifier",
                                "text": "NativeI32Enum"
                              }
                            },
                            "falseType": {
                              "kind": "NumberKeyword"
                            },
                            "kind": "ConditionalType",
                            "trueType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "U"
                              }
                            }
                          },
                          "kind": "ConditionalType",
                          "trueType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "U"
                            }
                          }
                        },
                        "kind": "ConditionalType",
                        "trueType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "U"
                          }
                        }
                      },
                      "kind": "ConditionalType",
                      "trueType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "U"
                        }
                      }
                    },
                    "kind": "ConditionalType",
                    "trueType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "U"
                      }
                    }
                  },
                  "kind": "ConditionalType",
                  "trueType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "U"
                    }
                  }
                }
              },
              "kind": "ConditionalType",
              "trueType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "BufferSource"
                }
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ToNativeResultType"
            },
            "type": {
              "checkType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "T"
                }
              },
              "extendsType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "NativeStructType"
                }
              },
              "falseType": {
                "checkType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                },
                "extendsType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativeNumberType"
                  }
                },
                "falseType": {
                  "checkType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  "extendsType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "NativeBigIntType"
                    }
                  },
                  "falseType": {
                    "checkType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    },
                    "extendsType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "NativeBooleanType"
                      }
                    },
                    "falseType": {
                      "checkType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      },
                      "extendsType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "NativePointerType"
                        }
                      },
                      "falseType": {
                        "checkType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        },
                        "extendsType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NativeFunctionType"
                          }
                        },
                        "falseType": {
                          "checkType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          },
                          "extendsType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "NativeBufferType"
                            }
                          },
                          "falseType": {
                            "checkType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            },
                            "extendsType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "NativeVoidType"
                              }
                            },
                            "falseType": {
                              "kind": "NeverKeyword"
                            },
                            "kind": "ConditionalType",
                            "trueType": {
                              "kind": "VoidKeyword"
                            }
                          },
                          "kind": "ConditionalType",
                          "trueType": {
                            "kind": "UnionType",
                            "types": [
                              {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "BufferSource"
                                }
                              },
                              {
                                "kind": "LiteralType",
                                "literal": {
                                  "kind": "NullKeyword"
                                }
                              }
                            ]
                          }
                        },
                        "kind": "ConditionalType",
                        "trueType": {
                          "checkType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          },
                          "extendsType": {
                            "kind": "TypeReference",
                            "typeArguments": [
                              {
                                "kind": "InferType",
                                "typeParameter": {
                                  "kind": "TypeParameter",
                                  "name": {
                                    "kind": "Identifier",
                                    "text": "U"
                                  }
                                }
                              }
                            ],
                            "typeName": {
                              "kind": "Identifier",
                              "text": "NativeTypedFunction"
                            }
                          },
                          "falseType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "PointerValue"
                            }
                          },
                          "kind": "ConditionalType",
                          "trueType": {
                            "kind": "UnionType",
                            "types": [
                              {
                                "kind": "TypeReference",
                                "typeArguments": [
                                  {
                                    "kind": "TypeReference",
                                    "typeName": {
                                      "kind": "Identifier",
                                      "text": "U"
                                    }
                                  }
                                ],
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "PointerObject"
                                }
                              },
                              {
                                "kind": "LiteralType",
                                "literal": {
                                  "kind": "NullKeyword"
                                }
                              }
                            ]
                          }
                        }
                      },
                      "kind": "ConditionalType",
                      "trueType": {
                        "checkType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        },
                        "extendsType": {
                          "kind": "TypeReference",
                          "typeArguments": [
                            {
                              "kind": "InferType",
                              "typeParameter": {
                                "kind": "TypeParameter",
                                "name": {
                                  "kind": "Identifier",
                                  "text": "U"
                                }
                              }
                            }
                          ],
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NativeTypedPointer"
                          }
                        },
                        "falseType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PointerValue"
                          }
                        },
                        "kind": "ConditionalType",
                        "trueType": {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "U"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "NullKeyword"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "kind": "ConditionalType",
                    "trueType": {
                      "kind": "BooleanKeyword"
                    }
                  },
                  "kind": "ConditionalType",
                  "trueType": {
                    "kind": "BigIntKeyword"
                  }
                },
                "kind": "ConditionalType",
                "trueType": {
                  "checkType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  "extendsType": {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "InferType",
                        "typeParameter": {
                          "kind": "TypeParameter",
                          "name": {
                            "kind": "Identifier",
                            "text": "U"
                          }
                        }
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "NativeU8Enum"
                    }
                  },
                  "falseType": {
                    "checkType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    },
                    "extendsType": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "InferType",
                          "typeParameter": {
                            "kind": "TypeParameter",
                            "name": {
                              "kind": "Identifier",
                              "text": "U"
                            }
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "NativeI8Enum"
                      }
                    },
                    "falseType": {
                      "checkType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      },
                      "extendsType": {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "kind": "InferType",
                            "typeParameter": {
                              "kind": "TypeParameter",
                              "name": {
                                "kind": "Identifier",
                                "text": "U"
                              }
                            }
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "NativeU16Enum"
                        }
                      },
                      "falseType": {
                        "checkType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        },
                        "extendsType": {
                          "kind": "TypeReference",
                          "typeArguments": [
                            {
                              "kind": "InferType",
                              "typeParameter": {
                                "kind": "TypeParameter",
                                "name": {
                                  "kind": "Identifier",
                                  "text": "U"
                                }
                              }
                            }
                          ],
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NativeI16Enum"
                          }
                        },
                        "falseType": {
                          "checkType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          },
                          "extendsType": {
                            "kind": "TypeReference",
                            "typeArguments": [
                              {
                                "kind": "InferType",
                                "typeParameter": {
                                  "kind": "TypeParameter",
                                  "name": {
                                    "kind": "Identifier",
                                    "text": "U"
                                  }
                                }
                              }
                            ],
                            "typeName": {
                              "kind": "Identifier",
                              "text": "NativeU32Enum"
                            }
                          },
                          "falseType": {
                            "checkType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            },
                            "extendsType": {
                              "kind": "TypeReference",
                              "typeArguments": [
                                {
                                  "kind": "InferType",
                                  "typeParameter": {
                                    "kind": "TypeParameter",
                                    "name": {
                                      "kind": "Identifier",
                                      "text": "U"
                                    }
                                  }
                                }
                              ],
                              "typeName": {
                                "kind": "Identifier",
                                "text": "NativeI32Enum"
                              }
                            },
                            "falseType": {
                              "kind": "NumberKeyword"
                            },
                            "kind": "ConditionalType",
                            "trueType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "U"
                              }
                            }
                          },
                          "kind": "ConditionalType",
                          "trueType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "U"
                            }
                          }
                        },
                        "kind": "ConditionalType",
                        "trueType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "U"
                          }
                        }
                      },
                      "kind": "ConditionalType",
                      "trueType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "U"
                        }
                      }
                    },
                    "kind": "ConditionalType",
                    "trueType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "U"
                      }
                    }
                  },
                  "kind": "ConditionalType",
                  "trueType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "U"
                    }
                  }
                }
              },
              "kind": "ConditionalType",
              "trueType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "BufferSource"
                }
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ToNativeParameterTypes"
            },
            "type": {
              "checkType": {
                "elements": [
                  {
                    "elementType": {
                      "kind": "ParenthesizedType",
                      "type": {
                        "indexType": {
                          "kind": "NumberKeyword"
                        },
                        "kind": "IndexedAccessType",
                        "objectType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        }
                      }
                    },
                    "kind": "ArrayType"
                  }
                ],
                "kind": "TupleType"
              },
              "extendsType": {
                "elements": [
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  }
                ],
                "kind": "TupleType"
              },
              "falseType": {
                "checkType": {
                  "elements": [
                    {
                      "kind": "TypeOperator",
                      "type": {
                        "elementType": {
                          "kind": "ParenthesizedType",
                          "type": {
                            "indexType": {
                              "kind": "NumberKeyword"
                            },
                            "kind": "IndexedAccessType",
                            "objectType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            }
                          }
                        },
                        "kind": "ArrayType"
                      }
                    }
                  ],
                  "kind": "TupleType"
                },
                "extendsType": {
                  "elements": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "kind": "TupleType"
                },
                "falseType": {
                  "checkType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  "extendsType": {
                    "kind": "TypeOperator",
                    "type": {
                      "elements": [
                        {
                          "kind": "RestType",
                          "type": {
                            "elementType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "NativeType"
                              }
                            },
                            "kind": "ArrayType"
                          }
                        }
                      ],
                      "kind": "TupleType"
                    }
                  },
                  "falseType": {
                    "kind": "NeverKeyword"
                  },
                  "kind": "ConditionalType",
                  "trueType": {
                    "kind": "MappedType",
                    "members": [],
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "indexType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "K"
                            }
                          },
                          "kind": "IndexedAccessType",
                          "objectType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ToNativeType"
                      }
                    },
                    "typeParameter": {
                      "constraint": {
                        "kind": "TypeOperator",
                        "type": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        }
                      },
                      "kind": "TypeParameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "K"
                      }
                    }
                  }
                },
                "kind": "ConditionalType",
                "trueType": {
                  "kind": "TypeOperator",
                  "type": {
                    "elementType": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "indexType": {
                            "kind": "NumberKeyword"
                          },
                          "kind": "IndexedAccessType",
                          "objectType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ToNativeType"
                      }
                    },
                    "kind": "ArrayType"
                  }
                }
              },
              "kind": "ConditionalType",
              "trueType": {
                "elementType": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "indexType": {
                        "kind": "NumberKeyword"
                      },
                      "kind": "IndexedAccessType",
                      "objectType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ToNativeType"
                  }
                },
                "kind": "ArrayType"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "FromNativeType"
            },
            "type": {
              "checkType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "T"
                }
              },
              "extendsType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "NativeStructType"
                }
              },
              "falseType": {
                "checkType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                },
                "extendsType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativeNumberType"
                  }
                },
                "falseType": {
                  "checkType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  "extendsType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "NativeBigIntType"
                    }
                  },
                  "falseType": {
                    "checkType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    },
                    "extendsType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "NativeBooleanType"
                      }
                    },
                    "falseType": {
                      "checkType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      },
                      "extendsType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "NativePointerType"
                        }
                      },
                      "falseType": {
                        "checkType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        },
                        "extendsType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NativeBufferType"
                          }
                        },
                        "falseType": {
                          "checkType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          },
                          "extendsType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "NativeFunctionType"
                            }
                          },
                          "falseType": {
                            "kind": "NeverKeyword"
                          },
                          "kind": "ConditionalType",
                          "trueType": {
                            "checkType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            },
                            "extendsType": {
                              "kind": "TypeReference",
                              "typeArguments": [
                                {
                                  "kind": "InferType",
                                  "typeParameter": {
                                    "kind": "TypeParameter",
                                    "name": {
                                      "kind": "Identifier",
                                      "text": "U"
                                    }
                                  }
                                }
                              ],
                              "typeName": {
                                "kind": "Identifier",
                                "text": "NativeTypedFunction"
                              }
                            },
                            "falseType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "PointerValue"
                              }
                            },
                            "kind": "ConditionalType",
                            "trueType": {
                              "kind": "UnionType",
                              "types": [
                                {
                                  "kind": "TypeReference",
                                  "typeArguments": [
                                    {
                                      "kind": "TypeReference",
                                      "typeName": {
                                        "kind": "Identifier",
                                        "text": "U"
                                      }
                                    }
                                  ],
                                  "typeName": {
                                    "kind": "Identifier",
                                    "text": "PointerObject"
                                  }
                                },
                                {
                                  "kind": "LiteralType",
                                  "literal": {
                                    "kind": "NullKeyword"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "kind": "ConditionalType",
                        "trueType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PointerValue"
                          }
                        }
                      },
                      "kind": "ConditionalType",
                      "trueType": {
                        "checkType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        },
                        "extendsType": {
                          "kind": "TypeReference",
                          "typeArguments": [
                            {
                              "kind": "InferType",
                              "typeParameter": {
                                "kind": "TypeParameter",
                                "name": {
                                  "kind": "Identifier",
                                  "text": "U"
                                }
                              }
                            }
                          ],
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NativeTypedPointer"
                          }
                        },
                        "falseType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PointerValue"
                          }
                        },
                        "kind": "ConditionalType",
                        "trueType": {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "U"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "NullKeyword"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "kind": "ConditionalType",
                    "trueType": {
                      "kind": "BooleanKeyword"
                    }
                  },
                  "kind": "ConditionalType",
                  "trueType": {
                    "kind": "BigIntKeyword"
                  }
                },
                "kind": "ConditionalType",
                "trueType": {
                  "checkType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  "extendsType": {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "InferType",
                        "typeParameter": {
                          "kind": "TypeParameter",
                          "name": {
                            "kind": "Identifier",
                            "text": "U"
                          }
                        }
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "NativeU8Enum"
                    }
                  },
                  "falseType": {
                    "checkType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    },
                    "extendsType": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "InferType",
                          "typeParameter": {
                            "kind": "TypeParameter",
                            "name": {
                              "kind": "Identifier",
                              "text": "U"
                            }
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "NativeI8Enum"
                      }
                    },
                    "falseType": {
                      "checkType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      },
                      "extendsType": {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "kind": "InferType",
                            "typeParameter": {
                              "kind": "TypeParameter",
                              "name": {
                                "kind": "Identifier",
                                "text": "U"
                              }
                            }
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "NativeU16Enum"
                        }
                      },
                      "falseType": {
                        "checkType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        },
                        "extendsType": {
                          "kind": "TypeReference",
                          "typeArguments": [
                            {
                              "kind": "InferType",
                              "typeParameter": {
                                "kind": "TypeParameter",
                                "name": {
                                  "kind": "Identifier",
                                  "text": "U"
                                }
                              }
                            }
                          ],
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NativeI16Enum"
                          }
                        },
                        "falseType": {
                          "checkType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          },
                          "extendsType": {
                            "kind": "TypeReference",
                            "typeArguments": [
                              {
                                "kind": "InferType",
                                "typeParameter": {
                                  "kind": "TypeParameter",
                                  "name": {
                                    "kind": "Identifier",
                                    "text": "U"
                                  }
                                }
                              }
                            ],
                            "typeName": {
                              "kind": "Identifier",
                              "text": "NativeU32Enum"
                            }
                          },
                          "falseType": {
                            "checkType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            },
                            "extendsType": {
                              "kind": "TypeReference",
                              "typeArguments": [
                                {
                                  "kind": "InferType",
                                  "typeParameter": {
                                    "kind": "TypeParameter",
                                    "name": {
                                      "kind": "Identifier",
                                      "text": "U"
                                    }
                                  }
                                }
                              ],
                              "typeName": {
                                "kind": "Identifier",
                                "text": "NativeI32Enum"
                              }
                            },
                            "falseType": {
                              "kind": "NumberKeyword"
                            },
                            "kind": "ConditionalType",
                            "trueType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "U"
                              }
                            }
                          },
                          "kind": "ConditionalType",
                          "trueType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "U"
                            }
                          }
                        },
                        "kind": "ConditionalType",
                        "trueType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "U"
                          }
                        }
                      },
                      "kind": "ConditionalType",
                      "trueType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "U"
                        }
                      }
                    },
                    "kind": "ConditionalType",
                    "trueType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "U"
                      }
                    }
                  },
                  "kind": "ConditionalType",
                  "trueType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "U"
                    }
                  }
                }
              },
              "kind": "ConditionalType",
              "trueType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "Uint8Array"
                }
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "FromNativeResultType"
            },
            "type": {
              "checkType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "T"
                }
              },
              "extendsType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "NativeStructType"
                }
              },
              "falseType": {
                "checkType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                },
                "extendsType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NativeNumberType"
                  }
                },
                "falseType": {
                  "checkType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  "extendsType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "NativeBigIntType"
                    }
                  },
                  "falseType": {
                    "checkType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    },
                    "extendsType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "NativeBooleanType"
                      }
                    },
                    "falseType": {
                      "checkType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      },
                      "extendsType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "NativePointerType"
                        }
                      },
                      "falseType": {
                        "checkType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        },
                        "extendsType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NativeBufferType"
                          }
                        },
                        "falseType": {
                          "checkType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          },
                          "extendsType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "NativeFunctionType"
                            }
                          },
                          "falseType": {
                            "checkType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            },
                            "extendsType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "NativeVoidType"
                              }
                            },
                            "falseType": {
                              "kind": "NeverKeyword"
                            },
                            "kind": "ConditionalType",
                            "trueType": {
                              "kind": "VoidKeyword"
                            }
                          },
                          "kind": "ConditionalType",
                          "trueType": {
                            "checkType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            },
                            "extendsType": {
                              "kind": "TypeReference",
                              "typeArguments": [
                                {
                                  "kind": "InferType",
                                  "typeParameter": {
                                    "kind": "TypeParameter",
                                    "name": {
                                      "kind": "Identifier",
                                      "text": "U"
                                    }
                                  }
                                }
                              ],
                              "typeName": {
                                "kind": "Identifier",
                                "text": "NativeTypedFunction"
                              }
                            },
                            "falseType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "PointerValue"
                              }
                            },
                            "kind": "ConditionalType",
                            "trueType": {
                              "kind": "UnionType",
                              "types": [
                                {
                                  "kind": "TypeReference",
                                  "typeArguments": [
                                    {
                                      "kind": "TypeReference",
                                      "typeName": {
                                        "kind": "Identifier",
                                        "text": "U"
                                      }
                                    }
                                  ],
                                  "typeName": {
                                    "kind": "Identifier",
                                    "text": "PointerObject"
                                  }
                                },
                                {
                                  "kind": "LiteralType",
                                  "literal": {
                                    "kind": "NullKeyword"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "kind": "ConditionalType",
                        "trueType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PointerValue"
                          }
                        }
                      },
                      "kind": "ConditionalType",
                      "trueType": {
                        "checkType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        },
                        "extendsType": {
                          "kind": "TypeReference",
                          "typeArguments": [
                            {
                              "kind": "InferType",
                              "typeParameter": {
                                "kind": "TypeParameter",
                                "name": {
                                  "kind": "Identifier",
                                  "text": "U"
                                }
                              }
                            }
                          ],
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NativeTypedPointer"
                          }
                        },
                        "falseType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PointerValue"
                          }
                        },
                        "kind": "ConditionalType",
                        "trueType": {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "U"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "NullKeyword"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "kind": "ConditionalType",
                    "trueType": {
                      "kind": "BooleanKeyword"
                    }
                  },
                  "kind": "ConditionalType",
                  "trueType": {
                    "kind": "BigIntKeyword"
                  }
                },
                "kind": "ConditionalType",
                "trueType": {
                  "checkType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  "extendsType": {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "InferType",
                        "typeParameter": {
                          "kind": "TypeParameter",
                          "name": {
                            "kind": "Identifier",
                            "text": "U"
                          }
                        }
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "NativeU8Enum"
                    }
                  },
                  "falseType": {
                    "checkType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    },
                    "extendsType": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "InferType",
                          "typeParameter": {
                            "kind": "TypeParameter",
                            "name": {
                              "kind": "Identifier",
                              "text": "U"
                            }
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "NativeI8Enum"
                      }
                    },
                    "falseType": {
                      "checkType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      },
                      "extendsType": {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "kind": "InferType",
                            "typeParameter": {
                              "kind": "TypeParameter",
                              "name": {
                                "kind": "Identifier",
                                "text": "U"
                              }
                            }
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "NativeU16Enum"
                        }
                      },
                      "falseType": {
                        "checkType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        },
                        "extendsType": {
                          "kind": "TypeReference",
                          "typeArguments": [
                            {
                              "kind": "InferType",
                              "typeParameter": {
                                "kind": "TypeParameter",
                                "name": {
                                  "kind": "Identifier",
                                  "text": "U"
                                }
                              }
                            }
                          ],
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NativeI16Enum"
                          }
                        },
                        "falseType": {
                          "checkType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          },
                          "extendsType": {
                            "kind": "TypeReference",
                            "typeArguments": [
                              {
                                "kind": "InferType",
                                "typeParameter": {
                                  "kind": "TypeParameter",
                                  "name": {
                                    "kind": "Identifier",
                                    "text": "U"
                                  }
                                }
                              }
                            ],
                            "typeName": {
                              "kind": "Identifier",
                              "text": "NativeU32Enum"
                            }
                          },
                          "falseType": {
                            "checkType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            },
                            "extendsType": {
                              "kind": "TypeReference",
                              "typeArguments": [
                                {
                                  "kind": "InferType",
                                  "typeParameter": {
                                    "kind": "TypeParameter",
                                    "name": {
                                      "kind": "Identifier",
                                      "text": "U"
                                    }
                                  }
                                }
                              ],
                              "typeName": {
                                "kind": "Identifier",
                                "text": "NativeI32Enum"
                              }
                            },
                            "falseType": {
                              "kind": "NumberKeyword"
                            },
                            "kind": "ConditionalType",
                            "trueType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "U"
                              }
                            }
                          },
                          "kind": "ConditionalType",
                          "trueType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "U"
                            }
                          }
                        },
                        "kind": "ConditionalType",
                        "trueType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "U"
                          }
                        }
                      },
                      "kind": "ConditionalType",
                      "trueType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "U"
                        }
                      }
                    },
                    "kind": "ConditionalType",
                    "trueType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "U"
                      }
                    }
                  },
                  "kind": "ConditionalType",
                  "trueType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "U"
                    }
                  }
                }
              },
              "kind": "ConditionalType",
              "trueType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "Uint8Array"
                }
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "FromNativeParameterTypes"
            },
            "type": {
              "checkType": {
                "elements": [
                  {
                    "elementType": {
                      "kind": "ParenthesizedType",
                      "type": {
                        "indexType": {
                          "kind": "NumberKeyword"
                        },
                        "kind": "IndexedAccessType",
                        "objectType": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        }
                      }
                    },
                    "kind": "ArrayType"
                  }
                ],
                "kind": "TupleType"
              },
              "extendsType": {
                "elements": [
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  }
                ],
                "kind": "TupleType"
              },
              "falseType": {
                "checkType": {
                  "elements": [
                    {
                      "kind": "TypeOperator",
                      "type": {
                        "elementType": {
                          "kind": "ParenthesizedType",
                          "type": {
                            "indexType": {
                              "kind": "NumberKeyword"
                            },
                            "kind": "IndexedAccessType",
                            "objectType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            }
                          }
                        },
                        "kind": "ArrayType"
                      }
                    }
                  ],
                  "kind": "TupleType"
                },
                "extendsType": {
                  "elements": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "kind": "TupleType"
                },
                "falseType": {
                  "checkType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  "extendsType": {
                    "kind": "TypeOperator",
                    "type": {
                      "elements": [
                        {
                          "kind": "RestType",
                          "type": {
                            "elementType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "NativeType"
                              }
                            },
                            "kind": "ArrayType"
                          }
                        }
                      ],
                      "kind": "TupleType"
                    }
                  },
                  "falseType": {
                    "kind": "NeverKeyword"
                  },
                  "kind": "ConditionalType",
                  "trueType": {
                    "kind": "MappedType",
                    "members": [],
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "indexType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "K"
                            }
                          },
                          "kind": "IndexedAccessType",
                          "objectType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "FromNativeType"
                      }
                    },
                    "typeParameter": {
                      "constraint": {
                        "kind": "TypeOperator",
                        "type": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        }
                      },
                      "kind": "TypeParameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "K"
                      }
                    }
                  }
                },
                "kind": "ConditionalType",
                "trueType": {
                  "kind": "TypeOperator",
                  "type": {
                    "elementType": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "indexType": {
                            "kind": "NumberKeyword"
                          },
                          "kind": "IndexedAccessType",
                          "objectType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "FromNativeType"
                      }
                    },
                    "kind": "ArrayType"
                  }
                }
              },
              "kind": "ConditionalType",
              "trueType": {
                "elementType": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "indexType": {
                        "kind": "NumberKeyword"
                      },
                      "kind": "IndexedAccessType",
                      "objectType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "FromNativeType"
                  }
                },
                "kind": "ArrayType"
              }
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "name"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "parameters"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Parameters"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "result"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Result"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "nonblocking"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "NonBlocking"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "optional"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ForeignFunction"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "name"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "type"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Type"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "optional"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ForeignStatic"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "IndexSignature",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "name"
                    },
                    "type": {
                      "kind": "StringKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ForeignFunction"
                      }
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ForeignStatic"
                      }
                    }
                  ]
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ForeignLibraryInterface"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "StaticForeignSymbol"
            },
            "type": {
              "checkType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "T"
                }
              },
              "extendsType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "ForeignFunction"
                }
              },
              "falseType": {
                "checkType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                },
                "extendsType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ForeignStatic"
                  }
                },
                "falseType": {
                  "kind": "NeverKeyword"
                },
                "kind": "ConditionalType",
                "trueType": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "indexType": {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "type"
                        }
                      },
                      "kind": "IndexedAccessType",
                      "objectType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "FromNativeType"
                  }
                }
              },
              "kind": "ConditionalType",
              "trueType": {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "FromForeignFunction"
                }
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "FromForeignFunction"
            },
            "type": {
              "checkType": {
                "indexType": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "parameters"
                  }
                },
                "kind": "IndexedAccessType",
                "objectType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                }
              },
              "extendsType": {
                "kind": "TypeOperator",
                "type": {
                  "elements": [],
                  "kind": "TupleType"
                }
              },
              "falseType": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "dotDotDotToken": {
                      "kind": "DotDotDotToken"
                    },
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "args"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "indexType": {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "parameters"
                            }
                          },
                          "kind": "IndexedAccessType",
                          "objectType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ToNativeParameterTypes"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "StaticForeignSymbolReturnType"
                  }
                }
              },
              "kind": "ConditionalType",
              "trueType": {
                "kind": "FunctionType",
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "StaticForeignSymbolReturnType"
                  }
                }
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "StaticForeignSymbolReturnType"
            },
            "type": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "indexType": {
                    "kind": "LiteralType",
                    "literal": {
                      "kind": "StringLiteral",
                      "text": "nonblocking"
                    }
                  },
                  "kind": "IndexedAccessType",
                  "objectType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "indexType": {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "result"
                        }
                      },
                      "kind": "IndexedAccessType",
                      "objectType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "FromNativeResultType"
                  }
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "ConditionalAsync"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ConditionalAsync"
            },
            "type": {
              "checkType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "IsAsync"
                }
              },
              "extendsType": {
                "kind": "LiteralType",
                "literal": {
                  "kind": "TrueKeyword"
                }
              },
              "falseType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "T"
                }
              },
              "kind": "ConditionalType",
              "trueType": {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "Promise"
                }
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "StaticForeignLibraryInterface"
            },
            "type": {
              "kind": "MappedType",
              "members": [],
              "type": {
                "checkType": {
                  "indexType": {
                    "kind": "LiteralType",
                    "literal": {
                      "kind": "StringLiteral",
                      "text": "optional"
                    }
                  },
                  "kind": "IndexedAccessType",
                  "objectType": {
                    "indexType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "K"
                      }
                    },
                    "kind": "IndexedAccessType",
                    "objectType": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  }
                },
                "extendsType": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "TrueKeyword"
                  }
                },
                "falseType": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "indexType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "K"
                        }
                      },
                      "kind": "IndexedAccessType",
                      "objectType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "StaticForeignSymbol"
                  }
                },
                "kind": "ConditionalType",
                "trueType": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "indexType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "K"
                            }
                          },
                          "kind": "IndexedAccessType",
                          "objectType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "StaticForeignSymbol"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "NullKeyword"
                      }
                    }
                  ]
                }
              },
              "typeParameter": {
                "constraint": {
                  "kind": "TypeOperator",
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  }
                },
                "kind": "TypeParameter",
                "name": {
                  "kind": "Identifier",
                  "text": "K"
                }
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PointerObject"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "brand"
                    },
                    "kind": "ComputedPropertyName"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PointerValue"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "NullKeyword"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PointerObject"
                  }
                }
              ]
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "create"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "BigIntKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PointerValue"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "equals"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "a"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PointerValue"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "b"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PointerValue"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "of"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Deno"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "UnsafeCallback"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "BufferSource"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PointerValue"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "offset"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PointerObject"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PointerValue"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "value"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PointerValue"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "BigIntKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "UnsafePointer"
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "pointer"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PointerObject"
                      }
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "pointer"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PointerObject"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getBool"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getUint8"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getInt8"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getUint16"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getInt16"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getUint32"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getInt32"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getBigUint64"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "BigIntKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getBigInt64"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "BigIntKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getFloat32"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getFloat64"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getPointer"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PointerValue"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getCString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "getCString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "pointer"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PointerObject"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getArrayBuffer"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "byteLength"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ArrayBuffer"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "getArrayBuffer"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "pointer"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PointerObject"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "byteLength"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ArrayBuffer"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "copyInto"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "destination"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "BufferSource"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "VoidKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "copyInto"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "pointer"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PointerObject"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "destination"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "BufferSource"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "offset"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "VoidKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "UnsafePointerView"
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "PropertyDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "pointer"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Fn"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PointerObject"
                  }
                }
              },
              {
                "kind": "PropertyDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "definition"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Fn"
                  }
                }
              },
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "pointer"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "TypeReference",
                          "typeArguments": [
                            {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "Fn"
                              }
                            }
                          ],
                          "typeName": {
                            "kind": "Identifier",
                            "text": "NoInfer"
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PointerObject"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "definition"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Fn"
                      }
                    }
                  }
                ]
              },
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "pointer"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PointerObject"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "definition"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Fn"
                      }
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "call"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Fn"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "FromForeignFunction"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "UnsafeFnPointer"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "parameters"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Parameters"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "result"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Result"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "UnsafeCallbackDefinition"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "UnsafeCallbackFunction"
            },
            "type": {
              "checkType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "Parameters"
                }
              },
              "extendsType": {
                "kind": "TypeOperator",
                "type": {
                  "elements": [],
                  "kind": "TupleType"
                }
              },
              "falseType": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "dotDotDotToken": {
                      "kind": "DotDotDotToken"
                    },
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "args"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Parameters"
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "FromNativeParameterTypes"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Result"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ToNativeResultType"
                  }
                }
              },
              "kind": "ConditionalType",
              "trueType": {
                "kind": "FunctionType",
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Result"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ToNativeResultType"
                  }
                }
              }
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "definition"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Definition"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "callback"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "indexType": {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "parameters"
                            }
                          },
                          "kind": "IndexedAccessType",
                          "objectType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "Definition"
                            }
                          }
                        },
                        {
                          "indexType": {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "result"
                            }
                          },
                          "kind": "IndexedAccessType",
                          "objectType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "Definition"
                            }
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "UnsafeCallbackFunction"
                      }
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "pointer"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Definition"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PointerObject"
                  }
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "definition"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Definition"
                  }
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "callback"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "indexType": {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "parameters"
                        }
                      },
                      "kind": "IndexedAccessType",
                      "objectType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "Definition"
                        }
                      }
                    },
                    {
                      "indexType": {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "result"
                        }
                      },
                      "kind": "IndexedAccessType",
                      "objectType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "Definition"
                        }
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "UnsafeCallbackFunction"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "threadSafe"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "definition"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Definition"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "callback"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "indexType": {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "parameters"
                            }
                          },
                          "kind": "IndexedAccessType",
                          "objectType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "Definition"
                            }
                          }
                        },
                        {
                          "indexType": {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "result"
                            }
                          },
                          "kind": "IndexedAccessType",
                          "objectType": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "Definition"
                            }
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "UnsafeCallbackFunction"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Definition"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "UnsafeCallback"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "ref"
                },
                "parameters": [],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "unref"
                },
                "parameters": [],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "close"
                },
                "parameters": [],
                "type": {
                  "kind": "VoidKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "UnsafeCallback"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "symbols"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "S"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "StaticForeignLibraryInterface"
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "close"
                },
                "parameters": [],
                "type": {
                  "kind": "VoidKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DynamicLibrary"
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "dlopen"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "filename"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "StringKeyword"
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "URL"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "symbols"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "S"
                  }
                }
              }
            ],
            "type": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "S"
                  }
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "DynamicLibrary"
              }
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "system"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "LiteralType",
                          "literal": {
                            "kind": "StringLiteral",
                            "text": "cocoa"
                          }
                        },
                        {
                          "kind": "LiteralType",
                          "literal": {
                            "kind": "StringLiteral",
                            "text": "win32"
                          }
                        },
                        {
                          "kind": "LiteralType",
                          "literal": {
                            "kind": "StringLiteral",
                            "text": "x11"
                          }
                        },
                        {
                          "kind": "LiteralType",
                          "literal": {
                            "kind": "StringLiteral",
                            "text": "wayland"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "windowHandle"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnknownKeyword"
                        }
                      ],
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Deno"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "PointerValue"
                        }
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "displayHandle"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnknownKeyword"
                        }
                      ],
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Deno"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "PointerValue"
                        }
                      }
                    }
                  }
                ]
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getContext"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "context"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "webgpu"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "GPUCanvasContext"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "present"
                },
                "parameters": [],
                "type": {
                  "kind": "VoidKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "UnsafeWindowSurface"
            }
          },
          {
            "heritageClauses": [
              {
                "kind": "HeritageClause",
                "token": "ExtendsKeyword",
                "types": [
                  {
                    "expression": {
                      "kind": "Identifier",
                      "text": "RunOptions"
                    },
                    "kind": "ExpressionWithTypeArguments"
                  }
                ]
              }
            ],
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "clearEnv"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "gid"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "uid"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "UnstableRunOptions"
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "run"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "opt"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                }
              }
            ],
            "type": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "Process"
              }
            }
          },
          {
            "heritageClauses": [
              {
                "kind": "HeritageClause",
                "token": "ExtendsKeyword",
                "types": [
                  {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Disposable"
                    },
                    "kind": "ExpressionWithTypeArguments"
                  }
                ]
              }
            ],
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "close"
                },
                "parameters": [],
                "type": {
                  "kind": "VoidKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "HttpClient"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "caCerts"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "elementType": {
                    "kind": "StringKeyword"
                  },
                  "kind": "ArrayType"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "proxy"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Proxy"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "poolMaxIdlePerHost"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "poolIdleTimeout"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "FalseKeyword"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "http1"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "http2"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "allowHost"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "CreateHttpClientOptions"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "url"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "basicAuth"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "BasicAuth"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "Proxy"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "username"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "password"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "BasicAuth"
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "createHttpClient"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "options"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "CreateHttpClientOptions"
                  }
                }
              }
            ],
            "type": {
              "kind": "TypeReference",
              "typeName": {
                "kind": "Identifier",
                "text": "HttpClient"
              }
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "createHttpClient"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "options"
                },
                "type": {
                  "kind": "IntersectionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CreateHttpClientOptions"
                      }
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "TlsCertifiedKeyOptions"
                      }
                    }
                  ]
                }
              }
            ],
            "type": {
              "kind": "TypeReference",
              "typeName": {
                "kind": "Identifier",
                "text": "HttpClient"
              }
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "leave"
                },
                "type": {
                  "kind": "FunctionType",
                  "parameters": [],
                  "type": {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "VoidKeyword"
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Promise"
                    }
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "setLoopback"
                },
                "type": {
                  "kind": "FunctionType",
                  "parameters": [
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "loopback"
                      },
                      "type": {
                        "kind": "BooleanKeyword"
                      }
                    }
                  ],
                  "type": {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "VoidKeyword"
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Promise"
                    }
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "setTTL"
                },
                "type": {
                  "kind": "FunctionType",
                  "parameters": [
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "ttl"
                      },
                      "type": {
                        "kind": "NumberKeyword"
                      }
                    }
                  ],
                  "type": {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "VoidKeyword"
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Promise"
                    }
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "MulticastV4Membership"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "leave"
                },
                "type": {
                  "kind": "FunctionType",
                  "parameters": [],
                  "type": {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "VoidKeyword"
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Promise"
                    }
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "setLoopback"
                },
                "type": {
                  "kind": "FunctionType",
                  "parameters": [
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "loopback"
                      },
                      "type": {
                        "kind": "BooleanKeyword"
                      }
                    }
                  ],
                  "type": {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "VoidKeyword"
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Promise"
                    }
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "MulticastV6Membership"
            }
          },
          {
            "heritageClauses": [
              {
                "kind": "HeritageClause",
                "token": "ExtendsKeyword",
                "types": [
                  {
                    "expression": {
                      "kind": "Identifier",
                      "text": "AsyncIterable"
                    },
                    "kind": "ExpressionWithTypeArguments",
                    "typeArguments": [
                      {
                        "elements": [
                          {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "Uint8Array"
                            }
                          },
                          {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "Addr"
                            }
                          }
                        ],
                        "kind": "TupleType"
                      }
                    ]
                  }
                ]
              }
            ],
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "joinMulticastV4"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "address"
                    },
                    "type": {
                      "kind": "StringKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "networkInterface"
                    },
                    "type": {
                      "kind": "StringKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "MulticastV4Membership"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "joinMulticastV6"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "address"
                    },
                    "type": {
                      "kind": "StringKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "networkInterface"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "MulticastV6Membership"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "receive"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "p"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Uint8Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "elements": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Uint8Array"
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Addr"
                          }
                        }
                      ],
                      "kind": "TupleType"
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "send"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "p"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Uint8Array"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "addr"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Addr"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "NumberKeyword"
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "close"
                },
                "parameters": [],
                "type": {
                  "kind": "VoidKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "addr"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Addr"
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "asyncIterator"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "elements": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Uint8Array"
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Addr"
                          }
                        }
                      ],
                      "kind": "TupleType"
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "AsyncIterableIterator"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DatagramConn"
            }
          },
          {
            "heritageClauses": [
              {
                "kind": "HeritageClause",
                "token": "ExtendsKeyword",
                "types": [
                  {
                    "expression": {
                      "kind": "Identifier",
                      "text": "ListenOptions"
                    },
                    "kind": "ExpressionWithTypeArguments"
                  }
                ]
              }
            ],
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "reusePort"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "TcpListenOptions"
            }
          },
          {
            "heritageClauses": [
              {
                "kind": "HeritageClause",
                "token": "ExtendsKeyword",
                "types": [
                  {
                    "expression": {
                      "kind": "Identifier",
                      "text": "ListenOptions"
                    },
                    "kind": "ExpressionWithTypeArguments"
                  }
                ]
              }
            ],
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "reuseAddress"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "loopback"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "UdpListenOptions"
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "listenDatagram"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "options"
                },
                "type": {
                  "kind": "IntersectionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "UdpListenOptions"
                      }
                    },
                    {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "transport"
                          },
                          "type": {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "udp"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "type": {
              "kind": "TypeReference",
              "typeName": {
                "kind": "Identifier",
                "text": "DatagramConn"
              }
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "listenDatagram"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "options"
                },
                "type": {
                  "kind": "IntersectionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "UnixListenOptions"
                      }
                    },
                    {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "transport"
                          },
                          "type": {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "unixpacket"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "type": {
              "kind": "TypeReference",
              "typeName": {
                "kind": "Identifier",
                "text": "DatagramConn"
              }
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "flock"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "rid"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "exclusive"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              }
            ],
            "type": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "VoidKeyword"
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "Promise"
              }
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "flockSync"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "rid"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "exclusive"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              }
            ],
            "type": {
              "kind": "VoidKeyword"
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "funlock"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "rid"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            ],
            "type": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "VoidKeyword"
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "Promise"
              }
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "funlockSync"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "rid"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            ],
            "type": {
              "kind": "VoidKeyword"
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "openKv"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "path"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              }
            ],
            "type": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Deno"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Kv"
                    }
                  }
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "Promise"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "CronScheduleExpression"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "NumberKeyword"
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "exact"
                      },
                      "type": {
                        "kind": "UnionType",
                        "types": [
                          {
                            "kind": "NumberKeyword"
                          },
                          {
                            "elementType": {
                              "kind": "NumberKeyword"
                            },
                            "kind": "ArrayType"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "start"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "NumberKeyword"
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "end"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "NumberKeyword"
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "every"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "NumberKeyword"
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "minute"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "CronScheduleExpression"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "hour"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "CronScheduleExpression"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "dayOfMonth"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "CronScheduleExpression"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "month"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "CronScheduleExpression"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "dayOfWeek"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "CronScheduleExpression"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "CronSchedule"
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "cron"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "name"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "schedule"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "StringKeyword"
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CronSchedule"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "handler"
                },
                "type": {
                  "kind": "FunctionType",
                  "parameters": [],
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "kind": "VoidKeyword"
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "Promise"
                        }
                      },
                      {
                        "kind": "VoidKeyword"
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "VoidKeyword"
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "Promise"
              }
            }
          },
          {
            "kind": "FunctionDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "cron"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "name"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "schedule"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "StringKeyword"
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CronSchedule"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "options"
                },
                "type": {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "backoffSchedule"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "elementType": {
                          "kind": "NumberKeyword"
                        },
                        "kind": "ArrayType"
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "signal"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "AbortSignal"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "kind": "Parameter",
                "name": {
                  "kind": "Identifier",
                  "text": "handler"
                },
                "type": {
                  "kind": "FunctionType",
                  "parameters": [],
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "kind": "VoidKeyword"
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "Promise"
                        }
                      },
                      {
                        "kind": "VoidKeyword"
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "VoidKeyword"
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "Promise"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "KvKey"
            },
            "type": {
              "kind": "TypeOperator",
              "type": {
                "elementType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "KvKeyPart"
                  }
                },
                "kind": "ArrayType"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "KvKeyPart"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Uint8Array"
                  }
                },
                {
                  "kind": "StringKeyword"
                },
                {
                  "kind": "NumberKeyword"
                },
                {
                  "kind": "BigIntKeyword"
                },
                {
                  "kind": "BooleanKeyword"
                },
                {
                  "kind": "SymbolKeyword"
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "KvConsistencyLevel"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "strong"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "eventual"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "KvListSelector"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "prefix"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvKey"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "prefix"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvKey"
                        }
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "start"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvKey"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "prefix"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvKey"
                        }
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "end"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvKey"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "start"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvKey"
                        }
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "end"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvKey"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "KvMutation"
            },
            "type": {
              "kind": "IntersectionType",
              "types": [
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "key"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvKey"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "ParenthesizedType",
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "TypeLiteral",
                        "members": [
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "type"
                            },
                            "type": {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "set"
                              }
                            }
                          },
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "value"
                            },
                            "type": {
                              "kind": "UnknownKeyword"
                            }
                          },
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "expireIn"
                            },
                            "questionToken": {
                              "kind": "QuestionToken"
                            },
                            "type": {
                              "kind": "NumberKeyword"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "TypeLiteral",
                        "members": [
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "type"
                            },
                            "type": {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "delete"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "kind": "TypeLiteral",
                        "members": [
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "type"
                            },
                            "type": {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "sum"
                              }
                            }
                          },
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "value"
                            },
                            "type": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "KvU64"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "kind": "TypeLiteral",
                        "members": [
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "type"
                            },
                            "type": {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "max"
                              }
                            }
                          },
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "value"
                            },
                            "type": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "KvU64"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "kind": "TypeLiteral",
                        "members": [
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "type"
                            },
                            "type": {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "min"
                              }
                            }
                          },
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "value"
                            },
                            "type": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "KvU64"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "heritageClauses": [
              {
                "kind": "HeritageClause",
                "token": "FirstFutureReservedWord",
                "types": [
                  {
                    "expression": {
                      "kind": "Identifier",
                      "text": "AsyncIterableIterator"
                    },
                    "kind": "ExpressionWithTypeArguments",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvEntry"
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "GetAccessor",
                "name": {
                  "kind": "Identifier",
                  "text": "cursor"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "next"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "TypeReference",
                          "typeArguments": [
                            {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            }
                          ],
                          "typeName": {
                            "kind": "Identifier",
                            "text": "KvEntry"
                          }
                        },
                        {
                          "kind": "UndefinedKeyword"
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "IteratorResult"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "asyncIterator"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvEntry"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "AsyncIterableIterator"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "KvListIterator"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "KvEntry"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "key"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "KvKey"
                    }
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "value"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "versionstamp"
                  },
                  "type": {
                    "kind": "StringKeyword"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "KvEntryMaybe"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "KvEntry"
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "key"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvKey"
                        }
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "value"
                      },
                      "type": {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "NullKeyword"
                        }
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "versionstamp"
                      },
                      "type": {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "NullKeyword"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "limit"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "cursor"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "reverse"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "consistency"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "KvConsistencyLevel"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "batchSize"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "KvListOptions"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "ok"
                },
                "type": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "TrueKeyword"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "versionstamp"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "KvCommitResult"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "ok"
                },
                "type": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "FalseKeyword"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "KvCommitError"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "key"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "KvKey"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "versionstamp"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "StringKeyword"
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "NullKeyword"
                      }
                    }
                  ]
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "AtomicCheck"
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "check"
                },
                "parameters": [
                  {
                    "dotDotDotToken": {
                      "kind": "DotDotDotToken"
                    },
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "checks"
                    },
                    "type": {
                      "elementType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "AtomicCheck"
                        }
                      },
                      "kind": "ArrayType"
                    }
                  }
                ],
                "type": {
                  "kind": "ThisType"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "mutate"
                },
                "parameters": [
                  {
                    "dotDotDotToken": {
                      "kind": "DotDotDotToken"
                    },
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "mutations"
                    },
                    "type": {
                      "elementType": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvMutation"
                        }
                      },
                      "kind": "ArrayType"
                    }
                  }
                ],
                "type": {
                  "kind": "ThisType"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "sum"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "key"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvKey"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "n"
                    },
                    "type": {
                      "kind": "BigIntKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "ThisType"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "min"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "key"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvKey"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "n"
                    },
                    "type": {
                      "kind": "BigIntKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "ThisType"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "max"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "key"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvKey"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "n"
                    },
                    "type": {
                      "kind": "BigIntKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "ThisType"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "set"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "key"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvKey"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "UnknownKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "expireIn"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "kind": "NumberKeyword"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "ThisType"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "delete"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "key"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvKey"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "ThisType"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "enqueue"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "UnknownKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "delay"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "kind": "NumberKeyword"
                          }
                        },
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "keysIfUndelivered"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "elementType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "FirstNode",
                                "left": {
                                  "kind": "Identifier",
                                  "text": "Deno"
                                },
                                "right": {
                                  "kind": "Identifier",
                                  "text": "KvKey"
                                }
                              }
                            },
                            "kind": "ArrayType"
                          }
                        },
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "backoffSchedule"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "elementType": {
                              "kind": "NumberKeyword"
                            },
                            "kind": "ArrayType"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "ThisType"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "commit"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "KvCommitResult"
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "KvCommitError"
                          }
                        }
                      ]
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "AtomicOperation"
            }
          },
          {
            "heritageClauses": [
              {
                "kind": "HeritageClause",
                "token": "FirstFutureReservedWord",
                "types": [
                  {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Disposable"
                    },
                    "kind": "ExpressionWithTypeArguments"
                  }
                ]
              }
            ],
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "get"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "key"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvKey"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "consistency"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "KvConsistencyLevel"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvEntryMaybe"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getMany"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "keys"
                    },
                    "type": {
                      "kind": "TypeOperator",
                      "type": {
                        "elements": [
                          {
                            "kind": "RestType",
                            "type": {
                              "kind": "MappedType",
                              "members": [],
                              "type": {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "KvKey"
                                }
                              },
                              "typeParameter": {
                                "constraint": {
                                  "kind": "TypeOperator",
                                  "type": {
                                    "kind": "TypeReference",
                                    "typeName": {
                                      "kind": "Identifier",
                                      "text": "T"
                                    }
                                  }
                                },
                                "kind": "TypeParameter",
                                "name": {
                                  "kind": "Identifier",
                                  "text": "K"
                                }
                              }
                            }
                          }
                        ],
                        "kind": "TupleType"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "consistency"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "KvConsistencyLevel"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "MappedType",
                      "members": [],
                      "type": {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "indexType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "K"
                              }
                            },
                            "kind": "IndexedAccessType",
                            "objectType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            }
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvEntryMaybe"
                        }
                      },
                      "typeParameter": {
                        "constraint": {
                          "kind": "TypeOperator",
                          "type": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          }
                        },
                        "kind": "TypeParameter",
                        "name": {
                          "kind": "Identifier",
                          "text": "K"
                        }
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "set"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "key"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvKey"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "UnknownKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "expireIn"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "kind": "NumberKeyword"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvCommitResult"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "delete"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "key"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvKey"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "VoidKeyword"
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "list"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "selector"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvListSelector"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvListOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "KvListIterator"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "enqueue"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "UnknownKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "delay"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "kind": "NumberKeyword"
                          }
                        },
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "keysIfUndelivered"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "elementType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "FirstNode",
                                "left": {
                                  "kind": "Identifier",
                                  "text": "Deno"
                                },
                                "right": {
                                  "kind": "Identifier",
                                  "text": "KvKey"
                                }
                              }
                            },
                            "kind": "ArrayType"
                          }
                        },
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "backoffSchedule"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "elementType": {
                              "kind": "NumberKeyword"
                            },
                            "kind": "ArrayType"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "KvCommitResult"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "listenQueue"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "handler"
                    },
                    "type": {
                      "kind": "FunctionType",
                      "parameters": [
                        {
                          "kind": "Parameter",
                          "name": {
                            "kind": "Identifier",
                            "text": "value"
                          },
                          "type": {
                            "kind": "AnyKeyword"
                          }
                        }
                      ],
                      "type": {
                        "kind": "UnionType",
                        "types": [
                          {
                            "kind": "TypeReference",
                            "typeArguments": [
                              {
                                "kind": "VoidKeyword"
                              }
                            ],
                            "typeName": {
                              "kind": "Identifier",
                              "text": "Promise"
                            }
                          },
                          {
                            "kind": "VoidKeyword"
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "VoidKeyword"
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Promise"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "atomic"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "AtomicOperation"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "watch"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "keys"
                    },
                    "type": {
                      "kind": "TypeOperator",
                      "type": {
                        "elements": [
                          {
                            "kind": "RestType",
                            "type": {
                              "kind": "MappedType",
                              "members": [],
                              "type": {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "KvKey"
                                }
                              },
                              "typeParameter": {
                                "constraint": {
                                  "kind": "TypeOperator",
                                  "type": {
                                    "kind": "TypeReference",
                                    "typeName": {
                                      "kind": "Identifier",
                                      "text": "T"
                                    }
                                  }
                                },
                                "kind": "TypeParameter",
                                "name": {
                                  "kind": "Identifier",
                                  "text": "K"
                                }
                              }
                            }
                          }
                        ],
                        "kind": "TupleType"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "raw"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "kind": "BooleanKeyword"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "MappedType",
                      "members": [],
                      "type": {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "indexType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "K"
                              }
                            },
                            "kind": "IndexedAccessType",
                            "objectType": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "T"
                              }
                            }
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "KvEntryMaybe"
                        }
                      },
                      "typeParameter": {
                        "constraint": {
                          "kind": "TypeOperator",
                          "type": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          }
                        },
                        "kind": "TypeParameter",
                        "name": {
                          "kind": "Identifier",
                          "text": "K"
                        }
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ReadableStream"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "close"
                },
                "parameters": [],
                "type": {
                  "kind": "VoidKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "commitVersionstamp"
                },
                "parameters": [],
                "type": {
                  "kind": "SymbolKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "dispose"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "parameters": [],
                "type": {
                  "kind": "VoidKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "Kv"
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "BigIntKeyword"
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "value"
                },
                "type": {
                  "kind": "BigIntKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "KvU64"
            }
          },
          {
            "body": {
              "kind": "ModuleBlock",
              "statements": [
                {
                  "kind": "InterfaceDeclaration",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "raw"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "BooleanKeyword"
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "update"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "BooleanKeyword"
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "display_id"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "StringKeyword"
                      }
                    }
                  ],
                  "modifiers": [
                    {
                      "kind": "ExportKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "DisplayOptions"
                  }
                },
                {
                  "kind": "TypeAliasDeclaration",
                  "modifiers": [
                    {
                      "kind": "ExportKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "VegaObject"
                  },
                  "type": {
                    "kind": "TypeLiteral",
                    "members": [
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "Identifier",
                          "text": "$schema"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "IndexSignature",
                        "parameters": [
                          {
                            "kind": "Parameter",
                            "name": {
                              "kind": "Identifier",
                              "text": "key"
                            },
                            "type": {
                              "kind": "StringKeyword"
                            }
                          }
                        ],
                        "type": {
                          "kind": "UnknownKeyword"
                        }
                      }
                    ]
                  }
                },
                {
                  "kind": "TypeAliasDeclaration",
                  "modifiers": [
                    {
                      "kind": "ExportKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "MediaBundle"
                  },
                  "type": {
                    "kind": "TypeLiteral",
                    "members": [
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "text/plain"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "text/html"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "image/svg+xml"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "text/markdown"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "application/javascript"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "image/png"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "image/jpeg"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "image/gif"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "application/pdf"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "application/json"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "ObjectKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "application/geo+json"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "ObjectKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "application/vdom.v1+json"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "ObjectKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "application/vnd.plotly.v1+json"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "ObjectKeyword"
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "application/vnd.vega.v5+json"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "VegaObject"
                          }
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "application/vnd.vegalite.v4+json"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "VegaObject"
                          }
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "StringLiteral",
                          "text": "application/vnd.vegalite.v5+json"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "VegaObject"
                          }
                        }
                      },
                      {
                        "kind": "IndexSignature",
                        "parameters": [
                          {
                            "kind": "Parameter",
                            "name": {
                              "kind": "Identifier",
                              "text": "key"
                            },
                            "type": {
                              "kind": "StringKeyword"
                            }
                          }
                        ],
                        "type": {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "StringKeyword"
                            },
                            {
                              "kind": "ObjectKeyword"
                            },
                            {
                              "kind": "UndefinedKeyword"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "declarationList": {
                    "declarations": [
                      {
                        "kind": "VariableDeclaration",
                        "name": {
                          "kind": "Identifier",
                          "text": "$display"
                        },
                        "type": {
                          "kind": "TypeOperator",
                          "type": {
                            "kind": "SymbolKeyword"
                          }
                        }
                      }
                    ],
                    "kind": "VariableDeclarationList"
                  },
                  "kind": "FirstStatement",
                  "modifiers": [
                    {
                      "kind": "ExportKeyword"
                    }
                  ]
                },
                {
                  "kind": "TypeAliasDeclaration",
                  "modifiers": [
                    {
                      "kind": "ExportKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "Displayable"
                  },
                  "type": {
                    "kind": "TypeLiteral",
                    "members": [
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "expression": {
                            "kind": "Identifier",
                            "text": "$display"
                          },
                          "kind": "ComputedPropertyName"
                        },
                        "type": {
                          "kind": "FunctionType",
                          "parameters": [],
                          "type": {
                            "kind": "UnionType",
                            "types": [
                              {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "MediaBundle"
                                }
                              },
                              {
                                "kind": "TypeReference",
                                "typeArguments": [
                                  {
                                    "kind": "TypeReference",
                                    "typeName": {
                                      "kind": "Identifier",
                                      "text": "MediaBundle"
                                    }
                                  }
                                ],
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "Promise"
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "kind": "FunctionDeclaration",
                  "modifiers": [
                    {
                      "kind": "ExportKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "display"
                  },
                  "parameters": [
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "obj"
                      },
                      "type": {
                        "kind": "UnknownKeyword"
                      }
                    },
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "options"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "DisplayOptions"
                        }
                      }
                    }
                  ],
                  "type": {
                    "kind": "VoidKeyword"
                  }
                },
                {
                  "kind": "FunctionDeclaration",
                  "modifiers": [
                    {
                      "kind": "ExportKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "md"
                  },
                  "parameters": [
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "strings"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "TemplateStringsArray"
                        }
                      }
                    },
                    {
                      "dotDotDotToken": {
                        "kind": "DotDotDotToken"
                      },
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "values"
                      },
                      "type": {
                        "elementType": {
                          "kind": "UnknownKeyword"
                        },
                        "kind": "ArrayType"
                      }
                    }
                  ],
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Displayable"
                    }
                  }
                },
                {
                  "kind": "FunctionDeclaration",
                  "modifiers": [
                    {
                      "kind": "ExportKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "html"
                  },
                  "parameters": [
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "strings"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "TemplateStringsArray"
                        }
                      }
                    },
                    {
                      "dotDotDotToken": {
                        "kind": "DotDotDotToken"
                      },
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "values"
                      },
                      "type": {
                        "elementType": {
                          "kind": "UnknownKeyword"
                        },
                        "kind": "ArrayType"
                      }
                    }
                  ],
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Displayable"
                    }
                  }
                },
                {
                  "kind": "FunctionDeclaration",
                  "modifiers": [
                    {
                      "kind": "ExportKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "svg"
                  },
                  "parameters": [
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "strings"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "TemplateStringsArray"
                        }
                      }
                    },
                    {
                      "dotDotDotToken": {
                        "kind": "DotDotDotToken"
                      },
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "values"
                      },
                      "type": {
                        "elementType": {
                          "kind": "UnknownKeyword"
                        },
                        "kind": "ArrayType"
                      }
                    }
                  ],
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Displayable"
                    }
                  }
                },
                {
                  "kind": "FunctionDeclaration",
                  "modifiers": [
                    {
                      "kind": "ExportKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "format"
                  },
                  "parameters": [
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "obj"
                      },
                      "type": {
                        "kind": "UnknownKeyword"
                      }
                    }
                  ],
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "MediaBundle"
                    }
                  }
                },
                {
                  "kind": "FunctionDeclaration",
                  "modifiers": [
                    {
                      "kind": "ExportKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "broadcast"
                  },
                  "parameters": [
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "msgType"
                      },
                      "type": {
                        "kind": "StringKeyword"
                      }
                    },
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "content"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "kind": "StringKeyword"
                          },
                          {
                            "kind": "UnknownKeyword"
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "Record"
                        }
                      }
                    },
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "extra"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "TypeLiteral",
                        "members": [
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "metadata"
                            },
                            "questionToken": {
                              "kind": "QuestionToken"
                            },
                            "type": {
                              "kind": "TypeReference",
                              "typeArguments": [
                                {
                                  "kind": "StringKeyword"
                                },
                                {
                                  "kind": "UnknownKeyword"
                                }
                              ],
                              "typeName": {
                                "kind": "Identifier",
                                "text": "Record"
                              }
                            }
                          },
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "buffers"
                            },
                            "questionToken": {
                              "kind": "QuestionToken"
                            },
                            "type": {
                              "elementType": {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "Uint8Array"
                                }
                              },
                              "kind": "ArrayType"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "VoidKeyword"
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Promise"
                    }
                  }
                }
              ]
            },
            "kind": "ModuleDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "jupyter"
            }
          }
        ]
      },
      "kind": "ModuleDeclaration",
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Deno"
      }
    },
    {
      "kind": "FunctionDeclaration",
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "fetch"
      },
      "parameters": [
        {
          "kind": "Parameter",
          "name": {
            "kind": "Identifier",
            "text": "input"
          },
          "type": {
            "kind": "UnionType",
            "types": [
              {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "Request"
                }
              },
              {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "URL"
                }
              },
              {
                "kind": "StringKeyword"
              }
            ]
          }
        },
        {
          "kind": "Parameter",
          "name": {
            "kind": "Identifier",
            "text": "init"
          },
          "questionToken": {
            "kind": "QuestionToken"
          },
          "type": {
            "kind": "IntersectionType",
            "types": [
              {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "RequestInit"
                }
              },
              {
                "kind": "TypeLiteral",
                "members": [
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "client"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Deno"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "HttpClient"
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      ],
      "type": {
        "kind": "TypeReference",
        "typeArguments": [
          {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Response"
            }
          }
        ],
        "typeName": {
          "kind": "Identifier",
          "text": "Promise"
        }
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "deno"
          },
          "questionToken": {
            "kind": "QuestionToken"
          },
          "type": {
            "kind": "TypeLiteral",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "permissions"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Deno"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PermissionOptions"
                    }
                  }
                }
              }
            ]
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "WorkerOptions"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "protocols"
          },
          "questionToken": {
            "kind": "QuestionToken"
          },
          "type": {
            "elementType": {
              "kind": "StringKeyword"
            },
            "kind": "ArrayType"
          }
        },
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "signal"
          },
          "questionToken": {
            "kind": "QuestionToken"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "AbortSignal"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "headers"
          },
          "questionToken": {
            "kind": "QuestionToken"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "HeadersInit"
            }
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "WebSocketStreamOptions"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "readable"
          },
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "UnionType",
                "types": [
                  {
                    "kind": "StringKeyword"
                  },
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Uint8Array"
                    }
                  }
                ]
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "ReadableStream"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "writable"
          },
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "UnionType",
                "types": [
                  {
                    "kind": "StringKeyword"
                  },
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Uint8Array"
                    }
                  }
                ]
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "WritableStream"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "extensions"
          },
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "protocol"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "WebSocketConnection"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "code"
          },
          "questionToken": {
            "kind": "QuestionToken"
          },
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "reason"
          },
          "questionToken": {
            "kind": "QuestionToken"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "WebSocketCloseInfo"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "url"
          },
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "opened"
          },
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "WebSocketConnection"
                }
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "Promise"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "name": {
            "kind": "Identifier",
            "text": "closed"
          },
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "WebSocketCloseInfo"
                }
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "Promise"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "close"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "closeInfo"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "WebSocketCloseInfo"
                }
              }
            }
          ],
          "type": {
            "kind": "VoidKeyword"
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "WebSocketStream"
      }
    },
    {
      "declarationList": {
        "declarations": [
          {
            "kind": "VariableDeclaration",
            "name": {
              "kind": "Identifier",
              "text": "WebSocketStream"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "modifiers": [
                    {
                      "kind": "ReadonlyKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "prototype"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "WebSocketStream"
                    }
                  }
                },
                {
                  "kind": "ConstructSignature",
                  "parameters": [
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "url"
                      },
                      "type": {
                        "kind": "StringKeyword"
                      }
                    },
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "options"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "WebSocketStreamOptions"
                        }
                      }
                    }
                  ],
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "WebSocketStream"
                    }
                  }
                }
              ]
            }
          }
        ],
        "kind": "VariableDeclarationList"
      },
      "kind": "FirstStatement",
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ]
    },
    {
      "heritageClauses": [
        {
          "kind": "HeritageClause",
          "token": "ExtendsKeyword",
          "types": [
            {
              "expression": {
                "kind": "Identifier",
                "text": "DOMException"
              },
              "kind": "ExpressionWithTypeArguments"
            }
          ]
        }
      ],
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "closeCode"
          },
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "reason"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "WebSocketError"
      }
    },
    {
      "declarationList": {
        "declarations": [
          {
            "kind": "VariableDeclaration",
            "name": {
              "kind": "Identifier",
              "text": "WebSocketError"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "modifiers": [
                    {
                      "kind": "ReadonlyKeyword"
                    }
                  ],
                  "name": {
                    "kind": "Identifier",
                    "text": "prototype"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "WebSocketError"
                    }
                  }
                },
                {
                  "kind": "ConstructSignature",
                  "parameters": [
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "message"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "StringKeyword"
                      }
                    },
                    {
                      "kind": "Parameter",
                      "name": {
                        "kind": "Identifier",
                        "text": "init"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "WebSocketCloseInfo"
                        }
                      }
                    }
                  ],
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "WebSocketError"
                    }
                  }
                }
              ]
            }
          }
        ],
        "kind": "VariableDeclarationList"
      },
      "kind": "FirstStatement",
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ]
    },
    {
      "body": {
        "kind": "ModuleBlock",
        "statements": [
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ComparisonResult"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "PrefixUnaryExpression",
                    "operand": {
                      "kind": "FirstLiteralToken",
                      "text": "1"
                    }
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "FirstLiteralToken",
                    "text": "0"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "FirstLiteralToken",
                    "text": "1"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "RoundingMode"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "ceil"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "floor"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "expand"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "trunc"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "halfCeil"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "halfFloor"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "halfExpand"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "halfTrunc"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "halfEven"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "AssignmentOptions"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "overflow"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "constrain"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "reject"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DurationOptions"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "overflow"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "constrain"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "balance"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ToInstantOptions"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "disambiguation"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "compatible"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "earlier"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "later"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "reject"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "OffsetDisambiguationOptions"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "offset"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "use"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "prefer"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "ignore"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "reject"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ZonedDateTimeAssignmentOptions"
            },
            "type": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "IntersectionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ToInstantOptions"
                      }
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "OffsetDisambiguationOptions"
                      }
                    }
                  ]
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "Partial"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ArithmeticOptions"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "overflow"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "constrain"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "reject"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DateUnit"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "year"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "month"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "week"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "day"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "TimeUnit"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "hour"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "minute"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "second"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "millisecond"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "microsecond"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "nanosecond"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DateTimeUnit"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "DateUnit"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "TimeUnit"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PluralUnit"
            },
            "type": {
              "indexType": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "T"
                }
              },
              "kind": "IndexedAccessType",
              "objectType": {
                "kind": "TypeLiteral",
                "members": [
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "year"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "years"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "month"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "months"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "week"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "weeks"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "day"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "days"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "hour"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "hours"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "minute"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "minutes"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "second"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "seconds"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "millisecond"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "milliseconds"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "microsecond"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "microseconds"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "nanosecond"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "nanoseconds"
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "LargestUnit"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "auto"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PluralUnit"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "SmallestUnit"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PluralUnit"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "TotalUnit"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PluralUnit"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ToStringPrecisionOptions"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "fractionalSecondDigits"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "auto"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "FirstLiteralToken",
                          "text": "0"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "FirstLiteralToken",
                          "text": "1"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "FirstLiteralToken",
                          "text": "2"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "FirstLiteralToken",
                          "text": "3"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "FirstLiteralToken",
                          "text": "4"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "FirstLiteralToken",
                          "text": "5"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "FirstLiteralToken",
                          "text": "6"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "FirstLiteralToken",
                          "text": "7"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "FirstLiteralToken",
                          "text": "8"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "FirstLiteralToken",
                          "text": "9"
                        }
                      }
                    ]
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "smallestUnit"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "UnionType",
                        "types": [
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "minute"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "second"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "millisecond"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "microsecond"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "nanosecond"
                            }
                          }
                        ]
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "SmallestUnit"
                    }
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "roundingMode"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "RoundingMode"
                    }
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ShowCalendarOption"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "calendarName"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "auto"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "always"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "never"
                        }
                      },
                      {
                        "kind": "LiteralType",
                        "literal": {
                          "kind": "StringLiteral",
                          "text": "critical"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "CalendarTypeToStringOptions"
            },
            "type": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "IntersectionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ToStringPrecisionOptions"
                      }
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ShowCalendarOption"
                      }
                    }
                  ]
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "Partial"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ZonedDateTimeToStringOptions"
            },
            "type": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "IntersectionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarTypeToStringOptions"
                      }
                    },
                    {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "timeZoneName"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "kind": "UnionType",
                            "types": [
                              {
                                "kind": "LiteralType",
                                "literal": {
                                  "kind": "StringLiteral",
                                  "text": "auto"
                                }
                              },
                              {
                                "kind": "LiteralType",
                                "literal": {
                                  "kind": "StringLiteral",
                                  "text": "never"
                                }
                              },
                              {
                                "kind": "LiteralType",
                                "literal": {
                                  "kind": "StringLiteral",
                                  "text": "critical"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "offset"
                          },
                          "questionToken": {
                            "kind": "QuestionToken"
                          },
                          "type": {
                            "kind": "UnionType",
                            "types": [
                              {
                                "kind": "LiteralType",
                                "literal": {
                                  "kind": "StringLiteral",
                                  "text": "auto"
                                }
                              },
                              {
                                "kind": "LiteralType",
                                "literal": {
                                  "kind": "StringLiteral",
                                  "text": "never"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "Partial"
              }
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "InstantToStringOptions"
            },
            "type": {
              "kind": "TypeReference",
              "typeArguments": [
                {
                  "kind": "IntersectionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ToStringPrecisionOptions"
                      }
                    },
                    {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "timeZone"
                          },
                          "type": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "TimeZoneLike"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              ],
              "typeName": {
                "kind": "Identifier",
                "text": "Partial"
              }
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "smallestUnit"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "SmallestUnit"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "largestUnit"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "LargestUnit"
                  }
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "roundingIncrement"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "roundingMode"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "RoundingMode"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DifferenceOptions"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "RoundTo"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "SmallestUnit"
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "smallestUnit"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "SmallestUnit"
                        }
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "roundingIncrement"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "NumberKeyword"
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "roundingMode"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "RoundingMode"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DurationRoundTo"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DateTimeUnit"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "SmallestUnit"
                  }
                },
                {
                  "kind": "ParenthesizedType",
                  "type": {
                    "kind": "IntersectionType",
                    "types": [
                      {
                        "kind": "ParenthesizedType",
                        "type": {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "TypeLiteral",
                              "members": [
                                {
                                  "kind": "PropertySignature",
                                  "name": {
                                    "kind": "Identifier",
                                    "text": "smallestUnit"
                                  },
                                  "type": {
                                    "kind": "TypeReference",
                                    "typeArguments": [
                                      {
                                        "kind": "TypeReference",
                                        "typeName": {
                                          "kind": "Identifier",
                                          "text": "DateTimeUnit"
                                        }
                                      }
                                    ],
                                    "typeName": {
                                      "kind": "Identifier",
                                      "text": "SmallestUnit"
                                    }
                                  }
                                },
                                {
                                  "kind": "PropertySignature",
                                  "name": {
                                    "kind": "Identifier",
                                    "text": "largestUnit"
                                  },
                                  "questionToken": {
                                    "kind": "QuestionToken"
                                  },
                                  "type": {
                                    "kind": "TypeReference",
                                    "typeArguments": [
                                      {
                                        "kind": "TypeReference",
                                        "typeName": {
                                          "kind": "Identifier",
                                          "text": "DateTimeUnit"
                                        }
                                      }
                                    ],
                                    "typeName": {
                                      "kind": "Identifier",
                                      "text": "LargestUnit"
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "TypeLiteral",
                              "members": [
                                {
                                  "kind": "PropertySignature",
                                  "name": {
                                    "kind": "Identifier",
                                    "text": "smallestUnit"
                                  },
                                  "questionToken": {
                                    "kind": "QuestionToken"
                                  },
                                  "type": {
                                    "kind": "TypeReference",
                                    "typeArguments": [
                                      {
                                        "kind": "TypeReference",
                                        "typeName": {
                                          "kind": "Identifier",
                                          "text": "DateTimeUnit"
                                        }
                                      }
                                    ],
                                    "typeName": {
                                      "kind": "Identifier",
                                      "text": "SmallestUnit"
                                    }
                                  }
                                },
                                {
                                  "kind": "PropertySignature",
                                  "name": {
                                    "kind": "Identifier",
                                    "text": "largestUnit"
                                  },
                                  "type": {
                                    "kind": "TypeReference",
                                    "typeArguments": [
                                      {
                                        "kind": "TypeReference",
                                        "typeName": {
                                          "kind": "Identifier",
                                          "text": "DateTimeUnit"
                                        }
                                      }
                                    ],
                                    "typeName": {
                                      "kind": "Identifier",
                                      "text": "LargestUnit"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "kind": "TypeLiteral",
                        "members": [
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "roundingIncrement"
                            },
                            "questionToken": {
                              "kind": "QuestionToken"
                            },
                            "type": {
                              "kind": "NumberKeyword"
                            }
                          },
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "roundingMode"
                            },
                            "questionToken": {
                              "kind": "QuestionToken"
                            },
                            "type": {
                              "kind": "TypeReference",
                              "typeName": {
                                "kind": "Identifier",
                                "text": "RoundingMode"
                              }
                            }
                          },
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "relativeTo"
                            },
                            "questionToken": {
                              "kind": "QuestionToken"
                            },
                            "type": {
                              "kind": "UnionType",
                              "types": [
                                {
                                  "kind": "TypeReference",
                                  "typeName": {
                                    "kind": "FirstNode",
                                    "left": {
                                      "kind": "Identifier",
                                      "text": "Temporal"
                                    },
                                    "right": {
                                      "kind": "Identifier",
                                      "text": "PlainDateTime"
                                    }
                                  }
                                },
                                {
                                  "kind": "TypeReference",
                                  "typeName": {
                                    "kind": "FirstNode",
                                    "left": {
                                      "kind": "Identifier",
                                      "text": "Temporal"
                                    },
                                    "right": {
                                      "kind": "Identifier",
                                      "text": "ZonedDateTime"
                                    }
                                  }
                                },
                                {
                                  "kind": "TypeReference",
                                  "typeName": {
                                    "kind": "Identifier",
                                    "text": "PlainDateTimeLike"
                                  }
                                },
                                {
                                  "kind": "TypeReference",
                                  "typeName": {
                                    "kind": "Identifier",
                                    "text": "ZonedDateTimeLike"
                                  }
                                },
                                {
                                  "kind": "StringKeyword"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DurationTotalOf"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DateTimeUnit"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "TotalUnit"
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "unit"
                      },
                      "type": {
                        "kind": "TypeReference",
                        "typeArguments": [
                          {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "DateTimeUnit"
                            }
                          }
                        ],
                        "typeName": {
                          "kind": "Identifier",
                          "text": "TotalUnit"
                        }
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "relativeTo"
                      },
                      "questionToken": {
                        "kind": "QuestionToken"
                      },
                      "type": {
                        "kind": "UnionType",
                        "types": [
                          {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "FirstNode",
                              "left": {
                                "kind": "Identifier",
                                "text": "Temporal"
                              },
                              "right": {
                                "kind": "Identifier",
                                "text": "ZonedDateTime"
                              }
                            }
                          },
                          {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "FirstNode",
                              "left": {
                                "kind": "Identifier",
                                "text": "Temporal"
                              },
                              "right": {
                                "kind": "Identifier",
                                "text": "PlainDateTime"
                              }
                            }
                          },
                          {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "ZonedDateTimeLike"
                            }
                          },
                          {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "PlainDateTimeLike"
                            }
                          },
                          {
                            "kind": "StringKeyword"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "relativeTo"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Temporal"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "ZonedDateTime"
                        }
                      }
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Temporal"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "PlainDateTime"
                        }
                      }
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ZonedDateTimeLike"
                      }
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PlainDateTimeLike"
                      }
                    },
                    {
                      "kind": "StringKeyword"
                    }
                  ]
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DurationArithmeticOptions"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "TransitionDirection"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "next"
                  }
                },
                {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "previous"
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "direction"
                      },
                      "type": {
                        "kind": "UnionType",
                        "types": [
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "next"
                            }
                          },
                          {
                            "kind": "LiteralType",
                            "literal": {
                              "kind": "StringLiteral",
                              "text": "previous"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DurationLike"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "years"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "months"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "weeks"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "days"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "hours"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "minutes"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "seconds"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "milliseconds"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "microseconds"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "nanoseconds"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                }
              ]
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "from"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "item"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "compare"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "one"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "two"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DurationArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ComparisonResult"
                  }
                }
              },
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "years"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "months"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "weeks"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "days"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "hours"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "minutes"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "seconds"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "milliseconds"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "microseconds"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "nanoseconds"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "sign"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "PrefixUnaryExpression",
                        "operand": {
                          "kind": "FirstLiteralToken",
                          "text": "1"
                        }
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "FirstLiteralToken",
                        "text": "0"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "FirstLiteralToken",
                        "text": "1"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "blank"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "years"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "months"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "weeks"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "days"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "hours"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "minutes"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "seconds"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "milliseconds"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "microseconds"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "nanoseconds"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "negated"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "abs"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "with"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DurationLike"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "add"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DurationArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "subtract"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DurationArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "round"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "roundTo"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DurationRoundTo"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "total"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "totalOf"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DurationTotalOf"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toLocaleString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "locales"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "elementType": {
                            "kind": "StringKeyword"
                          },
                          "kind": "ArrayType"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Intl"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "DateTimeFormatOptions"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toJSON"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ToStringPrecisionOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "valueOf"
                },
                "parameters": [],
                "type": {
                  "kind": "NeverKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "toStringTag"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "type": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "Temporal.Duration"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "Duration"
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "fromEpochMilliseconds"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "epochMilliseconds"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Instant"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "fromEpochNanoseconds"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "epochNanoseconds"
                    },
                    "type": {
                      "kind": "BigIntKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Instant"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "from"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "item"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Instant"
                            }
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Instant"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "compare"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "one"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Instant"
                            }
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "two"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Instant"
                            }
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ComparisonResult"
                  }
                }
              },
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "epochNanoseconds"
                    },
                    "type": {
                      "kind": "BigIntKeyword"
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "epochMilliseconds"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "epochNanoseconds"
                },
                "type": {
                  "kind": "BigIntKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "equals"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Instant"
                            }
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "add"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeArguments": [
                            {
                              "kind": "UnionType",
                              "types": [
                                {
                                  "kind": "TypeReference",
                                  "typeName": {
                                    "kind": "FirstNode",
                                    "left": {
                                      "kind": "Identifier",
                                      "text": "Temporal"
                                    },
                                    "right": {
                                      "kind": "Identifier",
                                      "text": "Duration"
                                    }
                                  }
                                },
                                {
                                  "kind": "TypeReference",
                                  "typeName": {
                                    "kind": "Identifier",
                                    "text": "DurationLike"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "UnionType",
                              "types": [
                                {
                                  "kind": "LiteralType",
                                  "literal": {
                                    "kind": "StringLiteral",
                                    "text": "years"
                                  }
                                },
                                {
                                  "kind": "LiteralType",
                                  "literal": {
                                    "kind": "StringLiteral",
                                    "text": "months"
                                  }
                                },
                                {
                                  "kind": "LiteralType",
                                  "literal": {
                                    "kind": "StringLiteral",
                                    "text": "weeks"
                                  }
                                },
                                {
                                  "kind": "LiteralType",
                                  "literal": {
                                    "kind": "StringLiteral",
                                    "text": "days"
                                  }
                                }
                              ]
                            }
                          ],
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Omit"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Instant"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "subtract"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeArguments": [
                            {
                              "kind": "UnionType",
                              "types": [
                                {
                                  "kind": "TypeReference",
                                  "typeName": {
                                    "kind": "FirstNode",
                                    "left": {
                                      "kind": "Identifier",
                                      "text": "Temporal"
                                    },
                                    "right": {
                                      "kind": "Identifier",
                                      "text": "Duration"
                                    }
                                  }
                                },
                                {
                                  "kind": "TypeReference",
                                  "typeName": {
                                    "kind": "Identifier",
                                    "text": "DurationLike"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "UnionType",
                              "types": [
                                {
                                  "kind": "LiteralType",
                                  "literal": {
                                    "kind": "StringLiteral",
                                    "text": "years"
                                  }
                                },
                                {
                                  "kind": "LiteralType",
                                  "literal": {
                                    "kind": "StringLiteral",
                                    "text": "months"
                                  }
                                },
                                {
                                  "kind": "LiteralType",
                                  "literal": {
                                    "kind": "StringLiteral",
                                    "text": "weeks"
                                  }
                                },
                                {
                                  "kind": "LiteralType",
                                  "literal": {
                                    "kind": "StringLiteral",
                                    "text": "days"
                                  }
                                }
                              ]
                            }
                          ],
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Omit"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Instant"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "until"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Instant"
                            }
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "hour"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "minute"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "second"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "millisecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "microsecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "nanosecond"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DifferenceOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "since"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Instant"
                            }
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "hour"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "minute"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "second"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "millisecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "microsecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "nanosecond"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DifferenceOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "round"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "roundTo"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "hour"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "minute"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "second"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "millisecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "microsecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "nanosecond"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "RoundTo"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Instant"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toZonedDateTime"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "calendarAndTimeZone"
                    },
                    "type": {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "timeZone"
                          },
                          "type": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "TimeZoneLike"
                            }
                          }
                        },
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "calendar"
                          },
                          "type": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "CalendarLike"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toZonedDateTimeISO"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "tzLike"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "TimeZoneLike"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toLocaleString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "locales"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "elementType": {
                            "kind": "StringKeyword"
                          },
                          "kind": "ArrayType"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Intl"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "DateTimeFormatOptions"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toJSON"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "InstantToStringOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "valueOf"
                },
                "parameters": [],
                "type": {
                  "kind": "NeverKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "toStringTag"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "type": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "Temporal.Instant"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "Instant"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "YearOrEraAndEraYear"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "era"
                      },
                      "type": {
                        "kind": "StringKeyword"
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "eraYear"
                      },
                      "type": {
                        "kind": "NumberKeyword"
                      }
                    }
                  ]
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "year"
                      },
                      "type": {
                        "kind": "NumberKeyword"
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "MonthCodeOrMonthAndYear"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "ParenthesizedType",
                  "type": {
                    "kind": "IntersectionType",
                    "types": [
                      {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "YearOrEraAndEraYear"
                        }
                      },
                      {
                        "kind": "TypeLiteral",
                        "members": [
                          {
                            "kind": "PropertySignature",
                            "name": {
                              "kind": "Identifier",
                              "text": "month"
                            },
                            "type": {
                              "kind": "NumberKeyword"
                            }
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "monthCode"
                      },
                      "type": {
                        "kind": "StringKeyword"
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "MonthOrMonthCode"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "month"
                      },
                      "type": {
                        "kind": "NumberKeyword"
                      }
                    }
                  ]
                },
                {
                  "kind": "TypeLiteral",
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "name": {
                        "kind": "Identifier",
                        "text": "monthCode"
                      },
                      "type": {
                        "kind": "StringKeyword"
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "id"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "year"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "month"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainMonthDay"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "monthCode"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainMonthDay"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "day"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainMonthDay"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "era"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "StringKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "eraYear"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "dayOfWeek"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "dayOfYear"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "weekOfYear"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "yearOfWeek"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "daysInWeek"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "daysInMonth"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "daysInYear"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "monthsInYear"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "inLeapYear"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "dateFromFields"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "fields"
                    },
                    "type": {
                      "kind": "IntersectionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "YearOrEraAndEraYear"
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "MonthOrMonthCode"
                          }
                        },
                        {
                          "kind": "TypeLiteral",
                          "members": [
                            {
                              "kind": "PropertySignature",
                              "name": {
                                "kind": "Identifier",
                                "text": "day"
                              },
                              "type": {
                                "kind": "NumberKeyword"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "yearMonthFromFields"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "fields"
                    },
                    "type": {
                      "kind": "IntersectionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "YearOrEraAndEraYear"
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "MonthOrMonthCode"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainYearMonth"
                    }
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "monthDayFromFields"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "fields"
                    },
                    "type": {
                      "kind": "IntersectionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "MonthCodeOrMonthAndYear"
                          }
                        },
                        {
                          "kind": "TypeLiteral",
                          "members": [
                            {
                              "kind": "PropertySignature",
                              "name": {
                                "kind": "Identifier",
                                "text": "day"
                              },
                              "type": {
                                "kind": "NumberKeyword"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainMonthDay"
                    }
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "dateAdd"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "duration"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "dateUntil"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "one"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "two"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "year"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "month"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "week"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "day"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DifferenceOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "fields"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "fields"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "StringKeyword"
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Iterable"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "StringKeyword"
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Iterable"
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "mergeFields"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "fields"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "kind": "UnknownKeyword"
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Record"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "additionalFields"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "kind": "UnknownKeyword"
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Record"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "StringKeyword"
                    },
                    {
                      "kind": "UnknownKeyword"
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Record"
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "toString"
                },
                "parameters": [],
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "toJSON"
                },
                "parameters": [],
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "CalendarProtocol"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "CalendarLike"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "StringKeyword"
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "CalendarProtocol"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ZonedDateTime"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PlainDateTime"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PlainDate"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PlainYearMonth"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PlainMonthDay"
                  }
                }
              ]
            }
          },
          {
            "heritageClauses": [
              {
                "kind": "HeritageClause",
                "token": "FirstFutureReservedWord",
                "types": [
                  {
                    "expression": {
                      "kind": "Identifier",
                      "text": "CalendarProtocol"
                    },
                    "kind": "ExpressionWithTypeArguments"
                  }
                ]
              }
            ],
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "from"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "item"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarLike"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Temporal"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "Calendar"
                        }
                      }
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarProtocol"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "calendarIdentifier"
                    },
                    "type": {
                      "kind": "StringKeyword"
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "id"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "year"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "month"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainMonthDay"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "monthCode"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainMonthDay"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "day"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainMonthDay"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "era"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "StringKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "eraYear"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "dayOfWeek"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "dayOfYear"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "weekOfYear"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "yearOfWeek"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "daysInWeek"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "daysInMonth"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "daysInYear"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "monthsInYear"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "inLeapYear"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "dateFromFields"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "fields"
                    },
                    "type": {
                      "kind": "IntersectionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "YearOrEraAndEraYear"
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "MonthOrMonthCode"
                          }
                        },
                        {
                          "kind": "TypeLiteral",
                          "members": [
                            {
                              "kind": "PropertySignature",
                              "name": {
                                "kind": "Identifier",
                                "text": "day"
                              },
                              "type": {
                                "kind": "NumberKeyword"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "yearMonthFromFields"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "fields"
                    },
                    "type": {
                      "kind": "IntersectionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "YearOrEraAndEraYear"
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "MonthOrMonthCode"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainYearMonth"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "monthDayFromFields"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "fields"
                    },
                    "type": {
                      "kind": "IntersectionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "MonthCodeOrMonthAndYear"
                          }
                        },
                        {
                          "kind": "TypeLiteral",
                          "members": [
                            {
                              "kind": "PropertySignature",
                              "name": {
                                "kind": "Identifier",
                                "text": "day"
                              },
                              "type": {
                                "kind": "NumberKeyword"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainMonthDay"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "dateAdd"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "duration"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "dateUntil"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "one"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "two"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "year"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "month"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "week"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "day"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DifferenceOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "fields"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "fields"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "StringKeyword"
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Iterable"
                      }
                    }
                  }
                ],
                "type": {
                  "elementType": {
                    "kind": "StringKeyword"
                  },
                  "kind": "ArrayType"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "mergeFields"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "fields"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "kind": "UnknownKeyword"
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Record"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "additionalFields"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "kind": "UnknownKeyword"
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Record"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "StringKeyword"
                    },
                    {
                      "kind": "UnknownKeyword"
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Record"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toString"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toJSON"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "toStringTag"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "type": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "Temporal.Calendar"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "Calendar"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainDateLike"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "era"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "StringKeyword"
                      },
                      {
                        "kind": "UndefinedKeyword"
                      }
                    ]
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "eraYear"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "NumberKeyword"
                      },
                      {
                        "kind": "UndefinedKeyword"
                      }
                    ]
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "year"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "month"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "monthCode"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "StringKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "day"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "calendar"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "CalendarLike"
                    }
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainDateISOFields"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoYear"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoMonth"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoDay"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "calendar"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "StringKeyword"
                      },
                      {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "CalendarProtocol"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "from"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "item"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "compare"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "one"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "two"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ComparisonResult"
                  }
                }
              },
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "isoYear"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "isoMonth"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "isoDay"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "calendar"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarLike"
                      }
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "era"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "StringKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "eraYear"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "year"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "month"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "monthCode"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "day"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "calendarId"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "dayOfWeek"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "dayOfYear"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "weekOfYear"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "yearOfWeek"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "daysInWeek"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "daysInYear"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "daysInMonth"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "monthsInYear"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "inLeapYear"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "equals"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "with"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "dateLike"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PlainDateLike"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "withCalendar"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "calendar"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarLike"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "add"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "subtract"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "until"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "year"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "month"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "week"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "day"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DifferenceOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "since"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDate"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "year"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "month"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "week"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "day"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DifferenceOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toPlainDateTime"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "temporalTime"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toZonedDateTime"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "timeZoneAndTime"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "TimeZoneProtocol"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "kind": "TypeLiteral",
                          "members": [
                            {
                              "kind": "PropertySignature",
                              "name": {
                                "kind": "Identifier",
                                "text": "timeZone"
                              },
                              "type": {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "TimeZoneLike"
                                }
                              }
                            },
                            {
                              "kind": "PropertySignature",
                              "name": {
                                "kind": "Identifier",
                                "text": "plainTime"
                              },
                              "questionToken": {
                                "kind": "QuestionToken"
                              },
                              "type": {
                                "kind": "UnionType",
                                "types": [
                                  {
                                    "kind": "TypeReference",
                                    "typeName": {
                                      "kind": "FirstNode",
                                      "left": {
                                        "kind": "Identifier",
                                        "text": "Temporal"
                                      },
                                      "right": {
                                        "kind": "Identifier",
                                        "text": "PlainTime"
                                      }
                                    }
                                  },
                                  {
                                    "kind": "TypeReference",
                                    "typeName": {
                                      "kind": "Identifier",
                                      "text": "PlainTimeLike"
                                    }
                                  },
                                  {
                                    "kind": "StringKeyword"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toPlainYearMonth"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainYearMonth"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toPlainMonthDay"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainMonthDay"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getISOFields"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PlainDateISOFields"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toLocaleString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "locales"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "elementType": {
                            "kind": "StringKeyword"
                          },
                          "kind": "ArrayType"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Intl"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "DateTimeFormatOptions"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toJSON"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ShowCalendarOption"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "valueOf"
                },
                "parameters": [],
                "type": {
                  "kind": "NeverKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "toStringTag"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "type": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "Temporal.PlainDate"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainDate"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainDateTimeLike"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "era"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "StringKeyword"
                      },
                      {
                        "kind": "UndefinedKeyword"
                      }
                    ]
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "eraYear"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "NumberKeyword"
                      },
                      {
                        "kind": "UndefinedKeyword"
                      }
                    ]
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "year"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "month"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "monthCode"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "StringKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "day"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "hour"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "minute"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "second"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "millisecond"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "microsecond"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "nanosecond"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "calendar"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "CalendarLike"
                    }
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainDateTimeISOFields"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoYear"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoMonth"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoDay"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoHour"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoMinute"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoSecond"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoMillisecond"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoMicrosecond"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoNanosecond"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "calendar"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "StringKeyword"
                      },
                      {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "CalendarProtocol"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "from"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "item"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "compare"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "one"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "two"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ComparisonResult"
                  }
                }
              },
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "isoYear"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "isoMonth"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "isoDay"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "hour"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "minute"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "second"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "millisecond"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "microsecond"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "nanosecond"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "calendar"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarLike"
                      }
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "era"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "StringKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "eraYear"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "year"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "month"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "monthCode"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "day"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "hour"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "minute"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "second"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "millisecond"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "microsecond"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "nanosecond"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "calendarId"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "dayOfWeek"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "dayOfYear"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "weekOfYear"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "yearOfWeek"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "daysInWeek"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "daysInYear"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "daysInMonth"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "monthsInYear"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "inLeapYear"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "equals"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "with"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "dateTimeLike"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PlainDateTimeLike"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "withPlainTime"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "timeLike"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "withCalendar"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "calendar"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarLike"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "add"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "subtract"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "until"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "year"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "month"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "week"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "day"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "hour"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "minute"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "second"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "millisecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "microsecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "nanosecond"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DifferenceOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "since"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "year"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "month"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "week"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "day"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "hour"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "minute"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "second"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "millisecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "microsecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "nanosecond"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DifferenceOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "round"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "roundTo"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "day"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "hour"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "minute"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "second"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "millisecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "microsecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "nanosecond"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "RoundTo"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toZonedDateTime"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "tzLike"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "TimeZoneLike"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ToInstantOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toPlainDate"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toPlainTime"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getISOFields"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PlainDateTimeISOFields"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toLocaleString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "locales"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "elementType": {
                            "kind": "StringKeyword"
                          },
                          "kind": "ArrayType"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Intl"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "DateTimeFormatOptions"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toJSON"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarTypeToStringOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "valueOf"
                },
                "parameters": [],
                "type": {
                  "kind": "NeverKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "toStringTag"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "type": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "Temporal.PlainDateTime"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainDateTime"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainMonthDayLike"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "era"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "StringKeyword"
                      },
                      {
                        "kind": "UndefinedKeyword"
                      }
                    ]
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "eraYear"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "NumberKeyword"
                      },
                      {
                        "kind": "UndefinedKeyword"
                      }
                    ]
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "year"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "month"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "monthCode"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "StringKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "day"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "calendar"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "CalendarLike"
                    }
                  }
                }
              ]
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "from"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "item"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainMonthDay"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainMonthDayLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainMonthDay"
                    }
                  }
                }
              },
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "isoMonth"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "isoDay"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "calendar"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarLike"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "referenceISOYear"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "monthCode"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "day"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "calendarId"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "equals"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainMonthDay"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainMonthDayLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "with"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "monthDayLike"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PlainMonthDayLike"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainMonthDay"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toPlainDate"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "year"
                    },
                    "type": {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "year"
                          },
                          "type": {
                            "kind": "NumberKeyword"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getISOFields"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PlainDateISOFields"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toLocaleString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "locales"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "elementType": {
                            "kind": "StringKeyword"
                          },
                          "kind": "ArrayType"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Intl"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "DateTimeFormatOptions"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toJSON"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ShowCalendarOption"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "valueOf"
                },
                "parameters": [],
                "type": {
                  "kind": "NeverKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "toStringTag"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "type": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "Temporal.PlainMonthDay"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainMonthDay"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainTimeLike"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "hour"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "minute"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "second"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "millisecond"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "microsecond"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "nanosecond"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainTimeISOFields"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoHour"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoMinute"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoSecond"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoMillisecond"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoMicrosecond"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoNanosecond"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                }
              ]
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "from"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "item"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "compare"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "one"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "two"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ComparisonResult"
                  }
                }
              },
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "hour"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "minute"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "second"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "millisecond"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "microsecond"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "nanosecond"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "hour"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "minute"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "second"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "millisecond"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "microsecond"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "nanosecond"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "equals"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "with"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "timeLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainTimeLike"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "add"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "subtract"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "until"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "hour"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "minute"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "second"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "millisecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "microsecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "nanosecond"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DifferenceOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "since"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "hour"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "minute"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "second"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "millisecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "microsecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "nanosecond"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DifferenceOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "round"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "roundTo"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "hour"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "minute"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "second"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "millisecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "microsecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "nanosecond"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "RoundTo"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getISOFields"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PlainTimeISOFields"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toLocaleString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "locales"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "elementType": {
                            "kind": "StringKeyword"
                          },
                          "kind": "ArrayType"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Intl"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "DateTimeFormatOptions"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toJSON"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ToStringPrecisionOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "valueOf"
                },
                "parameters": [],
                "type": {
                  "kind": "NeverKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "toStringTag"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "type": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "Temporal.PlainTime"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainTime"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "id"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "getOffsetNanosecondsFor"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "instant"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Instant"
                            }
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "getOffsetStringFor"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "instant"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Instant"
                            }
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "getPlainDateTimeFor"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "instant"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Instant"
                            }
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "calendar"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarLike"
                      }
                    }
                  }
                ],
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "getInstantFor"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "dateTime"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ToInstantOptions"
                      }
                    }
                  }
                ],
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Instant"
                    }
                  }
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "getPossibleInstantsFor"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "dateTime"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "elementType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "FirstNode",
                      "left": {
                        "kind": "Identifier",
                        "text": "Temporal"
                      },
                      "right": {
                        "kind": "Identifier",
                        "text": "Instant"
                      }
                    }
                  },
                  "kind": "ArrayType"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "toString"
                },
                "parameters": [],
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "toJSON"
                },
                "parameters": [],
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "TimeZoneProtocol"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "TimeZoneLike"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "StringKeyword"
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "TimeZoneProtocol"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ZonedDateTime"
                  }
                }
              ]
            }
          },
          {
            "heritageClauses": [
              {
                "kind": "HeritageClause",
                "token": "FirstFutureReservedWord",
                "types": [
                  {
                    "expression": {
                      "kind": "Identifier",
                      "text": "TimeZoneProtocol"
                    },
                    "kind": "ExpressionWithTypeArguments"
                  }
                ]
              }
            ],
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "from"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "timeZone"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "TimeZoneLike"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Temporal"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "TimeZone"
                        }
                      }
                    },
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "TimeZoneProtocol"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "timeZoneIdentifier"
                    },
                    "type": {
                      "kind": "StringKeyword"
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "id"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getOffsetNanosecondsFor"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "instant"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Instant"
                            }
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getOffsetStringFor"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "instant"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Instant"
                            }
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getPlainDateTimeFor"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "instant"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Instant"
                            }
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "calendar"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarLike"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getInstantFor"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "dateTime"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ToInstantOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Instant"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getPossibleInstantsFor"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "dateTime"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "elementType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "FirstNode",
                      "left": {
                        "kind": "Identifier",
                        "text": "Temporal"
                      },
                      "right": {
                        "kind": "Identifier",
                        "text": "Instant"
                      }
                    }
                  },
                  "kind": "ArrayType"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toString"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toJSON"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "toStringTag"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "type": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "Temporal.TimeZone"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "TimeZone"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainYearMonthLike"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "era"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "StringKeyword"
                      },
                      {
                        "kind": "UndefinedKeyword"
                      }
                    ]
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "eraYear"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "NumberKeyword"
                      },
                      {
                        "kind": "UndefinedKeyword"
                      }
                    ]
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "year"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "month"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "monthCode"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "StringKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "calendar"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "CalendarLike"
                    }
                  }
                }
              ]
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "from"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "item"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainYearMonthLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainYearMonth"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "compare"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "one"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainYearMonthLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "two"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainYearMonthLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ComparisonResult"
                  }
                }
              },
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "isoYear"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "isoMonth"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "calendar"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarLike"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "referenceISODay"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "era"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "StringKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "eraYear"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "year"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "month"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "monthCode"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "calendarId"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "daysInMonth"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "daysInYear"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "monthsInYear"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "inLeapYear"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "equals"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainYearMonthLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "with"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "yearMonthLike"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "PlainYearMonthLike"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "AssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainYearMonth"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "add"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainYearMonth"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "subtract"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainYearMonth"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "until"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainYearMonthLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "year"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "month"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DifferenceOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "since"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainYearMonth"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainYearMonthLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "year"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "month"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "DifferenceOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toPlainDate"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "day"
                    },
                    "type": {
                      "kind": "TypeLiteral",
                      "members": [
                        {
                          "kind": "PropertySignature",
                          "name": {
                            "kind": "Identifier",
                            "text": "day"
                          },
                          "type": {
                            "kind": "NumberKeyword"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getISOFields"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "PlainDateISOFields"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toLocaleString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "locales"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "elementType": {
                            "kind": "StringKeyword"
                          },
                          "kind": "ArrayType"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Intl"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "DateTimeFormatOptions"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toJSON"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ShowCalendarOption"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "valueOf"
                },
                "parameters": [],
                "type": {
                  "kind": "NeverKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "toStringTag"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "type": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "Temporal.PlainYearMonth"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "PlainYearMonth"
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ZonedDateTimeLike"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "era"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "StringKeyword"
                      },
                      {
                        "kind": "UndefinedKeyword"
                      }
                    ]
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "eraYear"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "NumberKeyword"
                      },
                      {
                        "kind": "UndefinedKeyword"
                      }
                    ]
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "year"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "month"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "monthCode"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "StringKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "day"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "hour"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "minute"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "second"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "millisecond"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "microsecond"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "nanosecond"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "offset"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "StringKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "timeZone"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "TimeZoneLike"
                    }
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "calendar"
                  },
                  "questionToken": {
                    "kind": "QuestionToken"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "CalendarLike"
                    }
                  }
                }
              ]
            }
          },
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ZonedDateTimeISOFields"
            },
            "type": {
              "kind": "TypeLiteral",
              "members": [
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoYear"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoMonth"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoDay"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoHour"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoMinute"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoSecond"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoMillisecond"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoMicrosecond"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "isoNanosecond"
                  },
                  "type": {
                    "kind": "NumberKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "offset"
                  },
                  "type": {
                    "kind": "StringKeyword"
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "timeZone"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "StringKeyword"
                      },
                      {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "TimeZoneProtocol"
                        }
                      }
                    ]
                  }
                },
                {
                  "kind": "PropertySignature",
                  "name": {
                    "kind": "Identifier",
                    "text": "calendar"
                  },
                  "type": {
                    "kind": "UnionType",
                    "types": [
                      {
                        "kind": "StringKeyword"
                      },
                      {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "CalendarProtocol"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "kind": "ClassDeclaration",
            "members": [
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "from"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "item"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "ZonedDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "ZonedDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ZonedDateTimeAssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ZonedDateTime"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "modifiers": [
                  {
                    "kind": "StaticKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "compare"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "one"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "ZonedDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "ZonedDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "two"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "ZonedDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "ZonedDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ComparisonResult"
                  }
                }
              },
              {
                "kind": "Constructor",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "epochNanoseconds"
                    },
                    "type": {
                      "kind": "BigIntKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "timeZone"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "TimeZoneLike"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "calendar"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarLike"
                      }
                    }
                  }
                ]
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "era"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "StringKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "eraYear"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "year"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "month"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "monthCode"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "day"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "hour"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "minute"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "second"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "millisecond"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "microsecond"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "nanosecond"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "timeZoneId"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "calendarId"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "dayOfWeek"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "dayOfYear"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "weekOfYear"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "yearOfWeek"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "NumberKeyword"
                    },
                    {
                      "kind": "UndefinedKeyword"
                    }
                  ]
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "hoursInDay"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "daysInWeek"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "daysInMonth"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "daysInYear"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "monthsInYear"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "inLeapYear"
                },
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "offsetNanoseconds"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "offset"
                },
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "epochSeconds"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "epochMilliseconds"
                },
                "type": {
                  "kind": "NumberKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "epochMicroseconds"
                },
                "type": {
                  "kind": "BigIntKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "kind": "Identifier",
                  "text": "epochNanoseconds"
                },
                "type": {
                  "kind": "BigIntKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "equals"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "ZonedDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "ZonedDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "with"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "zonedDateTimeLike"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ZonedDateTimeLike"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ZonedDateTimeAssignmentOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "withPlainTime"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "timeLike"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "PlainTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "PlainTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "withCalendar"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "calendar"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "CalendarLike"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "withTimeZone"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "timeZone"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "TimeZoneLike"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "add"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "subtract"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "durationLike"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "Duration"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "DurationLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ArithmeticOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "until"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "ZonedDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "ZonedDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "year"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "month"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "week"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "day"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "hour"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "minute"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "second"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "millisecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "microsecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "nanosecond"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Temporal"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "DifferenceOptions"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "since"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "other"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "FirstNode",
                            "left": {
                              "kind": "Identifier",
                              "text": "Temporal"
                            },
                            "right": {
                              "kind": "Identifier",
                              "text": "ZonedDateTime"
                            }
                          }
                        },
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "ZonedDateTimeLike"
                          }
                        },
                        {
                          "kind": "StringKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "year"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "month"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "week"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "day"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "hour"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "minute"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "second"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "millisecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "microsecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "nanosecond"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Temporal"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "DifferenceOptions"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Duration"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "round"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "roundTo"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "day"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "hour"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "minute"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "second"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "millisecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "microsecond"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "nanosecond"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "RoundTo"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "startOfDay"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getTimeZoneTransition"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "direction"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "TransitionDirection"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Temporal"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "ZonedDateTime"
                        }
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "NullKeyword"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toInstant"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Instant"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toPlainDateTime"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDateTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toPlainDate"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toPlainTime"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainTime"
                    }
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "getISOFields"
                },
                "parameters": [],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "ZonedDateTimeISOFields"
                  }
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toLocaleString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "locales"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "StringKeyword"
                        },
                        {
                          "elementType": {
                            "kind": "StringKeyword"
                          },
                          "kind": "ArrayType"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "Intl"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "DateTimeFormatOptions"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toJSON"
                },
                "parameters": [],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "toString"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "options"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "ZonedDateTimeToStringOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodDeclaration",
                "name": {
                  "kind": "Identifier",
                  "text": "valueOf"
                },
                "parameters": [],
                "type": {
                  "kind": "NeverKeyword"
                }
              },
              {
                "kind": "PropertyDeclaration",
                "modifiers": [
                  {
                    "kind": "ReadonlyKeyword"
                  }
                ],
                "name": {
                  "expression": {
                    "expression": {
                      "kind": "Identifier",
                      "text": "Symbol"
                    },
                    "kind": "PropertyAccessExpression",
                    "name": {
                      "kind": "Identifier",
                      "text": "toStringTag"
                    }
                  },
                  "kind": "ComputedPropertyName"
                },
                "type": {
                  "kind": "LiteralType",
                  "literal": {
                    "kind": "StringLiteral",
                    "text": "Temporal.ZonedDateTime"
                  }
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "ZonedDateTime"
            }
          },
          {
            "declarationList": {
              "declarations": [
                {
                  "kind": "VariableDeclaration",
                  "name": {
                    "kind": "Identifier",
                    "text": "Now"
                  },
                  "type": {
                    "kind": "TypeLiteral",
                    "members": [
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "Identifier",
                          "text": "instant"
                        },
                        "type": {
                          "kind": "FunctionType",
                          "parameters": [],
                          "type": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "FirstNode",
                              "left": {
                                "kind": "Identifier",
                                "text": "Temporal"
                              },
                              "right": {
                                "kind": "Identifier",
                                "text": "Instant"
                              }
                            }
                          }
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "Identifier",
                          "text": "zonedDateTimeISO"
                        },
                        "type": {
                          "kind": "FunctionType",
                          "parameters": [
                            {
                              "kind": "Parameter",
                              "name": {
                                "kind": "Identifier",
                                "text": "tzLike"
                              },
                              "questionToken": {
                                "kind": "QuestionToken"
                              },
                              "type": {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "TimeZoneLike"
                                }
                              }
                            }
                          ],
                          "type": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "FirstNode",
                              "left": {
                                "kind": "Identifier",
                                "text": "Temporal"
                              },
                              "right": {
                                "kind": "Identifier",
                                "text": "ZonedDateTime"
                              }
                            }
                          }
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "Identifier",
                          "text": "plainDateTimeISO"
                        },
                        "type": {
                          "kind": "FunctionType",
                          "parameters": [
                            {
                              "kind": "Parameter",
                              "name": {
                                "kind": "Identifier",
                                "text": "tzLike"
                              },
                              "questionToken": {
                                "kind": "QuestionToken"
                              },
                              "type": {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "TimeZoneLike"
                                }
                              }
                            }
                          ],
                          "type": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "FirstNode",
                              "left": {
                                "kind": "Identifier",
                                "text": "Temporal"
                              },
                              "right": {
                                "kind": "Identifier",
                                "text": "PlainDateTime"
                              }
                            }
                          }
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "Identifier",
                          "text": "plainDateISO"
                        },
                        "type": {
                          "kind": "FunctionType",
                          "parameters": [
                            {
                              "kind": "Parameter",
                              "name": {
                                "kind": "Identifier",
                                "text": "tzLike"
                              },
                              "questionToken": {
                                "kind": "QuestionToken"
                              },
                              "type": {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "TimeZoneLike"
                                }
                              }
                            }
                          ],
                          "type": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "FirstNode",
                              "left": {
                                "kind": "Identifier",
                                "text": "Temporal"
                              },
                              "right": {
                                "kind": "Identifier",
                                "text": "PlainDate"
                              }
                            }
                          }
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "Identifier",
                          "text": "plainTimeISO"
                        },
                        "type": {
                          "kind": "FunctionType",
                          "parameters": [
                            {
                              "kind": "Parameter",
                              "name": {
                                "kind": "Identifier",
                                "text": "tzLike"
                              },
                              "questionToken": {
                                "kind": "QuestionToken"
                              },
                              "type": {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "TimeZoneLike"
                                }
                              }
                            }
                          ],
                          "type": {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "FirstNode",
                              "left": {
                                "kind": "Identifier",
                                "text": "Temporal"
                              },
                              "right": {
                                "kind": "Identifier",
                                "text": "PlainTime"
                              }
                            }
                          }
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "name": {
                          "kind": "Identifier",
                          "text": "timeZoneId"
                        },
                        "type": {
                          "kind": "FunctionType",
                          "parameters": [],
                          "type": {
                            "kind": "StringKeyword"
                          }
                        }
                      },
                      {
                        "kind": "PropertySignature",
                        "modifiers": [
                          {
                            "kind": "ReadonlyKeyword"
                          }
                        ],
                        "name": {
                          "expression": {
                            "expression": {
                              "kind": "Identifier",
                              "text": "Symbol"
                            },
                            "kind": "PropertyAccessExpression",
                            "name": {
                              "kind": "Identifier",
                              "text": "toStringTag"
                            }
                          },
                          "kind": "ComputedPropertyName"
                        },
                        "type": {
                          "kind": "LiteralType",
                          "literal": {
                            "kind": "StringLiteral",
                            "text": "Temporal.Now"
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "kind": "VariableDeclarationList"
            },
            "kind": "FirstStatement",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ]
          }
        ]
      },
      "kind": "ModuleDeclaration",
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Temporal"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "toTemporalInstant"
          },
          "parameters": [],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "FirstNode",
              "left": {
                "kind": "Identifier",
                "text": "Temporal"
              },
              "right": {
                "kind": "Identifier",
                "text": "Instant"
              }
            }
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Date"
      }
    },
    {
      "body": {
        "kind": "ModuleBlock",
        "statements": [
          {
            "kind": "TypeAliasDeclaration",
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "Formattable"
            },
            "type": {
              "kind": "UnionType",
              "types": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Date"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "Instant"
                    }
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "ZonedDateTime"
                    }
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDate"
                    }
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainTime"
                    }
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainDateTime"
                    }
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainYearMonth"
                    }
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "FirstNode",
                    "left": {
                      "kind": "Identifier",
                      "text": "Temporal"
                    },
                    "right": {
                      "kind": "Identifier",
                      "text": "PlainMonthDay"
                    }
                  }
                }
              ]
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "source"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "shared"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "startRange"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "endRange"
                      }
                    }
                  ]
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DateTimeFormatRangePart"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "format"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Formattable"
                          }
                        },
                        {
                          "kind": "NumberKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "formatToParts"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "date"
                    },
                    "questionToken": {
                      "kind": "QuestionToken"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Formattable"
                          }
                        },
                        {
                          "kind": "NumberKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "elementType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "FirstNode",
                      "left": {
                        "kind": "FirstNode",
                        "left": {
                          "kind": "Identifier",
                          "text": "globalThis"
                        },
                        "right": {
                          "kind": "Identifier",
                          "text": "Intl"
                        }
                      },
                      "right": {
                        "kind": "Identifier",
                        "text": "DateTimeFormatPart"
                      }
                    }
                  },
                  "kind": "ArrayType"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "formatRange"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "startDate"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "endDate"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "formatRange"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "startDate"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Date"
                          }
                        },
                        {
                          "kind": "NumberKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "endDate"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Date"
                          }
                        },
                        {
                          "kind": "NumberKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "formatRangeToParts"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "startDate"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "endDate"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  }
                ],
                "type": {
                  "elementType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "DateTimeFormatRangePart"
                    }
                  },
                  "kind": "ArrayType"
                }
              },
              {
                "kind": "MethodSignature",
                "name": {
                  "kind": "Identifier",
                  "text": "formatRangeToParts"
                },
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "startDate"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Date"
                          }
                        },
                        {
                          "kind": "NumberKeyword"
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "endDate"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "Date"
                          }
                        },
                        {
                          "kind": "NumberKeyword"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "elementType": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "DateTimeFormatRangePart"
                    }
                  },
                  "kind": "ArrayType"
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DateTimeFormat"
            }
          },
          {
            "kind": "InterfaceDeclaration",
            "members": [
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "dayPeriod"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "narrow"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "short"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "long"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "dateStyle"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "full"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "long"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "medium"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "short"
                      }
                    }
                  ]
                }
              },
              {
                "kind": "PropertySignature",
                "name": {
                  "kind": "Identifier",
                  "text": "timeStyle"
                },
                "questionToken": {
                  "kind": "QuestionToken"
                },
                "type": {
                  "kind": "UnionType",
                  "types": [
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "full"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "long"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "medium"
                      }
                    },
                    {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "StringLiteral",
                        "text": "short"
                      }
                    }
                  ]
                }
              }
            ],
            "modifiers": [
              {
                "kind": "ExportKeyword"
              }
            ],
            "name": {
              "kind": "Identifier",
              "text": "DateTimeFormatOptions"
            }
          }
        ]
      },
      "kind": "ModuleDeclaration",
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Intl"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "BYTES_PER_ELEMENT"
          },
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "buffer"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "ArrayBufferLike"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "byteLength"
          },
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "byteOffset"
          },
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "copyWithin"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "target"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "start"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "end"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "ThisType"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "every"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "predicate"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "index"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "UnknownKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "BooleanKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "fill"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "value"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "start"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "end"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "ThisType"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "filter"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "predicate"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "index"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "AnyKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "find"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "predicate"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "index"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "obj"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "UnionType",
            "types": [
              {
                "kind": "NumberKeyword"
              },
              {
                "kind": "UndefinedKeyword"
              }
            ]
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "findIndex"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "predicate"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "index"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "obj"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "BooleanKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "forEach"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "callbackfn"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "index"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "VoidKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "VoidKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "indexOf"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "searchElement"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "fromIndex"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "join"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "separator"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "StringKeyword"
              }
            }
          ],
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "lastIndexOf"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "searchElement"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "fromIndex"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "length"
          },
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "map"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "callbackfn"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "index"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "reduce"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "callbackfn"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "previousValue"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "currentValue"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "currentIndex"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "reduce"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "callbackfn"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "previousValue"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "currentValue"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "currentIndex"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "initialValue"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "reduce"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "callbackfn"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "previousValue"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "U"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "currentValue"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "currentIndex"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "U"
                  }
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "initialValue"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "U"
                }
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "U"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "reduceRight"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "callbackfn"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "previousValue"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "currentValue"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "currentIndex"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "reduceRight"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "callbackfn"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "previousValue"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "currentValue"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "currentIndex"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "initialValue"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "reduceRight"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "callbackfn"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "previousValue"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "U"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "currentValue"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "currentIndex"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "U"
                  }
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "initialValue"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "U"
                }
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "U"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "reverse"
          },
          "parameters": [],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "set"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "array"
              },
              "type": {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "NumberKeyword"
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "ArrayLike"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "offset"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "VoidKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "slice"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "start"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "end"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "some"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "predicate"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "index"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "UnknownKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "BooleanKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "sort"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "compareFn"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "a"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "b"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            }
          ],
          "type": {
            "kind": "ThisType"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "subarray"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "begin"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "end"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "toLocaleString"
          },
          "parameters": [],
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "toString"
          },
          "parameters": [],
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "valueOf"
          },
          "parameters": [],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "IndexSignature",
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "index"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Float16Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "prototype"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "ConstructSignature",
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "length"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "ConstructSignature",
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "array"
              },
              "type": {
                "kind": "UnionType",
                "types": [
                  {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "NumberKeyword"
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "ArrayLike"
                    }
                  },
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "ArrayBufferLike"
                    }
                  }
                ]
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "ConstructSignature",
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "buffer"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "ArrayBufferLike"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "byteOffset"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "length"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "BYTES_PER_ELEMENT"
          },
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "of"
          },
          "parameters": [
            {
              "dotDotDotToken": {
                "kind": "DotDotDotToken"
              },
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "items"
              },
              "type": {
                "elementType": {
                  "kind": "NumberKeyword"
                },
                "kind": "ArrayType"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "from"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "arrayLike"
              },
              "type": {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "NumberKeyword"
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "ArrayLike"
                }
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "from"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "arrayLike"
              },
              "type": {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "ArrayLike"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "mapfn"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "v"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "T"
                      }
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "k"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Float16ArrayConstructor"
      }
    },
    {
      "declarationList": {
        "declarations": [
          {
            "kind": "VariableDeclaration",
            "name": {
              "kind": "Identifier",
              "text": "Float16Array"
            },
            "type": {
              "kind": "TypeReference",
              "typeName": {
                "kind": "Identifier",
                "text": "Float16ArrayConstructor"
              }
            }
          }
        ],
        "kind": "VariableDeclarationList"
      },
      "kind": "FirstStatement",
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ]
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "iterator"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [],
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "NumberKeyword"
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "IterableIterator"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "entries"
          },
          "parameters": [],
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "elements": [
                  {
                    "kind": "NumberKeyword"
                  },
                  {
                    "kind": "NumberKeyword"
                  }
                ],
                "kind": "TupleType"
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "IterableIterator"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "keys"
          },
          "parameters": [],
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "NumberKeyword"
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "IterableIterator"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "values"
          },
          "parameters": [],
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "NumberKeyword"
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "IterableIterator"
            }
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Float16"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "ConstructSignature",
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "elements"
              },
              "type": {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "NumberKeyword"
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "Iterable"
                }
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "from"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "arrayLike"
              },
              "type": {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "NumberKeyword"
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "Iterable"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "mapfn"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "v"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "k"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16"
            }
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Float16Constructor"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "LiteralType",
            "literal": {
              "kind": "StringLiteral",
              "text": "Float16Array"
            }
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Float16Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "includes"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "searchElement"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "fromIndex"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "BooleanKeyword"
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Float16Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "ConstructSignature",
          "parameters": [],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Float16ArrayConstructor"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "at"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "index"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "UnionType",
            "types": [
              {
                "kind": "NumberKeyword"
              },
              {
                "kind": "UndefinedKeyword"
              }
            ]
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Float16Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "findLast"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "predicate"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "index"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "FirstTypeNode",
                  "parameterName": {
                    "kind": "Identifier",
                    "text": "value"
                  },
                  "type": {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "S"
                    }
                  }
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "UnionType",
            "types": [
              {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "S"
                }
              },
              {
                "kind": "UndefinedKeyword"
              }
            ]
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "findLast"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "predicate"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "index"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "UnknownKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "UnionType",
            "types": [
              {
                "kind": "NumberKeyword"
              },
              {
                "kind": "UndefinedKeyword"
              }
            ]
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "findLastIndex"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "predicate"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "index"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "array"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Float16Array"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "UnknownKeyword"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "toReversed"
          },
          "parameters": [],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "toSorted"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "compareFn"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "a"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  },
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "b"
                    },
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ],
                "type": {
                  "kind": "NumberKeyword"
                }
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "with"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "index"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "value"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Float16Array"
            }
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Float16Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "getFloat16"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "byteOffset"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "littleEndian"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "BooleanKeyword"
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "setFloat16"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "byteOffset"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "value"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "littleEndian"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "BooleanKeyword"
              }
            }
          ],
          "type": {
            "kind": "VoidKeyword"
          }
        }
      ],
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "DataView"
      }
    }
  ],
  "text": "// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n/// <reference no-default-lib=\"true\" />\n/// <reference lib=\"deno.ns\" />\n/// <reference lib=\"deno.broadcast_channel\" />\n/// <reference lib=\"deno.webgpu\" />\n/// <reference lib=\"esnext\" />\n/// <reference lib=\"es2022.intl\" />\n\ndeclare namespace Deno {\n  export {}; // stop default export type behavior\n\n  /** Information for a HTTP request.\n   *\n   * @category HTTP Server\n   * @experimental\n   */\n  export interface ServeHandlerInfo {\n    /** The remote address of the connection. */\n    remoteAddr: Deno.NetAddr;\n    /** The completion promise */\n    completed: Promise<void>;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Retrieve the process umask.  If `mask` is provided, sets the process umask.\n   * This call always returns what the umask was before the call.\n   *\n   * ```ts\n   * console.log(Deno.umask());  // e.g. 18 (0o022)\n   * const prevUmaskValue = Deno.umask(0o077);  // e.g. 18 (0o022)\n   * console.log(Deno.umask());  // e.g. 63 (0o077)\n   * ```\n   *\n   * This API is under consideration to determine if permissions are required to\n   * call it.\n   *\n   * *Note*: This API is not implemented on Windows\n   *\n   * @category File System\n   * @experimental\n   */\n  export function umask(mask?: number): number;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * All plain number types for interfacing with foreign functions.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type NativeNumberType =\n    | \"u8\"\n    | \"i8\"\n    | \"u16\"\n    | \"i16\"\n    | \"u32\"\n    | \"i32\"\n    | \"f32\"\n    | \"f64\";\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * All BigInt number types for interfacing with foreign functions.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type NativeBigIntType =\n    | \"u64\"\n    | \"i64\"\n    | \"usize\"\n    | \"isize\";\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * The native boolean type for interfacing to foreign functions.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type NativeBooleanType = \"bool\";\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * The native pointer type for interfacing to foreign functions.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type NativePointerType = \"pointer\";\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * The native buffer type for interfacing to foreign functions.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type NativeBufferType = \"buffer\";\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * The native function type for interfacing with foreign functions.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type NativeFunctionType = \"function\";\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * The native void type for interfacing with foreign functions.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type NativeVoidType = \"void\";\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * The native struct type for interfacing with foreign functions.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type NativeStructType = { readonly struct: readonly NativeType[] };\n\n  /**\n   * @category FFI\n   * @experimental\n   */\n  export const brand: unique symbol;\n\n  /**\n   * @category FFI\n   * @experimental\n   */\n  export type NativeU8Enum<T extends number> = \"u8\" & { [brand]: T };\n  /**\n   * @category FFI\n   * @experimental\n   */\n  export type NativeI8Enum<T extends number> = \"i8\" & { [brand]: T };\n  /**\n   * @category FFI\n   * @experimental\n   */\n  export type NativeU16Enum<T extends number> = \"u16\" & { [brand]: T };\n  /**\n   * @category FFI\n   * @experimental\n   */\n  export type NativeI16Enum<T extends number> = \"i16\" & { [brand]: T };\n  /**\n   * @category FFI\n   * @experimental\n   */\n  export type NativeU32Enum<T extends number> = \"u32\" & { [brand]: T };\n  /**\n   * @category FFI\n   * @experimental\n   */\n  export type NativeI32Enum<T extends number> = \"i32\" & { [brand]: T };\n  /**\n   * @category FFI\n   * @experimental\n   */\n  export type NativeTypedPointer<T extends PointerObject> = \"pointer\" & {\n    [brand]: T;\n  };\n  /**\n   * @category FFI\n   * @experimental\n   */\n  export type NativeTypedFunction<T extends UnsafeCallbackDefinition> =\n    & \"function\"\n    & {\n      [brand]: T;\n    };\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * All supported types for interfacing with foreign functions.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type NativeType =\n    | NativeNumberType\n    | NativeBigIntType\n    | NativeBooleanType\n    | NativePointerType\n    | NativeBufferType\n    | NativeFunctionType\n    | NativeStructType;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type NativeResultType = NativeType | NativeVoidType;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Type conversion for foreign symbol parameters and unsafe callback return\n   * types.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type ToNativeType<T extends NativeType = NativeType> = T extends\n    NativeStructType ? BufferSource\n    : T extends NativeNumberType ? T extends NativeU8Enum<infer U> ? U\n      : T extends NativeI8Enum<infer U> ? U\n      : T extends NativeU16Enum<infer U> ? U\n      : T extends NativeI16Enum<infer U> ? U\n      : T extends NativeU32Enum<infer U> ? U\n      : T extends NativeI32Enum<infer U> ? U\n      : number\n    : T extends NativeBigIntType ? bigint\n    : T extends NativeBooleanType ? boolean\n    : T extends NativePointerType\n      ? T extends NativeTypedPointer<infer U> ? U | null : PointerValue\n    : T extends NativeFunctionType\n      ? T extends NativeTypedFunction<infer U> ? PointerValue<U> | null\n      : PointerValue\n    : T extends NativeBufferType ? BufferSource | null\n    : never;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Type conversion for unsafe callback return types.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type ToNativeResultType<\n    T extends NativeResultType = NativeResultType,\n  > = T extends NativeStructType ? BufferSource\n    : T extends NativeNumberType ? T extends NativeU8Enum<infer U> ? U\n      : T extends NativeI8Enum<infer U> ? U\n      : T extends NativeU16Enum<infer U> ? U\n      : T extends NativeI16Enum<infer U> ? U\n      : T extends NativeU32Enum<infer U> ? U\n      : T extends NativeI32Enum<infer U> ? U\n      : number\n    : T extends NativeBigIntType ? bigint\n    : T extends NativeBooleanType ? boolean\n    : T extends NativePointerType\n      ? T extends NativeTypedPointer<infer U> ? U | null : PointerValue\n    : T extends NativeFunctionType\n      ? T extends NativeTypedFunction<infer U> ? PointerObject<U> | null\n      : PointerValue\n    : T extends NativeBufferType ? BufferSource | null\n    : T extends NativeVoidType ? void\n    : never;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A utility type for conversion of parameter types of foreign functions.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type ToNativeParameterTypes<T extends readonly NativeType[]> =\n    //\n    [(T[number])[]] extends [T] ? ToNativeType<T[number]>[]\n      : [readonly (T[number])[]] extends [T]\n        ? readonly ToNativeType<T[number]>[]\n      : T extends readonly [...NativeType[]] ? {\n          [K in keyof T]: ToNativeType<T[K]>;\n        }\n      : never;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Type conversion for foreign symbol return types and unsafe callback\n   * parameters.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type FromNativeType<T extends NativeType = NativeType> = T extends\n    NativeStructType ? Uint8Array\n    : T extends NativeNumberType ? T extends NativeU8Enum<infer U> ? U\n      : T extends NativeI8Enum<infer U> ? U\n      : T extends NativeU16Enum<infer U> ? U\n      : T extends NativeI16Enum<infer U> ? U\n      : T extends NativeU32Enum<infer U> ? U\n      : T extends NativeI32Enum<infer U> ? U\n      : number\n    : T extends NativeBigIntType ? bigint\n    : T extends NativeBooleanType ? boolean\n    : T extends NativePointerType\n      ? T extends NativeTypedPointer<infer U> ? U | null : PointerValue\n    : T extends NativeBufferType ? PointerValue\n    : T extends NativeFunctionType\n      ? T extends NativeTypedFunction<infer U> ? PointerObject<U> | null\n      : PointerValue\n    : never;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Type conversion for foreign symbol return types.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type FromNativeResultType<\n    T extends NativeResultType = NativeResultType,\n  > = T extends NativeStructType ? Uint8Array\n    : T extends NativeNumberType ? T extends NativeU8Enum<infer U> ? U\n      : T extends NativeI8Enum<infer U> ? U\n      : T extends NativeU16Enum<infer U> ? U\n      : T extends NativeI16Enum<infer U> ? U\n      : T extends NativeU32Enum<infer U> ? U\n      : T extends NativeI32Enum<infer U> ? U\n      : number\n    : T extends NativeBigIntType ? bigint\n    : T extends NativeBooleanType ? boolean\n    : T extends NativePointerType\n      ? T extends NativeTypedPointer<infer U> ? U | null : PointerValue\n    : T extends NativeBufferType ? PointerValue\n    : T extends NativeFunctionType\n      ? T extends NativeTypedFunction<infer U> ? PointerObject<U> | null\n      : PointerValue\n    : T extends NativeVoidType ? void\n    : never;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type FromNativeParameterTypes<\n    T extends readonly NativeType[],\n  > =\n    //\n    [(T[number])[]] extends [T] ? FromNativeType<T[number]>[]\n      : [readonly (T[number])[]] extends [T]\n        ? readonly FromNativeType<T[number]>[]\n      : T extends readonly [...NativeType[]] ? {\n          [K in keyof T]: FromNativeType<T[K]>;\n        }\n      : never;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * The interface for a foreign function as defined by its parameter and result\n   * types.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export interface ForeignFunction<\n    Parameters extends readonly NativeType[] = readonly NativeType[],\n    Result extends NativeResultType = NativeResultType,\n    NonBlocking extends boolean = boolean,\n  > {\n    /** Name of the symbol.\n     *\n     * Defaults to the key name in symbols object. */\n    name?: string;\n    /** The parameters of the foreign function. */\n    parameters: Parameters;\n    /** The result (return value) of the foreign function. */\n    result: Result;\n    /** When `true`, function calls will run on a dedicated blocking thread and\n     * will return a `Promise` resolving to the `result`. */\n    nonblocking?: NonBlocking;\n    /** When `true`, dlopen will not fail if the symbol is not found.\n     * Instead, the symbol will be set to `null`.\n     *\n     * @default {false} */\n    optional?: boolean;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export interface ForeignStatic<Type extends NativeType = NativeType> {\n    /** Name of the symbol, defaults to the key name in symbols object. */\n    name?: string;\n    /** The type of the foreign static value. */\n    type: Type;\n    /** When `true`, dlopen will not fail if the symbol is not found.\n     * Instead, the symbol will be set to `null`.\n     *\n     * @default {false} */\n    optional?: boolean;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A foreign library interface descriptor.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export interface ForeignLibraryInterface {\n    [name: string]: ForeignFunction | ForeignStatic;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A utility type that infers a foreign symbol.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type StaticForeignSymbol<T extends ForeignFunction | ForeignStatic> =\n    T extends ForeignFunction ? FromForeignFunction<T>\n      : T extends ForeignStatic ? FromNativeType<T[\"type\"]>\n      : never;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   *  @category FFI\n   *  @experimental\n   */\n  export type FromForeignFunction<T extends ForeignFunction> =\n    T[\"parameters\"] extends readonly [] ? () => StaticForeignSymbolReturnType<T>\n      : (\n        ...args: ToNativeParameterTypes<T[\"parameters\"]>\n      ) => StaticForeignSymbolReturnType<T>;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type StaticForeignSymbolReturnType<T extends ForeignFunction> =\n    ConditionalAsync<T[\"nonblocking\"], FromNativeResultType<T[\"result\"]>>;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type ConditionalAsync<IsAsync extends boolean | undefined, T> =\n    IsAsync extends true ? Promise<T> : T;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A utility type that infers a foreign library interface.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type StaticForeignLibraryInterface<T extends ForeignLibraryInterface> =\n    {\n      [K in keyof T]: T[K][\"optional\"] extends true\n        ? StaticForeignSymbol<T[K]> | null\n        : StaticForeignSymbol<T[K]>;\n    };\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A non-null pointer, represented as an object\n   * at runtime. The object's prototype is `null`\n   * and cannot be changed. The object cannot be\n   * assigned to either and is thus entirely read-only.\n   *\n   * To interact with memory through a pointer use the\n   * {@linkcode UnsafePointerView} class. To create a\n   * pointer from an address or the get the address of\n   * a pointer use the static methods of the\n   * {@linkcode UnsafePointer} class.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type PointerObject<T = unknown> = { [brand]: T };\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Pointers are represented either with a {@linkcode PointerObject}\n   * object or a `null` if the pointer is null.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type PointerValue<T = unknown> = null | PointerObject<T>;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A collection of static functions for interacting with pointer objects.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export class UnsafePointer {\n    /** Create a pointer from a numeric value. This one is <i>really</i> dangerous! */\n    static create<T = unknown>(value: bigint): PointerValue<T>;\n    /** Returns `true` if the two pointers point to the same address. */\n    static equals<T = unknown>(a: PointerValue<T>, b: PointerValue<T>): boolean;\n    /** Return the direct memory pointer to the typed array in memory. */\n    static of<T = unknown>(\n      value: Deno.UnsafeCallback | BufferSource,\n    ): PointerValue<T>;\n    /** Return a new pointer offset from the original by `offset` bytes. */\n    static offset<T = unknown>(\n      value: PointerObject,\n      offset: number,\n    ): PointerValue<T>;\n    /** Get the numeric value of a pointer */\n    static value(value: PointerValue): bigint;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * An unsafe pointer view to a memory location as specified by the `pointer`\n   * value. The `UnsafePointerView` API follows the standard built in interface\n   * {@linkcode DataView} for accessing the underlying types at an memory\n   * location (numbers, strings and raw bytes).\n   *\n   * @category FFI\n   * @experimental\n   */\n  export class UnsafePointerView {\n    constructor(pointer: PointerObject);\n\n    pointer: PointerObject;\n\n    /** Gets a boolean at the specified byte offset from the pointer. */\n    getBool(offset?: number): boolean;\n    /** Gets an unsigned 8-bit integer at the specified byte offset from the\n     * pointer. */\n    getUint8(offset?: number): number;\n    /** Gets a signed 8-bit integer at the specified byte offset from the\n     * pointer. */\n    getInt8(offset?: number): number;\n    /** Gets an unsigned 16-bit integer at the specified byte offset from the\n     * pointer. */\n    getUint16(offset?: number): number;\n    /** Gets a signed 16-bit integer at the specified byte offset from the\n     * pointer. */\n    getInt16(offset?: number): number;\n    /** Gets an unsigned 32-bit integer at the specified byte offset from the\n     * pointer. */\n    getUint32(offset?: number): number;\n    /** Gets a signed 32-bit integer at the specified byte offset from the\n     * pointer. */\n    getInt32(offset?: number): number;\n    /** Gets an unsigned 64-bit integer at the specified byte offset from the\n     * pointer. */\n    getBigUint64(offset?: number): bigint;\n    /** Gets a signed 64-bit integer at the specified byte offset from the\n     * pointer. */\n    getBigInt64(offset?: number): bigint;\n    /** Gets a signed 32-bit float at the specified byte offset from the\n     * pointer. */\n    getFloat32(offset?: number): number;\n    /** Gets a signed 64-bit float at the specified byte offset from the\n     * pointer. */\n    getFloat64(offset?: number): number;\n    /** Gets a pointer at the specified byte offset from the pointer */\n    getPointer<T = unknown>(offset?: number): PointerValue<T>;\n    /** Gets a C string (`null` terminated string) at the specified byte offset\n     * from the pointer. */\n    getCString(offset?: number): string;\n    /** Gets a C string (`null` terminated string) at the specified byte offset\n     * from the specified pointer. */\n    static getCString(\n      pointer: PointerObject,\n      offset?: number,\n    ): string;\n    /** Gets an `ArrayBuffer` of length `byteLength` at the specified byte\n     * offset from the pointer. */\n    getArrayBuffer(byteLength: number, offset?: number): ArrayBuffer;\n    /** Gets an `ArrayBuffer` of length `byteLength` at the specified byte\n     * offset from the specified pointer. */\n    static getArrayBuffer(\n      pointer: PointerObject,\n      byteLength: number,\n      offset?: number,\n    ): ArrayBuffer;\n    /** Copies the memory of the pointer into a typed array.\n     *\n     * Length is determined from the typed array's `byteLength`.\n     *\n     * Also takes optional byte offset from the pointer. */\n    copyInto(destination: BufferSource, offset?: number): void;\n    /** Copies the memory of the specified pointer into a typed array.\n     *\n     * Length is determined from the typed array's `byteLength`.\n     *\n     * Also takes optional byte offset from the pointer. */\n    static copyInto(\n      pointer: PointerObject,\n      destination: BufferSource,\n      offset?: number,\n    ): void;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * An unsafe pointer to a function, for calling functions that are not present\n   * as symbols.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export class UnsafeFnPointer<const Fn extends ForeignFunction> {\n    /** The pointer to the function. */\n    pointer: PointerObject<Fn>;\n    /** The definition of the function. */\n    definition: Fn;\n\n    constructor(pointer: PointerObject<NoInfer<Fn>>, definition: Fn);\n    /** @deprecated Properly type {@linkcode pointer} using {@linkcode NativeTypedFunction} or {@linkcode UnsafeCallbackDefinition} types. */\n    constructor(pointer: PointerObject, definition: Fn);\n\n    /** Call the foreign function. */\n    call: FromForeignFunction<Fn>;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Definition of a unsafe callback function.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export interface UnsafeCallbackDefinition<\n    Parameters extends readonly NativeType[] = readonly NativeType[],\n    Result extends NativeResultType = NativeResultType,\n  > {\n    /** The parameters of the callbacks. */\n    parameters: Parameters;\n    /** The current result of the callback. */\n    result: Result;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * An unsafe callback function.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export type UnsafeCallbackFunction<\n    Parameters extends readonly NativeType[] = readonly NativeType[],\n    Result extends NativeResultType = NativeResultType,\n  > = Parameters extends readonly [] ? () => ToNativeResultType<Result> : (\n    ...args: FromNativeParameterTypes<Parameters>\n  ) => ToNativeResultType<Result>;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * An unsafe function pointer for passing JavaScript functions as C function\n   * pointers to foreign function calls.\n   *\n   * The function pointer remains valid until the `close()` method is called.\n   *\n   * All `UnsafeCallback` are always thread safe in that they can be called from\n   * foreign threads without crashing. However, they do not wake up the Deno event\n   * loop by default.\n   *\n   * If a callback is to be called from foreign threads, use the `threadSafe()`\n   * static constructor or explicitly call `ref()` to have the callback wake up\n   * the Deno event loop when called from foreign threads. This also stops\n   * Deno's process from exiting while the callback still exists and is not\n   * unref'ed.\n   *\n   * Use `deref()` to then allow Deno's process to exit. Calling `deref()` on\n   * a ref'ed callback does not stop it from waking up the Deno event loop when\n   * called from foreign threads.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export class UnsafeCallback<\n    const Definition extends UnsafeCallbackDefinition =\n      UnsafeCallbackDefinition,\n  > {\n    constructor(\n      definition: Definition,\n      callback: UnsafeCallbackFunction<\n        Definition[\"parameters\"],\n        Definition[\"result\"]\n      >,\n    );\n\n    /** The pointer to the unsafe callback. */\n    readonly pointer: PointerObject<Definition>;\n    /** The definition of the unsafe callback. */\n    readonly definition: Definition;\n    /** The callback function. */\n    readonly callback: UnsafeCallbackFunction<\n      Definition[\"parameters\"],\n      Definition[\"result\"]\n    >;\n\n    /**\n     * Creates an {@linkcode UnsafeCallback} and calls `ref()` once to allow it to\n     * wake up the Deno event loop when called from foreign threads.\n     *\n     * This also stops Deno's process from exiting while the callback still\n     * exists and is not unref'ed.\n     */\n    static threadSafe<\n      Definition extends UnsafeCallbackDefinition = UnsafeCallbackDefinition,\n    >(\n      definition: Definition,\n      callback: UnsafeCallbackFunction<\n        Definition[\"parameters\"],\n        Definition[\"result\"]\n      >,\n    ): UnsafeCallback<Definition>;\n\n    /**\n     * Increments the callback's reference counting and returns the new\n     * reference count.\n     *\n     * After `ref()` has been called, the callback always wakes up the\n     * Deno event loop when called from foreign threads.\n     *\n     * If the callback's reference count is non-zero, it keeps Deno's\n     * process from exiting.\n     */\n    ref(): number;\n\n    /**\n     * Decrements the callback's reference counting and returns the new\n     * reference count.\n     *\n     * Calling `unref()` does not stop a callback from waking up the Deno\n     * event loop when called from foreign threads.\n     *\n     * If the callback's reference counter is zero, it no longer keeps\n     * Deno's process from exiting.\n     */\n    unref(): number;\n\n    /**\n     * Removes the C function pointer associated with this instance.\n     *\n     * Continuing to use the instance or the C function pointer after closing\n     * the `UnsafeCallback` will lead to errors and crashes.\n     *\n     * Calling this method sets the callback's reference counting to zero,\n     * stops the callback from waking up the Deno event loop when called from\n     * foreign threads and no longer keeps Deno's process from exiting.\n     */\n    close(): void;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A dynamic library resource.  Use {@linkcode Deno.dlopen} to load a dynamic\n   * library and return this interface.\n   *\n   * @category FFI\n   * @experimental\n   */\n  export interface DynamicLibrary<S extends ForeignLibraryInterface> {\n    /** All of the registered library along with functions for calling them. */\n    symbols: StaticForeignLibraryInterface<S>;\n    /** Removes the pointers associated with the library symbols.\n     *\n     * Continuing to use symbols that are part of the library will lead to\n     * errors and crashes.\n     *\n     * Calling this method will also immediately set any references to zero and\n     * will no longer keep Deno's process from exiting.\n     */\n    close(): void;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Opens an external dynamic library and registers symbols, making foreign\n   * functions available to be called.\n   *\n   * Requires `allow-ffi` permission. Loading foreign dynamic libraries can in\n   * theory bypass all of the sandbox permissions. While it is a separate\n   * permission users should acknowledge in practice that is effectively the\n   * same as running with the `allow-all` permission.\n   *\n   * @example Given a C library which exports a foreign function named `add()`\n   *\n   * ```ts\n   * // Determine library extension based on\n   * // your OS.\n   * let libSuffix = \"\";\n   * switch (Deno.build.os) {\n   *   case \"windows\":\n   *     libSuffix = \"dll\";\n   *     break;\n   *   case \"darwin\":\n   *     libSuffix = \"dylib\";\n   *     break;\n   *   default:\n   *     libSuffix = \"so\";\n   *     break;\n   * }\n   *\n   * const libName = `./libadd.${libSuffix}`;\n   * // Open library and define exported symbols\n   * const dylib = Deno.dlopen(\n   *   libName,\n   *   {\n   *     \"add\": { parameters: [\"isize\", \"isize\"], result: \"isize\" },\n   *   } as const,\n   * );\n   *\n   * // Call the symbol `add`\n   * const result = dylib.symbols.add(35n, 34n); // 69n\n   *\n   * console.log(`Result from external addition of 35 and 34: ${result}`);\n   * ```\n   *\n   * @tags allow-ffi\n   * @category FFI\n   * @experimental\n   */\n  export function dlopen<const S extends ForeignLibraryInterface>(\n    filename: string | URL,\n    symbols: S,\n  ): DynamicLibrary<S>;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   *  Creates a presentable WebGPU surface from given window and\n   *  display handles.\n   *\n   *  The parameters correspond to the table below:\n   *\n   *  | system            | winHandle     | displayHandle   |\n   *  | ----------------- | ------------- | --------------- |\n   *  | \"cocoa\" (macOS)   | `NSView*`     | -               |\n   *  | \"win32\" (Windows) | `HWND`        | `HINSTANCE`     |\n   *  | \"x11\" (Linux)     | Xlib `Window` | Xlib `Display*` |\n   *  | \"wayland\" (Linux) | `wl_surface*` | `wl_display*`   |\n   *\n   * @category GPU\n   * @experimental\n   */\n  export class UnsafeWindowSurface {\n    constructor(\n      system: \"cocoa\" | \"win32\" | \"x11\" | \"wayland\",\n      windowHandle: Deno.PointerValue<unknown>,\n      displayHandle: Deno.PointerValue<unknown>,\n    );\n    getContext(context: \"webgpu\"): GPUCanvasContext;\n    present(): void;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * These are unstable options which can be used with {@linkcode Deno.run}.\n   *\n   * @category Subprocess\n   * @experimental\n   */\n  export interface UnstableRunOptions extends RunOptions {\n    /** If `true`, clears the environment variables before executing the\n     * sub-process.\n     *\n     * @default {false} */\n    clearEnv?: boolean;\n    /** For POSIX systems, sets the group ID for the sub process. */\n    gid?: number;\n    /** For POSIX systems, sets the user ID for the sub process. */\n    uid?: number;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Spawns new subprocess. RunOptions must contain at a minimum the `opt.cmd`,\n   * an array of program arguments, the first of which is the binary.\n   *\n   * ```ts\n   * const p = Deno.run({\n   *   cmd: [\"curl\", \"https://example.com\"],\n   * });\n   * const status = await p.status();\n   * ```\n   *\n   * Subprocess uses same working directory as parent process unless `opt.cwd`\n   * is specified.\n   *\n   * Environmental variables from parent process can be cleared using `opt.clearEnv`.\n   * Doesn't guarantee that only `opt.env` variables are present,\n   * as the OS may set environmental variables for processes.\n   *\n   * Environmental variables for subprocess can be specified using `opt.env`\n   * mapping.\n   *\n   * `opt.uid` sets the child process’s user ID. This translates to a setuid call\n   * in the child process. Failure in the setuid call will cause the spawn to fail.\n   *\n   * `opt.gid` is similar to `opt.uid`, but sets the group ID of the child process.\n   * This has the same semantics as the uid field.\n   *\n   * By default subprocess inherits stdio of parent process. To change\n   * this this, `opt.stdin`, `opt.stdout`, and `opt.stderr` can be set\n   * independently to a resource ID (_rid_) of an open file, `\"inherit\"`,\n   * `\"piped\"`, or `\"null\"`:\n   *\n   * - _number_: the resource ID of an open file/resource. This allows you to\n   *   read or write to a file.\n   * - `\"inherit\"`: The default if unspecified. The subprocess inherits from the\n   *   parent.\n   * - `\"piped\"`: A new pipe should be arranged to connect the parent and child\n   *   sub-process.\n   * - `\"null\"`: This stream will be ignored. This is the equivalent of attaching\n   *   the stream to `/dev/null`.\n   *\n   * Details of the spawned process are returned as an instance of\n   * {@linkcode Deno.Process}.\n   *\n   * Requires `allow-run` permission.\n   *\n   * @tags allow-run\n   * @category Subprocess\n   * @experimental\n   */\n  export function run<T extends UnstableRunOptions = UnstableRunOptions>(\n    opt: T,\n  ): Process<T>;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A custom `HttpClient` for use with {@linkcode fetch} function. This is\n   * designed to allow custom certificates or proxies to be used with `fetch()`.\n   *\n   * @example ```ts\n   * const caCert = await Deno.readTextFile(\"./ca.pem\");\n   * const client = Deno.createHttpClient({ caCerts: [ caCert ] });\n   * const req = await fetch(\"https://myserver.com\", { client });\n   * ```\n   *\n   * @category Fetch\n   * @experimental\n   */\n  export interface HttpClient extends Disposable {\n    /** Close the HTTP client. */\n    close(): void;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * The options used when creating a {@linkcode Deno.HttpClient}.\n   *\n   * @category Fetch\n   * @experimental\n   */\n  export interface CreateHttpClientOptions {\n    /** A list of root certificates that will be used in addition to the\n     * default root certificates to verify the peer's certificate.\n     *\n     * Must be in PEM format. */\n    caCerts?: string[];\n    /** A HTTP proxy to use for new connections. */\n    proxy?: Proxy;\n    /** Sets the maximum number of idle connections per host allowed in the pool. */\n    poolMaxIdlePerHost?: number;\n    /** Set an optional timeout for idle sockets being kept-alive.\n     * Set to false to disable the timeout. */\n    poolIdleTimeout?: number | false;\n    /**\n     * Whether HTTP/1.1 is allowed or not.\n     *\n     * @default {true}\n     */\n    http1?: boolean;\n    /** Whether HTTP/2 is allowed or not.\n     *\n     * @default {true}\n     */\n    http2?: boolean;\n    /** Whether setting the host header is allowed or not.\n     *\n     * @default {false}\n     */\n    allowHost?: boolean;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * The definition of a proxy when specifying\n   * {@linkcode Deno.CreateHttpClientOptions}.\n   *\n   * @category Fetch\n   * @experimental\n   */\n  export interface Proxy {\n    /** The string URL of the proxy server to use. */\n    url: string;\n    /** The basic auth credentials to be used against the proxy server. */\n    basicAuth?: BasicAuth;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Basic authentication credentials to be used with a {@linkcode Deno.Proxy}\n   * server when specifying {@linkcode Deno.CreateHttpClientOptions}.\n   *\n   * @category Fetch\n   * @experimental\n   */\n  export interface BasicAuth {\n    /** The username to be used against the proxy server. */\n    username: string;\n    /** The password to be used against the proxy server. */\n    password: string;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Create a custom HttpClient to use with {@linkcode fetch}. This is an\n   * extension of the web platform Fetch API which allows Deno to use custom\n   * TLS certificates and connect via a proxy while using `fetch()`.\n   *\n   * @example ```ts\n   * const caCert = await Deno.readTextFile(\"./ca.pem\");\n   * const client = Deno.createHttpClient({ caCerts: [ caCert ] });\n   * const response = await fetch(\"https://myserver.com\", { client });\n   * ```\n   *\n   * @example ```ts\n   * const client = Deno.createHttpClient({\n   *   proxy: { url: \"http://myproxy.com:8080\" }\n   * });\n   * const response = await fetch(\"https://myserver.com\", { client });\n   * ```\n   *\n   * @category Fetch\n   * @experimental\n   */\n  export function createHttpClient(\n    options: CreateHttpClientOptions,\n  ): HttpClient;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Create a custom HttpClient to use with {@linkcode fetch}. This is an\n   * extension of the web platform Fetch API which allows Deno to use custom\n   * TLS certificates and connect via a proxy while using `fetch()`.\n   *\n   * @example ```ts\n   * const caCert = await Deno.readTextFile(\"./ca.pem\");\n   * // Load a client key and certificate that we'll use to connect\n   * const key = await Deno.readTextFile(\"./key.key\");\n   * const cert = await Deno.readTextFile(\"./cert.crt\");\n   * const client = Deno.createHttpClient({ caCerts: [ caCert ], key, cert });\n   * const response = await fetch(\"https://myserver.com\", { client });\n   * ```\n   *\n   * @category Fetch\n   * @experimental\n   */\n  export function createHttpClient(\n    options: CreateHttpClientOptions & TlsCertifiedKeyOptions,\n  ): HttpClient;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Represents membership of a IPv4 multicast group.\n   *\n   * @category Network\n   * @experimental\n   */\n  export interface MulticastV4Membership {\n    /** Leaves the multicast group. */\n    leave: () => Promise<void>;\n    /** Sets the multicast loopback option. If enabled, multicast packets will be looped back to the local socket. */\n    setLoopback: (loopback: boolean) => Promise<void>;\n    /** Sets the time-to-live of outgoing multicast packets for this socket. */\n    setTTL: (ttl: number) => Promise<void>;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Represents membership of a IPv6 multicast group.\n   *\n   * @category Network\n   * @experimental\n   */\n  export interface MulticastV6Membership {\n    /** Leaves the multicast group. */\n    leave: () => Promise<void>;\n    /** Sets the multicast loopback option. If enabled, multicast packets will be looped back to the local socket. */\n    setLoopback: (loopback: boolean) => Promise<void>;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A generic transport listener for message-oriented protocols.\n   *\n   * @category Network\n   * @experimental\n   */\n  export interface DatagramConn extends AsyncIterable<[Uint8Array, Addr]> {\n    /** Joins an IPv4 multicast group. */\n    joinMulticastV4(\n      address: string,\n      networkInterface: string,\n    ): Promise<MulticastV4Membership>;\n\n    /** Joins an IPv6 multicast group. */\n    joinMulticastV6(\n      address: string,\n      networkInterface: number,\n    ): Promise<MulticastV6Membership>;\n\n    /** Waits for and resolves to the next message to the instance.\n     *\n     * Messages are received in the format of a tuple containing the data array\n     * and the address information.\n     */\n    receive(p?: Uint8Array): Promise<[Uint8Array, Addr]>;\n    /** Sends a message to the target via the connection. The method resolves\n     * with the number of bytes sent. */\n    send(p: Uint8Array, addr: Addr): Promise<number>;\n    /** Close closes the socket. Any pending message promises will be rejected\n     * with errors. */\n    close(): void;\n    /** Return the address of the instance. */\n    readonly addr: Addr;\n    [Symbol.asyncIterator](): AsyncIterableIterator<[Uint8Array, Addr]>;\n  }\n\n  /**\n   * @category Network\n   * @experimental\n   */\n  export interface TcpListenOptions extends ListenOptions {\n    /** When `true` the SO_REUSEPORT flag will be set on the listener. This\n     * allows multiple processes to listen on the same address and port.\n     *\n     * On Linux this will cause the kernel to distribute incoming connections\n     * across the different processes that are listening on the same address and\n     * port.\n     *\n     * This flag is only supported on Linux. It is silently ignored on other\n     * platforms.\n     *\n     * @default {false} */\n    reusePort?: boolean;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Unstable options which can be set when opening a datagram listener via\n   * {@linkcode Deno.listenDatagram}.\n   *\n   * @category Network\n   * @experimental\n   */\n  export interface UdpListenOptions extends ListenOptions {\n    /** When `true` the specified address will be reused, even if another\n     * process has already bound a socket on it. This effectively steals the\n     * socket from the listener.\n     *\n     * @default {false} */\n    reuseAddress?: boolean;\n\n    /** When `true`, sent multicast packets will be looped back to the local socket.\n     *\n     * @default {false} */\n    loopback?: boolean;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Listen announces on the local transport address.\n   *\n   * ```ts\n   * const listener1 = Deno.listenDatagram({\n   *   port: 80,\n   *   transport: \"udp\"\n   * });\n   * const listener2 = Deno.listenDatagram({\n   *   hostname: \"golang.org\",\n   *   port: 80,\n   *   transport: \"udp\"\n   * });\n   * ```\n   *\n   * Requires `allow-net` permission.\n   *\n   * @tags allow-net\n   * @category Network\n   * @experimental\n   */\n  export function listenDatagram(\n    options: UdpListenOptions & { transport: \"udp\" },\n  ): DatagramConn;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Listen announces on the local transport address.\n   *\n   * ```ts\n   * const listener = Deno.listenDatagram({\n   *   path: \"/foo/bar.sock\",\n   *   transport: \"unixpacket\"\n   * });\n   * ```\n   *\n   * Requires `allow-read` and `allow-write` permission.\n   *\n   * @tags allow-read, allow-write\n   * @category Network\n   * @experimental\n   */\n  export function listenDatagram(\n    options: UnixListenOptions & { transport: \"unixpacket\" },\n  ): DatagramConn;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Acquire an advisory file-system lock for the provided file.\n   *\n   * @param [exclusive=false]\n   * @category File System\n   * @experimental\n   */\n  export function flock(rid: number, exclusive?: boolean): Promise<void>;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Acquire an advisory file-system lock synchronously for the provided file.\n   *\n   * @param [exclusive=false]\n   * @category File System\n   * @experimental\n   */\n  export function flockSync(rid: number, exclusive?: boolean): void;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Release an advisory file-system lock for the provided file.\n   *\n   * @category File System\n   * @experimental\n   */\n  export function funlock(rid: number): Promise<void>;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Release an advisory file-system lock for the provided file synchronously.\n   *\n   * @category File System\n   * @experimental\n   */\n  export function funlockSync(rid: number): void;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Open a new {@linkcode Deno.Kv} connection to persist data.\n   *\n   * When a path is provided, the database will be persisted to disk at that\n   * path. Read and write access to the file is required.\n   *\n   * When no path is provided, the database will be opened in a default path for\n   * the current script. This location is persistent across script runs and is\n   * keyed on the origin storage key (the same key that is used to determine\n   * `localStorage` persistence). More information about the origin storage key\n   * can be found in the Deno Manual.\n   *\n   * @tags allow-read, allow-write\n   * @category Cloud\n   * @experimental\n   */\n  export function openKv(path?: string): Promise<Deno.Kv>;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * CronScheduleExpression is used as the type of `minute`, `hour`,\n   * `dayOfMonth`, `month`, and `dayOfWeek` in {@linkcode CronSchedule}.\n   * @category Cloud\n   * @experimental\n   */\n  export type CronScheduleExpression = number | { exact: number | number[] } | {\n    start?: number;\n    end?: number;\n    every?: number;\n  };\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * CronSchedule is the interface used for JSON format\n   * cron `schedule`.\n   * @category Cloud\n   * @experimental\n   */\n  export interface CronSchedule {\n    minute?: CronScheduleExpression;\n    hour?: CronScheduleExpression;\n    dayOfMonth?: CronScheduleExpression;\n    month?: CronScheduleExpression;\n    dayOfWeek?: CronScheduleExpression;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Create a cron job that will periodically execute the provided handler\n   * callback based on the specified schedule.\n   *\n   * ```ts\n   * Deno.cron(\"sample cron\", \"20 * * * *\", () => {\n   *   console.log(\"cron job executed\");\n   * });\n   * ```\n   *\n   * ```ts\n   * Deno.cron(\"sample cron\", { hour: { every: 6 } }, () => {\n   *   console.log(\"cron job executed\");\n   * });\n   * ```\n   *\n   * `schedule` can be a string in the Unix cron format or in JSON format\n   * as specified by interface {@linkcode CronSchedule}, where time is specified\n   * using UTC time zone.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export function cron(\n    name: string,\n    schedule: string | CronSchedule,\n    handler: () => Promise<void> | void,\n  ): Promise<void>;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Create a cron job that will periodically execute the provided handler\n   * callback based on the specified schedule.\n   *\n   * ```ts\n   * Deno.cron(\"sample cron\", \"20 * * * *\", {\n   *   backoffSchedule: [10, 20]\n   * }, () => {\n   *   console.log(\"cron job executed\");\n   * });\n   * ```\n   *\n   * `schedule` can be a string in the Unix cron format or in JSON format\n   * as specified by interface {@linkcode CronSchedule}, where time is specified\n   * using UTC time zone.\n   *\n   * `backoffSchedule` option can be used to specify the retry policy for failed\n   * executions. Each element in the array represents the number of milliseconds\n   * to wait before retrying the execution. For example, `[1000, 5000, 10000]`\n   * means that a failed execution will be retried at most 3 times, with 1\n   * second, 5 seconds, and 10 seconds delay between each retry.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export function cron(\n    name: string,\n    schedule: string | CronSchedule,\n    options: { backoffSchedule?: number[]; signal?: AbortSignal },\n    handler: () => Promise<void> | void,\n  ): Promise<void>;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A key to be persisted in a {@linkcode Deno.Kv}. A key is a sequence\n   * of {@linkcode Deno.KvKeyPart}s.\n   *\n   * Keys are ordered lexicographically by their parts. The first part is the\n   * most significant, and the last part is the least significant. The order of\n   * the parts is determined by both the type and the value of the part. The\n   * relative significance of the types can be found in documentation for the\n   * {@linkcode Deno.KvKeyPart} type.\n   *\n   * Keys have a maximum size of 2048 bytes serialized. If the size of the key\n   * exceeds this limit, an error will be thrown on the operation that this key\n   * was passed to.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export type KvKey = readonly KvKeyPart[];\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A single part of a {@linkcode Deno.KvKey}. Parts are ordered\n   * lexicographically, first by their type, and within a given type by their\n   * value.\n   *\n   * The ordering of types is as follows:\n   *\n   * 1. `Uint8Array`\n   * 2. `string`\n   * 3. `number`\n   * 4. `bigint`\n   * 5. `boolean`\n   *\n   * Within a given type, the ordering is as follows:\n   *\n   * - `Uint8Array` is ordered by the byte ordering of the array\n   * - `string` is ordered by the byte ordering of the UTF-8 encoding of the\n   *   string\n   * - `number` is ordered following this pattern: `-NaN`\n   *   < `-Infinity` < `-100.0` < `-1.0` < -`0.5` < `-0.0` < `0.0` < `0.5`\n   *   < `1.0` < `100.0` < `Infinity` < `NaN`\n   * - `bigint` is ordered by mathematical ordering, with the largest negative\n   *   number being the least first value, and the largest positive number\n   *   being the last value\n   * - `boolean` is ordered by `false` < `true`\n   *\n   * This means that the part `1.0` (a number) is ordered before the part `2.0`\n   * (also a number), but is greater than the part `0n` (a bigint), because\n   * `1.0` is a number and `0n` is a bigint, and type ordering has precedence\n   * over the ordering of values within a type.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export type KvKeyPart =\n    | Uint8Array\n    | string\n    | number\n    | bigint\n    | boolean\n    | symbol;\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Consistency level of a KV operation.\n   *\n   * - `strong` - This operation must be strongly-consistent.\n   * - `eventual` - Eventually-consistent behavior is allowed.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export type KvConsistencyLevel = \"strong\" | \"eventual\";\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A selector that selects the range of data returned by a list operation on a\n   * {@linkcode Deno.Kv}.\n   *\n   * The selector can either be a prefix selector or a range selector. A prefix\n   * selector selects all keys that start with the given prefix (optionally\n   * starting at a given key). A range selector selects all keys that are\n   * lexicographically between the given start and end keys.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export type KvListSelector =\n    | { prefix: KvKey }\n    | { prefix: KvKey; start: KvKey }\n    | { prefix: KvKey; end: KvKey }\n    | { start: KvKey; end: KvKey };\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A mutation to a key in a {@linkcode Deno.Kv}. A mutation is a\n   * combination of a key, a value, and a type. The type determines how the\n   * mutation is applied to the key.\n   *\n   * - `set` - Sets the value of the key to the given value, overwriting any\n   *   existing value. Optionally an `expireIn` option can be specified to\n   *   set a time-to-live (TTL) for the key. The TTL is specified in\n   *   milliseconds, and the key will be deleted from the database at earliest\n   *   after the specified number of milliseconds have elapsed. Once the\n   *   specified duration has passed, the key may still be visible for some\n   *   additional time. If the `expireIn` option is not specified, the key will\n   *   not expire.\n   * - `delete` - Deletes the key from the database. The mutation is a no-op if\n   *   the key does not exist.\n   * - `sum` - Adds the given value to the existing value of the key. Both the\n   *   value specified in the mutation, and any existing value must be of type\n   *   `Deno.KvU64`. If the key does not exist, the value is set to the given\n   *   value (summed with 0). If the result of the sum overflows an unsigned\n   *   64-bit integer, the result is wrapped around.\n   * - `max` - Sets the value of the key to the maximum of the existing value\n   *   and the given value. Both the value specified in the mutation, and any\n   *   existing value must be of type `Deno.KvU64`. If the key does not exist,\n   *   the value is set to the given value.\n   * - `min` - Sets the value of the key to the minimum of the existing value\n   *   and the given value. Both the value specified in the mutation, and any\n   *   existing value must be of type `Deno.KvU64`. If the key does not exist,\n   *   the value is set to the given value.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export type KvMutation =\n    & { key: KvKey }\n    & (\n      | { type: \"set\"; value: unknown; expireIn?: number }\n      | { type: \"delete\" }\n      | { type: \"sum\"; value: KvU64 }\n      | { type: \"max\"; value: KvU64 }\n      | { type: \"min\"; value: KvU64 }\n    );\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * An iterator over a range of data entries in a {@linkcode Deno.Kv}.\n   *\n   * The cursor getter returns the cursor that can be used to resume the\n   * iteration from the current position in the future.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export class KvListIterator<T> implements AsyncIterableIterator<KvEntry<T>> {\n    /**\n     * Returns the cursor of the current position in the iteration. This cursor\n     * can be used to resume the iteration from the current position in the\n     * future by passing it to the `cursor` option of the `list` method.\n     */\n    get cursor(): string;\n\n    next(): Promise<IteratorResult<KvEntry<T>, undefined>>;\n    [Symbol.asyncIterator](): AsyncIterableIterator<KvEntry<T>>;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A versioned pair of key and value in a {@linkcode Deno.Kv}.\n   *\n   * The `versionstamp` is a string that represents the current version of the\n   * key-value pair. It can be used to perform atomic operations on the KV store\n   * by passing it to the `check` method of a {@linkcode Deno.AtomicOperation}.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export type KvEntry<T> = { key: KvKey; value: T; versionstamp: string };\n\n  /**\n   * **UNSTABLE**: New API, yet to be vetted.\n   *\n   * An optional versioned pair of key and value in a {@linkcode Deno.Kv}.\n   *\n   * This is the same as a {@linkcode KvEntry}, but the `value` and `versionstamp`\n   * fields may be `null` if no value exists for the given key in the KV store.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export type KvEntryMaybe<T> = KvEntry<T> | {\n    key: KvKey;\n    value: null;\n    versionstamp: null;\n  };\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Options for listing key-value pairs in a {@linkcode Deno.Kv}.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export interface KvListOptions {\n    /**\n     * The maximum number of key-value pairs to return. If not specified, all\n     * matching key-value pairs will be returned.\n     */\n    limit?: number;\n    /**\n     * The cursor to resume the iteration from. If not specified, the iteration\n     * will start from the beginning.\n     */\n    cursor?: string;\n    /**\n     * Whether to reverse the order of the returned key-value pairs. If not\n     * specified, the order will be ascending from the start of the range as per\n     * the lexicographical ordering of the keys. If `true`, the order will be\n     * descending from the end of the range.\n     *\n     * The default value is `false`.\n     */\n    reverse?: boolean;\n    /**\n     * The consistency level of the list operation. The default consistency\n     * level is \"strong\". Some use cases can benefit from using a weaker\n     * consistency level. For more information on consistency levels, see the\n     * documentation for {@linkcode Deno.KvConsistencyLevel}.\n     *\n     * List operations are performed in batches (in sizes specified by the\n     * `batchSize` option). The consistency level of the list operation is\n     * applied to each batch individually. This means that while each batch is\n     * guaranteed to be consistent within itself, the entire list operation may\n     * not be consistent across batches because a mutation may be applied to a\n     * key-value pair between batches, in a batch that has already been returned\n     * by the list operation.\n     */\n    consistency?: KvConsistencyLevel;\n    /**\n     * The size of the batches in which the list operation is performed. Larger\n     * or smaller batch sizes may positively or negatively affect the\n     * performance of a list operation depending on the specific use case and\n     * iteration behavior. Slow iterating queries may benefit from using a\n     * smaller batch size for increased overall consistency, while fast\n     * iterating queries may benefit from using a larger batch size for better\n     * performance.\n     *\n     * The default batch size is equal to the `limit` option, or 100 if this is\n     * unset. The maximum value for this option is 500. Larger values will be\n     * clamped.\n     */\n    batchSize?: number;\n  }\n\n  /**\n   * @category Cloud\n   * @experimental\n   */\n  export interface KvCommitResult {\n    ok: true;\n    /** The versionstamp of the value committed to KV. */\n    versionstamp: string;\n  }\n\n  /**\n   * @category Cloud\n   * @experimental\n   */\n  export interface KvCommitError {\n    ok: false;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A check to perform as part of a {@linkcode Deno.AtomicOperation}. The check\n   * will fail if the versionstamp for the key-value pair in the KV store does\n   * not match the given versionstamp. A check with a `null` versionstamp checks\n   * that the key-value pair does not currently exist in the KV store.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export interface AtomicCheck {\n    key: KvKey;\n    versionstamp: string | null;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * An operation on a {@linkcode Deno.Kv} that can be performed\n   * atomically. Atomic operations do not auto-commit, and must be committed\n   * explicitly by calling the `commit` method.\n   *\n   * Atomic operations can be used to perform multiple mutations on the KV store\n   * in a single atomic transaction. They can also be used to perform\n   * conditional mutations by specifying one or more\n   * {@linkcode Deno.AtomicCheck}s that ensure that a mutation is only performed\n   * if the key-value pair in the KV has a specific versionstamp. If any of the\n   * checks fail, the entire operation will fail and no mutations will be made.\n   *\n   * The ordering of mutations is guaranteed to be the same as the ordering of\n   * the mutations specified in the operation. Checks are performed before any\n   * mutations are performed. The ordering of checks is unobservable.\n   *\n   * Atomic operations can be used to implement optimistic locking, where a\n   * mutation is only performed if the key-value pair in the KV store has not\n   * been modified since the last read. This can be done by specifying a check\n   * that ensures that the versionstamp of the key-value pair matches the\n   * versionstamp that was read. If the check fails, the mutation will not be\n   * performed and the operation will fail. One can then retry the read-modify-\n   * write operation in a loop until it succeeds.\n   *\n   * The `commit` method of an atomic operation returns a value indicating\n   * whether checks passed and mutations were performed. If the operation failed\n   * because of a failed check, the return value will be a\n   * {@linkcode Deno.KvCommitError} with an `ok: false` property. If the\n   * operation failed for any other reason (storage error, invalid value, etc.),\n   * an exception will be thrown. If the operation succeeded, the return value\n   * will be a {@linkcode Deno.KvCommitResult} object with a `ok: true` property\n   * and the versionstamp of the value committed to KV.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export class AtomicOperation {\n    /**\n     * Add to the operation a check that ensures that the versionstamp of the\n     * key-value pair in the KV store matches the given versionstamp. If the\n     * check fails, the entire operation will fail and no mutations will be\n     * performed during the commit.\n     */\n    check(...checks: AtomicCheck[]): this;\n    /**\n     * Add to the operation a mutation that performs the specified mutation on\n     * the specified key if all checks pass during the commit. The types and\n     * semantics of all available mutations are described in the documentation\n     * for {@linkcode Deno.KvMutation}.\n     */\n    mutate(...mutations: KvMutation[]): this;\n    /**\n     * Shortcut for creating a `sum` mutation. This method wraps `n` in a\n     * {@linkcode Deno.KvU64}, so the value of `n` must be in the range\n     * `[0, 2^64-1]`.\n     */\n    sum(key: KvKey, n: bigint): this;\n    /**\n     * Shortcut for creating a `min` mutation. This method wraps `n` in a\n     * {@linkcode Deno.KvU64}, so the value of `n` must be in the range\n     * `[0, 2^64-1]`.\n     */\n    min(key: KvKey, n: bigint): this;\n    /**\n     * Shortcut for creating a `max` mutation. This method wraps `n` in a\n     * {@linkcode Deno.KvU64}, so the value of `n` must be in the range\n     * `[0, 2^64-1]`.\n     */\n    max(key: KvKey, n: bigint): this;\n    /**\n     * Add to the operation a mutation that sets the value of the specified key\n     * to the specified value if all checks pass during the commit.\n     *\n     * Optionally an `expireIn` option can be specified to set a time-to-live\n     * (TTL) for the key. The TTL is specified in milliseconds, and the key will\n     * be deleted from the database at earliest after the specified number of\n     * milliseconds have elapsed. Once the specified duration has passed, the\n     * key may still be visible for some additional time. If the `expireIn`\n     * option is not specified, the key will not expire.\n     */\n    set(key: KvKey, value: unknown, options?: { expireIn?: number }): this;\n    /**\n     * Add to the operation a mutation that deletes the specified key if all\n     * checks pass during the commit.\n     */\n    delete(key: KvKey): this;\n    /**\n     * Add to the operation a mutation that enqueues a value into the queue\n     * if all checks pass during the commit.\n     */\n    enqueue(\n      value: unknown,\n      options?: {\n        delay?: number;\n        keysIfUndelivered?: Deno.KvKey[];\n        backoffSchedule?: number[];\n      },\n    ): this;\n    /**\n     * Commit the operation to the KV store. Returns a value indicating whether\n     * checks passed and mutations were performed. If the operation failed\n     * because of a failed check, the return value will be a {@linkcode\n     * Deno.KvCommitError} with an `ok: false` property. If the operation failed\n     * for any other reason (storage error, invalid value, etc.), an exception\n     * will be thrown. If the operation succeeded, the return value will be a\n     * {@linkcode Deno.KvCommitResult} object with a `ok: true` property and the\n     * versionstamp of the value committed to KV.\n     *\n     * If the commit returns `ok: false`, one may create a new atomic operation\n     * with updated checks and mutations and attempt to commit it again. See the\n     * note on optimistic locking in the documentation for\n     * {@linkcode Deno.AtomicOperation}.\n     */\n    commit(): Promise<KvCommitResult | KvCommitError>;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * A key-value database that can be used to store and retrieve data.\n   *\n   * Data is stored as key-value pairs, where the key is a {@linkcode Deno.KvKey}\n   * and the value is an arbitrary structured-serializable JavaScript value.\n   * Keys are ordered lexicographically as described in the documentation for\n   * {@linkcode Deno.KvKey}. Keys are unique within a database, and the last\n   * value set for a given key is the one that is returned when reading the\n   * key. Keys can be deleted from the database, in which case they will no\n   * longer be returned when reading keys.\n   *\n   * Values can be any structured-serializable JavaScript value (objects,\n   * arrays, strings, numbers, etc.). The special value {@linkcode Deno.KvU64}\n   * can be used to store 64-bit unsigned integers in the database. This special\n   * value can not be nested within other objects or arrays. In addition to the\n   * regular database mutation operations, the unsigned 64-bit integer value\n   * also supports `sum`, `max`, and `min` mutations.\n   *\n   * Keys are versioned on write by assigning the key an ever-increasing\n   * \"versionstamp\". The versionstamp represents the version of a key-value pair\n   * in the database at some point in time, and can be used to perform\n   * transactional operations on the database without requiring any locking.\n   * This is enabled by atomic operations, which can have conditions that ensure\n   * that the operation only succeeds if the versionstamp of the key-value pair\n   * matches an expected versionstamp.\n   *\n   * Keys have a maximum length of 2048 bytes after serialization. Values have a\n   * maximum length of 64 KiB after serialization. Serialization of both keys\n   * and values is somewhat opaque, but one can usually assume that the\n   * serialization of any value is about the same length as the resulting string\n   * of a JSON serialization of that same value. If theses limits are exceeded,\n   * an exception will be thrown.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export class Kv implements Disposable {\n    /**\n     * Retrieve the value and versionstamp for the given key from the database\n     * in the form of a {@linkcode Deno.KvEntryMaybe}. If no value exists for\n     * the key, the returned entry will have a `null` value and versionstamp.\n     *\n     * ```ts\n     * const db = await Deno.openKv();\n     * const result = await db.get([\"foo\"]);\n     * result.key; // [\"foo\"]\n     * result.value; // \"bar\"\n     * result.versionstamp; // \"00000000000000010000\"\n     * ```\n     *\n     * The `consistency` option can be used to specify the consistency level\n     * for the read operation. The default consistency level is \"strong\". Some\n     * use cases can benefit from using a weaker consistency level. For more\n     * information on consistency levels, see the documentation for\n     * {@linkcode Deno.KvConsistencyLevel}.\n     */\n    get<T = unknown>(\n      key: KvKey,\n      options?: { consistency?: KvConsistencyLevel },\n    ): Promise<KvEntryMaybe<T>>;\n\n    /**\n     * Retrieve multiple values and versionstamps from the database in the form\n     * of an array of {@linkcode Deno.KvEntryMaybe} objects. The returned array\n     * will have the same length as the `keys` array, and the entries will be in\n     * the same order as the keys. If no value exists for a given key, the\n     * returned entry will have a `null` value and versionstamp.\n     *\n     * ```ts\n     * const db = await Deno.openKv();\n     * const result = await db.getMany([[\"foo\"], [\"baz\"]]);\n     * result[0].key; // [\"foo\"]\n     * result[0].value; // \"bar\"\n     * result[0].versionstamp; // \"00000000000000010000\"\n     * result[1].key; // [\"baz\"]\n     * result[1].value; // null\n     * result[1].versionstamp; // null\n     * ```\n     *\n     * The `consistency` option can be used to specify the consistency level\n     * for the read operation. The default consistency level is \"strong\". Some\n     * use cases can benefit from using a weaker consistency level. For more\n     * information on consistency levels, see the documentation for\n     * {@linkcode Deno.KvConsistencyLevel}.\n     */\n    getMany<T extends readonly unknown[]>(\n      keys: readonly [...{ [K in keyof T]: KvKey }],\n      options?: { consistency?: KvConsistencyLevel },\n    ): Promise<{ [K in keyof T]: KvEntryMaybe<T[K]> }>;\n    /**\n     * Set the value for the given key in the database. If a value already\n     * exists for the key, it will be overwritten.\n     *\n     * ```ts\n     * const db = await Deno.openKv();\n     * await db.set([\"foo\"], \"bar\");\n     * ```\n     *\n     * Optionally an `expireIn` option can be specified to set a time-to-live\n     * (TTL) for the key. The TTL is specified in milliseconds, and the key will\n     * be deleted from the database at earliest after the specified number of\n     * milliseconds have elapsed. Once the specified duration has passed, the\n     * key may still be visible for some additional time. If the `expireIn`\n     * option is not specified, the key will not expire.\n     */\n    set(\n      key: KvKey,\n      value: unknown,\n      options?: { expireIn?: number },\n    ): Promise<KvCommitResult>;\n\n    /**\n     * Delete the value for the given key from the database. If no value exists\n     * for the key, this operation is a no-op.\n     *\n     * ```ts\n     * const db = await Deno.openKv();\n     * await db.delete([\"foo\"]);\n     * ```\n     */\n    delete(key: KvKey): Promise<void>;\n\n    /**\n     * Retrieve a list of keys in the database. The returned list is an\n     * {@linkcode Deno.KvListIterator} which can be used to iterate over the\n     * entries in the database.\n     *\n     * Each list operation must specify a selector which is used to specify the\n     * range of keys to return. The selector can either be a prefix selector, or\n     * a range selector:\n     *\n     * - A prefix selector selects all keys that start with the given prefix of\n     *   key parts. For example, the selector `[\"users\"]` will select all keys\n     *   that start with the prefix `[\"users\"]`, such as `[\"users\", \"alice\"]`\n     *   and `[\"users\", \"bob\"]`. Note that you can not partially match a key\n     *   part, so the selector `[\"users\", \"a\"]` will not match the key\n     *   `[\"users\", \"alice\"]`. A prefix selector may specify a `start` key that\n     *   is used to skip over keys that are lexicographically less than the\n     *   start key.\n     * - A range selector selects all keys that are lexicographically between\n     *   the given start and end keys (including the start, and excluding the\n     *   end). For example, the selector `[\"users\", \"a\"], [\"users\", \"n\"]` will\n     *   select all keys that start with the prefix `[\"users\"]` and have a\n     *   second key part that is lexicographically between `a` and `n`, such as\n     *   `[\"users\", \"alice\"]`, `[\"users\", \"bob\"]`, and `[\"users\", \"mike\"]`, but\n     *   not `[\"users\", \"noa\"]` or `[\"users\", \"zoe\"]`.\n     *\n     * ```ts\n     * const db = await Deno.openKv();\n     * const entries = db.list({ prefix: [\"users\"] });\n     * for await (const entry of entries) {\n     *   entry.key; // [\"users\", \"alice\"]\n     *   entry.value; // { name: \"Alice\" }\n     *   entry.versionstamp; // \"00000000000000010000\"\n     * }\n     * ```\n     *\n     * The `options` argument can be used to specify additional options for the\n     * list operation. See the documentation for {@linkcode Deno.KvListOptions}\n     * for more information.\n     */\n    list<T = unknown>(\n      selector: KvListSelector,\n      options?: KvListOptions,\n    ): KvListIterator<T>;\n\n    /**\n     * Add a value into the database queue to be delivered to the queue\n     * listener via {@linkcode Deno.Kv.listenQueue}.\n     *\n     * ```ts\n     * const db = await Deno.openKv();\n     * await db.enqueue(\"bar\");\n     * ```\n     *\n     * The `delay` option can be used to specify the delay (in milliseconds)\n     * of the value delivery. The default delay is 0, which means immediate\n     * delivery.\n     *\n     * ```ts\n     * const db = await Deno.openKv();\n     * await db.enqueue(\"bar\", { delay: 60000 });\n     * ```\n     *\n     * The `keysIfUndelivered` option can be used to specify the keys to\n     * be set if the value is not successfully delivered to the queue\n     * listener after several attempts. The values are set to the value of\n     * the queued message.\n     *\n     * The `backoffSchedule` option can be used to specify the retry policy for\n     * failed message delivery. Each element in the array represents the number of\n     * milliseconds to wait before retrying the delivery. For example,\n     * `[1000, 5000, 10000]` means that a failed delivery will be retried\n     * at most 3 times, with 1 second, 5 seconds, and 10 seconds delay\n     * between each retry.\n     *\n     * ```ts\n     * const db = await Deno.openKv();\n     * await db.enqueue(\"bar\", {\n     *   keysIfUndelivered: [[\"foo\", \"bar\"]],\n     *   backoffSchedule: [1000, 5000, 10000],\n     * });\n     * ```\n     */\n    enqueue(\n      value: unknown,\n      options?: {\n        delay?: number;\n        keysIfUndelivered?: Deno.KvKey[];\n        backoffSchedule?: number[];\n      },\n    ): Promise<KvCommitResult>;\n\n    /**\n     * Listen for queue values to be delivered from the database queue, which\n     * were enqueued with {@linkcode Deno.Kv.enqueue}. The provided handler\n     * callback is invoked on every dequeued value. A failed callback\n     * invocation is automatically retried multiple times until it succeeds\n     * or until the maximum number of retries is reached.\n     *\n     * ```ts\n     * const db = await Deno.openKv();\n     * db.listenQueue(async (msg: unknown) => {\n     *   await db.set([\"foo\"], msg);\n     * });\n     * ```\n     */\n    // deno-lint-ignore no-explicit-any\n    listenQueue(handler: (value: any) => Promise<void> | void): Promise<void>;\n\n    /**\n     * Create a new {@linkcode Deno.AtomicOperation} object which can be used to\n     * perform an atomic transaction on the database. This does not perform any\n     * operations on the database - the atomic transaction must be committed\n     * explicitly using the {@linkcode Deno.AtomicOperation.commit} method once\n     * all checks and mutations have been added to the operation.\n     */\n    atomic(): AtomicOperation;\n\n    /**\n     * Watch for changes to the given keys in the database. The returned stream\n     * is a {@linkcode ReadableStream} that emits a new value whenever any of\n     * the watched keys change their versionstamp. The emitted value is an array\n     * of {@linkcode Deno.KvEntryMaybe} objects, with the same length and order\n     * as the `keys` array. If no value exists for a given key, the returned\n     * entry will have a `null` value and versionstamp.\n     *\n     * The returned stream does not return every single intermediate state of\n     * the watched keys, but rather only keeps you up to date with the latest\n     * state of the keys. This means that if a key is modified multiple times\n     * quickly, you may not receive a notification for every single change, but\n     * rather only the latest state of the key.\n     *\n     * ```ts\n     * const db = await Deno.openKv();\n     *\n     * const stream = db.watch([[\"foo\"], [\"bar\"]]);\n     * for await (const entries of stream) {\n     *   entries[0].key; // [\"foo\"]\n     *   entries[0].value; // \"bar\"\n     *   entries[0].versionstamp; // \"00000000000000010000\"\n     *   entries[1].key; // [\"bar\"]\n     *   entries[1].value; // null\n     *   entries[1].versionstamp; // null\n     * }\n     * ```\n     *\n     * The `options` argument can be used to specify additional options for the\n     * watch operation. The `raw` option can be used to specify whether a new\n     * value should be emitted whenever a mutation occurs on any of the watched\n     * keys (even if the value of the key does not change, such as deleting a\n     * deleted key), or only when entries have observably changed in some way.\n     * When `raw: true` is used, it is possible for the stream to occasionally\n     * emit values even if no mutations have occurred on any of the watched\n     * keys. The default value for this option is `false`.\n     */\n    watch<T extends readonly unknown[]>(\n      keys: readonly [...{ [K in keyof T]: KvKey }],\n      options?: { raw?: boolean },\n    ): ReadableStream<{ [K in keyof T]: KvEntryMaybe<T[K]> }>;\n\n    /**\n     * Close the database connection. This will prevent any further operations\n     * from being performed on the database, and interrupt any in-flight\n     * operations immediately.\n     */\n    close(): void;\n\n    /**\n     * Get a symbol that represents the versionstamp of the current atomic\n     * operation. This symbol can be used as the last part of a key in\n     * `.set()`, both directly on the `Kv` object and on an `AtomicOperation`\n     * object created from this `Kv` instance.\n     */\n    commitVersionstamp(): symbol;\n\n    [Symbol.dispose](): void;\n  }\n\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Wrapper type for 64-bit unsigned integers for use as values in a\n   * {@linkcode Deno.Kv}.\n   *\n   * @category Cloud\n   * @experimental\n   */\n  export class KvU64 {\n    /** Create a new `KvU64` instance from the given bigint value. If the value\n     * is signed or greater than 64-bits, an error will be thrown. */\n    constructor(value: bigint);\n    /** The value of this unsigned 64-bit integer, represented as a bigint. */\n    readonly value: bigint;\n  }\n\n  /**\n   * A namespace containing runtime APIs available in Jupyter notebooks.\n   *\n   * When accessed outside of Jupyter notebook context an error will be thrown.\n   *\n   * @category Jupyter\n   * @experimental\n   */\n  export namespace jupyter {\n    /**\n     * @category Jupyter\n     * @experimental\n     */\n    export interface DisplayOptions {\n      raw?: boolean;\n      update?: boolean;\n      display_id?: string;\n    }\n\n    /**\n     * @category Jupyter\n     * @experimental\n     */\n    export type VegaObject = {\n      $schema: string;\n      [key: string]: unknown;\n    };\n\n    /**\n     * A collection of supported media types and data for Jupyter frontends.\n     *\n     * @category Jupyter\n     * @experimental\n     */\n    export type MediaBundle = {\n      \"text/plain\"?: string;\n      \"text/html\"?: string;\n      \"image/svg+xml\"?: string;\n      \"text/markdown\"?: string;\n      \"application/javascript\"?: string;\n\n      // Images (per Jupyter spec) must be base64 encoded. We could _allow_\n      // accepting Uint8Array or ArrayBuffer within `display` calls, however we still\n      // must encode them for jupyter.\n      \"image/png\"?: string; // WISH: Uint8Array | ArrayBuffer\n      \"image/jpeg\"?: string; // WISH: Uint8Array | ArrayBuffer\n      \"image/gif\"?: string; // WISH: Uint8Array | ArrayBuffer\n      \"application/pdf\"?: string; // WISH: Uint8Array | ArrayBuffer\n\n      // NOTE: all JSON types must be objects at the top level (no arrays, strings, or other primitives)\n      \"application/json\"?: object;\n      \"application/geo+json\"?: object;\n      \"application/vdom.v1+json\"?: object;\n      \"application/vnd.plotly.v1+json\"?: object;\n      \"application/vnd.vega.v5+json\"?: VegaObject;\n      \"application/vnd.vegalite.v4+json\"?: VegaObject;\n      \"application/vnd.vegalite.v5+json\"?: VegaObject;\n\n      // Must support a catch all for custom media types / mimetypes\n      [key: string]: string | object | undefined;\n    };\n\n    /**\n     * @category Jupyter\n     * @experimental\n     */\n    export const $display: unique symbol;\n\n    /**\n     * @category Jupyter\n     * @experimental\n     */\n    export type Displayable = {\n      [$display]: () => MediaBundle | Promise<MediaBundle>;\n    };\n\n    /**\n     * Display function for Jupyter Deno Kernel.\n     * Mimics the behavior of IPython's `display(obj, raw=True)` function to allow\n     * asynchronous displaying of objects in Jupyter.\n     *\n     * @param obj - The object to be displayed\n     * @param options - Display options with a default { raw: true }\n     * @category Jupyter\n     * @experimental\n     */\n    export function display(obj: unknown, options?: DisplayOptions): void;\n\n    /**\n     * Show Markdown in Jupyter frontends with a tagged template function.\n     *\n     * Takes a template string and returns a displayable object for Jupyter frontends.\n     *\n     * @example\n     * Create a Markdown view.\n     *\n     * ```typescript\n     * const { md } = Deno.jupyter;\n     * md`# Notebooks in TypeScript via Deno ![Deno logo](https://github.com/denoland.png?size=32)\n     *\n     * * TypeScript ${Deno.version.typescript}\n     * * V8 ${Deno.version.v8}\n     * * Deno ${Deno.version.deno}\n     *\n     * Interactive compute with Jupyter _built into Deno_!\n     * `\n     * ```\n     *\n     * @category Jupyter\n     * @experimental\n     */\n    export function md(\n      strings: TemplateStringsArray,\n      ...values: unknown[]\n    ): Displayable;\n\n    /**\n     * Show HTML in Jupyter frontends with a tagged template function.\n     *\n     * Takes a template string and returns a displayable object for Jupyter frontends.\n     *\n     * @example\n     * Create an HTML view.\n     * ```typescript\n     * const { html } = Deno.jupyter;\n     * html`<h1>Hello, world!</h1>`\n     * ```\n     *\n     * @category Jupyter\n     * @experimental\n     */\n    export function html(\n      strings: TemplateStringsArray,\n      ...values: unknown[]\n    ): Displayable;\n\n    /**\n     * SVG Tagged Template Function.\n     *\n     * Takes a template string and returns a displayable object for Jupyter frontends.\n     *\n     * Example usage:\n     *\n     * svg`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n     *      <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"green\" stroke-width=\"4\" fill=\"yellow\" />\n     *    </svg>`\n     *\n     * @category Jupyter\n     * @experimental\n     */\n    export function svg(\n      strings: TemplateStringsArray,\n      ...values: unknown[]\n    ): Displayable;\n\n    /**\n     * Format an object for displaying in Deno\n     *\n     * @param obj - The object to be displayed\n     * @returns MediaBundle\n     *\n     * @category Jupyter\n     * @experimental\n     */\n    export function format(obj: unknown): MediaBundle;\n\n    /**\n     * Broadcast a message on IO pub channel.\n     *\n     * ```\n     * await Deno.jupyter.broadcast(\"display_data\", {\n     *   data: { \"text/html\": \"<b>Processing.</b>\" },\n     *   metadata: {},\n     *   transient: { display_id: \"progress\" }\n     * });\n     *\n     * await new Promise((resolve) => setTimeout(resolve, 500));\n     *\n     * await Deno.jupyter.broadcast(\"update_display_data\", {\n     *   data: { \"text/html\": \"<b>Processing..</b>\" },\n     *   metadata: {},\n     *   transient: { display_id: \"progress\" }\n     * });\n     * ```\n     *\n     * @category Jupyter\n     * @experimental\n     */\n    export function broadcast(\n      msgType: string,\n      content: Record<string, unknown>,\n      extra?: {\n        metadata?: Record<string, unknown>;\n        buffers?: Uint8Array[];\n      },\n    ): Promise<void>;\n  }\n}\n\n/** **UNSTABLE**: New API, yet to be vetted.\n *\n * The [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n * which also supports setting a {@linkcode Deno.HttpClient} which provides a\n * way to connect via proxies and use custom TLS certificates.\n *\n * @tags allow-net, allow-read\n * @category Fetch\n * @experimental\n */\ndeclare function fetch(\n  input: Request | URL | string,\n  init?: RequestInit & { client: Deno.HttpClient },\n): Promise<Response>;\n\n/** **UNSTABLE**: New API, yet to be vetted.\n *\n * @category Workers\n * @experimental\n */\ndeclare interface WorkerOptions {\n  /** **UNSTABLE**: New API, yet to be vetted.\n   *\n   * Configure permissions options to change the level of access the worker will\n   * have. By default it will have no permissions. Note that the permissions\n   * of a worker can't be extended beyond its parent's permissions reach.\n   *\n   * - `\"inherit\"` will take the permissions of the thread the worker is created\n   *   in.\n   * - `\"none\"` will use the default behavior and have no permission\n   * - A list of routes can be provided that are relative to the file the worker\n   *   is created in to limit the access of the worker (read/write permissions\n   *   only)\n   *\n   * Example:\n   *\n   * ```ts\n   * // mod.ts\n   * const worker = new Worker(\n   *   new URL(\"deno_worker.ts\", import.meta.url).href, {\n   *     type: \"module\",\n   *     deno: {\n   *       permissions: {\n   *         read: true,\n   *       },\n   *     },\n   *   }\n   * );\n   * ```\n   */\n  deno?: {\n    /** Set to `\"none\"` to disable all the permissions in the worker. */\n    permissions?: Deno.PermissionOptions;\n  };\n}\n\n/** **UNSTABLE**: New API, yet to be vetted.\n *\n * @category WebSockets\n * @experimental\n */\ndeclare interface WebSocketStreamOptions {\n  protocols?: string[];\n  signal?: AbortSignal;\n  headers?: HeadersInit;\n}\n\n/** **UNSTABLE**: New API, yet to be vetted.\n *\n * @category WebSockets\n * @experimental\n */\ndeclare interface WebSocketConnection {\n  readable: ReadableStream<string | Uint8Array>;\n  writable: WritableStream<string | Uint8Array>;\n  extensions: string;\n  protocol: string;\n}\n\n/** **UNSTABLE**: New API, yet to be vetted.\n *\n * @category WebSockets\n * @experimental\n */\ndeclare interface WebSocketCloseInfo {\n  code?: number;\n  reason?: string;\n}\n\n/** **UNSTABLE**: New API, yet to be vetted.\n *\n * @tags allow-net\n * @category WebSockets\n * @experimental\n */\ndeclare interface WebSocketStream {\n  url: string;\n  opened: Promise<WebSocketConnection>;\n  closed: Promise<WebSocketCloseInfo>;\n  close(closeInfo?: WebSocketCloseInfo): void;\n}\n\n/** **UNSTABLE**: New API, yet to be vetted.\n *\n * @tags allow-net\n * @category WebSockets\n * @experimental\n */\ndeclare var WebSocketStream: {\n  readonly prototype: WebSocketStream;\n  new (url: string, options?: WebSocketStreamOptions): WebSocketStream;\n};\n\n/** **UNSTABLE**: New API, yet to be vetted.\n *\n * @tags allow-net\n * @category WebSockets\n * @experimental\n */\ndeclare interface WebSocketError extends DOMException {\n  readonly closeCode: number;\n  readonly reason: string;\n}\n\n/** **UNSTABLE**: New API, yet to be vetted.\n *\n * @tags allow-net\n * @category WebSockets\n * @experimental\n */\ndeclare var WebSocketError: {\n  readonly prototype: WebSocketError;\n  new (message?: string, init?: WebSocketCloseInfo): WebSocketError;\n};\n\n// Adapted from `tc39/proposal-temporal`: https://github.com/tc39/proposal-temporal/blob/main/polyfill/index.d.ts\n\n/**\n * [Specification](https://tc39.es/proposal-temporal/docs/index.html)\n *\n * @category Temporal\n * @experimental\n */\ndeclare namespace Temporal {\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type ComparisonResult = -1 | 0 | 1;\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type RoundingMode =\n    | \"ceil\"\n    | \"floor\"\n    | \"expand\"\n    | \"trunc\"\n    | \"halfCeil\"\n    | \"halfFloor\"\n    | \"halfExpand\"\n    | \"halfTrunc\"\n    | \"halfEven\";\n\n  /**\n   * Options for assigning fields using `with()` or entire objects with\n   * `from()`.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export type AssignmentOptions = {\n    /**\n     * How to deal with out-of-range values\n     *\n     * - In `'constrain'` mode, out-of-range values are clamped to the nearest\n     *   in-range value.\n     * - In `'reject'` mode, out-of-range values will cause the function to\n     *   throw a RangeError.\n     *\n     * The default is `'constrain'`.\n     */\n    overflow?: \"constrain\" | \"reject\";\n  };\n\n  /**\n   * Options for assigning fields using `Duration.prototype.with()` or entire\n   * objects with `Duration.from()`, and for arithmetic with\n   * `Duration.prototype.add()` and `Duration.prototype.subtract()`.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export type DurationOptions = {\n    /**\n     * How to deal with out-of-range values\n     *\n     * - In `'constrain'` mode, out-of-range values are clamped to the nearest\n     *   in-range value.\n     * - In `'balance'` mode, out-of-range values are resolved by balancing them\n     *   with the next highest unit.\n     *\n     * The default is `'constrain'`.\n     */\n    overflow?: \"constrain\" | \"balance\";\n  };\n\n  /**\n   * Options for conversions of `Temporal.PlainDateTime` to `Temporal.Instant`\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export type ToInstantOptions = {\n    /**\n     * Controls handling of invalid or ambiguous times caused by time zone\n     * offset changes like Daylight Saving time (DST) transitions.\n     *\n     * This option is only relevant if a `DateTime` value does not exist in the\n     * destination time zone (e.g. near \"Spring Forward\" DST transitions), or\n     * exists more than once (e.g. near \"Fall Back\" DST transitions).\n     *\n     * In case of ambiguous or nonexistent times, this option controls what\n     * exact time to return:\n     * - `'compatible'`: Equivalent to `'earlier'` for backward transitions like\n     *   the start of DST in the Spring, and `'later'` for forward transitions\n     *   like the end of DST in the Fall. This matches the behavior of legacy\n     *   `Date`, of libraries like moment.js, Luxon, or date-fns, and of\n     *   cross-platform standards like [RFC 5545\n     *   (iCalendar)](https://tools.ietf.org/html/rfc5545).\n     * - `'earlier'`: The earlier time of two possible times\n     * - `'later'`: The later of two possible times\n     * - `'reject'`: Throw a RangeError instead\n     *\n     * The default is `'compatible'`.\n     */\n    disambiguation?: \"compatible\" | \"earlier\" | \"later\" | \"reject\";\n  };\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type OffsetDisambiguationOptions = {\n    /**\n     * Time zone definitions can change. If an application stores data about\n     * events in the future, then stored data about future events may become\n     * ambiguous, for example if a country permanently abolishes DST. The\n     * `offset` option controls this unusual case.\n     *\n     * - `'use'` always uses the offset (if it's provided) to calculate the\n     *   instant. This ensures that the result will match the instant that was\n     *   originally stored, even if local clock time is different.\n     * - `'prefer'` uses the offset if it's valid for the date/time in this time\n     *   zone, but if it's not valid then the time zone will be used as a\n     *   fallback to calculate the instant.\n     * - `'ignore'` will disregard any provided offset. Instead, the time zone\n     *    and date/time value are used to calculate the instant. This will keep\n     *    local clock time unchanged but may result in a different real-world\n     *    instant.\n     * - `'reject'` acts like `'prefer'`, except it will throw a RangeError if\n     *   the offset is not valid for the given time zone identifier and\n     *   date/time value.\n     *\n     * If the ISO string ends in 'Z' then this option is ignored because there\n     * is no possibility of ambiguity.\n     *\n     * If a time zone offset is not present in the input, then this option is\n     * ignored because the time zone will always be used to calculate the\n     * offset.\n     *\n     * If the offset is not used, and if the date/time and time zone don't\n     * uniquely identify a single instant, then the `disambiguation` option will\n     * be used to choose the correct instant. However, if the offset is used\n     * then the `disambiguation` option will be ignored.\n     */\n    offset?: \"use\" | \"prefer\" | \"ignore\" | \"reject\";\n  };\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type ZonedDateTimeAssignmentOptions = Partial<\n    AssignmentOptions & ToInstantOptions & OffsetDisambiguationOptions\n  >;\n\n  /**\n   * Options for arithmetic operations like `add()` and `subtract()`\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export type ArithmeticOptions = {\n    /**\n     * Controls handling of out-of-range arithmetic results.\n     *\n     * If a result is out of range, then `'constrain'` will clamp the result to\n     * the allowed range, while `'reject'` will throw a RangeError.\n     *\n     * The default is `'constrain'`.\n     */\n    overflow?: \"constrain\" | \"reject\";\n  };\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type DateUnit = \"year\" | \"month\" | \"week\" | \"day\";\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type TimeUnit =\n    | \"hour\"\n    | \"minute\"\n    | \"second\"\n    | \"millisecond\"\n    | \"microsecond\"\n    | \"nanosecond\";\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type DateTimeUnit = DateUnit | TimeUnit;\n\n  /**\n   * When the name of a unit is provided to a Temporal API as a string, it is\n   * usually singular, e.g. 'day' or 'hour'. But plural unit names like 'days'\n   * or 'hours' are also accepted.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export type PluralUnit<T extends DateTimeUnit> = {\n    year: \"years\";\n    month: \"months\";\n    week: \"weeks\";\n    day: \"days\";\n    hour: \"hours\";\n    minute: \"minutes\";\n    second: \"seconds\";\n    millisecond: \"milliseconds\";\n    microsecond: \"microseconds\";\n    nanosecond: \"nanoseconds\";\n  }[T];\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type LargestUnit<T extends DateTimeUnit> = \"auto\" | T | PluralUnit<T>;\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type SmallestUnit<T extends DateTimeUnit> = T | PluralUnit<T>;\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type TotalUnit<T extends DateTimeUnit> = T | PluralUnit<T>;\n\n  /**\n   * Options for outputting precision in toString() on types with seconds\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export type ToStringPrecisionOptions = {\n    fractionalSecondDigits?: \"auto\" | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;\n    smallestUnit?: SmallestUnit<\n      \"minute\" | \"second\" | \"millisecond\" | \"microsecond\" | \"nanosecond\"\n    >;\n\n    /**\n     * Controls how rounding is performed:\n     * - `halfExpand`: Round to the nearest of the values allowed by\n     *   `roundingIncrement` and `smallestUnit`. When there is a tie, round up.\n     *   This mode is the default.\n     * - `ceil`: Always round up, towards the end of time.\n     * - `trunc`: Always round down, towards the beginning of time.\n     * - `floor`: Also round down, towards the beginning of time. This mode acts\n     *   the same as `trunc`, but it's included for consistency with\n     *   `Temporal.Duration.round()` where negative values are allowed and\n     *   `trunc` rounds towards zero, unlike `floor` which rounds towards\n     *   negative infinity which is usually unexpected. For this reason, `trunc`\n     *   is recommended for most use cases.\n     */\n    roundingMode?: RoundingMode;\n  };\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type ShowCalendarOption = {\n    calendarName?: \"auto\" | \"always\" | \"never\" | \"critical\";\n  };\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type CalendarTypeToStringOptions = Partial<\n    ToStringPrecisionOptions & ShowCalendarOption\n  >;\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type ZonedDateTimeToStringOptions = Partial<\n    CalendarTypeToStringOptions & {\n      timeZoneName?: \"auto\" | \"never\" | \"critical\";\n      offset?: \"auto\" | \"never\";\n    }\n  >;\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type InstantToStringOptions = Partial<\n    ToStringPrecisionOptions & {\n      timeZone: TimeZoneLike;\n    }\n  >;\n\n  /**\n   * Options to control the result of `until()` and `since()` methods in\n   * `Temporal` types.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export interface DifferenceOptions<T extends DateTimeUnit> {\n    /**\n     * The unit to round to. For example, to round to the nearest minute, use\n     * `smallestUnit: 'minute'`. This property is optional for `until()` and\n     * `since()`, because those methods default behavior is not to round.\n     * However, the same property is required for `round()`.\n     */\n    smallestUnit?: SmallestUnit<T>;\n\n    /**\n     * The largest unit to allow in the resulting `Temporal.Duration` object.\n     *\n     * Larger units will be \"balanced\" into smaller units. For example, if\n     * `largestUnit` is `'minute'` then a two-hour duration will be output as a\n     * 120-minute duration.\n     *\n     * Valid values may include `'year'`, `'month'`, `'week'`, `'day'`,\n     * `'hour'`, `'minute'`, `'second'`, `'millisecond'`, `'microsecond'`,\n     * `'nanosecond'` and `'auto'`, although some types may throw an exception\n     * if a value is used that would produce an invalid result. For example,\n     * `hours` is not accepted by `Temporal.PlainDate.prototype.since()`.\n     *\n     * The default is always `'auto'`, though the meaning of this depends on the\n     * type being used.\n     */\n    largestUnit?: LargestUnit<T>;\n\n    /**\n     * Allows rounding to an integer number of units. For example, to round to\n     * increments of a half hour, use `{ smallestUnit: 'minute',\n     * roundingIncrement: 30 }`.\n     */\n    roundingIncrement?: number;\n\n    /**\n     * Controls how rounding is performed:\n     * - `halfExpand`: Round to the nearest of the values allowed by\n     *   `roundingIncrement` and `smallestUnit`. When there is a tie, round away\n     *   from zero like `ceil` for positive durations and like `floor` for\n     *   negative durations.\n     * - `ceil`: Always round up, towards the end of time.\n     * - `trunc`: Always round down, towards the beginning of time. This mode is\n     *   the default.\n     * - `floor`: Also round down, towards the beginning of time. This mode acts\n     *   the same as `trunc`, but it's included for consistency with\n     *   `Temporal.Duration.round()` where negative values are allowed and\n     *   `trunc` rounds towards zero, unlike `floor` which rounds towards\n     *   negative infinity which is usually unexpected. For this reason, `trunc`\n     *   is recommended for most use cases.\n     */\n    roundingMode?: RoundingMode;\n  }\n\n  /**\n   * `round` methods take one required parameter. If a string is provided, the\n   * resulting `Temporal.Duration` object will be rounded to that unit. If an\n   * object is provided, its `smallestUnit` property is required while other\n   * properties are optional. A string is treated the same as an object whose\n   * `smallestUnit` property value is that string.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export type RoundTo<T extends DateTimeUnit> =\n    | SmallestUnit<T>\n    | {\n      /**\n       * The unit to round to. For example, to round to the nearest minute,\n       * use `smallestUnit: 'minute'`. This option is required. Note that the\n       * same-named property is optional when passed to `until` or `since`\n       * methods, because those methods do no rounding by default.\n       */\n      smallestUnit: SmallestUnit<T>;\n\n      /**\n       * Allows rounding to an integer number of units. For example, to round to\n       * increments of a half hour, use `{ smallestUnit: 'minute',\n       * roundingIncrement: 30 }`.\n       */\n      roundingIncrement?: number;\n\n      /**\n       * Controls how rounding is performed:\n       * - `halfExpand`: Round to the nearest of the values allowed by\n       *   `roundingIncrement` and `smallestUnit`. When there is a tie, round up.\n       *   This mode is the default.\n       * - `ceil`: Always round up, towards the end of time.\n       * - `trunc`: Always round down, towards the beginning of time.\n       * - `floor`: Also round down, towards the beginning of time. This mode acts\n       *   the same as `trunc`, but it's included for consistency with\n       *   `Temporal.Duration.round()` where negative values are allowed and\n       *   `trunc` rounds towards zero, unlike `floor` which rounds towards\n       *   negative infinity which is usually unexpected. For this reason, `trunc`\n       *   is recommended for most use cases.\n       */\n      roundingMode?: RoundingMode;\n    };\n\n  /**\n   * The `round` method of the `Temporal.Duration` accepts one required\n   * parameter. If a string is provided, the resulting `Temporal.Duration`\n   * object will be rounded to that unit. If an object is provided, the\n   * `smallestUnit` and/or `largestUnit` property is required, while other\n   * properties are optional. A string parameter is treated the same as an\n   * object whose `smallestUnit` property value is that string.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export type DurationRoundTo =\n    | SmallestUnit<DateTimeUnit>\n    | (\n      & (\n        | {\n          /**\n           * The unit to round to. For example, to round to the nearest\n           * minute, use `smallestUnit: 'minute'`. This property is normally\n           * required, but is optional if `largestUnit` is provided and not\n           * undefined.\n           */\n          smallestUnit: SmallestUnit<DateTimeUnit>;\n\n          /**\n           * The largest unit to allow in the resulting `Temporal.Duration`\n           * object.\n           *\n           * Larger units will be \"balanced\" into smaller units. For example,\n           * if `largestUnit` is `'minute'` then a two-hour duration will be\n           * output as a 120-minute duration.\n           *\n           * Valid values include `'year'`, `'month'`, `'week'`, `'day'`,\n           * `'hour'`, `'minute'`, `'second'`, `'millisecond'`,\n           * `'microsecond'`, `'nanosecond'` and `'auto'`.\n           *\n           * The default is `'auto'`, which means \"the largest nonzero unit in\n           * the input duration\". This default prevents expanding durations to\n           * larger units unless the caller opts into this behavior.\n           *\n           * If `smallestUnit` is larger, then `smallestUnit` will be used as\n           * `largestUnit`, superseding a caller-supplied or default value.\n           */\n          largestUnit?: LargestUnit<DateTimeUnit>;\n        }\n        | {\n          /**\n           * The unit to round to. For example, to round to the nearest\n           * minute, use `smallestUnit: 'minute'`. This property is normally\n           * required, but is optional if `largestUnit` is provided and not\n           * undefined.\n           */\n          smallestUnit?: SmallestUnit<DateTimeUnit>;\n\n          /**\n           * The largest unit to allow in the resulting `Temporal.Duration`\n           * object.\n           *\n           * Larger units will be \"balanced\" into smaller units. For example,\n           * if `largestUnit` is `'minute'` then a two-hour duration will be\n           * output as a 120-minute duration.\n           *\n           * Valid values include `'year'`, `'month'`, `'week'`, `'day'`,\n           * `'hour'`, `'minute'`, `'second'`, `'millisecond'`,\n           * `'microsecond'`, `'nanosecond'` and `'auto'`.\n           *\n           * The default is `'auto'`, which means \"the largest nonzero unit in\n           * the input duration\". This default prevents expanding durations to\n           * larger units unless the caller opts into this behavior.\n           *\n           * If `smallestUnit` is larger, then `smallestUnit` will be used as\n           * `largestUnit`, superseding a caller-supplied or default value.\n           */\n          largestUnit: LargestUnit<DateTimeUnit>;\n        }\n      )\n      & {\n        /**\n         * Allows rounding to an integer number of units. For example, to round\n         * to increments of a half hour, use `{ smallestUnit: 'minute',\n         * roundingIncrement: 30 }`.\n         */\n        roundingIncrement?: number;\n\n        /**\n         * Controls how rounding is performed:\n         * - `halfExpand`: Round to the nearest of the values allowed by\n         *   `roundingIncrement` and `smallestUnit`. When there is a tie, round\n         *   away from zero like `ceil` for positive durations and like `floor`\n         *   for negative durations. This mode is the default.\n         * - `ceil`: Always round towards positive infinity. For negative\n         *   durations this option will decrease the absolute value of the\n         *   duration which may be unexpected. To round away from zero, use\n         *   `ceil` for positive durations and `floor` for negative durations.\n         * - `trunc`: Always round down towards zero.\n         * - `floor`: Always round towards negative infinity. This mode acts the\n         *   same as `trunc` for positive durations but for negative durations\n         *   it will increase the absolute value of the result which may be\n         *   unexpected. For this reason, `trunc` is recommended for most \"round\n         *   down\" use cases.\n         */\n        roundingMode?: RoundingMode;\n\n        /**\n         * The starting point to use for rounding and conversions when\n         * variable-length units (years, months, weeks depending on the\n         * calendar) are involved. This option is required if any of the\n         * following are true:\n         * - `unit` is `'week'` or larger units\n         * - `this` has a nonzero value for `weeks` or larger units\n         *\n         * This value must be either a `Temporal.PlainDateTime`, a\n         * `Temporal.ZonedDateTime`, or a string or object value that can be\n         * passed to `from()` of those types. Examples:\n         * - `'2020-01-01T00:00-08:00[America/Los_Angeles]'`\n         * - `'2020-01-01'`\n         * - `Temporal.PlainDate.from('2020-01-01')`\n         *\n         * `Temporal.ZonedDateTime` will be tried first because it's more\n         * specific, with `Temporal.PlainDateTime` as a fallback.\n         *\n         * If the value resolves to a `Temporal.ZonedDateTime`, then operation\n         * will adjust for DST and other time zone transitions. Otherwise\n         * (including if this option is omitted), then the operation will ignore\n         * time zone transitions and all days will be assumed to be 24 hours\n         * long.\n         */\n        relativeTo?:\n          | Temporal.PlainDateTime\n          | Temporal.ZonedDateTime\n          | PlainDateTimeLike\n          | ZonedDateTimeLike\n          | string;\n      }\n    );\n\n  /**\n   * Options to control behavior of `Duration.prototype.total()`\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export type DurationTotalOf =\n    | TotalUnit<DateTimeUnit>\n    | {\n      /**\n       * The unit to convert the duration to. This option is required.\n       */\n      unit: TotalUnit<DateTimeUnit>;\n\n      /**\n       * The starting point to use when variable-length units (years, months,\n       * weeks depending on the calendar) are involved. This option is required if\n       * any of the following are true:\n       * - `unit` is `'week'` or larger units\n       * - `this` has a nonzero value for `weeks` or larger units\n       *\n       * This value must be either a `Temporal.PlainDateTime`, a\n       * `Temporal.ZonedDateTime`, or a string or object value that can be passed\n       * to `from()` of those types. Examples:\n       * - `'2020-01-01T00:00-08:00[America/Los_Angeles]'`\n       * - `'2020-01-01'`\n       * - `Temporal.PlainDate.from('2020-01-01')`\n       *\n       * `Temporal.ZonedDateTime` will be tried first because it's more\n       * specific, with `Temporal.PlainDateTime` as a fallback.\n       *\n       * If the value resolves to a `Temporal.ZonedDateTime`, then operation will\n       * adjust for DST and other time zone transitions. Otherwise (including if\n       * this option is omitted), then the operation will ignore time zone\n       * transitions and all days will be assumed to be 24 hours long.\n       */\n      relativeTo?:\n        | Temporal.ZonedDateTime\n        | Temporal.PlainDateTime\n        | ZonedDateTimeLike\n        | PlainDateTimeLike\n        | string;\n    };\n\n  /**\n   * Options to control behavior of `Duration.compare()`, `Duration.add()`, and\n   * `Duration.subtract()`\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export interface DurationArithmeticOptions {\n    /**\n     * The starting point to use when variable-length units (years, months,\n     * weeks depending on the calendar) are involved. This option is required if\n     * either of the durations has a nonzero value for `weeks` or larger units.\n     *\n     * This value must be either a `Temporal.PlainDateTime`, a\n     * `Temporal.ZonedDateTime`, or a string or object value that can be passed\n     * to `from()` of those types. Examples:\n     * - `'2020-01-01T00:00-08:00[America/Los_Angeles]'`\n     * - `'2020-01-01'`\n     * - `Temporal.PlainDate.from('2020-01-01')`\n     *\n     * `Temporal.ZonedDateTime` will be tried first because it's more\n     * specific, with `Temporal.PlainDateTime` as a fallback.\n     *\n     * If the value resolves to a `Temporal.ZonedDateTime`, then operation will\n     * adjust for DST and other time zone transitions. Otherwise (including if\n     * this option is omitted), then the operation will ignore time zone\n     * transitions and all days will be assumed to be 24 hours long.\n     */\n    relativeTo?:\n      | Temporal.ZonedDateTime\n      | Temporal.PlainDateTime\n      | ZonedDateTimeLike\n      | PlainDateTimeLike\n      | string;\n  }\n\n  /**\n   * Options to control behaviour of `ZonedDateTime.prototype.getTimeZoneTransition()`\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export type TransitionDirection = \"next\" | \"previous\" | {\n    direction: \"next\" | \"previous\";\n  };\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type DurationLike = {\n    years?: number;\n    months?: number;\n    weeks?: number;\n    days?: number;\n    hours?: number;\n    minutes?: number;\n    seconds?: number;\n    milliseconds?: number;\n    microseconds?: number;\n    nanoseconds?: number;\n  };\n\n  /**\n   * A `Temporal.Duration` represents an immutable duration of time which can be\n   * used in date/time arithmetic.\n   *\n   * See https://tc39.es/proposal-temporal/docs/duration.html for more details.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export class Duration {\n    static from(\n      item: Temporal.Duration | DurationLike | string,\n    ): Temporal.Duration;\n    static compare(\n      one: Temporal.Duration | DurationLike | string,\n      two: Temporal.Duration | DurationLike | string,\n      options?: DurationArithmeticOptions,\n    ): ComparisonResult;\n    constructor(\n      years?: number,\n      months?: number,\n      weeks?: number,\n      days?: number,\n      hours?: number,\n      minutes?: number,\n      seconds?: number,\n      milliseconds?: number,\n      microseconds?: number,\n      nanoseconds?: number,\n    );\n    readonly sign: -1 | 0 | 1;\n    readonly blank: boolean;\n    readonly years: number;\n    readonly months: number;\n    readonly weeks: number;\n    readonly days: number;\n    readonly hours: number;\n    readonly minutes: number;\n    readonly seconds: number;\n    readonly milliseconds: number;\n    readonly microseconds: number;\n    readonly nanoseconds: number;\n    negated(): Temporal.Duration;\n    abs(): Temporal.Duration;\n    with(durationLike: DurationLike): Temporal.Duration;\n    add(\n      other: Temporal.Duration | DurationLike | string,\n      options?: DurationArithmeticOptions,\n    ): Temporal.Duration;\n    subtract(\n      other: Temporal.Duration | DurationLike | string,\n      options?: DurationArithmeticOptions,\n    ): Temporal.Duration;\n    round(roundTo: DurationRoundTo): Temporal.Duration;\n    total(totalOf: DurationTotalOf): number;\n    toLocaleString(\n      locales?: string | string[],\n      options?: Intl.DateTimeFormatOptions,\n    ): string;\n    toJSON(): string;\n    toString(options?: ToStringPrecisionOptions): string;\n    valueOf(): never;\n    readonly [Symbol.toStringTag]: \"Temporal.Duration\";\n  }\n\n  /**\n   * A `Temporal.Instant` is an exact point in time, with a precision in\n   * nanoseconds. No time zone or calendar information is present. Therefore,\n   * `Temporal.Instant` has no concept of days, months, or even hours.\n   *\n   * For convenience of interoperability, it internally uses nanoseconds since\n   * the {@link https://en.wikipedia.org/wiki/Unix_time|Unix epoch} (midnight\n   * UTC on January 1, 1970). However, a `Temporal.Instant` can be created from\n   * any of several expressions that refer to a single point in time, including\n   * an {@link https://en.wikipedia.org/wiki/ISO_8601|ISO 8601 string} with a\n   * time zone offset such as '2020-01-23T17:04:36.491865121-08:00'.\n   *\n   * See https://tc39.es/proposal-temporal/docs/instant.html for more details.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export class Instant {\n    static fromEpochMilliseconds(epochMilliseconds: number): Temporal.Instant;\n    static fromEpochNanoseconds(epochNanoseconds: bigint): Temporal.Instant;\n    static from(item: Temporal.Instant | string): Temporal.Instant;\n    static compare(\n      one: Temporal.Instant | string,\n      two: Temporal.Instant | string,\n    ): ComparisonResult;\n    constructor(epochNanoseconds: bigint);\n    readonly epochMilliseconds: number;\n    readonly epochNanoseconds: bigint;\n    equals(other: Temporal.Instant | string): boolean;\n    add(\n      durationLike:\n        | Omit<\n          Temporal.Duration | DurationLike,\n          \"years\" | \"months\" | \"weeks\" | \"days\"\n        >\n        | string,\n    ): Temporal.Instant;\n    subtract(\n      durationLike:\n        | Omit<\n          Temporal.Duration | DurationLike,\n          \"years\" | \"months\" | \"weeks\" | \"days\"\n        >\n        | string,\n    ): Temporal.Instant;\n    until(\n      other: Temporal.Instant | string,\n      options?: DifferenceOptions<\n        | \"hour\"\n        | \"minute\"\n        | \"second\"\n        | \"millisecond\"\n        | \"microsecond\"\n        | \"nanosecond\"\n      >,\n    ): Temporal.Duration;\n    since(\n      other: Temporal.Instant | string,\n      options?: DifferenceOptions<\n        | \"hour\"\n        | \"minute\"\n        | \"second\"\n        | \"millisecond\"\n        | \"microsecond\"\n        | \"nanosecond\"\n      >,\n    ): Temporal.Duration;\n    round(\n      roundTo: RoundTo<\n        | \"hour\"\n        | \"minute\"\n        | \"second\"\n        | \"millisecond\"\n        | \"microsecond\"\n        | \"nanosecond\"\n      >,\n    ): Temporal.Instant;\n    toZonedDateTime(\n      calendarAndTimeZone: { timeZone: TimeZoneLike; calendar: CalendarLike },\n    ): Temporal.ZonedDateTime;\n    toZonedDateTimeISO(tzLike: TimeZoneLike): Temporal.ZonedDateTime;\n    toLocaleString(\n      locales?: string | string[],\n      options?: Intl.DateTimeFormatOptions,\n    ): string;\n    toJSON(): string;\n    toString(options?: InstantToStringOptions): string;\n    valueOf(): never;\n    readonly [Symbol.toStringTag]: \"Temporal.Instant\";\n  }\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type YearOrEraAndEraYear = { era: string; eraYear: number } | {\n    year: number;\n  };\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type MonthCodeOrMonthAndYear =\n    | (YearOrEraAndEraYear & { month: number })\n    | {\n      monthCode: string;\n    };\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type MonthOrMonthCode = { month: number } | { monthCode: string };\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export interface CalendarProtocol {\n    id: string;\n    year(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | PlainDateLike\n        | string,\n    ): number;\n    month(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | Temporal.PlainMonthDay\n        | PlainDateLike\n        | string,\n    ): number;\n    monthCode(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | Temporal.PlainMonthDay\n        | PlainDateLike\n        | string,\n    ): string;\n    day(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainMonthDay\n        | PlainDateLike\n        | string,\n    ): number;\n    era(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): string | undefined;\n    eraYear(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): number | undefined;\n    dayOfWeek(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): number;\n    dayOfYear(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): number;\n    weekOfYear(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): number | undefined;\n    yearOfWeek(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): number | undefined;\n    daysInWeek(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): number;\n    daysInMonth(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | PlainDateLike\n        | string,\n    ): number;\n    daysInYear(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | PlainDateLike\n        | string,\n    ): number;\n    monthsInYear(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | PlainDateLike\n        | string,\n    ): number;\n    inLeapYear(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | PlainDateLike\n        | string,\n    ): boolean;\n    dateFromFields(\n      fields: YearOrEraAndEraYear & MonthOrMonthCode & { day: number },\n      options?: AssignmentOptions,\n    ): Temporal.PlainDate;\n    yearMonthFromFields(\n      fields: YearOrEraAndEraYear & MonthOrMonthCode,\n      options?: AssignmentOptions,\n    ): Temporal.PlainYearMonth;\n    monthDayFromFields(\n      fields: MonthCodeOrMonthAndYear & { day: number },\n      options?: AssignmentOptions,\n    ): Temporal.PlainMonthDay;\n    dateAdd(\n      date: Temporal.PlainDate | PlainDateLike | string,\n      duration: Temporal.Duration | DurationLike | string,\n      options?: ArithmeticOptions,\n    ): Temporal.PlainDate;\n    dateUntil(\n      one: Temporal.PlainDate | PlainDateLike | string,\n      two: Temporal.PlainDate | PlainDateLike | string,\n      options?: DifferenceOptions<\"year\" | \"month\" | \"week\" | \"day\">,\n    ): Temporal.Duration;\n    fields(fields: Iterable<string>): Iterable<string>;\n    mergeFields(\n      fields: Record<string, unknown>,\n      additionalFields: Record<string, unknown>,\n    ): Record<string, unknown>;\n    toString?(): string;\n    toJSON?(): string;\n  }\n\n  /**\n   * Any of these types can be passed to Temporal methods instead of a Temporal.Calendar.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export type CalendarLike =\n    | string\n    | CalendarProtocol\n    | ZonedDateTime\n    | PlainDateTime\n    | PlainDate\n    | PlainYearMonth\n    | PlainMonthDay;\n\n  /**\n   * A `Temporal.Calendar` is a representation of a calendar system. It includes\n   * information about how many days are in each year, how many months are in\n   * each year, how many days are in each month, and how to do arithmetic in\n   * that calendar system.\n   *\n   * See https://tc39.es/proposal-temporal/docs/calendar.html for more details.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export class Calendar implements CalendarProtocol {\n    static from(item: CalendarLike): Temporal.Calendar | CalendarProtocol;\n    constructor(calendarIdentifier: string);\n    readonly id: string;\n    year(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | PlainDateLike\n        | string,\n    ): number;\n    month(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | Temporal.PlainMonthDay\n        | PlainDateLike\n        | string,\n    ): number;\n    monthCode(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | Temporal.PlainMonthDay\n        | PlainDateLike\n        | string,\n    ): string;\n    day(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainMonthDay\n        | PlainDateLike\n        | string,\n    ): number;\n    era(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): string | undefined;\n    eraYear(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): number | undefined;\n    dayOfWeek(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): number;\n    dayOfYear(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): number;\n    weekOfYear(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): number | undefined;\n    yearOfWeek(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): number | undefined;\n    daysInWeek(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | PlainDateLike\n        | string,\n    ): number;\n    daysInMonth(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | PlainDateLike\n        | string,\n    ): number;\n    daysInYear(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | PlainDateLike\n        | string,\n    ): number;\n    monthsInYear(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | PlainDateLike\n        | string,\n    ): number;\n    inLeapYear(\n      date:\n        | Temporal.PlainDate\n        | Temporal.PlainDateTime\n        | Temporal.PlainYearMonth\n        | PlainDateLike\n        | string,\n    ): boolean;\n    dateFromFields(\n      fields: YearOrEraAndEraYear & MonthOrMonthCode & { day: number },\n      options?: AssignmentOptions,\n    ): Temporal.PlainDate;\n    yearMonthFromFields(\n      fields: YearOrEraAndEraYear & MonthOrMonthCode,\n      options?: AssignmentOptions,\n    ): Temporal.PlainYearMonth;\n    monthDayFromFields(\n      fields: MonthCodeOrMonthAndYear & { day: number },\n      options?: AssignmentOptions,\n    ): Temporal.PlainMonthDay;\n    dateAdd(\n      date: Temporal.PlainDate | PlainDateLike | string,\n      duration: Temporal.Duration | DurationLike | string,\n      options?: ArithmeticOptions,\n    ): Temporal.PlainDate;\n    dateUntil(\n      one: Temporal.PlainDate | PlainDateLike | string,\n      two: Temporal.PlainDate | PlainDateLike | string,\n      options?: DifferenceOptions<\"year\" | \"month\" | \"week\" | \"day\">,\n    ): Temporal.Duration;\n    fields(fields: Iterable<string>): string[];\n    mergeFields(\n      fields: Record<string, unknown>,\n      additionalFields: Record<string, unknown>,\n    ): Record<string, unknown>;\n    toString(): string;\n    toJSON(): string;\n    readonly [Symbol.toStringTag]: \"Temporal.Calendar\";\n  }\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type PlainDateLike = {\n    era?: string | undefined;\n    eraYear?: number | undefined;\n    year?: number;\n    month?: number;\n    monthCode?: string;\n    day?: number;\n    calendar?: CalendarLike;\n  };\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type PlainDateISOFields = {\n    isoYear: number;\n    isoMonth: number;\n    isoDay: number;\n    calendar: string | CalendarProtocol;\n  };\n\n  /**\n   * A `Temporal.PlainDate` represents a calendar date. \"Calendar date\" refers to the\n   * concept of a date as expressed in everyday usage, independent of any time\n   * zone. For example, it could be used to represent an event on a calendar\n   * which happens during the whole day no matter which time zone it's happening\n   * in.\n   *\n   * See https://tc39.es/proposal-temporal/docs/date.html for more details.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export class PlainDate {\n    static from(\n      item: Temporal.PlainDate | PlainDateLike | string,\n      options?: AssignmentOptions,\n    ): Temporal.PlainDate;\n    static compare(\n      one: Temporal.PlainDate | PlainDateLike | string,\n      two: Temporal.PlainDate | PlainDateLike | string,\n    ): ComparisonResult;\n    constructor(\n      isoYear: number,\n      isoMonth: number,\n      isoDay: number,\n      calendar?: CalendarLike,\n    );\n    readonly era: string | undefined;\n    readonly eraYear: number | undefined;\n    readonly year: number;\n    readonly month: number;\n    readonly monthCode: string;\n    readonly day: number;\n    readonly calendarId: string;\n    readonly dayOfWeek: number;\n    readonly dayOfYear: number;\n    readonly weekOfYear: number | undefined;\n    readonly yearOfWeek: number | undefined;\n    readonly daysInWeek: number;\n    readonly daysInYear: number;\n    readonly daysInMonth: number;\n    readonly monthsInYear: number;\n    readonly inLeapYear: boolean;\n    equals(other: Temporal.PlainDate | PlainDateLike | string): boolean;\n    with(\n      dateLike: PlainDateLike,\n      options?: AssignmentOptions,\n    ): Temporal.PlainDate;\n    withCalendar(calendar: CalendarLike): Temporal.PlainDate;\n    add(\n      durationLike: Temporal.Duration | DurationLike | string,\n      options?: ArithmeticOptions,\n    ): Temporal.PlainDate;\n    subtract(\n      durationLike: Temporal.Duration | DurationLike | string,\n      options?: ArithmeticOptions,\n    ): Temporal.PlainDate;\n    until(\n      other: Temporal.PlainDate | PlainDateLike | string,\n      options?: DifferenceOptions<\"year\" | \"month\" | \"week\" | \"day\">,\n    ): Temporal.Duration;\n    since(\n      other: Temporal.PlainDate | PlainDateLike | string,\n      options?: DifferenceOptions<\"year\" | \"month\" | \"week\" | \"day\">,\n    ): Temporal.Duration;\n    toPlainDateTime(\n      temporalTime?: Temporal.PlainTime | PlainTimeLike | string,\n    ): Temporal.PlainDateTime;\n    toZonedDateTime(\n      timeZoneAndTime:\n        | TimeZoneProtocol\n        | string\n        | {\n          timeZone: TimeZoneLike;\n          plainTime?: Temporal.PlainTime | PlainTimeLike | string;\n        },\n    ): Temporal.ZonedDateTime;\n    toPlainYearMonth(): Temporal.PlainYearMonth;\n    toPlainMonthDay(): Temporal.PlainMonthDay;\n    getISOFields(): PlainDateISOFields;\n    toLocaleString(\n      locales?: string | string[],\n      options?: Intl.DateTimeFormatOptions,\n    ): string;\n    toJSON(): string;\n    toString(options?: ShowCalendarOption): string;\n    valueOf(): never;\n    readonly [Symbol.toStringTag]: \"Temporal.PlainDate\";\n  }\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type PlainDateTimeLike = {\n    era?: string | undefined;\n    eraYear?: number | undefined;\n    year?: number;\n    month?: number;\n    monthCode?: string;\n    day?: number;\n    hour?: number;\n    minute?: number;\n    second?: number;\n    millisecond?: number;\n    microsecond?: number;\n    nanosecond?: number;\n    calendar?: CalendarLike;\n  };\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type PlainDateTimeISOFields = {\n    isoYear: number;\n    isoMonth: number;\n    isoDay: number;\n    isoHour: number;\n    isoMinute: number;\n    isoSecond: number;\n    isoMillisecond: number;\n    isoMicrosecond: number;\n    isoNanosecond: number;\n    calendar: string | CalendarProtocol;\n  };\n\n  /**\n   * A `Temporal.PlainDateTime` represents a calendar date and wall-clock time, with\n   * a precision in nanoseconds, and without any time zone. Of the Temporal\n   * classes carrying human-readable time information, it is the most general\n   * and complete one. `Temporal.PlainDate`, `Temporal.PlainTime`, `Temporal.PlainYearMonth`,\n   * and `Temporal.PlainMonthDay` all carry less information and should be used when\n   * complete information is not required.\n   *\n   * See https://tc39.es/proposal-temporal/docs/datetime.html for more details.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export class PlainDateTime {\n    static from(\n      item: Temporal.PlainDateTime | PlainDateTimeLike | string,\n      options?: AssignmentOptions,\n    ): Temporal.PlainDateTime;\n    static compare(\n      one: Temporal.PlainDateTime | PlainDateTimeLike | string,\n      two: Temporal.PlainDateTime | PlainDateTimeLike | string,\n    ): ComparisonResult;\n    constructor(\n      isoYear: number,\n      isoMonth: number,\n      isoDay: number,\n      hour?: number,\n      minute?: number,\n      second?: number,\n      millisecond?: number,\n      microsecond?: number,\n      nanosecond?: number,\n      calendar?: CalendarLike,\n    );\n    readonly era: string | undefined;\n    readonly eraYear: number | undefined;\n    readonly year: number;\n    readonly month: number;\n    readonly monthCode: string;\n    readonly day: number;\n    readonly hour: number;\n    readonly minute: number;\n    readonly second: number;\n    readonly millisecond: number;\n    readonly microsecond: number;\n    readonly nanosecond: number;\n    readonly calendarId: string;\n    readonly dayOfWeek: number;\n    readonly dayOfYear: number;\n    readonly weekOfYear: number | undefined;\n    readonly yearOfWeek: number | undefined;\n    readonly daysInWeek: number;\n    readonly daysInYear: number;\n    readonly daysInMonth: number;\n    readonly monthsInYear: number;\n    readonly inLeapYear: boolean;\n    equals(other: Temporal.PlainDateTime | PlainDateTimeLike | string): boolean;\n    with(\n      dateTimeLike: PlainDateTimeLike,\n      options?: AssignmentOptions,\n    ): Temporal.PlainDateTime;\n    withPlainTime(\n      timeLike?: Temporal.PlainTime | PlainTimeLike | string,\n    ): Temporal.PlainDateTime;\n    withCalendar(calendar: CalendarLike): Temporal.PlainDateTime;\n    add(\n      durationLike: Temporal.Duration | DurationLike | string,\n      options?: ArithmeticOptions,\n    ): Temporal.PlainDateTime;\n    subtract(\n      durationLike: Temporal.Duration | DurationLike | string,\n      options?: ArithmeticOptions,\n    ): Temporal.PlainDateTime;\n    until(\n      other: Temporal.PlainDateTime | PlainDateTimeLike | string,\n      options?: DifferenceOptions<\n        | \"year\"\n        | \"month\"\n        | \"week\"\n        | \"day\"\n        | \"hour\"\n        | \"minute\"\n        | \"second\"\n        | \"millisecond\"\n        | \"microsecond\"\n        | \"nanosecond\"\n      >,\n    ): Temporal.Duration;\n    since(\n      other: Temporal.PlainDateTime | PlainDateTimeLike | string,\n      options?: DifferenceOptions<\n        | \"year\"\n        | \"month\"\n        | \"week\"\n        | \"day\"\n        | \"hour\"\n        | \"minute\"\n        | \"second\"\n        | \"millisecond\"\n        | \"microsecond\"\n        | \"nanosecond\"\n      >,\n    ): Temporal.Duration;\n    round(\n      roundTo: RoundTo<\n        | \"day\"\n        | \"hour\"\n        | \"minute\"\n        | \"second\"\n        | \"millisecond\"\n        | \"microsecond\"\n        | \"nanosecond\"\n      >,\n    ): Temporal.PlainDateTime;\n    toZonedDateTime(\n      tzLike: TimeZoneLike,\n      options?: ToInstantOptions,\n    ): Temporal.ZonedDateTime;\n    toPlainDate(): Temporal.PlainDate;\n    toPlainTime(): Temporal.PlainTime;\n    getISOFields(): PlainDateTimeISOFields;\n    toLocaleString(\n      locales?: string | string[],\n      options?: Intl.DateTimeFormatOptions,\n    ): string;\n    toJSON(): string;\n    toString(options?: CalendarTypeToStringOptions): string;\n    valueOf(): never;\n    readonly [Symbol.toStringTag]: \"Temporal.PlainDateTime\";\n  }\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type PlainMonthDayLike = {\n    era?: string | undefined;\n    eraYear?: number | undefined;\n    year?: number;\n    month?: number;\n    monthCode?: string;\n    day?: number;\n    calendar?: CalendarLike;\n  };\n\n  /**\n   * A `Temporal.PlainMonthDay` represents a particular day on the calendar, but\n   * without a year. For example, it could be used to represent a yearly\n   * recurring event, like \"Bastille Day is on the 14th of July.\"\n   *\n   * See https://tc39.es/proposal-temporal/docs/monthday.html for more details.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export class PlainMonthDay {\n    static from(\n      item: Temporal.PlainMonthDay | PlainMonthDayLike | string,\n      options?: AssignmentOptions,\n    ): Temporal.PlainMonthDay;\n    constructor(\n      isoMonth: number,\n      isoDay: number,\n      calendar?: CalendarLike,\n      referenceISOYear?: number,\n    );\n    readonly monthCode: string;\n    readonly day: number;\n    readonly calendarId: string;\n    equals(other: Temporal.PlainMonthDay | PlainMonthDayLike | string): boolean;\n    with(\n      monthDayLike: PlainMonthDayLike,\n      options?: AssignmentOptions,\n    ): Temporal.PlainMonthDay;\n    toPlainDate(year: { year: number }): Temporal.PlainDate;\n    getISOFields(): PlainDateISOFields;\n    toLocaleString(\n      locales?: string | string[],\n      options?: Intl.DateTimeFormatOptions,\n    ): string;\n    toJSON(): string;\n    toString(options?: ShowCalendarOption): string;\n    valueOf(): never;\n    readonly [Symbol.toStringTag]: \"Temporal.PlainMonthDay\";\n  }\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type PlainTimeLike = {\n    hour?: number;\n    minute?: number;\n    second?: number;\n    millisecond?: number;\n    microsecond?: number;\n    nanosecond?: number;\n  };\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type PlainTimeISOFields = {\n    isoHour: number;\n    isoMinute: number;\n    isoSecond: number;\n    isoMillisecond: number;\n    isoMicrosecond: number;\n    isoNanosecond: number;\n  };\n\n  /**\n   * A `Temporal.PlainTime` represents a wall-clock time, with a precision in\n   * nanoseconds, and without any time zone. \"Wall-clock time\" refers to the\n   * concept of a time as expressed in everyday usage — the time that you read\n   * off the clock on the wall. For example, it could be used to represent an\n   * event that happens daily at a certain time, no matter what time zone.\n   *\n   * `Temporal.PlainTime` refers to a time with no associated calendar date; if you\n   * need to refer to a specific time on a specific day, use\n   * `Temporal.PlainDateTime`. A `Temporal.PlainTime` can be converted into a\n   * `Temporal.PlainDateTime` by combining it with a `Temporal.PlainDate` using the\n   * `toPlainDateTime()` method.\n   *\n   * See https://tc39.es/proposal-temporal/docs/time.html for more details.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export class PlainTime {\n    static from(\n      item: Temporal.PlainTime | PlainTimeLike | string,\n      options?: AssignmentOptions,\n    ): Temporal.PlainTime;\n    static compare(\n      one: Temporal.PlainTime | PlainTimeLike | string,\n      two: Temporal.PlainTime | PlainTimeLike | string,\n    ): ComparisonResult;\n    constructor(\n      hour?: number,\n      minute?: number,\n      second?: number,\n      millisecond?: number,\n      microsecond?: number,\n      nanosecond?: number,\n    );\n    readonly hour: number;\n    readonly minute: number;\n    readonly second: number;\n    readonly millisecond: number;\n    readonly microsecond: number;\n    readonly nanosecond: number;\n    equals(other: Temporal.PlainTime | PlainTimeLike | string): boolean;\n    with(\n      timeLike: Temporal.PlainTime | PlainTimeLike,\n      options?: AssignmentOptions,\n    ): Temporal.PlainTime;\n    add(\n      durationLike: Temporal.Duration | DurationLike | string,\n      options?: ArithmeticOptions,\n    ): Temporal.PlainTime;\n    subtract(\n      durationLike: Temporal.Duration | DurationLike | string,\n      options?: ArithmeticOptions,\n    ): Temporal.PlainTime;\n    until(\n      other: Temporal.PlainTime | PlainTimeLike | string,\n      options?: DifferenceOptions<\n        | \"hour\"\n        | \"minute\"\n        | \"second\"\n        | \"millisecond\"\n        | \"microsecond\"\n        | \"nanosecond\"\n      >,\n    ): Temporal.Duration;\n    since(\n      other: Temporal.PlainTime | PlainTimeLike | string,\n      options?: DifferenceOptions<\n        | \"hour\"\n        | \"minute\"\n        | \"second\"\n        | \"millisecond\"\n        | \"microsecond\"\n        | \"nanosecond\"\n      >,\n    ): Temporal.Duration;\n    round(\n      roundTo: RoundTo<\n        | \"hour\"\n        | \"minute\"\n        | \"second\"\n        | \"millisecond\"\n        | \"microsecond\"\n        | \"nanosecond\"\n      >,\n    ): Temporal.PlainTime;\n    getISOFields(): PlainTimeISOFields;\n    toLocaleString(\n      locales?: string | string[],\n      options?: Intl.DateTimeFormatOptions,\n    ): string;\n    toJSON(): string;\n    toString(options?: ToStringPrecisionOptions): string;\n    valueOf(): never;\n    readonly [Symbol.toStringTag]: \"Temporal.PlainTime\";\n  }\n\n  /**\n   * A plain object implementing the protocol for a custom time zone.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export interface TimeZoneProtocol {\n    id: string;\n    getOffsetNanosecondsFor(instant: Temporal.Instant | string): number;\n    getOffsetStringFor?(instant: Temporal.Instant | string): string;\n    getPlainDateTimeFor?(\n      instant: Temporal.Instant | string,\n      calendar?: CalendarLike,\n    ): Temporal.PlainDateTime;\n    getInstantFor?(\n      dateTime: Temporal.PlainDateTime | PlainDateTimeLike | string,\n      options?: ToInstantOptions,\n    ): Temporal.Instant;\n    getPossibleInstantsFor(\n      dateTime: Temporal.PlainDateTime | PlainDateTimeLike | string,\n    ): Temporal.Instant[];\n    toString?(): string;\n    toJSON?(): string;\n  }\n\n  /**\n   * Any of these types can be passed to Temporal methods instead of a Temporal.TimeZone.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export type TimeZoneLike = string | TimeZoneProtocol | ZonedDateTime;\n\n  /**\n   * A `Temporal.TimeZone` is a representation of a time zone: either an\n   * {@link https://www.iana.org/time-zones|IANA time zone}, including\n   * information about the time zone such as the offset between the local time\n   * and UTC at a particular time, and daylight saving time (DST) changes; or\n   * simply a particular UTC offset with no DST.\n   *\n   * `Temporal.ZonedDateTime` is the only Temporal type to contain a time zone.\n   * Other types, like `Temporal.Instant` and `Temporal.PlainDateTime`, do not\n   * contain any time zone information, and a `Temporal.TimeZone` object is\n   * required to convert between them.\n   *\n   * See https://tc39.es/proposal-temporal/docs/timezone.html for more details.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export class TimeZone implements TimeZoneProtocol {\n    static from(timeZone: TimeZoneLike): Temporal.TimeZone | TimeZoneProtocol;\n    constructor(timeZoneIdentifier: string);\n    readonly id: string;\n    getOffsetNanosecondsFor(instant: Temporal.Instant | string): number;\n    getOffsetStringFor(instant: Temporal.Instant | string): string;\n    getPlainDateTimeFor(\n      instant: Temporal.Instant | string,\n      calendar?: CalendarLike,\n    ): Temporal.PlainDateTime;\n    getInstantFor(\n      dateTime: Temporal.PlainDateTime | PlainDateTimeLike | string,\n      options?: ToInstantOptions,\n    ): Temporal.Instant;\n    getPossibleInstantsFor(\n      dateTime: Temporal.PlainDateTime | PlainDateTimeLike | string,\n    ): Temporal.Instant[];\n    toString(): string;\n    toJSON(): string;\n    readonly [Symbol.toStringTag]: \"Temporal.TimeZone\";\n  }\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type PlainYearMonthLike = {\n    era?: string | undefined;\n    eraYear?: number | undefined;\n    year?: number;\n    month?: number;\n    monthCode?: string;\n    calendar?: CalendarLike;\n  };\n\n  /**\n   * A `Temporal.PlainYearMonth` represents a particular month on the calendar. For\n   * example, it could be used to represent a particular instance of a monthly\n   * recurring event, like \"the June 2019 meeting\".\n   *\n   * See https://tc39.es/proposal-temporal/docs/yearmonth.html for more details.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export class PlainYearMonth {\n    static from(\n      item: Temporal.PlainYearMonth | PlainYearMonthLike | string,\n      options?: AssignmentOptions,\n    ): Temporal.PlainYearMonth;\n    static compare(\n      one: Temporal.PlainYearMonth | PlainYearMonthLike | string,\n      two: Temporal.PlainYearMonth | PlainYearMonthLike | string,\n    ): ComparisonResult;\n    constructor(\n      isoYear: number,\n      isoMonth: number,\n      calendar?: CalendarLike,\n      referenceISODay?: number,\n    );\n    readonly era: string | undefined;\n    readonly eraYear: number | undefined;\n    readonly year: number;\n    readonly month: number;\n    readonly monthCode: string;\n    readonly calendarId: string;\n    readonly daysInMonth: number;\n    readonly daysInYear: number;\n    readonly monthsInYear: number;\n    readonly inLeapYear: boolean;\n    equals(\n      other: Temporal.PlainYearMonth | PlainYearMonthLike | string,\n    ): boolean;\n    with(\n      yearMonthLike: PlainYearMonthLike,\n      options?: AssignmentOptions,\n    ): Temporal.PlainYearMonth;\n    add(\n      durationLike: Temporal.Duration | DurationLike | string,\n      options?: ArithmeticOptions,\n    ): Temporal.PlainYearMonth;\n    subtract(\n      durationLike: Temporal.Duration | DurationLike | string,\n      options?: ArithmeticOptions,\n    ): Temporal.PlainYearMonth;\n    until(\n      other: Temporal.PlainYearMonth | PlainYearMonthLike | string,\n      options?: DifferenceOptions<\"year\" | \"month\">,\n    ): Temporal.Duration;\n    since(\n      other: Temporal.PlainYearMonth | PlainYearMonthLike | string,\n      options?: DifferenceOptions<\"year\" | \"month\">,\n    ): Temporal.Duration;\n    toPlainDate(day: { day: number }): Temporal.PlainDate;\n    getISOFields(): PlainDateISOFields;\n    toLocaleString(\n      locales?: string | string[],\n      options?: Intl.DateTimeFormatOptions,\n    ): string;\n    toJSON(): string;\n    toString(options?: ShowCalendarOption): string;\n    valueOf(): never;\n    readonly [Symbol.toStringTag]: \"Temporal.PlainYearMonth\";\n  }\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type ZonedDateTimeLike = {\n    era?: string | undefined;\n    eraYear?: number | undefined;\n    year?: number;\n    month?: number;\n    monthCode?: string;\n    day?: number;\n    hour?: number;\n    minute?: number;\n    second?: number;\n    millisecond?: number;\n    microsecond?: number;\n    nanosecond?: number;\n    offset?: string;\n    timeZone?: TimeZoneLike;\n    calendar?: CalendarLike;\n  };\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export type ZonedDateTimeISOFields = {\n    isoYear: number;\n    isoMonth: number;\n    isoDay: number;\n    isoHour: number;\n    isoMinute: number;\n    isoSecond: number;\n    isoMillisecond: number;\n    isoMicrosecond: number;\n    isoNanosecond: number;\n    offset: string;\n    timeZone: string | TimeZoneProtocol;\n    calendar: string | CalendarProtocol;\n  };\n\n  /**\n   * @category Temporal\n   * @experimental\n   */\n  export class ZonedDateTime {\n    static from(\n      item: Temporal.ZonedDateTime | ZonedDateTimeLike | string,\n      options?: ZonedDateTimeAssignmentOptions,\n    ): ZonedDateTime;\n    static compare(\n      one: Temporal.ZonedDateTime | ZonedDateTimeLike | string,\n      two: Temporal.ZonedDateTime | ZonedDateTimeLike | string,\n    ): ComparisonResult;\n    constructor(\n      epochNanoseconds: bigint,\n      timeZone: TimeZoneLike,\n      calendar?: CalendarLike,\n    );\n    readonly era: string | undefined;\n    readonly eraYear: number | undefined;\n    readonly year: number;\n    readonly month: number;\n    readonly monthCode: string;\n    readonly day: number;\n    readonly hour: number;\n    readonly minute: number;\n    readonly second: number;\n    readonly millisecond: number;\n    readonly microsecond: number;\n    readonly nanosecond: number;\n    readonly timeZoneId: string;\n    readonly calendarId: string;\n    readonly dayOfWeek: number;\n    readonly dayOfYear: number;\n    readonly weekOfYear: number | undefined;\n    readonly yearOfWeek: number | undefined;\n    readonly hoursInDay: number;\n    readonly daysInWeek: number;\n    readonly daysInMonth: number;\n    readonly daysInYear: number;\n    readonly monthsInYear: number;\n    readonly inLeapYear: boolean;\n    readonly offsetNanoseconds: number;\n    readonly offset: string;\n    readonly epochSeconds: number;\n    readonly epochMilliseconds: number;\n    readonly epochMicroseconds: bigint;\n    readonly epochNanoseconds: bigint;\n    equals(other: Temporal.ZonedDateTime | ZonedDateTimeLike | string): boolean;\n    with(\n      zonedDateTimeLike: ZonedDateTimeLike,\n      options?: ZonedDateTimeAssignmentOptions,\n    ): Temporal.ZonedDateTime;\n    withPlainTime(\n      timeLike?: Temporal.PlainTime | PlainTimeLike | string,\n    ): Temporal.ZonedDateTime;\n    withCalendar(calendar: CalendarLike): Temporal.ZonedDateTime;\n    withTimeZone(timeZone: TimeZoneLike): Temporal.ZonedDateTime;\n    add(\n      durationLike: Temporal.Duration | DurationLike | string,\n      options?: ArithmeticOptions,\n    ): Temporal.ZonedDateTime;\n    subtract(\n      durationLike: Temporal.Duration | DurationLike | string,\n      options?: ArithmeticOptions,\n    ): Temporal.ZonedDateTime;\n    until(\n      other: Temporal.ZonedDateTime | ZonedDateTimeLike | string,\n      options?: Temporal.DifferenceOptions<\n        | \"year\"\n        | \"month\"\n        | \"week\"\n        | \"day\"\n        | \"hour\"\n        | \"minute\"\n        | \"second\"\n        | \"millisecond\"\n        | \"microsecond\"\n        | \"nanosecond\"\n      >,\n    ): Temporal.Duration;\n    since(\n      other: Temporal.ZonedDateTime | ZonedDateTimeLike | string,\n      options?: Temporal.DifferenceOptions<\n        | \"year\"\n        | \"month\"\n        | \"week\"\n        | \"day\"\n        | \"hour\"\n        | \"minute\"\n        | \"second\"\n        | \"millisecond\"\n        | \"microsecond\"\n        | \"nanosecond\"\n      >,\n    ): Temporal.Duration;\n    round(\n      roundTo: RoundTo<\n        | \"day\"\n        | \"hour\"\n        | \"minute\"\n        | \"second\"\n        | \"millisecond\"\n        | \"microsecond\"\n        | \"nanosecond\"\n      >,\n    ): Temporal.ZonedDateTime;\n    startOfDay(): Temporal.ZonedDateTime;\n    getTimeZoneTransition(\n      direction: TransitionDirection,\n    ): Temporal.ZonedDateTime | null;\n    toInstant(): Temporal.Instant;\n    toPlainDateTime(): Temporal.PlainDateTime;\n    toPlainDate(): Temporal.PlainDate;\n    toPlainTime(): Temporal.PlainTime;\n    getISOFields(): ZonedDateTimeISOFields;\n    toLocaleString(\n      locales?: string | string[],\n      options?: Intl.DateTimeFormatOptions,\n    ): string;\n    toJSON(): string;\n    toString(options?: ZonedDateTimeToStringOptions): string;\n    valueOf(): never;\n    readonly [Symbol.toStringTag]: \"Temporal.ZonedDateTime\";\n  }\n\n  /**\n   * The `Temporal.Now` object has several methods which give information about\n   * the current date, time, and time zone.\n   *\n   * See https://tc39.es/proposal-temporal/docs/now.html for more details.\n   *\n   * @category Temporal\n   * @experimental\n   */\n  export const Now: {\n    /**\n     * Get the exact system date and time as a `Temporal.Instant`.\n     *\n     * This method gets the current exact system time, without regard to\n     * calendar or time zone. This is a good way to get a timestamp for an\n     * event, for example. It works like the old-style JavaScript `Date.now()`,\n     * but with nanosecond precision instead of milliseconds.\n     *\n     * Note that a `Temporal.Instant` doesn't know about time zones. For the\n     * exact time in a specific time zone, use `Temporal.Now.zonedDateTimeISO`\n     * or `Temporal.Now.zonedDateTime`.\n     */\n    instant: () => Temporal.Instant;\n\n    /**\n     * Get the current calendar date and clock time in a specific time zone,\n     * using the ISO 8601 calendar.\n     *\n     * @param {TimeZoneLike} [tzLike] -\n     * {@link https://en.wikipedia.org/wiki/List_of_tz_database_time_zones|IANA time zone identifier}\n     * string (e.g. `'Europe/London'`), `Temporal.TimeZone` instance, or an\n     * object implementing the time zone protocol. If omitted, the environment's\n     * current time zone will be used.\n     */\n    zonedDateTimeISO: (tzLike?: TimeZoneLike) => Temporal.ZonedDateTime;\n\n    /**\n     * Get the current date and clock time in a specific time zone, using the\n     * ISO 8601 calendar.\n     *\n     * Note that the `Temporal.PlainDateTime` type does not persist the time zone,\n     * but retaining the time zone is required for most time-zone-related use\n     * cases. Therefore, it's usually recommended to use\n     * `Temporal.Now.zonedDateTimeISO` instead of this function.\n     *\n     * @param {TimeZoneLike} [tzLike] -\n     * {@link https://en.wikipedia.org/wiki/List_of_tz_database_time_zones|IANA time zone identifier}\n     * string (e.g. `'Europe/London'`), `Temporal.TimeZone` instance, or an\n     * object implementing the time zone protocol. If omitted, the environment's\n     * current time zone will be used.\n     */\n    plainDateTimeISO: (tzLike?: TimeZoneLike) => Temporal.PlainDateTime;\n\n    /**\n     * Get the current date in a specific time zone, using the ISO 8601\n     * calendar.\n     *\n     * @param {TimeZoneLike} [tzLike] -\n     * {@link https://en.wikipedia.org/wiki/List_of_tz_database_time_zones|IANA time zone identifier}\n     * string (e.g. `'Europe/London'`), `Temporal.TimeZone` instance, or an\n     * object implementing the time zone protocol. If omitted, the environment's\n     * current time zone will be used.\n     */\n    plainDateISO: (tzLike?: TimeZoneLike) => Temporal.PlainDate;\n\n    /**\n     * Get the current clock time in a specific time zone, using the ISO 8601 calendar.\n     *\n     * @param {TimeZoneLike} [tzLike] -\n     * {@link https://en.wikipedia.org/wiki/List_of_tz_database_time_zones|IANA time zone identifier}\n     * string (e.g. `'Europe/London'`), `Temporal.TimeZone` instance, or an\n     * object implementing the time zone protocol. If omitted, the environment's\n     * current time zone will be used.\n     */\n    plainTimeISO: (tzLike?: TimeZoneLike) => Temporal.PlainTime;\n\n    /**\n     * Get the identifier of the environment's current time zone.\n     *\n     * This method gets the identifier of the current system time zone. This\n     * will usually be a named\n     * {@link https://en.wikipedia.org/wiki/List_of_tz_database_time_zones|IANA time zone}.\n     */\n    timeZoneId: () => string;\n\n    readonly [Symbol.toStringTag]: \"Temporal.Now\";\n  };\n}\n\n/**\n * @category Temporal\n * @experimental\n */\ndeclare interface Date {\n  toTemporalInstant(): Temporal.Instant;\n}\n\n/**\n * @category Intl\n * @experimental\n */\ndeclare namespace Intl {\n  /**\n   * @category Intl\n   * @experimental\n   */\n  export type Formattable =\n    | Date\n    | Temporal.Instant\n    | Temporal.ZonedDateTime\n    | Temporal.PlainDate\n    | Temporal.PlainTime\n    | Temporal.PlainDateTime\n    | Temporal.PlainYearMonth\n    | Temporal.PlainMonthDay;\n\n  /**\n   * @category Intl\n   * @experimental\n   */\n  export interface DateTimeFormatRangePart {\n    source: \"shared\" | \"startRange\" | \"endRange\";\n  }\n\n  /**\n   * @category Intl\n   * @experimental\n   */\n  export interface DateTimeFormat {\n    /**\n     * Format a date into a string according to the locale and formatting\n     * options of this `Intl.DateTimeFormat` object.\n     *\n     * @param date The date to format.\n     */\n    format(date?: Formattable | number): string;\n\n    /**\n     * Allow locale-aware formatting of strings produced by\n     * `Intl.DateTimeFormat` formatters.\n     *\n     * @param date The date to format.\n     */\n    formatToParts(\n      date?: Formattable | number,\n    ): globalThis.Intl.DateTimeFormatPart[];\n\n    /**\n     * Format a date range in the most concise way based on the locale and\n     * options provided when instantiating this `Intl.DateTimeFormat` object.\n     *\n     * @param startDate The start date of the range to format.\n     * @param endDate The start date of the range to format. Must be the same\n     * type as `startRange`.\n     */\n    formatRange<T extends Formattable>(startDate: T, endDate: T): string;\n    formatRange(startDate: Date | number, endDate: Date | number): string;\n\n    /**\n     * Allow locale-aware formatting of tokens representing each part of the\n     * formatted date range produced by `Intl.DateTimeFormat` formatters.\n     *\n     * @param startDate The start date of the range to format.\n     * @param endDate The start date of the range to format. Must be the same\n     * type as `startRange`.\n     */\n    formatRangeToParts<T extends Formattable>(\n      startDate: T,\n      endDate: T,\n    ): DateTimeFormatRangePart[];\n    formatRangeToParts(\n      startDate: Date | number,\n      endDate: Date | number,\n    ): DateTimeFormatRangePart[];\n  }\n\n  /**\n   * @category Intl\n   * @experimental\n   */\n  export interface DateTimeFormatOptions {\n    // TODO: remove the props below after TS lib declarations are updated\n    dayPeriod?: \"narrow\" | \"short\" | \"long\";\n    dateStyle?: \"full\" | \"long\" | \"medium\" | \"short\";\n    timeStyle?: \"full\" | \"long\" | \"medium\" | \"short\";\n  }\n}\n\n/**\n * A typed array of 16-bit float values. The contents are initialized to 0. If the requested number\n * of bytes could not be allocated an exception is raised.\n *\n * @category Platform\n * @experimental\n */\ndeclare interface Float16Array {\n  /**\n   * The size in bytes of each element in the array.\n   */\n  readonly BYTES_PER_ELEMENT: number;\n\n  /**\n   * The ArrayBuffer instance referenced by the array.\n   */\n  readonly buffer: ArrayBufferLike;\n\n  /**\n   * The length in bytes of the array.\n   */\n  readonly byteLength: number;\n\n  /**\n   * The offset in bytes of the array.\n   */\n  readonly byteOffset: number;\n\n  /**\n   * Returns the this object after copying a section of the array identified by start and end\n   * to the same array starting at position target\n   * @param target If target is negative, it is treated as length+target where length is the\n   * length of the array.\n   * @param start If start is negative, it is treated as length+start. If end is negative, it\n   * is treated as length+end.\n   * @param end If not specified, length of the this object is used as its default value.\n   */\n  copyWithin(target: number, start: number, end?: number): this;\n\n  /**\n   * Determines whether all the members of an array satisfy the specified test.\n   * @param predicate A function that accepts up to three arguments. The every method calls\n   * the predicate function for each element in the array until the predicate returns a value\n   * which is coercible to the Boolean value false, or until the end of the array.\n   * @param thisArg An object to which the this keyword can refer in the predicate function.\n   * If thisArg is omitted, undefined is used as the this value.\n   */\n  every(\n    predicate: (value: number, index: number, array: Float16Array) => unknown,\n    thisArg?: any,\n  ): boolean;\n\n  /**\n   * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\n   * @param value value to fill array section with\n   * @param start index to start filling the array at. If start is negative, it is treated as\n   * length+start where length is the length of the array.\n   * @param end index to stop filling the array at. If end is negative, it is treated as\n   * length+end.\n   */\n  fill(value: number, start?: number, end?: number): this;\n\n  /**\n   * Returns the elements of an array that meet the condition specified in a callback function.\n   * @param predicate A function that accepts up to three arguments. The filter method calls\n   * the predicate function one time for each element in the array.\n   * @param thisArg An object to which the this keyword can refer in the predicate function.\n   * If thisArg is omitted, undefined is used as the this value.\n   */\n  filter(\n    predicate: (value: number, index: number, array: Float16Array) => any,\n    thisArg?: any,\n  ): Float16Array;\n\n  /**\n   * Returns the value of the first element in the array where predicate is true, and undefined\n   * otherwise.\n   * @param predicate find calls predicate once for each element of the array, in ascending\n   * order, until it finds one where predicate returns true. If such an element is found, find\n   * immediately returns that element value. Otherwise, find returns undefined.\n   * @param thisArg If provided, it will be used as the this value for each invocation of\n   * predicate. If it is not provided, undefined is used instead.\n   */\n  find(\n    predicate: (value: number, index: number, obj: Float16Array) => boolean,\n    thisArg?: any,\n  ): number | undefined;\n\n  /**\n   * Returns the index of the first element in the array where predicate is true, and -1\n   * otherwise.\n   * @param predicate find calls predicate once for each element of the array, in ascending\n   * order, until it finds one where predicate returns true. If such an element is found,\n   * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n   * @param thisArg If provided, it will be used as the this value for each invocation of\n   * predicate. If it is not provided, undefined is used instead.\n   */\n  findIndex(\n    predicate: (value: number, index: number, obj: Float16Array) => boolean,\n    thisArg?: any,\n  ): number;\n\n  /**\n   * Performs the specified action for each element in an array.\n   * @param callbackfn  A function that accepts up to three arguments. forEach calls the\n   * callbackfn function one time for each element in the array.\n   * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\n   * If thisArg is omitted, undefined is used as the this value.\n   */\n  forEach(\n    callbackfn: (value: number, index: number, array: Float16Array) => void,\n    thisArg?: any,\n  ): void;\n\n  /**\n   * Returns the index of the first occurrence of a value in an array.\n   * @param searchElement The value to locate in the array.\n   * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n   *  search starts at index 0.\n   */\n  indexOf(searchElement: number, fromIndex?: number): number;\n\n  /**\n   * Adds all the elements of an array separated by the specified separator string.\n   * @param separator A string used to separate one element of an array from the next in the\n   * resulting String. If omitted, the array elements are separated with a comma.\n   */\n  join(separator?: string): string;\n\n  /**\n   * Returns the index of the last occurrence of a value in an array.\n   * @param searchElement The value to locate in the array.\n   * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n   * search starts at index 0.\n   */\n  lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n  /**\n   * The length of the array.\n   */\n  readonly length: number;\n\n  /**\n   * Calls a defined callback function on each element of an array, and returns an array that\n   * contains the results.\n   * @param callbackfn A function that accepts up to three arguments. The map method calls the\n   * callbackfn function one time for each element in the array.\n   * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n   * If thisArg is omitted, undefined is used as the this value.\n   */\n  map(\n    callbackfn: (value: number, index: number, array: Float16Array) => number,\n    thisArg?: any,\n  ): Float16Array;\n\n  /**\n   * Calls the specified callback function for all the elements in an array. The return value of\n   * the callback function is the accumulated result, and is provided as an argument in the next\n   * call to the callback function.\n   * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n   * callbackfn function one time for each element in the array.\n   * @param initialValue If initialValue is specified, it is used as the initial value to start\n   * the accumulation. The first call to the callbackfn function provides this value as an argument\n   * instead of an array value.\n   */\n  reduce(\n    callbackfn: (\n      previousValue: number,\n      currentValue: number,\n      currentIndex: number,\n      array: Float16Array,\n    ) => number,\n  ): number;\n  reduce(\n    callbackfn: (\n      previousValue: number,\n      currentValue: number,\n      currentIndex: number,\n      array: Float16Array,\n    ) => number,\n    initialValue: number,\n  ): number;\n\n  /**\n   * Calls the specified callback function for all the elements in an array. The return value of\n   * the callback function is the accumulated result, and is provided as an argument in the next\n   * call to the callback function.\n   * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n   * callbackfn function one time for each element in the array.\n   * @param initialValue If initialValue is specified, it is used as the initial value to start\n   * the accumulation. The first call to the callbackfn function provides this value as an argument\n   * instead of an array value.\n   */\n  reduce<U>(\n    callbackfn: (\n      previousValue: U,\n      currentValue: number,\n      currentIndex: number,\n      array: Float16Array,\n    ) => U,\n    initialValue: U,\n  ): U;\n\n  /**\n   * Calls the specified callback function for all the elements in an array, in descending order.\n   * The return value of the callback function is the accumulated result, and is provided as an\n   * argument in the next call to the callback function.\n   * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n   * the callbackfn function one time for each element in the array.\n   * @param initialValue If initialValue is specified, it is used as the initial value to start\n   * the accumulation. The first call to the callbackfn function provides this value as an\n   * argument instead of an array value.\n   */\n  reduceRight(\n    callbackfn: (\n      previousValue: number,\n      currentValue: number,\n      currentIndex: number,\n      array: Float16Array,\n    ) => number,\n  ): number;\n  reduceRight(\n    callbackfn: (\n      previousValue: number,\n      currentValue: number,\n      currentIndex: number,\n      array: Float16Array,\n    ) => number,\n    initialValue: number,\n  ): number;\n\n  /**\n   * Calls the specified callback function for all the elements in an array, in descending order.\n   * The return value of the callback function is the accumulated result, and is provided as an\n   * argument in the next call to the callback function.\n   * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n   * the callbackfn function one time for each element in the array.\n   * @param initialValue If initialValue is specified, it is used as the initial value to start\n   * the accumulation. The first call to the callbackfn function provides this value as an argument\n   * instead of an array value.\n   */\n  reduceRight<U>(\n    callbackfn: (\n      previousValue: U,\n      currentValue: number,\n      currentIndex: number,\n      array: Float16Array,\n    ) => U,\n    initialValue: U,\n  ): U;\n\n  /**\n   * Reverses the elements in an Array.\n   */\n  reverse(): Float16Array;\n\n  /**\n   * Sets a value or an array of values.\n   * @param array A typed or untyped array of values to set.\n   * @param offset The index in the current array at which the values are to be written.\n   */\n  set(array: ArrayLike<number>, offset?: number): void;\n\n  /**\n   * Returns a section of an array.\n   * @param start The beginning of the specified portion of the array.\n   * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n   */\n  slice(start?: number, end?: number): Float16Array;\n\n  /**\n   * Determines whether the specified callback function returns true for any element of an array.\n   * @param predicate A function that accepts up to three arguments. The some method calls\n   * the predicate function for each element in the array until the predicate returns a value\n   * which is coercible to the Boolean value true, or until the end of the array.\n   * @param thisArg An object to which the this keyword can refer in the predicate function.\n   * If thisArg is omitted, undefined is used as the this value.\n   */\n  some(\n    predicate: (value: number, index: number, array: Float16Array) => unknown,\n    thisArg?: any,\n  ): boolean;\n\n  /**\n   * Sorts an array.\n   * @param compareFn Function used to determine the order of the elements. It is expected to return\n   * a negative value if first argument is less than second argument, zero if they're equal and a positive\n   * value otherwise. If omitted, the elements are sorted in ascending order.\n   * ```ts\n   * [11,2,22,1].sort((a, b) => a - b)\n   * ```\n   */\n  sort(compareFn?: (a: number, b: number) => number): this;\n\n  /**\n   * Gets a new Float16Array view of the ArrayBuffer store for this array, referencing the elements\n   * at begin, inclusive, up to end, exclusive.\n   * @param begin The index of the beginning of the array.\n   * @param end The index of the end of the array.\n   */\n  subarray(begin?: number, end?: number): Float16Array;\n\n  /**\n   * Converts a number to a string by using the current locale.\n   */\n  toLocaleString(): string;\n\n  /**\n   * Returns a string representation of an array.\n   */\n  toString(): string;\n\n  /** Returns the primitive value of the specified object. */\n  valueOf(): Float16Array;\n\n  [index: number]: number;\n}\n\n/**\n * @category Platform\n * @experimental\n */\ndeclare interface Float16ArrayConstructor {\n  readonly prototype: Float16Array;\n  new (length: number): Float16Array;\n  new (array: ArrayLike<number> | ArrayBufferLike): Float16Array;\n  new (\n    buffer: ArrayBufferLike,\n    byteOffset?: number,\n    length?: number,\n  ): Float16Array;\n\n  /**\n   * The size in bytes of each element in the array.\n   */\n  readonly BYTES_PER_ELEMENT: number;\n\n  /**\n   * Returns a new array from a set of elements.\n   * @param items A set of elements to include in the new array object.\n   */\n  of(...items: number[]): Float16Array;\n\n  /**\n   * Creates an array from an array-like or iterable object.\n   * @param arrayLike An array-like or iterable object to convert to an array.\n   */\n  from(arrayLike: ArrayLike<number>): Float16Array;\n\n  /**\n   * Creates an array from an array-like or iterable object.\n   * @param arrayLike An array-like or iterable object to convert to an array.\n   * @param mapfn A mapping function to call on every element of the array.\n   * @param thisArg Value of 'this' used to invoke the mapfn.\n   */\n  from<T>(\n    arrayLike: ArrayLike<T>,\n    mapfn: (v: T, k: number) => number,\n    thisArg?: any,\n  ): Float16Array;\n}\n/**\n * @category Platform\n * @experimental\n */\ndeclare var Float16Array: Float16ArrayConstructor;\n\n/**\n * @category Platform\n * @experimental\n */\ndeclare interface Float16 {\n  [Symbol.iterator](): IterableIterator<number>;\n  /**\n   * Returns an array of key, value pairs for every entry in the array\n   */\n  entries(): IterableIterator<[number, number]>;\n  /**\n   * Returns an list of keys in the array\n   */\n  keys(): IterableIterator<number>;\n  /**\n   * Returns an list of values in the array\n   */\n  values(): IterableIterator<number>;\n}\n\n/**\n * @category Platform\n * @experimental\n */\ndeclare interface Float16Constructor {\n  new (elements: Iterable<number>): Float16;\n\n  /**\n   * Creates an array from an array-like or iterable object.\n   * @param arrayLike An array-like or iterable object to convert to an array.\n   * @param mapfn A mapping function to call on every element of the array.\n   * @param thisArg Value of 'this' used to invoke the mapfn.\n   */\n  from(\n    arrayLike: Iterable<number>,\n    mapfn?: (v: number, k: number) => number,\n    thisArg?: any,\n  ): Float16;\n}\n\n/**\n * @category Platform\n * @experimental\n */\ndeclare interface Float16Array {\n  readonly [Symbol.toStringTag]: \"Float16Array\";\n}\n\n/**\n * @category Platform\n * @experimental\n */\ndeclare interface Float16Array {\n  /**\n   * Determines whether an array includes a certain element, returning true or false as appropriate.\n   * @param searchElement The element to search for.\n   * @param fromIndex The position in this array at which to begin searching for searchElement.\n   */\n  includes(searchElement: number, fromIndex?: number): boolean;\n}\n\n/**\n * @category Platform\n * @experimental\n */\ndeclare interface Float16ArrayConstructor {\n  new (): Float16Array;\n}\n\n/**\n * @category Platform\n * @experimental\n */\ndeclare interface Float16Array {\n  /**\n   * Returns the item located at the specified index.\n   * @param index The zero-based index of the desired code unit. A negative index will count back from the last item.\n   */\n  at(index: number): number | undefined;\n}\n\n/**\n * @category Platform\n * @experimental\n */\ndeclare interface Float16Array {\n  /**\n   * Returns the value of the last element in the array where predicate is true, and undefined\n   * otherwise.\n   * @param predicate findLast calls predicate once for each element of the array, in descending\n   * order, until it finds one where predicate returns true. If such an element is found, findLast\n   * immediately returns that element value. Otherwise, findLast returns undefined.\n   * @param thisArg If provided, it will be used as the this value for each invocation of\n   * predicate. If it is not provided, undefined is used instead.\n   */\n  findLast<S extends number>(\n    predicate: (\n      value: number,\n      index: number,\n      array: Float16Array,\n    ) => value is S,\n    thisArg?: any,\n  ): S | undefined;\n  findLast(\n    predicate: (\n      value: number,\n      index: number,\n      array: Float16Array,\n    ) => unknown,\n    thisArg?: any,\n  ): number | undefined;\n\n  /**\n   * Returns the index of the last element in the array where predicate is true, and -1\n   * otherwise.\n   * @param predicate findLastIndex calls predicate once for each element of the array, in descending\n   * order, until it finds one where predicate returns true. If such an element is found,\n   * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n   * @param thisArg If provided, it will be used as the this value for each invocation of\n   * predicate. If it is not provided, undefined is used instead.\n   */\n  findLastIndex(\n    predicate: (\n      value: number,\n      index: number,\n      array: Float16Array,\n    ) => unknown,\n    thisArg?: any,\n  ): number;\n\n  /**\n   * Copies the array and returns the copy with the elements in reverse order.\n   */\n  toReversed(): Float16Array;\n\n  /**\n   * Copies and sorts the array.\n   * @param compareFn Function used to determine the order of the elements. It is expected to return\n   * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\n   * value otherwise. If omitted, the elements are sorted in ascending order.\n   * ```ts\n   * const myNums = Float16Array.from([11.25, 2, -22.5, 1]);\n   * myNums.toSorted((a, b) => a - b) // Float16Array(4) [-22.5, 1, 2, 11.5]\n   * ```\n   */\n  toSorted(compareFn?: (a: number, b: number) => number): Float16Array;\n\n  /**\n   * Copies the array and inserts the given number at the provided index.\n   * @param index The index of the value to overwrite. If the index is\n   * negative, then it replaces from the end of the array.\n   * @param value The value to insert into the copied array.\n   * @returns A copy of the original array with the inserted value.\n   */\n  with(index: number, value: number): Float16Array;\n}\n\n/**\n * @category Platform\n * @experimental\n */\ndeclare interface DataView {\n  /**\n   * Gets the Float16 value at the specified byte offset from the start of the view. There is\n   * no alignment constraint; multi-byte values may be fetched from any offset.\n   * @param byteOffset The place in the buffer at which the value should be retrieved.\n   * @param littleEndian If false or undefined, a big-endian value should be read.\n   */\n  getFloat16(byteOffset: number, littleEndian?: boolean): number;\n\n  /**\n   * Stores an Float16 value at the specified byte offset from the start of the view.\n   * @param byteOffset The place in the buffer at which the value should be set.\n   * @param value The value to set.\n   * @param littleEndian If false or undefined, a big-endian value should be written.\n   */\n  setFloat16(byteOffset: number, value: number, littleEndian?: boolean): void;\n}\n",
  "typeReferenceDirectives": []
}
