{
  "endOfFileToken": {
    "kind": "EndOfFileToken"
  },
  "fileName": "data/dts/lib.esnext.array.d.ts",
  "hasNoDefaultLib": true,
  "isDeclarationFile": true,
  "kind": "SourceFile",
  "libReferenceDirectives": [],
  "referencedFiles": [],
  "statements": [
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "fromAsync"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "iterableOrArrayLike"
              },
              "type": {
                "kind": "UnionType",
                "types": [
                  {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "AsyncIterable"
                    }
                  },
                  {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "UnionType",
                        "types": [
                          {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          },
                          {
                            "kind": "TypeReference",
                            "typeArguments": [
                              {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "T"
                                }
                              }
                            ],
                            "typeName": {
                              "kind": "Identifier",
                              "text": "PromiseLike"
                            }
                          }
                        ]
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Iterable"
                    }
                  },
                  {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "UnionType",
                        "types": [
                          {
                            "kind": "TypeReference",
                            "typeName": {
                              "kind": "Identifier",
                              "text": "T"
                            }
                          },
                          {
                            "kind": "TypeReference",
                            "typeArguments": [
                              {
                                "kind": "TypeReference",
                                "typeName": {
                                  "kind": "Identifier",
                                  "text": "T"
                                }
                              }
                            ],
                            "typeName": {
                              "kind": "Identifier",
                              "text": "PromiseLike"
                            }
                          }
                        ]
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "ArrayLike"
                    }
                  }
                ]
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "elementType": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                },
                "kind": "ArrayType"
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "Promise"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "fromAsync"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "iterableOrArrayLike"
              },
              "type": {
                "kind": "UnionType",
                "types": [
                  {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "AsyncIterable"
                    }
                  },
                  {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "Iterable"
                    }
                  },
                  {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "T"
                        }
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "ArrayLike"
                    }
                  }
                ]
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "mapFn"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "T"
                          }
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Awaited"
                      }
                    }
                  }
                ],
                "type": {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "U"
                  }
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "thisArg"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "elementType": {
                  "kind": "TypeReference",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "typeName": {
                        "kind": "Identifier",
                        "text": "U"
                      }
                    }
                  ],
                  "typeName": {
                    "kind": "Identifier",
                    "text": "Awaited"
                  }
                },
                "kind": "ArrayType"
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "Promise"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "ArrayConstructor"
      }
    }
  ],
  "text": "/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib=\"true\"/>\n\ninterface ArrayConstructor {\n    /**\n     * Creates an array from an async iterator or iterable object.\n     * @param iterableOrArrayLike An async iterator or array-like object to convert to an array.\n     */\n    fromAsync<T>(iterableOrArrayLike: AsyncIterable<T> | Iterable<T | PromiseLike<T>> | ArrayLike<T | PromiseLike<T>>): Promise<T[]>;\n\n    /**\n     * Creates an array from an async iterator or iterable object.\n     *\n     * @param iterableOrArrayLike An async iterator or array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of itarableOrArrayLike.\n     *      Each return value is awaited before being added to result array.\n     * @param thisArg Value of 'this' used when executing mapfn.\n     */\n    fromAsync<T, U>(iterableOrArrayLike: AsyncIterable<T> | Iterable<T> | ArrayLike<T>, mapFn: (value: Awaited<T>) => U, thisArg?: any): Promise<Awaited<U>[]>;\n}\n",
  "typeReferenceDirectives": []
}
