{
  "endOfFileToken": {
    "kind": "EndOfFileToken"
  },
  "fileName": "data/dts/lib.es2018.asyncgenerator.d.ts",
  "hasNoDefaultLib": true,
  "isDeclarationFile": true,
  "kind": "SourceFile",
  "libReferenceDirectives": [
    {
      "fileName": "es2018.asynciterable"
    }
  ],
  "referencedFiles": [],
  "statements": [
    {
      "heritageClauses": [
        {
          "kind": "HeritageClause",
          "token": "ExtendsKeyword",
          "types": [
            {
              "expression": {
                "kind": "Identifier",
                "text": "AsyncIterator"
              },
              "kind": "ExpressionWithTypeArguments",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "T"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "TReturn"
                  }
                },
                {
                  "kind": "TypeReference",
                  "typeName": {
                    "kind": "Identifier",
                    "text": "TNext"
                  }
                }
              ]
            }
          ]
        }
      ],
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "next"
          },
          "parameters": [
            {
              "dotDotDotToken": {
                "kind": "DotDotDotToken"
              },
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "args"
              },
              "type": {
                "kind": "UnionType",
                "types": [
                  {
                    "elements": [],
                    "kind": "TupleType"
                  },
                  {
                    "elements": [
                      {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "TNext"
                        }
                      }
                    ],
                    "kind": "TupleType"
                  }
                ]
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "TReturn"
                    }
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "IteratorResult"
                }
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "Promise"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "return"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "value"
              },
              "type": {
                "kind": "UnionType",
                "types": [
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "TReturn"
                    }
                  },
                  {
                    "kind": "TypeReference",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "typeName": {
                          "kind": "Identifier",
                          "text": "TReturn"
                        }
                      }
                    ],
                    "typeName": {
                      "kind": "Identifier",
                      "text": "PromiseLike"
                    }
                  }
                ]
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "TReturn"
                    }
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "IteratorResult"
                }
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "Promise"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "throw"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "e"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "TypeReference",
                "typeArguments": [
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "T"
                    }
                  },
                  {
                    "kind": "TypeReference",
                    "typeName": {
                      "kind": "Identifier",
                      "text": "TReturn"
                    }
                  }
                ],
                "typeName": {
                  "kind": "Identifier",
                  "text": "IteratorResult"
                }
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "Promise"
            }
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "asyncIterator"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [],
          "type": {
            "kind": "TypeReference",
            "typeArguments": [
              {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "T"
                }
              },
              {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "TReturn"
                }
              },
              {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "TNext"
                }
              }
            ],
            "typeName": {
              "kind": "Identifier",
              "text": "AsyncGenerator"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "AsyncGenerator"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "ConstructSignature",
          "parameters": [
            {
              "dotDotDotToken": {
                "kind": "DotDotDotToken"
              },
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "args"
              },
              "type": {
                "elementType": {
                  "kind": "AnyKeyword"
                },
                "kind": "ArrayType"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "AsyncGenerator"
            }
          }
        },
        {
          "kind": "CallSignature",
          "parameters": [
            {
              "dotDotDotToken": {
                "kind": "DotDotDotToken"
              },
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "args"
              },
              "type": {
                "elementType": {
                  "kind": "AnyKeyword"
                },
                "kind": "ArrayType"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "AsyncGenerator"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "length"
          },
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "name"
          },
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "prototype"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "AsyncGenerator"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "AsyncGeneratorFunction"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "ConstructSignature",
          "parameters": [
            {
              "dotDotDotToken": {
                "kind": "DotDotDotToken"
              },
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "args"
              },
              "type": {
                "elementType": {
                  "kind": "StringKeyword"
                },
                "kind": "ArrayType"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "AsyncGeneratorFunction"
            }
          }
        },
        {
          "kind": "CallSignature",
          "parameters": [
            {
              "dotDotDotToken": {
                "kind": "DotDotDotToken"
              },
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "args"
              },
              "type": {
                "elementType": {
                  "kind": "StringKeyword"
                },
                "kind": "ArrayType"
              }
            }
          ],
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "AsyncGeneratorFunction"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "length"
          },
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "name"
          },
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "prototype"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "AsyncGeneratorFunction"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "AsyncGeneratorFunctionConstructor"
      }
    }
  ],
  "text": "/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib=\"true\"/>\n\n/// <reference lib=\"es2018.asynciterable\" />\n\ninterface AsyncGenerator<T = unknown, TReturn = any, TNext = unknown> extends AsyncIterator<T, TReturn, TNext> {\n    // NOTE: 'next' is defined using a tuple to ensure we report the correct assignability errors in all places.\n    next(...args: [] | [TNext]): Promise<IteratorResult<T, TReturn>>;\n    return(value: TReturn | PromiseLike<TReturn>): Promise<IteratorResult<T, TReturn>>;\n    throw(e: any): Promise<IteratorResult<T, TReturn>>;\n    [Symbol.asyncIterator](): AsyncGenerator<T, TReturn, TNext>;\n}\n\ninterface AsyncGeneratorFunction {\n    /**\n     * Creates a new AsyncGenerator object.\n     * @param args A list of arguments the function accepts.\n     */\n    new (...args: any[]): AsyncGenerator;\n    /**\n     * Creates a new AsyncGenerator object.\n     * @param args A list of arguments the function accepts.\n     */\n    (...args: any[]): AsyncGenerator;\n    /**\n     * The length of the arguments.\n     */\n    readonly length: number;\n    /**\n     * Returns the name of the function.\n     */\n    readonly name: string;\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: AsyncGenerator;\n}\n\ninterface AsyncGeneratorFunctionConstructor {\n    /**\n     * Creates a new AsyncGenerator function.\n     * @param args A list of arguments the function accepts.\n     */\n    new (...args: string[]): AsyncGeneratorFunction;\n    /**\n     * Creates a new AsyncGenerator function.\n     * @param args A list of arguments the function accepts.\n     */\n    (...args: string[]): AsyncGeneratorFunction;\n    /**\n     * The length of the arguments.\n     */\n    readonly length: number;\n    /**\n     * Returns the name of the function.\n     */\n    readonly name: string;\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: AsyncGeneratorFunction;\n}\n",
  "typeReferenceDirectives": []
}
