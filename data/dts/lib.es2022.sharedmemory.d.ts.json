{
  "endOfFileToken": {
    "kind": "EndOfFileToken"
  },
  "fileName": "data/dts/lib.es2022.sharedmemory.d.ts",
  "hasNoDefaultLib": true,
  "isDeclarationFile": true,
  "kind": "SourceFile",
  "libReferenceDirectives": [],
  "referencedFiles": [],
  "statements": [
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "waitAsync"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "typedArray"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "Int32Array"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "index"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "value"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "timeout"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "UnionType",
            "types": [
              {
                "kind": "TypeLiteral",
                "members": [
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "async"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "FalseKeyword"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "LiteralType",
                          "literal": {
                            "kind": "StringLiteral",
                            "text": "not-equal"
                          }
                        },
                        {
                          "kind": "LiteralType",
                          "literal": {
                            "kind": "StringLiteral",
                            "text": "timed-out"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "kind": "TypeLiteral",
                "members": [
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "async"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "TrueKeyword"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "ok"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "timed-out"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Promise"
                      }
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "waitAsync"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "typedArray"
              },
              "type": {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "BigInt64Array"
                }
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "index"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "value"
              },
              "type": {
                "kind": "BigIntKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "timeout"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "kind": "UnionType",
            "types": [
              {
                "kind": "TypeLiteral",
                "members": [
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "async"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "FalseKeyword"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "LiteralType",
                          "literal": {
                            "kind": "StringLiteral",
                            "text": "not-equal"
                          }
                        },
                        {
                          "kind": "LiteralType",
                          "literal": {
                            "kind": "StringLiteral",
                            "text": "timed-out"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "kind": "TypeLiteral",
                "members": [
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "async"
                    },
                    "type": {
                      "kind": "LiteralType",
                      "literal": {
                        "kind": "TrueKeyword"
                      }
                    }
                  },
                  {
                    "kind": "PropertySignature",
                    "name": {
                      "kind": "Identifier",
                      "text": "value"
                    },
                    "type": {
                      "kind": "TypeReference",
                      "typeArguments": [
                        {
                          "kind": "UnionType",
                          "types": [
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "ok"
                              }
                            },
                            {
                              "kind": "LiteralType",
                              "literal": {
                                "kind": "StringLiteral",
                                "text": "timed-out"
                              }
                            }
                          ]
                        }
                      ],
                      "typeName": {
                        "kind": "Identifier",
                        "text": "Promise"
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Atomics"
      }
    }
  ],
  "text": "/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib=\"true\"/>\n\ninterface Atomics {\n    /**\n     * A non-blocking, asynchronous version of wait which is usable on the main thread.\n     * Waits asynchronously on a shared memory location and returns a Promise\n     * @param typedArray A shared Int32Array or BigInt64Array.\n     * @param index The position in the typedArray to wait on.\n     * @param value The expected value to test.\n     * @param [timeout] The expected value to test.\n     */\n    waitAsync(typedArray: Int32Array, index: number, value: number, timeout?: number): { async: false; value: \"not-equal\" | \"timed-out\"; } | { async: true; value: Promise<\"ok\" | \"timed-out\">; };\n\n    /**\n     * A non-blocking, asynchronous version of wait which is usable on the main thread.\n     * Waits asynchronously on a shared memory location and returns a Promise\n     * @param typedArray A shared Int32Array or BigInt64Array.\n     * @param index The position in the typedArray to wait on.\n     * @param value The expected value to test.\n     * @param [timeout] The expected value to test.\n     */\n    waitAsync(typedArray: BigInt64Array, index: number, value: bigint, timeout?: number): { async: false; value: \"not-equal\" | \"timed-out\"; } | { async: true; value: Promise<\"ok\" | \"timed-out\">; };\n}\n",
  "typeReferenceDirectives": []
}
