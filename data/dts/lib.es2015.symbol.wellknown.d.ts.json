{
  "endOfFileToken": {
    "kind": "EndOfFileToken"
  },
  "fileName": "data/dts/lib.es2015.symbol.wellknown.d.ts",
  "hasNoDefaultLib": true,
  "isDeclarationFile": true,
  "kind": "SourceFile",
  "libReferenceDirectives": [
    {
      "fileName": "es2015.symbol"
    }
  ],
  "referencedFiles": [],
  "statements": [
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "hasInstance"
          },
          "type": {
            "kind": "TypeOperator",
            "type": {
              "kind": "SymbolKeyword"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "isConcatSpreadable"
          },
          "type": {
            "kind": "TypeOperator",
            "type": {
              "kind": "SymbolKeyword"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "match"
          },
          "type": {
            "kind": "TypeOperator",
            "type": {
              "kind": "SymbolKeyword"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "replace"
          },
          "type": {
            "kind": "TypeOperator",
            "type": {
              "kind": "SymbolKeyword"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "search"
          },
          "type": {
            "kind": "TypeOperator",
            "type": {
              "kind": "SymbolKeyword"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "species"
          },
          "type": {
            "kind": "TypeOperator",
            "type": {
              "kind": "SymbolKeyword"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "split"
          },
          "type": {
            "kind": "TypeOperator",
            "type": {
              "kind": "SymbolKeyword"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "toPrimitive"
          },
          "type": {
            "kind": "TypeOperator",
            "type": {
              "kind": "SymbolKeyword"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "toStringTag"
          },
          "type": {
            "kind": "TypeOperator",
            "type": {
              "kind": "SymbolKeyword"
            }
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "unscopables"
          },
          "type": {
            "kind": "TypeOperator",
            "type": {
              "kind": "SymbolKeyword"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "SymbolConstructor"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toPrimitive"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "hint"
              },
              "type": {
                "kind": "StringKeyword"
              }
            }
          ],
          "type": {
            "kind": "SymbolKeyword"
          }
        },
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Symbol"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "unscopables"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "MappedType",
            "members": [],
            "questionToken": {
              "kind": "QuestionToken"
            },
            "type": {
              "kind": "BooleanKeyword"
            },
            "typeParameter": {
              "constraint": {
                "kind": "TypeOperator",
                "type": {
                  "elementType": {
                    "kind": "AnyKeyword"
                  },
                  "kind": "ArrayType"
                }
              },
              "kind": "TypeParameter",
              "name": {
                "kind": "Identifier",
                "text": "K"
              }
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "unscopables"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "MappedType",
            "members": [],
            "questionToken": {
              "kind": "QuestionToken"
            },
            "type": {
              "kind": "BooleanKeyword"
            },
            "typeParameter": {
              "constraint": {
                "kind": "TypeOperator",
                "type": {
                  "kind": "TypeOperator",
                  "type": {
                    "elementType": {
                      "kind": "AnyKeyword"
                    },
                    "kind": "ArrayType"
                  }
                }
              },
              "kind": "TypeParameter",
              "name": {
                "kind": "Identifier",
                "text": "K"
              }
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "ReadonlyArray"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toPrimitive"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "hint"
              },
              "type": {
                "kind": "LiteralType",
                "literal": {
                  "kind": "StringLiteral",
                  "text": "default"
                }
              }
            }
          ],
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toPrimitive"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "hint"
              },
              "type": {
                "kind": "LiteralType",
                "literal": {
                  "kind": "StringLiteral",
                  "text": "string"
                }
              }
            }
          ],
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toPrimitive"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "hint"
              },
              "type": {
                "kind": "LiteralType",
                "literal": {
                  "kind": "StringLiteral",
                  "text": "number"
                }
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toPrimitive"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "hint"
              },
              "type": {
                "kind": "StringKeyword"
              }
            }
          ],
          "type": {
            "kind": "UnionType",
            "types": [
              {
                "kind": "StringKeyword"
              },
              {
                "kind": "NumberKeyword"
              }
            ]
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Date"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Map"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "WeakMap"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Set"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "WeakSet"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "JSON"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "hasInstance"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "value"
              },
              "type": {
                "kind": "AnyKeyword"
              }
            }
          ],
          "type": {
            "kind": "BooleanKeyword"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Function"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "GeneratorFunction"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Math"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Promise"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "species"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "PromiseConstructor"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "PromiseConstructor"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "match"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "string"
              },
              "type": {
                "kind": "StringKeyword"
              }
            }
          ],
          "type": {
            "kind": "UnionType",
            "types": [
              {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "RegExpMatchArray"
                }
              },
              {
                "kind": "LiteralType",
                "literal": {
                  "kind": "NullKeyword"
                }
              }
            ]
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "replace"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "string"
              },
              "type": {
                "kind": "StringKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "replaceValue"
              },
              "type": {
                "kind": "StringKeyword"
              }
            }
          ],
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "replace"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "string"
              },
              "type": {
                "kind": "StringKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "replacer"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "substring"
                    },
                    "type": {
                      "kind": "StringKeyword"
                    }
                  },
                  {
                    "dotDotDotToken": {
                      "kind": "DotDotDotToken"
                    },
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "args"
                    },
                    "type": {
                      "elementType": {
                        "kind": "AnyKeyword"
                      },
                      "kind": "ArrayType"
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              }
            }
          ],
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "search"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "string"
              },
              "type": {
                "kind": "StringKeyword"
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "split"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "string"
              },
              "type": {
                "kind": "StringKeyword"
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "limit"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "elementType": {
              "kind": "StringKeyword"
            },
            "kind": "ArrayType"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "RegExp"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "species"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "RegExpConstructor"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "RegExpConstructor"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "match"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "matcher"
              },
              "type": {
                "kind": "TypeLiteral",
                "members": [
                  {
                    "kind": "MethodSignature",
                    "name": {
                      "expression": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "Symbol"
                        },
                        "kind": "PropertyAccessExpression",
                        "name": {
                          "kind": "Identifier",
                          "text": "match"
                        }
                      },
                      "kind": "ComputedPropertyName"
                    },
                    "parameters": [
                      {
                        "kind": "Parameter",
                        "name": {
                          "kind": "Identifier",
                          "text": "string"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      }
                    ],
                    "type": {
                      "kind": "UnionType",
                      "types": [
                        {
                          "kind": "TypeReference",
                          "typeName": {
                            "kind": "Identifier",
                            "text": "RegExpMatchArray"
                          }
                        },
                        {
                          "kind": "LiteralType",
                          "literal": {
                            "kind": "NullKeyword"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ],
          "type": {
            "kind": "UnionType",
            "types": [
              {
                "kind": "TypeReference",
                "typeName": {
                  "kind": "Identifier",
                  "text": "RegExpMatchArray"
                }
              },
              {
                "kind": "LiteralType",
                "literal": {
                  "kind": "NullKeyword"
                }
              }
            ]
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "replace"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "searchValue"
              },
              "type": {
                "kind": "TypeLiteral",
                "members": [
                  {
                    "kind": "MethodSignature",
                    "name": {
                      "expression": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "Symbol"
                        },
                        "kind": "PropertyAccessExpression",
                        "name": {
                          "kind": "Identifier",
                          "text": "replace"
                        }
                      },
                      "kind": "ComputedPropertyName"
                    },
                    "parameters": [
                      {
                        "kind": "Parameter",
                        "name": {
                          "kind": "Identifier",
                          "text": "string"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "Parameter",
                        "name": {
                          "kind": "Identifier",
                          "text": "replaceValue"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      }
                    ],
                    "type": {
                      "kind": "StringKeyword"
                    }
                  }
                ]
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "replaceValue"
              },
              "type": {
                "kind": "StringKeyword"
              }
            }
          ],
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "replace"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "searchValue"
              },
              "type": {
                "kind": "TypeLiteral",
                "members": [
                  {
                    "kind": "MethodSignature",
                    "name": {
                      "expression": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "Symbol"
                        },
                        "kind": "PropertyAccessExpression",
                        "name": {
                          "kind": "Identifier",
                          "text": "replace"
                        }
                      },
                      "kind": "ComputedPropertyName"
                    },
                    "parameters": [
                      {
                        "kind": "Parameter",
                        "name": {
                          "kind": "Identifier",
                          "text": "string"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "Parameter",
                        "name": {
                          "kind": "Identifier",
                          "text": "replacer"
                        },
                        "type": {
                          "kind": "FunctionType",
                          "parameters": [
                            {
                              "kind": "Parameter",
                              "name": {
                                "kind": "Identifier",
                                "text": "substring"
                              },
                              "type": {
                                "kind": "StringKeyword"
                              }
                            },
                            {
                              "dotDotDotToken": {
                                "kind": "DotDotDotToken"
                              },
                              "kind": "Parameter",
                              "name": {
                                "kind": "Identifier",
                                "text": "args"
                              },
                              "type": {
                                "elementType": {
                                  "kind": "AnyKeyword"
                                },
                                "kind": "ArrayType"
                              }
                            }
                          ],
                          "type": {
                            "kind": "StringKeyword"
                          }
                        }
                      }
                    ],
                    "type": {
                      "kind": "StringKeyword"
                    }
                  }
                ]
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "replacer"
              },
              "type": {
                "kind": "FunctionType",
                "parameters": [
                  {
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "substring"
                    },
                    "type": {
                      "kind": "StringKeyword"
                    }
                  },
                  {
                    "dotDotDotToken": {
                      "kind": "DotDotDotToken"
                    },
                    "kind": "Parameter",
                    "name": {
                      "kind": "Identifier",
                      "text": "args"
                    },
                    "type": {
                      "elementType": {
                        "kind": "AnyKeyword"
                      },
                      "kind": "ArrayType"
                    }
                  }
                ],
                "type": {
                  "kind": "StringKeyword"
                }
              }
            }
          ],
          "type": {
            "kind": "StringKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "search"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "searcher"
              },
              "type": {
                "kind": "TypeLiteral",
                "members": [
                  {
                    "kind": "MethodSignature",
                    "name": {
                      "expression": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "Symbol"
                        },
                        "kind": "PropertyAccessExpression",
                        "name": {
                          "kind": "Identifier",
                          "text": "search"
                        }
                      },
                      "kind": "ComputedPropertyName"
                    },
                    "parameters": [
                      {
                        "kind": "Parameter",
                        "name": {
                          "kind": "Identifier",
                          "text": "string"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      }
                    ],
                    "type": {
                      "kind": "NumberKeyword"
                    }
                  }
                ]
              }
            }
          ],
          "type": {
            "kind": "NumberKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "split"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "splitter"
              },
              "type": {
                "kind": "TypeLiteral",
                "members": [
                  {
                    "kind": "MethodSignature",
                    "name": {
                      "expression": {
                        "expression": {
                          "kind": "Identifier",
                          "text": "Symbol"
                        },
                        "kind": "PropertyAccessExpression",
                        "name": {
                          "kind": "Identifier",
                          "text": "split"
                        }
                      },
                      "kind": "ComputedPropertyName"
                    },
                    "parameters": [
                      {
                        "kind": "Parameter",
                        "name": {
                          "kind": "Identifier",
                          "text": "string"
                        },
                        "type": {
                          "kind": "StringKeyword"
                        }
                      },
                      {
                        "kind": "Parameter",
                        "name": {
                          "kind": "Identifier",
                          "text": "limit"
                        },
                        "questionToken": {
                          "kind": "QuestionToken"
                        },
                        "type": {
                          "kind": "NumberKeyword"
                        }
                      }
                    ],
                    "type": {
                      "elementType": {
                        "kind": "StringKeyword"
                      },
                      "kind": "ArrayType"
                    }
                  }
                ]
              }
            },
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "limit"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "NumberKeyword"
              }
            }
          ],
          "type": {
            "elementType": {
              "kind": "StringKeyword"
            },
            "kind": "ArrayType"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "String"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "ArrayBuffer"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "StringKeyword"
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "DataView"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "LiteralType",
            "literal": {
              "kind": "StringLiteral",
              "text": "Int8Array"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Int8Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "LiteralType",
            "literal": {
              "kind": "StringLiteral",
              "text": "Uint8Array"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Uint8Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "LiteralType",
            "literal": {
              "kind": "StringLiteral",
              "text": "Uint8ClampedArray"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Uint8ClampedArray"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "LiteralType",
            "literal": {
              "kind": "StringLiteral",
              "text": "Int16Array"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Int16Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "LiteralType",
            "literal": {
              "kind": "StringLiteral",
              "text": "Uint16Array"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Uint16Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "LiteralType",
            "literal": {
              "kind": "StringLiteral",
              "text": "Int32Array"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Int32Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "LiteralType",
            "literal": {
              "kind": "StringLiteral",
              "text": "Uint32Array"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Uint32Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "LiteralType",
            "literal": {
              "kind": "StringLiteral",
              "text": "Float32Array"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Float32Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "toStringTag"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "LiteralType",
            "literal": {
              "kind": "StringLiteral",
              "text": "Float64Array"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "Float64Array"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "species"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "ArrayConstructor"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "ArrayConstructor"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "species"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "MapConstructor"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "MapConstructor"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "species"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "SetConstructor"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "SetConstructor"
      }
    },
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "expression": {
              "expression": {
                "kind": "Identifier",
                "text": "Symbol"
              },
              "kind": "PropertyAccessExpression",
              "name": {
                "kind": "Identifier",
                "text": "species"
              }
            },
            "kind": "ComputedPropertyName"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "ArrayBufferConstructor"
            }
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "ArrayBufferConstructor"
      }
    }
  ],
  "text": "/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib=\"true\"/>\n\n/// <reference lib=\"es2015.symbol\" />\n\ninterface SymbolConstructor {\n    /**\n     * A method that determines if a constructor object recognizes an object as one of the\n     * constructor’s instances. Called by the semantics of the instanceof operator.\n     */\n    readonly hasInstance: unique symbol;\n\n    /**\n     * A Boolean value that if true indicates that an object should flatten to its array elements\n     * by Array.prototype.concat.\n     */\n    readonly isConcatSpreadable: unique symbol;\n\n    /**\n     * A regular expression method that matches the regular expression against a string. Called\n     * by the String.prototype.match method.\n     */\n    readonly match: unique symbol;\n\n    /**\n     * A regular expression method that replaces matched substrings of a string. Called by the\n     * String.prototype.replace method.\n     */\n    readonly replace: unique symbol;\n\n    /**\n     * A regular expression method that returns the index within a string that matches the\n     * regular expression. Called by the String.prototype.search method.\n     */\n    readonly search: unique symbol;\n\n    /**\n     * A function valued property that is the constructor function that is used to create\n     * derived objects.\n     */\n    readonly species: unique symbol;\n\n    /**\n     * A regular expression method that splits a string at the indices that match the regular\n     * expression. Called by the String.prototype.split method.\n     */\n    readonly split: unique symbol;\n\n    /**\n     * A method that converts an object to a corresponding primitive value.\n     * Called by the ToPrimitive abstract operation.\n     */\n    readonly toPrimitive: unique symbol;\n\n    /**\n     * A String value that is used in the creation of the default string description of an object.\n     * Called by the built-in method Object.prototype.toString.\n     */\n    readonly toStringTag: unique symbol;\n\n    /**\n     * An Object whose truthy properties are properties that are excluded from the 'with'\n     * environment bindings of the associated objects.\n     */\n    readonly unscopables: unique symbol;\n}\n\ninterface Symbol {\n    /**\n     * Converts a Symbol object to a symbol.\n     */\n    [Symbol.toPrimitive](hint: string): symbol;\n\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Array<T> {\n    /**\n     * Is an object whose properties have the value 'true'\n     * when they will be absent when used in a 'with' statement.\n     */\n    readonly [Symbol.unscopables]: {\n        [K in keyof any[]]?: boolean;\n    };\n}\n\ninterface ReadonlyArray<T> {\n    /**\n     * Is an object whose properties have the value 'true'\n     * when they will be absent when used in a 'with' statement.\n     */\n    readonly [Symbol.unscopables]: {\n        [K in keyof readonly any[]]?: boolean;\n    };\n}\n\ninterface Date {\n    /**\n     * Converts a Date object to a string.\n     */\n    [Symbol.toPrimitive](hint: \"default\"): string;\n    /**\n     * Converts a Date object to a string.\n     */\n    [Symbol.toPrimitive](hint: \"string\"): string;\n    /**\n     * Converts a Date object to a number.\n     */\n    [Symbol.toPrimitive](hint: \"number\"): number;\n    /**\n     * Converts a Date object to a string or number.\n     *\n     * @param hint The strings \"number\", \"string\", or \"default\" to specify what primitive to return.\n     *\n     * @throws {TypeError} If 'hint' was given something other than \"number\", \"string\", or \"default\".\n     * @returns A number if 'hint' was \"number\", a string if 'hint' was \"string\" or \"default\".\n     */\n    [Symbol.toPrimitive](hint: string): string | number;\n}\n\ninterface Map<K, V> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface WeakMap<K extends WeakKey, V> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Set<T> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface WeakSet<T extends WeakKey> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface JSON {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Function {\n    /**\n     * Determines whether the given value inherits from this function if this function was used\n     * as a constructor function.\n     *\n     * A constructor function can control which objects are recognized as its instances by\n     * 'instanceof' by overriding this method.\n     */\n    [Symbol.hasInstance](value: any): boolean;\n}\n\ninterface GeneratorFunction {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Math {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Promise<T> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface PromiseConstructor {\n    readonly [Symbol.species]: PromiseConstructor;\n}\n\ninterface RegExp {\n    /**\n     * Matches a string with this regular expression, and returns an array containing the results of\n     * that search.\n     * @param string A string to search within.\n     */\n    [Symbol.match](string: string): RegExpMatchArray | null;\n\n    /**\n     * Replaces text in a string, using this regular expression.\n     * @param string A String object or string literal whose contents matching against\n     *               this regular expression will be replaced\n     * @param replaceValue A String object or string literal containing the text to replace for every\n     *                     successful match of this regular expression.\n     */\n    [Symbol.replace](string: string, replaceValue: string): string;\n\n    /**\n     * Replaces text in a string, using this regular expression.\n     * @param string A String object or string literal whose contents matching against\n     *               this regular expression will be replaced\n     * @param replacer A function that returns the replacement text.\n     */\n    [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string;\n\n    /**\n     * Finds the position beginning first substring match in a regular expression search\n     * using this regular expression.\n     *\n     * @param string The string to search within.\n     */\n    [Symbol.search](string: string): number;\n\n    /**\n     * Returns an array of substrings that were delimited by strings in the original input that\n     * match against this regular expression.\n     *\n     * If the regular expression contains capturing parentheses, then each time this\n     * regular expression matches, the results (including any undefined results) of the\n     * capturing parentheses are spliced.\n     *\n     * @param string string value to split\n     * @param limit if not undefined, the output array is truncated so that it contains no more\n     * than 'limit' elements.\n     */\n    [Symbol.split](string: string, limit?: number): string[];\n}\n\ninterface RegExpConstructor {\n    readonly [Symbol.species]: RegExpConstructor;\n}\n\ninterface String {\n    /**\n     * Matches a string or an object that supports being matched against, and returns an array\n     * containing the results of that search, or null if no matches are found.\n     * @param matcher An object that supports being matched against.\n     */\n    match(matcher: { [Symbol.match](string: string): RegExpMatchArray | null; }): RegExpMatchArray | null;\n\n    /**\n     * Passes a string and {@linkcode replaceValue} to the `[Symbol.replace]` method on {@linkcode searchValue}. This method is expected to implement its own replacement algorithm.\n     * @param searchValue An object that supports searching for and replacing matches within a string.\n     * @param replaceValue The replacement text.\n     */\n    replace(searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string;\n\n    /**\n     * Replaces text in a string, using an object that supports replacement within a string.\n     * @param searchValue A object can search for and replace matches within a string.\n     * @param replacer A function that returns the replacement text.\n     */\n    replace(searchValue: { [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string; }, replacer: (substring: string, ...args: any[]) => string): string;\n\n    /**\n     * Finds the first substring match in a regular expression search.\n     * @param searcher An object which supports searching within a string.\n     */\n    search(searcher: { [Symbol.search](string: string): number; }): number;\n\n    /**\n     * Split a string into substrings using the specified separator and return them as an array.\n     * @param splitter An object that can split a string.\n     * @param limit A value used to limit the number of elements returned in the array.\n     */\n    split(splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[];\n}\n\ninterface ArrayBuffer {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface DataView {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Int8Array {\n    readonly [Symbol.toStringTag]: \"Int8Array\";\n}\n\ninterface Uint8Array {\n    readonly [Symbol.toStringTag]: \"Uint8Array\";\n}\n\ninterface Uint8ClampedArray {\n    readonly [Symbol.toStringTag]: \"Uint8ClampedArray\";\n}\n\ninterface Int16Array {\n    readonly [Symbol.toStringTag]: \"Int16Array\";\n}\n\ninterface Uint16Array {\n    readonly [Symbol.toStringTag]: \"Uint16Array\";\n}\n\ninterface Int32Array {\n    readonly [Symbol.toStringTag]: \"Int32Array\";\n}\n\ninterface Uint32Array {\n    readonly [Symbol.toStringTag]: \"Uint32Array\";\n}\n\ninterface Float32Array {\n    readonly [Symbol.toStringTag]: \"Float32Array\";\n}\n\ninterface Float64Array {\n    readonly [Symbol.toStringTag]: \"Float64Array\";\n}\n\ninterface ArrayConstructor {\n    readonly [Symbol.species]: ArrayConstructor;\n}\ninterface MapConstructor {\n    readonly [Symbol.species]: MapConstructor;\n}\ninterface SetConstructor {\n    readonly [Symbol.species]: SetConstructor;\n}\ninterface ArrayBufferConstructor {\n    readonly [Symbol.species]: ArrayBufferConstructor;\n}\n",
  "typeReferenceDirectives": []
}
