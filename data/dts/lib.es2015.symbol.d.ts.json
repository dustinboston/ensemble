{
  "endOfFileToken": {
    "kind": "EndOfFileToken"
  },
  "fileName": "data/dts/lib.es2015.symbol.d.ts",
  "hasNoDefaultLib": true,
  "isDeclarationFile": true,
  "kind": "SourceFile",
  "libReferenceDirectives": [],
  "referencedFiles": [],
  "statements": [
    {
      "kind": "InterfaceDeclaration",
      "members": [
        {
          "kind": "PropertySignature",
          "modifiers": [
            {
              "kind": "ReadonlyKeyword"
            }
          ],
          "name": {
            "kind": "Identifier",
            "text": "prototype"
          },
          "type": {
            "kind": "TypeReference",
            "typeName": {
              "kind": "Identifier",
              "text": "Symbol"
            }
          }
        },
        {
          "kind": "CallSignature",
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "description"
              },
              "questionToken": {
                "kind": "QuestionToken"
              },
              "type": {
                "kind": "UnionType",
                "types": [
                  {
                    "kind": "StringKeyword"
                  },
                  {
                    "kind": "NumberKeyword"
                  }
                ]
              }
            }
          ],
          "type": {
            "kind": "SymbolKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "for"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "key"
              },
              "type": {
                "kind": "StringKeyword"
              }
            }
          ],
          "type": {
            "kind": "SymbolKeyword"
          }
        },
        {
          "kind": "MethodSignature",
          "name": {
            "kind": "Identifier",
            "text": "keyFor"
          },
          "parameters": [
            {
              "kind": "Parameter",
              "name": {
                "kind": "Identifier",
                "text": "sym"
              },
              "type": {
                "kind": "SymbolKeyword"
              }
            }
          ],
          "type": {
            "kind": "UnionType",
            "types": [
              {
                "kind": "StringKeyword"
              },
              {
                "kind": "UndefinedKeyword"
              }
            ]
          }
        }
      ],
      "name": {
        "kind": "Identifier",
        "text": "SymbolConstructor"
      }
    },
    {
      "declarationList": {
        "declarations": [
          {
            "kind": "VariableDeclaration",
            "name": {
              "kind": "Identifier",
              "text": "Symbol"
            },
            "type": {
              "kind": "TypeReference",
              "typeName": {
                "kind": "Identifier",
                "text": "SymbolConstructor"
              }
            }
          }
        ],
        "kind": "VariableDeclarationList"
      },
      "kind": "FirstStatement",
      "modifiers": [
        {
          "kind": "DeclareKeyword"
        }
      ]
    }
  ],
  "text": "/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n/// <reference no-default-lib=\"true\"/>\n\ninterface SymbolConstructor {\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: Symbol;\n\n    /**\n     * Returns a new unique Symbol value.\n     * @param  description Description of the new Symbol object.\n     */\n    (description?: string | number): symbol;\n\n    /**\n     * Returns a Symbol object from the global symbol registry matching the given key if found.\n     * Otherwise, returns a new symbol with this key.\n     * @param key key to search for.\n     */\n    for(key: string): symbol;\n\n    /**\n     * Returns a key from the global symbol registry matching the given Symbol if found.\n     * Otherwise, returns a undefined.\n     * @param sym Symbol to find the key for.\n     */\n    keyFor(sym: symbol): string | undefined;\n}\n\ndeclare var Symbol: SymbolConstructor;\n",
  "typeReferenceDirectives": []
}
