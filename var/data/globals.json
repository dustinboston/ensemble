{
  "globalThis": {
    "kind": "GlobalObject",
    "name": "globalThis",
    "members": [
      {
        "kind": "Property",
        "name": "SVGMatrix",
        "isStatic": false,
        "returnType": "(typeof DOMMatrix)"
      },
      {
        "kind": "Property",
        "name": "WebKitCSSMatrix",
        "isStatic": false,
        "returnType": "(typeof DOMMatrix)"
      },
      {
        "kind": "Property",
        "name": "SVGPoint",
        "isStatic": false,
        "returnType": "(typeof DOMPoint)"
      },
      {
        "kind": "Property",
        "name": "SVGRect",
        "isStatic": false,
        "returnType": "(typeof DOMRect)"
      },
      {
        "kind": "Property",
        "name": "webkitURL",
        "isStatic": false,
        "returnType": "(typeof URL)"
      },
      {
        "kind": "Property",
        "name": "console",
        "isStatic": false,
        "returnType": "Console"
      },
      {
        "kind": "Property",
        "name": "clientInformation",
        "isStatic": false,
        "returnType": "Navigator"
      },
      {
        "kind": "Property",
        "name": "closed",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "customElements",
        "isStatic": false,
        "returnType": "CustomElementRegistry"
      },
      {
        "kind": "Property",
        "name": "devicePixelRatio",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "document",
        "isStatic": false,
        "returnType": "Document"
      },
      {
        "kind": "Property",
        "name": "event",
        "isStatic": false,
        "returnType": "(or Event undefined)"
      },
      {
        "kind": "Property",
        "name": "external",
        "isStatic": false,
        "returnType": "External"
      },
      {
        "kind": "Property",
        "name": "frameElement",
        "isStatic": false,
        "returnType": "(or Element null)"
      },
      {
        "kind": "Property",
        "name": "frames",
        "isStatic": false,
        "returnType": "WindowProxy"
      },
      {
        "kind": "Property",
        "name": "history",
        "isStatic": false,
        "returnType": "History"
      },
      {
        "kind": "Property",
        "name": "innerHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "innerWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "location",
        "isStatic": false,
        "returnType": "Location"
      },
      {
        "kind": "Property",
        "name": "locationbar",
        "isStatic": false,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "menubar",
        "isStatic": false,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "navigator",
        "isStatic": false,
        "returnType": "Navigator"
      },
      {
        "kind": "Property",
        "name": "ondevicemotion",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<DeviceMotionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondeviceorientation",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<DeviceOrientationEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondeviceorientationabsolute",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<DeviceOrientationEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onorientationchange",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "opener",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "orientation",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "outerHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "outerWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "pageXOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "pageYOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "parent",
        "isStatic": false,
        "returnType": "WindowProxy"
      },
      {
        "kind": "Property",
        "name": "personalbar",
        "isStatic": false,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "screen",
        "isStatic": false,
        "returnType": "Screen"
      },
      {
        "kind": "Property",
        "name": "screenLeft",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "screenTop",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "screenX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "screenY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scrollX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scrollY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scrollbars",
        "isStatic": false,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "self",
        "isStatic": false,
        "returnType": "(intersect Window (typeof globalThis))"
      },
      {
        "kind": "Property",
        "name": "speechSynthesis",
        "isStatic": false,
        "returnType": "SpeechSynthesis"
      },
      {
        "kind": "Property",
        "name": "status",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "statusbar",
        "isStatic": false,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "toolbar",
        "isStatic": false,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "top",
        "isStatic": false,
        "returnType": "(or WindowProxy null)"
      },
      {
        "kind": "Property",
        "name": "visualViewport",
        "isStatic": false,
        "returnType": "(or VisualViewport null)"
      },
      {
        "kind": "Property",
        "name": "window",
        "isStatic": false,
        "returnType": "(intersect Window (typeof globalThis))"
      },
      {
        "kind": "Property",
        "name": "onabort",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<UIEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onanimationcancel",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<AnimationEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onanimationend",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<AnimationEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onanimationiteration",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<AnimationEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onanimationstart",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<AnimationEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onauxclick",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MouseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onbeforeinput",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<InputEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onbeforetoggle",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onblur",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<FocusEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncancel",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncanplay",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncanplaythrough",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onchange",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onclick",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MouseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onclose",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncontextlost",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncontextmenu",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MouseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncontextrestored",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncopy",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<ClipboardEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncuechange",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncut",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<ClipboardEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondblclick",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MouseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondrag",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<DragEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondragend",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<DragEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondragenter",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<DragEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondragleave",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<DragEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondragover",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<DragEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondragstart",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<DragEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondrop",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<DragEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondurationchange",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onemptied",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onended",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": false,
        "returnType": "OnErrorEventHandler"
      },
      {
        "kind": "Property",
        "name": "onfocus",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<FocusEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onformdata",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<FormDataEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ongotpointercapture",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PointerEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oninput",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oninvalid",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onkeydown",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<KeyboardEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onkeypress",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<KeyboardEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onkeyup",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<KeyboardEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onload",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadeddata",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadedmetadata",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadstart",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onlostpointercapture",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PointerEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmousedown",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MouseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmouseenter",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MouseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmouseleave",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MouseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmousemove",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MouseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmouseout",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MouseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmouseover",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MouseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmouseup",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MouseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpaste",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<ClipboardEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpause",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onplay",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onplaying",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpointercancel",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PointerEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpointerdown",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PointerEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpointerenter",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PointerEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpointerleave",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PointerEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpointermove",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PointerEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpointerout",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PointerEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpointerover",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PointerEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpointerup",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PointerEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onprogress",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onratechange",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onreset",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onresize",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<UIEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onscroll",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onscrollend",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onsecuritypolicyviolation",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<SecurityPolicyViolationEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onseeked",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onseeking",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onselect",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onselectionchange",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onselectstart",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onslotchange",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onstalled",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onsubmit",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<SubmitEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onsuspend",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ontimeupdate",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ontoggle",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ontouchcancel",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<TouchEvent>])<any>) null undefined)"
      },
      {
        "kind": "Property",
        "name": "ontouchend",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<TouchEvent>])<any>) null undefined)"
      },
      {
        "kind": "Property",
        "name": "ontouchmove",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<TouchEvent>])<any>) null undefined)"
      },
      {
        "kind": "Property",
        "name": "ontouchstart",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<TouchEvent>])<any>) null undefined)"
      },
      {
        "kind": "Property",
        "name": "ontransitioncancel",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<TransitionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ontransitionend",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<TransitionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ontransitionrun",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<TransitionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ontransitionstart",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<TransitionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onvolumechange",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onwaiting",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onwebkitanimationend",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onwebkitanimationiteration",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onwebkitanimationstart",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onwebkittransitionend",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onwheel",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<WheelEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onafterprint",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onbeforeprint",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onbeforeunload",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<BeforeUnloadEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ongamepadconnected",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<GamepadEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ongamepaddisconnected",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<GamepadEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onhashchange",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<HashChangeEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onlanguagechange",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessageerror",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onoffline",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ononline",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpagehide",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PageTransitionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpageshow",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PageTransitionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpopstate",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PopStateEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onrejectionhandled",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PromiseRejectionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onstorage",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<StorageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onunhandledrejection",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<PromiseRejectionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onunload",
        "isStatic": false,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "localStorage",
        "isStatic": false,
        "returnType": "Storage"
      },
      {
        "kind": "Property",
        "name": "caches",
        "isStatic": false,
        "returnType": "CacheStorage"
      },
      {
        "kind": "Property",
        "name": "crossOriginIsolated",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "crypto",
        "isStatic": false,
        "returnType": "Crypto"
      },
      {
        "kind": "Property",
        "name": "indexedDB",
        "isStatic": false,
        "returnType": "IDBFactory"
      },
      {
        "kind": "Property",
        "name": "isSecureContext",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "origin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "performance",
        "isStatic": false,
        "returnType": "Performance"
      },
      {
        "kind": "Property",
        "name": "sessionStorage",
        "isStatic": false,
        "returnType": "Storage"
      },
      {
        "kind": "Method",
        "name": "alert",
        "isStatic": false,
        "params": "[(optional message<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "blur",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "cancelIdleCallback",
        "isStatic": false,
        "params": "[handle<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "captureEvents",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "confirm",
        "isStatic": false,
        "params": "[(optional message<string>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "focus",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getComputedStyle",
        "isStatic": false,
        "params": "[elt<Element> (optional pseudoElt<(or string null)>)]",
        "returnType": "CSSStyleDeclaration"
      },
      {
        "kind": "Method",
        "name": "getSelection",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Selection null)"
      },
      {
        "kind": "Method",
        "name": "matchMedia",
        "isStatic": false,
        "params": "[query<string>]",
        "returnType": "MediaQueryList"
      },
      {
        "kind": "Method",
        "name": "moveBy",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "moveTo",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[(optional url<(or string URL)>) (optional target<string>) (optional features<string>)]",
        "returnType": "(or WindowProxy null)"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> targetOrigin<string> (optional transfer<(array Transferable)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> (optional options<WindowPostMessageOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "print",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "prompt",
        "isStatic": false,
        "params": "[(optional message<string>) (optional _default<string>)]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "releaseEvents",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "requestIdleCallback",
        "isStatic": false,
        "params": "[callback<IdleRequestCallback> (optional options<IdleRequestOptions>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "resizeBy",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resizeTo",
        "isStatic": false,
        "params": "[width<number> height<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scroll",
        "isStatic": false,
        "params": "[(optional options<ScrollToOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scroll",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollBy",
        "isStatic": false,
        "params": "[(optional options<ScrollToOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollBy",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollTo",
        "isStatic": false,
        "params": "[(optional options<ScrollToOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollTo",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stop",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "dispatchEvent",
        "isStatic": false,
        "params": "[event<Event>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "cancelAnimationFrame",
        "isStatic": false,
        "params": "[handle<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "requestAnimationFrame",
        "isStatic": false,
        "params": "[callback<FrameRequestCallback>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "atob",
        "isStatic": false,
        "params": "[data<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "btoa",
        "isStatic": false,
        "params": "[data<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "clearInterval",
        "isStatic": false,
        "params": "[id<(or number undefined)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearTimeout",
        "isStatic": false,
        "params": "[id<(or number undefined)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createImageBitmap",
        "isStatic": false,
        "params": "[image<ImageBitmapSource> (optional options<ImageBitmapOptions>)]",
        "returnType": "Promise<ImageBitmap>"
      },
      {
        "kind": "Method",
        "name": "createImageBitmap",
        "isStatic": false,
        "params": "[image<ImageBitmapSource> sx<number> sy<number> sw<number> sh<number> (optional options<ImageBitmapOptions>)]",
        "returnType": "Promise<ImageBitmap>"
      },
      {
        "kind": "Method",
        "name": "fetch",
        "isStatic": false,
        "params": "[input<(or RequestInfo URL)> (optional init<RequestInit>)]",
        "returnType": "Promise<Response>"
      },
      {
        "kind": "Method",
        "name": "queueMicrotask",
        "isStatic": false,
        "params": "[callback<VoidFunction>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reportError",
        "isStatic": false,
        "params": "[e<any>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setInterval",
        "isStatic": false,
        "params": "[handler<TimerHandler> (optional timeout<number>) (& rest<arguments<(array any)>>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setTimeout",
        "isStatic": false,
        "params": "[handler<TimerHandler> (optional timeout<number>) (& rest<arguments<(array any)>>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "structuredClone",
        "isStatic": false,
        "params": "[value<T> (optional options<StructuredSerializeOptions>)]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Window> ev<(get WindowEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Window> ev<(get WindowEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "Map",
        "isStatic": false,
        "returnType": "MapConstructor"
      },
      {
        "kind": "Property",
        "name": "WeakMap",
        "isStatic": false,
        "returnType": "WeakMapConstructor"
      },
      {
        "kind": "Property",
        "name": "Set",
        "isStatic": false,
        "returnType": "SetConstructor"
      },
      {
        "kind": "Property",
        "name": "WeakSet",
        "isStatic": false,
        "returnType": "WeakSetConstructor"
      },
      {
        "kind": "Property",
        "name": "Promise",
        "isStatic": false,
        "returnType": "PromiseConstructor"
      },
      {
        "kind": "Property",
        "name": "Proxy",
        "isStatic": false,
        "returnType": "ProxyConstructor"
      },
      {
        "kind": "Property",
        "name": "Symbol",
        "isStatic": false,
        "returnType": "SymbolConstructor"
      },
      {
        "kind": "Property",
        "name": "SharedArrayBuffer",
        "isStatic": false,
        "returnType": "SharedArrayBufferConstructor"
      },
      {
        "kind": "Property",
        "name": "Atomics",
        "isStatic": false,
        "returnType": "Atomics"
      },
      {
        "kind": "Property",
        "name": "BigInt",
        "isStatic": false,
        "returnType": "BigIntConstructor"
      },
      {
        "kind": "Property",
        "name": "BigInt64Array",
        "isStatic": false,
        "returnType": "BigInt64ArrayConstructor"
      },
      {
        "kind": "Property",
        "name": "BigUint64Array",
        "isStatic": false,
        "returnType": "BigUint64ArrayConstructor"
      },
      {
        "kind": "Property",
        "name": "AggregateError",
        "isStatic": false,
        "returnType": "AggregateErrorConstructor"
      },
      {
        "kind": "Property",
        "name": "WeakRef",
        "isStatic": false,
        "returnType": "WeakRefConstructor"
      },
      {
        "kind": "Property",
        "name": "FinalizationRegistry",
        "isStatic": false,
        "returnType": "FinalizationRegistryConstructor"
      },
      {
        "kind": "Property",
        "name": "NaN",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "Infinity",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "Object",
        "isStatic": false,
        "returnType": "ObjectConstructor"
      },
      {
        "kind": "Property",
        "name": "Function",
        "isStatic": false,
        "returnType": "FunctionConstructor"
      },
      {
        "kind": "Property",
        "name": "String",
        "isStatic": false,
        "returnType": "StringConstructor"
      },
      {
        "kind": "Property",
        "name": "Boolean",
        "isStatic": false,
        "returnType": "BooleanConstructor"
      },
      {
        "kind": "Property",
        "name": "Number",
        "isStatic": false,
        "returnType": "NumberConstructor"
      },
      {
        "kind": "Property",
        "name": "Math",
        "isStatic": false,
        "returnType": "Math"
      },
      {
        "kind": "Property",
        "name": "Date",
        "isStatic": false,
        "returnType": "DateConstructor"
      },
      {
        "kind": "Property",
        "name": "RegExp",
        "isStatic": false,
        "returnType": "RegExpConstructor"
      },
      {
        "kind": "Property",
        "name": "Error",
        "isStatic": false,
        "returnType": "ErrorConstructor"
      },
      {
        "kind": "Property",
        "name": "EvalError",
        "isStatic": false,
        "returnType": "EvalErrorConstructor"
      },
      {
        "kind": "Property",
        "name": "RangeError",
        "isStatic": false,
        "returnType": "RangeErrorConstructor"
      },
      {
        "kind": "Property",
        "name": "ReferenceError",
        "isStatic": false,
        "returnType": "ReferenceErrorConstructor"
      },
      {
        "kind": "Property",
        "name": "SyntaxError",
        "isStatic": false,
        "returnType": "SyntaxErrorConstructor"
      },
      {
        "kind": "Property",
        "name": "TypeError",
        "isStatic": false,
        "returnType": "TypeErrorConstructor"
      },
      {
        "kind": "Property",
        "name": "URIError",
        "isStatic": false,
        "returnType": "URIErrorConstructor"
      },
      {
        "kind": "Property",
        "name": "JSON",
        "isStatic": false,
        "returnType": "JSON"
      },
      {
        "kind": "Property",
        "name": "Array",
        "isStatic": false,
        "returnType": "ArrayConstructor"
      },
      {
        "kind": "Property",
        "name": "ArrayBuffer",
        "isStatic": false,
        "returnType": "ArrayBufferConstructor"
      },
      {
        "kind": "Property",
        "name": "DataView",
        "isStatic": false,
        "returnType": "DataViewConstructor"
      },
      {
        "kind": "Property",
        "name": "Int8Array",
        "isStatic": false,
        "returnType": "Int8ArrayConstructor"
      },
      {
        "kind": "Property",
        "name": "Uint8Array",
        "isStatic": false,
        "returnType": "Uint8ArrayConstructor"
      },
      {
        "kind": "Property",
        "name": "Uint8ClampedArray",
        "isStatic": false,
        "returnType": "Uint8ClampedArrayConstructor"
      },
      {
        "kind": "Property",
        "name": "Int16Array",
        "isStatic": false,
        "returnType": "Int16ArrayConstructor"
      },
      {
        "kind": "Property",
        "name": "Uint16Array",
        "isStatic": false,
        "returnType": "Uint16ArrayConstructor"
      },
      {
        "kind": "Property",
        "name": "Int32Array",
        "isStatic": false,
        "returnType": "Int32ArrayConstructor"
      },
      {
        "kind": "Property",
        "name": "Uint32Array",
        "isStatic": false,
        "returnType": "Uint32ArrayConstructor"
      },
      {
        "kind": "Property",
        "name": "Float32Array",
        "isStatic": false,
        "returnType": "Float32ArrayConstructor"
      },
      {
        "kind": "Property",
        "name": "Float64Array",
        "isStatic": false,
        "returnType": "Float64ArrayConstructor"
      },
      {
        "kind": "Method",
        "name": "eval",
        "isStatic": false,
        "params": "[x<string>]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "parseInt",
        "isStatic": false,
        "params": "[string<string> (optional radix<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "parseFloat",
        "isStatic": false,
        "params": "[string<string>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "isNaN",
        "isStatic": false,
        "params": "[number<number>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isFinite",
        "isStatic": false,
        "params": "[number<number>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "decodeURI",
        "isStatic": false,
        "params": "[encodedURI<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "decodeURIComponent",
        "isStatic": false,
        "params": "[encodedURIComponent<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "encodeURI",
        "isStatic": false,
        "params": "[uri<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "encodeURIComponent",
        "isStatic": false,
        "params": "[uriComponent<(or string number boolean)>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "escape",
        "isStatic": false,
        "params": "[string<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "unescape",
        "isStatic": false,
        "params": "[string<string>]",
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "SuppressedError",
        "isStatic": false,
        "returnType": "SuppressedErrorConstructor"
      },
      {
        "kind": "Property",
        "name": "DisposableStack",
        "isStatic": false,
        "returnType": "DisposableStackConstructor"
      },
      {
        "kind": "Property",
        "name": "AsyncDisposableStack",
        "isStatic": false,
        "returnType": "AsyncDisposableStackConstructor"
      },
      {
        "kind": "Property",
        "name": "ActiveXObject",
        "isStatic": false,
        "returnType": "ActiveXObject"
      },
      {
        "kind": "Property",
        "name": "WSH",
        "isStatic": false,
        "returnType": "(typeof WScript)"
      },
      {
        "kind": "Property",
        "name": "Enumerator",
        "isStatic": false,
        "returnType": "EnumeratorConstructor"
      },
      {
        "kind": "Property",
        "name": "VBArray",
        "isStatic": false,
        "returnType": "VBArrayConstructor"
      },
      {
        "kind": "Property",
        "name": "console",
        "isStatic": false,
        "returnType": "Console"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": false,
        "returnType": "(or (list (function [this<DedicatedWorkerGlobalScope> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessageerror",
        "isStatic": false,
        "returnType": "(or (list (function [this<DedicatedWorkerGlobalScope> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onrtctransform",
        "isStatic": false,
        "returnType": "(or (list (function [this<DedicatedWorkerGlobalScope> ev<RTCTransformEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "location",
        "isStatic": false,
        "returnType": "WorkerLocation"
      },
      {
        "kind": "Property",
        "name": "navigator",
        "isStatic": false,
        "returnType": "WorkerNavigator"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": false,
        "returnType": "(or (list (function [this<DedicatedWorkerGlobalScope> ev<ErrorEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onlanguagechange",
        "isStatic": false,
        "returnType": "(or (list (function [this<DedicatedWorkerGlobalScope> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onoffline",
        "isStatic": false,
        "returnType": "(or (list (function [this<DedicatedWorkerGlobalScope> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ononline",
        "isStatic": false,
        "returnType": "(or (list (function [this<DedicatedWorkerGlobalScope> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onrejectionhandled",
        "isStatic": false,
        "returnType": "(or (list (function [this<DedicatedWorkerGlobalScope> ev<PromiseRejectionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onunhandledrejection",
        "isStatic": false,
        "returnType": "(or (list (function [this<DedicatedWorkerGlobalScope> ev<PromiseRejectionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "self",
        "isStatic": false,
        "returnType": "(intersect WorkerGlobalScope (typeof globalThis))"
      },
      {
        "kind": "Property",
        "name": "fonts",
        "isStatic": false,
        "returnType": "FontFaceSet"
      },
      {
        "kind": "Property",
        "name": "caches",
        "isStatic": false,
        "returnType": "CacheStorage"
      },
      {
        "kind": "Property",
        "name": "crossOriginIsolated",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "crypto",
        "isStatic": false,
        "returnType": "Crypto"
      },
      {
        "kind": "Property",
        "name": "indexedDB",
        "isStatic": false,
        "returnType": "IDBFactory"
      },
      {
        "kind": "Property",
        "name": "isSecureContext",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "origin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "performance",
        "isStatic": false,
        "returnType": "Performance"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> transfer<(array Transferable)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> (optional options<StructuredSerializeOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dispatchEvent",
        "isStatic": false,
        "params": "[event<Event>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "importScripts",
        "isStatic": false,
        "params": "[(& rest<urls<(array (list (or string URL)))>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dispatchEvent",
        "isStatic": false,
        "params": "[event<Event>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "atob",
        "isStatic": false,
        "params": "[data<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "btoa",
        "isStatic": false,
        "params": "[data<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "clearInterval",
        "isStatic": false,
        "params": "[id<(or number undefined)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearTimeout",
        "isStatic": false,
        "params": "[id<(or number undefined)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createImageBitmap",
        "isStatic": false,
        "params": "[image<ImageBitmapSource> (optional options<ImageBitmapOptions>)]",
        "returnType": "Promise<ImageBitmap>"
      },
      {
        "kind": "Method",
        "name": "createImageBitmap",
        "isStatic": false,
        "params": "[image<ImageBitmapSource> sx<number> sy<number> sw<number> sh<number> (optional options<ImageBitmapOptions>)]",
        "returnType": "Promise<ImageBitmap>"
      },
      {
        "kind": "Method",
        "name": "fetch",
        "isStatic": false,
        "params": "[input<(or RequestInfo URL)> (optional init<RequestInit>)]",
        "returnType": "Promise<Response>"
      },
      {
        "kind": "Method",
        "name": "queueMicrotask",
        "isStatic": false,
        "params": "[callback<VoidFunction>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reportError",
        "isStatic": false,
        "params": "[e<any>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setInterval",
        "isStatic": false,
        "params": "[handler<TimerHandler> (optional timeout<number>) (& rest<arguments<(array any)>>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setTimeout",
        "isStatic": false,
        "params": "[handler<TimerHandler> (optional timeout<number>) (& rest<arguments<(array any)>>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "structuredClone",
        "isStatic": false,
        "params": "[value<T> (optional options<StructuredSerializeOptions>)]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "cancelAnimationFrame",
        "isStatic": false,
        "params": "[handle<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "requestAnimationFrame",
        "isStatic": false,
        "params": "[callback<FrameRequestCallback>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<DedicatedWorkerGlobalScope> ev<(get DedicatedWorkerGlobalScopeEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<DedicatedWorkerGlobalScope> ev<(get DedicatedWorkerGlobalScopeEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "importScripts",
        "isStatic": false,
        "params": "[(& rest<urls<(array string)>>)]",
        "returnType": "void"
      }
    ]
  },
  "FileSystemDirectoryHandle": {
    "kind": "GlobalObject",
    "name": "FileSystemDirectoryHandle",
    "members": [
      {
        "kind": "Method",
        "name": "[Symbol.asyncIterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "FileSystemDirectoryHandleAsyncIterator<[string FileSystemHandle]>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "FileSystemDirectoryHandleAsyncIterator<[string FileSystemHandle]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "FileSystemDirectoryHandleAsyncIterator<string>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "FileSystemDirectoryHandleAsyncIterator<FileSystemHandle>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemDirectoryHandle"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemDirectoryHandle"
      },
      {
        "kind": "Property",
        "name": "kind",
        "isStatic": true,
        "returnType": "\"directory\""
      },
      {
        "kind": "Method",
        "name": "getDirectoryHandle",
        "isStatic": false,
        "params": "[name<string> (optional options<FileSystemGetDirectoryOptions>)]",
        "returnType": "Promise<FileSystemDirectoryHandle>"
      },
      {
        "kind": "Method",
        "name": "getFileHandle",
        "isStatic": false,
        "params": "[name<string> (optional options<FileSystemGetFileOptions>)]",
        "returnType": "Promise<FileSystemFileHandle>"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "isStatic": false,
        "params": "[name<string> (optional options<FileSystemRemoveOptions>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "resolve",
        "isStatic": false,
        "params": "[possibleDescendant<FileSystemHandle>]",
        "returnType": "Promise<(or (array string) null)>"
      },
      {
        "kind": "Method",
        "name": "[Symbol.asyncIterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "FileSystemDirectoryHandleAsyncIterator<[string FileSystemHandle]>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "FileSystemDirectoryHandleAsyncIterator<[string FileSystemHandle]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "FileSystemDirectoryHandleAsyncIterator<string>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "FileSystemDirectoryHandleAsyncIterator<FileSystemHandle>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemDirectoryHandle"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemDirectoryHandle"
      },
      {
        "kind": "Property",
        "name": "kind",
        "isStatic": true,
        "returnType": "\"directory\""
      },
      {
        "kind": "Method",
        "name": "getDirectoryHandle",
        "isStatic": false,
        "params": "[name<string> (optional options<FileSystemGetDirectoryOptions>)]",
        "returnType": "Promise<FileSystemDirectoryHandle>"
      },
      {
        "kind": "Method",
        "name": "getFileHandle",
        "isStatic": false,
        "params": "[name<string> (optional options<FileSystemGetFileOptions>)]",
        "returnType": "Promise<FileSystemFileHandle>"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "isStatic": false,
        "params": "[name<string> (optional options<FileSystemRemoveOptions>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "resolve",
        "isStatic": false,
        "params": "[possibleDescendant<FileSystemHandle>]",
        "returnType": "Promise<(or (array string) null)>"
      }
    ]
  },
  "ReadableStream": {
    "kind": "GlobalObject",
    "name": "ReadableStream",
    "members": [
      {
        "kind": "Method",
        "name": "[Symbol.asyncIterator]",
        "isStatic": false,
        "params": "[(optional options<ReadableStreamIteratorOptions>)]",
        "returnType": "ReadableStreamAsyncIterator<R>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[(optional options<ReadableStreamIteratorOptions>)]",
        "returnType": "ReadableStreamAsyncIterator<R>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[underlyingSource<UnderlyingByteSource> (optional strategy<{(property (optional {:highWaterMark number}))}>)]",
        "returnType": "ReadableStream<Uint8Array>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[underlyingSource<UnderlyingDefaultSource<R>> (optional strategy<QueuingStrategy<R>>)]",
        "returnType": "ReadableStream<R>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional underlyingSource<UnderlyingSource<R>>) (optional strategy<QueuingStrategy<R>>)]",
        "returnType": "ReadableStream<R>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReadableStream"
      },
      {
        "kind": "Property",
        "name": "locked",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "cancel",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "getReader",
        "isStatic": false,
        "params": "[options<{(property {:mode \"byob\"})}>]",
        "returnType": "ReadableStreamBYOBReader"
      },
      {
        "kind": "Method",
        "name": "getReader",
        "isStatic": false,
        "params": "[]",
        "returnType": "ReadableStreamDefaultReader<R>"
      },
      {
        "kind": "Method",
        "name": "getReader",
        "isStatic": false,
        "params": "[(optional options<ReadableStreamGetReaderOptions>)]",
        "returnType": "ReadableStreamReader<R>"
      },
      {
        "kind": "Method",
        "name": "pipeThrough",
        "isStatic": false,
        "params": "[transform<ReadableWritablePair<T R>> (optional options<StreamPipeOptions>)]",
        "returnType": "ReadableStream<T>"
      },
      {
        "kind": "Method",
        "name": "pipeTo",
        "isStatic": false,
        "params": "[destination<WritableStream<R>> (optional options<StreamPipeOptions>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "tee",
        "isStatic": false,
        "params": "[]",
        "returnType": "[ReadableStream<R> ReadableStream<R>]"
      },
      {
        "kind": "Method",
        "name": "[Symbol.asyncIterator]",
        "isStatic": false,
        "params": "[(optional options<ReadableStreamIteratorOptions>)]",
        "returnType": "ReadableStreamAsyncIterator<R>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[(optional options<ReadableStreamIteratorOptions>)]",
        "returnType": "ReadableStreamAsyncIterator<R>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[underlyingSource<UnderlyingByteSource> (optional strategy<{(property (optional {:highWaterMark number}))}>)]",
        "returnType": "ReadableStream<Uint8Array>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[underlyingSource<UnderlyingDefaultSource<R>> (optional strategy<QueuingStrategy<R>>)]",
        "returnType": "ReadableStream<R>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional underlyingSource<UnderlyingSource<R>>) (optional strategy<QueuingStrategy<R>>)]",
        "returnType": "ReadableStream<R>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReadableStream"
      },
      {
        "kind": "Property",
        "name": "locked",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "cancel",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "getReader",
        "isStatic": false,
        "params": "[options<{(property {:mode \"byob\"})}>]",
        "returnType": "ReadableStreamBYOBReader"
      },
      {
        "kind": "Method",
        "name": "getReader",
        "isStatic": false,
        "params": "[]",
        "returnType": "ReadableStreamDefaultReader<R>"
      },
      {
        "kind": "Method",
        "name": "getReader",
        "isStatic": false,
        "params": "[(optional options<ReadableStreamGetReaderOptions>)]",
        "returnType": "ReadableStreamReader<R>"
      },
      {
        "kind": "Method",
        "name": "pipeThrough",
        "isStatic": false,
        "params": "[transform<ReadableWritablePair<T R>> (optional options<StreamPipeOptions>)]",
        "returnType": "ReadableStream<T>"
      },
      {
        "kind": "Method",
        "name": "pipeTo",
        "isStatic": false,
        "params": "[destination<WritableStream<R>> (optional options<StreamPipeOptions>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "tee",
        "isStatic": false,
        "params": "[]",
        "returnType": "[ReadableStream<R> ReadableStream<R>]"
      }
    ]
  },
  "NodeFilter": {
    "kind": "Property",
    "name": "NodeFilter",
    "members": [
      {
        "kind": "Property",
        "name": "FILTER_ACCEPT",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "FILTER_REJECT",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "FILTER_SKIP",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SHOW_ALL",
        "isStatic": false,
        "returnType": "0xFFFFFFFF"
      },
      {
        "kind": "Property",
        "name": "SHOW_ELEMENT",
        "isStatic": false,
        "returnType": "0x1"
      },
      {
        "kind": "Property",
        "name": "SHOW_ATTRIBUTE",
        "isStatic": false,
        "returnType": "0x2"
      },
      {
        "kind": "Property",
        "name": "SHOW_TEXT",
        "isStatic": false,
        "returnType": "0x4"
      },
      {
        "kind": "Property",
        "name": "SHOW_CDATA_SECTION",
        "isStatic": false,
        "returnType": "0x8"
      },
      {
        "kind": "Property",
        "name": "SHOW_ENTITY_REFERENCE",
        "isStatic": false,
        "returnType": "0x10"
      },
      {
        "kind": "Property",
        "name": "SHOW_ENTITY",
        "isStatic": false,
        "returnType": "0x20"
      },
      {
        "kind": "Property",
        "name": "SHOW_PROCESSING_INSTRUCTION",
        "isStatic": false,
        "returnType": "0x40"
      },
      {
        "kind": "Property",
        "name": "SHOW_COMMENT",
        "isStatic": false,
        "returnType": "0x80"
      },
      {
        "kind": "Property",
        "name": "SHOW_DOCUMENT",
        "isStatic": false,
        "returnType": "0x100"
      },
      {
        "kind": "Property",
        "name": "SHOW_DOCUMENT_TYPE",
        "isStatic": false,
        "returnType": "0x200"
      },
      {
        "kind": "Property",
        "name": "SHOW_DOCUMENT_FRAGMENT",
        "isStatic": false,
        "returnType": "0x400"
      },
      {
        "kind": "Property",
        "name": "SHOW_NOTATION",
        "isStatic": false,
        "returnType": "0x800"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:FILTER_ACCEPT 1}) (property {:FILTER_REJECT 2}) (property {:FILTER_SKIP 3}) (property {:SHOW_ALL 0xFFFFFFFF}) (property {:SHOW_ELEMENT 0x1}) (property {:SHOW_ATTRIBUTE 0x2}) (property {:SHOW_TEXT 0x4}) (property {:SHOW_CDATA_SECTION 0x8}) (property {:SHOW_ENTITY_REFERENCE 0x10}) (property {:SHOW_ENTITY 0x20}) (property {:SHOW_PROCESSING_INSTRUCTION 0x40}) (property {:SHOW_COMMENT 0x80}) (property {:SHOW_DOCUMENT 0x100}) (property {:SHOW_DOCUMENT_TYPE 0x200}) (property {:SHOW_DOCUMENT_FRAGMENT 0x400}) (property {:SHOW_NOTATION 0x800})}"
  },
  "AbortController": {
    "kind": "Property",
    "name": "AbortController",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AbortController"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AbortController"
      },
      {
        "kind": "Property",
        "name": "signal",
        "isStatic": true,
        "returnType": "AbortSignal"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AbortController"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AbortController"
      },
      {
        "kind": "Property",
        "name": "signal",
        "isStatic": true,
        "returnType": "AbortSignal"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AbortController}) (new [] AbortController)}"
  },
  "AbortSignal": {
    "kind": "Property",
    "name": "AbortSignal",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AbortSignal"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AbortSignal"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "AbortSignal"
      },
      {
        "kind": "Method",
        "name": "any",
        "isStatic": false,
        "params": "[signals<(array AbortSignal)>]",
        "returnType": "AbortSignal"
      },
      {
        "kind": "Method",
        "name": "timeout",
        "isStatic": false,
        "params": "[milliseconds<number>]",
        "returnType": "AbortSignal"
      },
      {
        "kind": "Property",
        "name": "aborted",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "onabort",
        "isStatic": true,
        "returnType": "(or (list (function [this<AbortSignal> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "reason",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "throwIfAborted",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AbortSignal> ev<(get AbortSignalEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AbortSignal> ev<(get AbortSignalEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "any",
        "isStatic": false,
        "params": "[signals<Iterable<AbortSignal>>]",
        "returnType": "AbortSignal"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AbortSignal"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AbortSignal"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "AbortSignal"
      },
      {
        "kind": "Method",
        "name": "any",
        "isStatic": false,
        "params": "[signals<(array AbortSignal)>]",
        "returnType": "AbortSignal"
      },
      {
        "kind": "Method",
        "name": "timeout",
        "isStatic": false,
        "params": "[milliseconds<number>]",
        "returnType": "AbortSignal"
      },
      {
        "kind": "Property",
        "name": "aborted",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "onabort",
        "isStatic": true,
        "returnType": "(or (list (function [this<AbortSignal> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "reason",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "throwIfAborted",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AbortSignal> ev<(get AbortSignalEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AbortSignal> ev<(get AbortSignalEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "any",
        "isStatic": false,
        "params": "[signals<Iterable<AbortSignal>>]",
        "returnType": "AbortSignal"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AbortSignal}) (new [] AbortSignal) (method [(optional reason<any>)])<AbortSignal> (method [signals<(array AbortSignal)>])<AbortSignal> (method [milliseconds<number>])<AbortSignal>}"
  },
  "AbstractRange": {
    "kind": "Property",
    "name": "AbstractRange",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AbstractRange"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AbstractRange"
      },
      {
        "kind": "Property",
        "name": "collapsed",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "endContainer",
        "isStatic": true,
        "returnType": "Node"
      },
      {
        "kind": "Property",
        "name": "endOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "startContainer",
        "isStatic": true,
        "returnType": "Node"
      },
      {
        "kind": "Property",
        "name": "startOffset",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AbstractRange}) (new [] AbstractRange)}"
  },
  "AnalyserNode": {
    "kind": "Property",
    "name": "AnalyserNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<AnalyserOptions>)]",
        "returnType": "AnalyserNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AnalyserNode"
      },
      {
        "kind": "Property",
        "name": "fftSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "frequencyBinCount",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "maxDecibels",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "minDecibels",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "smoothingTimeConstant",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getByteFrequencyData",
        "isStatic": false,
        "params": "[array<Uint8Array>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getByteTimeDomainData",
        "isStatic": false,
        "params": "[array<Uint8Array>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getFloatFrequencyData",
        "isStatic": false,
        "params": "[array<Float32Array>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getFloatTimeDomainData",
        "isStatic": false,
        "params": "[array<Float32Array>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AnalyserNode}) (new [context<BaseAudioContext> (optional options<AnalyserOptions>)] AnalyserNode)}"
  },
  "Animation": {
    "kind": "Property",
    "name": "Animation",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional effect<(or AnimationEffect null)>) (optional timeline<(or AnimationTimeline null)>)]",
        "returnType": "Animation"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Animation"
      },
      {
        "kind": "Property",
        "name": "currentTime",
        "isStatic": true,
        "returnType": "(or CSSNumberish null)"
      },
      {
        "kind": "Property",
        "name": "effect",
        "isStatic": true,
        "returnType": "(or AnimationEffect null)"
      },
      {
        "kind": "Property",
        "name": "finished",
        "isStatic": true,
        "returnType": "Promise<Animation>"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "oncancel",
        "isStatic": true,
        "returnType": "(or (list (function [this<Animation> ev<AnimationPlaybackEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onfinish",
        "isStatic": true,
        "returnType": "(or (list (function [this<Animation> ev<AnimationPlaybackEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onremove",
        "isStatic": true,
        "returnType": "(or (list (function [this<Animation> ev<AnimationPlaybackEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "pending",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "playState",
        "isStatic": true,
        "returnType": "AnimationPlayState"
      },
      {
        "kind": "Property",
        "name": "playbackRate",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ready",
        "isStatic": true,
        "returnType": "Promise<Animation>"
      },
      {
        "kind": "Property",
        "name": "replaceState",
        "isStatic": true,
        "returnType": "AnimationReplaceState"
      },
      {
        "kind": "Property",
        "name": "startTime",
        "isStatic": true,
        "returnType": "(or CSSNumberish null)"
      },
      {
        "kind": "Property",
        "name": "timeline",
        "isStatic": true,
        "returnType": "(or AnimationTimeline null)"
      },
      {
        "kind": "Method",
        "name": "cancel",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "commitStyles",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "finish",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pause",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "persist",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "play",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "updatePlaybackRate",
        "isStatic": false,
        "params": "[playbackRate<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Animation> ev<(get AnimationEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Animation> ev<(get AnimationEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Animation}) (new [(optional effect<(or AnimationEffect null)>) (optional timeline<(or AnimationTimeline null)>)] Animation)}"
  },
  "AnimationEffect": {
    "kind": "Property",
    "name": "AnimationEffect",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AnimationEffect"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AnimationEffect"
      },
      {
        "kind": "Method",
        "name": "getComputedTiming",
        "isStatic": false,
        "params": "[]",
        "returnType": "ComputedEffectTiming"
      },
      {
        "kind": "Method",
        "name": "getTiming",
        "isStatic": false,
        "params": "[]",
        "returnType": "EffectTiming"
      },
      {
        "kind": "Method",
        "name": "updateTiming",
        "isStatic": false,
        "params": "[(optional timing<OptionalEffectTiming>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AnimationEffect}) (new [] AnimationEffect)}"
  },
  "AnimationEvent": {
    "kind": "Property",
    "name": "AnimationEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional animationEventInitDict<AnimationEventInit>)]",
        "returnType": "AnimationEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AnimationEvent"
      },
      {
        "kind": "Property",
        "name": "animationName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "elapsedTime",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "pseudoElement",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AnimationEvent}) (new [type<string> (optional animationEventInitDict<AnimationEventInit>)] AnimationEvent)}"
  },
  "AnimationPlaybackEvent": {
    "kind": "Property",
    "name": "AnimationPlaybackEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<AnimationPlaybackEventInit>)]",
        "returnType": "AnimationPlaybackEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AnimationPlaybackEvent"
      },
      {
        "kind": "Property",
        "name": "currentTime",
        "isStatic": true,
        "returnType": "(or CSSNumberish null)"
      },
      {
        "kind": "Property",
        "name": "timelineTime",
        "isStatic": true,
        "returnType": "(or CSSNumberish null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AnimationPlaybackEvent}) (new [type<string> (optional eventInitDict<AnimationPlaybackEventInit>)] AnimationPlaybackEvent)}"
  },
  "AnimationTimeline": {
    "kind": "Property",
    "name": "AnimationTimeline",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AnimationTimeline"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AnimationTimeline"
      },
      {
        "kind": "Property",
        "name": "currentTime",
        "isStatic": true,
        "returnType": "(or CSSNumberish null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AnimationTimeline}) (new [] AnimationTimeline)}"
  },
  "Attr": {
    "kind": "Property",
    "name": "Attr",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Attr"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Attr"
      },
      {
        "kind": "Property",
        "name": "localName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "namespaceURI",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "ownerDocument",
        "isStatic": true,
        "returnType": "Document"
      },
      {
        "kind": "Property",
        "name": "ownerElement",
        "isStatic": true,
        "returnType": "(or Element null)"
      },
      {
        "kind": "Property",
        "name": "prefix",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "specified",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Attr}) (new [] Attr)}"
  },
  "AudioBuffer": {
    "kind": "Property",
    "name": "AudioBuffer",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[options<AudioBufferOptions>]",
        "returnType": "AudioBuffer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioBuffer"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "numberOfChannels",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "sampleRate",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "copyFromChannel",
        "isStatic": false,
        "params": "[destination<Float32Array> channelNumber<number> (optional bufferOffset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "copyToChannel",
        "isStatic": false,
        "params": "[source<Float32Array> channelNumber<number> (optional bufferOffset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getChannelData",
        "isStatic": false,
        "params": "[channel<number>]",
        "returnType": "Float32Array"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioBuffer}) (new [options<AudioBufferOptions>] AudioBuffer)}"
  },
  "AudioBufferSourceNode": {
    "kind": "Property",
    "name": "AudioBufferSourceNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<AudioBufferSourceOptions>)]",
        "returnType": "AudioBufferSourceNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioBufferSourceNode"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "(or AudioBuffer null)"
      },
      {
        "kind": "Property",
        "name": "detune",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "loop",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "loopEnd",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "loopStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "playbackRate",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Method",
        "name": "start",
        "isStatic": false,
        "params": "[(optional when<number>) (optional offset<number>) (optional duration<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioBufferSourceNode> ev<(get AudioScheduledSourceNodeEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioBufferSourceNode> ev<(get AudioScheduledSourceNodeEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioBufferSourceNode}) (new [context<BaseAudioContext> (optional options<AudioBufferSourceOptions>)] AudioBufferSourceNode)}"
  },
  "AudioContext": {
    "kind": "Property",
    "name": "AudioContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional contextOptions<AudioContextOptions>)]",
        "returnType": "AudioContext"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioContext"
      },
      {
        "kind": "Property",
        "name": "baseLatency",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "outputLatency",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "createMediaElementSource",
        "isStatic": false,
        "params": "[mediaElement<HTMLMediaElement>]",
        "returnType": "MediaElementAudioSourceNode"
      },
      {
        "kind": "Method",
        "name": "createMediaStreamDestination",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaStreamAudioDestinationNode"
      },
      {
        "kind": "Method",
        "name": "createMediaStreamSource",
        "isStatic": false,
        "params": "[mediaStream<MediaStream>]",
        "returnType": "MediaStreamAudioSourceNode"
      },
      {
        "kind": "Method",
        "name": "getOutputTimestamp",
        "isStatic": false,
        "params": "[]",
        "returnType": "AudioTimestamp"
      },
      {
        "kind": "Method",
        "name": "resume",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "suspend",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioContext> ev<(get BaseAudioContextEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioContext> ev<(get BaseAudioContextEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioContext}) (new [(optional contextOptions<AudioContextOptions>)] AudioContext)}"
  },
  "AudioData": {
    "kind": "Property",
    "name": "AudioData",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<AudioDataInit>]",
        "returnType": "AudioData"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioData"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "format",
        "isStatic": true,
        "returnType": "(or AudioSampleFormat null)"
      },
      {
        "kind": "Property",
        "name": "numberOfChannels",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "numberOfFrames",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "sampleRate",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "allocationSize",
        "isStatic": false,
        "params": "[options<AudioDataCopyToOptions>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "clone",
        "isStatic": false,
        "params": "[]",
        "returnType": "AudioData"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "copyTo",
        "isStatic": false,
        "params": "[destination<AllowSharedBufferSource> options<AudioDataCopyToOptions>]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<AudioDataInit>]",
        "returnType": "AudioData"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioData"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "format",
        "isStatic": true,
        "returnType": "(or AudioSampleFormat null)"
      },
      {
        "kind": "Property",
        "name": "numberOfChannels",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "numberOfFrames",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "sampleRate",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "allocationSize",
        "isStatic": false,
        "params": "[options<AudioDataCopyToOptions>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "clone",
        "isStatic": false,
        "params": "[]",
        "returnType": "AudioData"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "copyTo",
        "isStatic": false,
        "params": "[destination<AllowSharedBufferSource> options<AudioDataCopyToOptions>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioData}) (new [init<AudioDataInit>] AudioData)}"
  },
  "AudioDecoder": {
    "kind": "Property",
    "name": "AudioDecoder",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<AudioDecoderInit>]",
        "returnType": "AudioDecoder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioDecoder"
      },
      {
        "kind": "Method",
        "name": "isConfigSupported",
        "isStatic": false,
        "params": "[config<AudioDecoderConfig>]",
        "returnType": "Promise<AudioDecoderSupport>"
      },
      {
        "kind": "Property",
        "name": "decodeQueueSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ondequeue",
        "isStatic": true,
        "returnType": "(or (list (function [this<AudioDecoder> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "CodecState"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "configure",
        "isStatic": false,
        "params": "[config<AudioDecoderConfig>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "decode",
        "isStatic": false,
        "params": "[chunk<EncodedAudioChunk>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "flush",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "reset",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioDecoder> ev<(get AudioDecoderEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioDecoder> ev<(get AudioDecoderEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<AudioDecoderInit>]",
        "returnType": "AudioDecoder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioDecoder"
      },
      {
        "kind": "Method",
        "name": "isConfigSupported",
        "isStatic": false,
        "params": "[config<AudioDecoderConfig>]",
        "returnType": "Promise<AudioDecoderSupport>"
      },
      {
        "kind": "Property",
        "name": "decodeQueueSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ondequeue",
        "isStatic": true,
        "returnType": "(or (list (function [this<AudioDecoder> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "CodecState"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "configure",
        "isStatic": false,
        "params": "[config<AudioDecoderConfig>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "decode",
        "isStatic": false,
        "params": "[chunk<EncodedAudioChunk>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "flush",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "reset",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioDecoder> ev<(get AudioDecoderEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioDecoder> ev<(get AudioDecoderEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioDecoder}) (new [init<AudioDecoderInit>] AudioDecoder) (method [config<AudioDecoderConfig>])<Promise<AudioDecoderSupport>>}"
  },
  "AudioDestinationNode": {
    "kind": "Property",
    "name": "AudioDestinationNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AudioDestinationNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioDestinationNode"
      },
      {
        "kind": "Property",
        "name": "maxChannelCount",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioDestinationNode}) (new [] AudioDestinationNode)}"
  },
  "AudioEncoder": {
    "kind": "Property",
    "name": "AudioEncoder",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<AudioEncoderInit>]",
        "returnType": "AudioEncoder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioEncoder"
      },
      {
        "kind": "Method",
        "name": "isConfigSupported",
        "isStatic": false,
        "params": "[config<AudioEncoderConfig>]",
        "returnType": "Promise<AudioEncoderSupport>"
      },
      {
        "kind": "Property",
        "name": "encodeQueueSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ondequeue",
        "isStatic": true,
        "returnType": "(or (list (function [this<AudioEncoder> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "CodecState"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "configure",
        "isStatic": false,
        "params": "[config<AudioEncoderConfig>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "encode",
        "isStatic": false,
        "params": "[data<AudioData>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "flush",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "reset",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioEncoder> ev<(get AudioEncoderEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioEncoder> ev<(get AudioEncoderEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<AudioEncoderInit>]",
        "returnType": "AudioEncoder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioEncoder"
      },
      {
        "kind": "Method",
        "name": "isConfigSupported",
        "isStatic": false,
        "params": "[config<AudioEncoderConfig>]",
        "returnType": "Promise<AudioEncoderSupport>"
      },
      {
        "kind": "Property",
        "name": "encodeQueueSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ondequeue",
        "isStatic": true,
        "returnType": "(or (list (function [this<AudioEncoder> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "CodecState"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "configure",
        "isStatic": false,
        "params": "[config<AudioEncoderConfig>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "encode",
        "isStatic": false,
        "params": "[data<AudioData>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "flush",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "reset",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioEncoder> ev<(get AudioEncoderEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioEncoder> ev<(get AudioEncoderEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioEncoder}) (new [init<AudioEncoderInit>] AudioEncoder) (method [config<AudioEncoderConfig>])<Promise<AudioEncoderSupport>>}"
  },
  "AudioListener": {
    "kind": "Property",
    "name": "AudioListener",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AudioListener"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioListener"
      },
      {
        "kind": "Property",
        "name": "forwardX",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "forwardY",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "forwardZ",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "positionX",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "positionY",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "positionZ",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "upX",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "upY",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "upZ",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Method",
        "name": "setOrientation",
        "isStatic": false,
        "params": "[x<number> y<number> z<number> xUp<number> yUp<number> zUp<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPosition",
        "isStatic": false,
        "params": "[x<number> y<number> z<number>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioListener}) (new [] AudioListener)}"
  },
  "AudioNode": {
    "kind": "Property",
    "name": "AudioNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AudioNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioNode"
      },
      {
        "kind": "Property",
        "name": "channelCount",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "channelCountMode",
        "isStatic": true,
        "returnType": "ChannelCountMode"
      },
      {
        "kind": "Property",
        "name": "channelInterpretation",
        "isStatic": true,
        "returnType": "ChannelInterpretation"
      },
      {
        "kind": "Property",
        "name": "context",
        "isStatic": true,
        "returnType": "BaseAudioContext"
      },
      {
        "kind": "Property",
        "name": "numberOfInputs",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "numberOfOutputs",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "connect",
        "isStatic": false,
        "params": "[destinationNode<AudioNode> (optional output<number>) (optional input<number>)]",
        "returnType": "AudioNode"
      },
      {
        "kind": "Method",
        "name": "connect",
        "isStatic": false,
        "params": "[destinationParam<AudioParam> (optional output<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[output<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[destinationNode<AudioNode>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[destinationNode<AudioNode> output<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[destinationNode<AudioNode> output<number> input<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[destinationParam<AudioParam>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[destinationParam<AudioParam> output<number>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioNode}) (new [] AudioNode)}"
  },
  "AudioParam": {
    "kind": "Property",
    "name": "AudioParam",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "automationRate",
        "isStatic": true,
        "returnType": "AutomationRate"
      },
      {
        "kind": "Property",
        "name": "defaultValue",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "maxValue",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "minValue",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "cancelAndHoldAtTime",
        "isStatic": false,
        "params": "[cancelTime<number>]",
        "returnType": "AudioParam"
      },
      {
        "kind": "Method",
        "name": "cancelScheduledValues",
        "isStatic": false,
        "params": "[cancelTime<number>]",
        "returnType": "AudioParam"
      },
      {
        "kind": "Method",
        "name": "exponentialRampToValueAtTime",
        "isStatic": false,
        "params": "[value<number> endTime<number>]",
        "returnType": "AudioParam"
      },
      {
        "kind": "Method",
        "name": "linearRampToValueAtTime",
        "isStatic": false,
        "params": "[value<number> endTime<number>]",
        "returnType": "AudioParam"
      },
      {
        "kind": "Method",
        "name": "setTargetAtTime",
        "isStatic": false,
        "params": "[target<number> startTime<number> timeConstant<number>]",
        "returnType": "AudioParam"
      },
      {
        "kind": "Method",
        "name": "setValueAtTime",
        "isStatic": false,
        "params": "[value<number> startTime<number>]",
        "returnType": "AudioParam"
      },
      {
        "kind": "Method",
        "name": "setValueCurveAtTime",
        "isStatic": false,
        "params": "[values<(or (array number) Float32Array)> startTime<number> duration<number>]",
        "returnType": "AudioParam"
      },
      {
        "kind": "Method",
        "name": "setValueCurveAtTime",
        "isStatic": false,
        "params": "[values<Iterable<number>> startTime<number> duration<number>]",
        "returnType": "AudioParam"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioParam}) (new [] AudioParam)}"
  },
  "AudioParamMap": {
    "kind": "Property",
    "name": "AudioParamMap",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AudioParamMap"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioParamMap"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<AudioParam> key<string> parent<AudioParamMap>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioParamMap}) (new [] AudioParamMap)}"
  },
  "AudioProcessingEvent": {
    "kind": "Property",
    "name": "AudioProcessingEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<AudioProcessingEventInit>]",
        "returnType": "AudioProcessingEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioProcessingEvent"
      },
      {
        "kind": "Property",
        "name": "inputBuffer",
        "isStatic": true,
        "returnType": "AudioBuffer"
      },
      {
        "kind": "Property",
        "name": "outputBuffer",
        "isStatic": true,
        "returnType": "AudioBuffer"
      },
      {
        "kind": "Property",
        "name": "playbackTime",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioProcessingEvent}) (new [type<string> eventInitDict<AudioProcessingEventInit>] AudioProcessingEvent)}"
  },
  "AudioScheduledSourceNode": {
    "kind": "Property",
    "name": "AudioScheduledSourceNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AudioScheduledSourceNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioScheduledSourceNode"
      },
      {
        "kind": "Property",
        "name": "onended",
        "isStatic": true,
        "returnType": "(or (list (function [this<AudioScheduledSourceNode> ev<Event>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "start",
        "isStatic": false,
        "params": "[(optional when<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stop",
        "isStatic": false,
        "params": "[(optional when<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioScheduledSourceNode> ev<(get AudioScheduledSourceNodeEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioScheduledSourceNode> ev<(get AudioScheduledSourceNodeEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioScheduledSourceNode}) (new [] AudioScheduledSourceNode)}"
  },
  "AudioWorklet": {
    "kind": "Property",
    "name": "AudioWorklet",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AudioWorklet"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioWorklet"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioWorklet}) (new [] AudioWorklet)}"
  },
  "AudioWorkletNode": {
    "kind": "Property",
    "name": "AudioWorkletNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> name<string> (optional options<AudioWorkletNodeOptions>)]",
        "returnType": "AudioWorkletNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AudioWorkletNode"
      },
      {
        "kind": "Property",
        "name": "onprocessorerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<AudioWorkletNode> ev<ErrorEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "parameters",
        "isStatic": true,
        "returnType": "AudioParamMap"
      },
      {
        "kind": "Property",
        "name": "port",
        "isStatic": true,
        "returnType": "MessagePort"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioWorkletNode> ev<(get AudioWorkletNodeEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<AudioWorkletNode> ev<(get AudioWorkletNodeEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AudioWorkletNode}) (new [context<BaseAudioContext> name<string> (optional options<AudioWorkletNodeOptions>)] AudioWorkletNode)}"
  },
  "AuthenticatorAssertionResponse": {
    "kind": "Property",
    "name": "AuthenticatorAssertionResponse",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AuthenticatorAssertionResponse"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AuthenticatorAssertionResponse"
      },
      {
        "kind": "Property",
        "name": "authenticatorData",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "signature",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "userHandle",
        "isStatic": true,
        "returnType": "(or ArrayBuffer null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AuthenticatorAssertionResponse}) (new [] AuthenticatorAssertionResponse)}"
  },
  "AuthenticatorAttestationResponse": {
    "kind": "Property",
    "name": "AuthenticatorAttestationResponse",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AuthenticatorAttestationResponse"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AuthenticatorAttestationResponse"
      },
      {
        "kind": "Property",
        "name": "attestationObject",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Method",
        "name": "getAuthenticatorData",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Method",
        "name": "getPublicKey",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or ArrayBuffer null)"
      },
      {
        "kind": "Method",
        "name": "getPublicKeyAlgorithm",
        "isStatic": false,
        "params": "[]",
        "returnType": "COSEAlgorithmIdentifier"
      },
      {
        "kind": "Method",
        "name": "getTransports",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array string)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AuthenticatorAttestationResponse}) (new [] AuthenticatorAttestationResponse)}"
  },
  "AuthenticatorResponse": {
    "kind": "Property",
    "name": "AuthenticatorResponse",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AuthenticatorResponse"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "AuthenticatorResponse"
      },
      {
        "kind": "Property",
        "name": "clientDataJSON",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype AuthenticatorResponse}) (new [] AuthenticatorResponse)}"
  },
  "BarProp": {
    "kind": "Property",
    "name": "BarProp",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "visible",
        "isStatic": true,
        "returnType": "boolean"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype BarProp}) (new [] BarProp)}"
  },
  "BaseAudioContext": {
    "kind": "Property",
    "name": "BaseAudioContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "BaseAudioContext"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "BaseAudioContext"
      },
      {
        "kind": "Property",
        "name": "audioWorklet",
        "isStatic": true,
        "returnType": "AudioWorklet"
      },
      {
        "kind": "Property",
        "name": "currentTime",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "destination",
        "isStatic": true,
        "returnType": "AudioDestinationNode"
      },
      {
        "kind": "Property",
        "name": "listener",
        "isStatic": true,
        "returnType": "AudioListener"
      },
      {
        "kind": "Property",
        "name": "onstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<BaseAudioContext> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "sampleRate",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "AudioContextState"
      },
      {
        "kind": "Method",
        "name": "createAnalyser",
        "isStatic": false,
        "params": "[]",
        "returnType": "AnalyserNode"
      },
      {
        "kind": "Method",
        "name": "createBiquadFilter",
        "isStatic": false,
        "params": "[]",
        "returnType": "BiquadFilterNode"
      },
      {
        "kind": "Method",
        "name": "createBuffer",
        "isStatic": false,
        "params": "[numberOfChannels<number> length<number> sampleRate<number>]",
        "returnType": "AudioBuffer"
      },
      {
        "kind": "Method",
        "name": "createBufferSource",
        "isStatic": false,
        "params": "[]",
        "returnType": "AudioBufferSourceNode"
      },
      {
        "kind": "Method",
        "name": "createChannelMerger",
        "isStatic": false,
        "params": "[(optional numberOfInputs<number>)]",
        "returnType": "ChannelMergerNode"
      },
      {
        "kind": "Method",
        "name": "createChannelSplitter",
        "isStatic": false,
        "params": "[(optional numberOfOutputs<number>)]",
        "returnType": "ChannelSplitterNode"
      },
      {
        "kind": "Method",
        "name": "createConstantSource",
        "isStatic": false,
        "params": "[]",
        "returnType": "ConstantSourceNode"
      },
      {
        "kind": "Method",
        "name": "createConvolver",
        "isStatic": false,
        "params": "[]",
        "returnType": "ConvolverNode"
      },
      {
        "kind": "Method",
        "name": "createDelay",
        "isStatic": false,
        "params": "[(optional maxDelayTime<number>)]",
        "returnType": "DelayNode"
      },
      {
        "kind": "Method",
        "name": "createDynamicsCompressor",
        "isStatic": false,
        "params": "[]",
        "returnType": "DynamicsCompressorNode"
      },
      {
        "kind": "Method",
        "name": "createGain",
        "isStatic": false,
        "params": "[]",
        "returnType": "GainNode"
      },
      {
        "kind": "Method",
        "name": "createIIRFilter",
        "isStatic": false,
        "params": "[feedforward<(array number)> feedback<(array number)>]",
        "returnType": "IIRFilterNode"
      },
      {
        "kind": "Method",
        "name": "createOscillator",
        "isStatic": false,
        "params": "[]",
        "returnType": "OscillatorNode"
      },
      {
        "kind": "Method",
        "name": "createPanner",
        "isStatic": false,
        "params": "[]",
        "returnType": "PannerNode"
      },
      {
        "kind": "Method",
        "name": "createPeriodicWave",
        "isStatic": false,
        "params": "[real<(or (array number) Float32Array)> imag<(or (array number) Float32Array)> (optional constraints<PeriodicWaveConstraints>)]",
        "returnType": "PeriodicWave"
      },
      {
        "kind": "Method",
        "name": "createScriptProcessor",
        "isStatic": false,
        "params": "[(optional bufferSize<number>) (optional numberOfInputChannels<number>) (optional numberOfOutputChannels<number>)]",
        "returnType": "ScriptProcessorNode"
      },
      {
        "kind": "Method",
        "name": "createStereoPanner",
        "isStatic": false,
        "params": "[]",
        "returnType": "StereoPannerNode"
      },
      {
        "kind": "Method",
        "name": "createWaveShaper",
        "isStatic": false,
        "params": "[]",
        "returnType": "WaveShaperNode"
      },
      {
        "kind": "Method",
        "name": "decodeAudioData",
        "isStatic": false,
        "params": "[audioData<ArrayBuffer> (optional successCallback<(or DecodeSuccessCallback null)>) (optional errorCallback<(or DecodeErrorCallback null)>)]",
        "returnType": "Promise<AudioBuffer>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<BaseAudioContext> ev<(get BaseAudioContextEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<BaseAudioContext> ev<(get BaseAudioContextEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createIIRFilter",
        "isStatic": false,
        "params": "[feedforward<Iterable<number>> feedback<Iterable<number>>]",
        "returnType": "IIRFilterNode"
      },
      {
        "kind": "Method",
        "name": "createPeriodicWave",
        "isStatic": false,
        "params": "[real<Iterable<number>> imag<Iterable<number>> (optional constraints<PeriodicWaveConstraints>)]",
        "returnType": "PeriodicWave"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype BaseAudioContext}) (new [] BaseAudioContext)}"
  },
  "BeforeUnloadEvent": {
    "kind": "Property",
    "name": "BeforeUnloadEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "BeforeUnloadEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "BeforeUnloadEvent"
      },
      {
        "kind": "Property",
        "name": "returnValue",
        "isStatic": true,
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype BeforeUnloadEvent}) (new [] BeforeUnloadEvent)}"
  },
  "BiquadFilterNode": {
    "kind": "Property",
    "name": "BiquadFilterNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<BiquadFilterOptions>)]",
        "returnType": "BiquadFilterNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "BiquadFilterNode"
      },
      {
        "kind": "Property",
        "name": "Q",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "detune",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "frequency",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "gain",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "BiquadFilterType"
      },
      {
        "kind": "Method",
        "name": "getFrequencyResponse",
        "isStatic": false,
        "params": "[frequencyHz<Float32Array> magResponse<Float32Array> phaseResponse<Float32Array>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype BiquadFilterNode}) (new [context<BaseAudioContext> (optional options<BiquadFilterOptions>)] BiquadFilterNode)}"
  },
  "Blob": {
    "kind": "Property",
    "name": "Blob",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional blobParts<(array BlobPart)>) (optional options<BlobPropertyBag>)]",
        "returnType": "Blob"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Blob"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "arrayBuffer",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "bytes",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<Uint8Array>"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>) (optional contentType<string>)]",
        "returnType": "Blob"
      },
      {
        "kind": "Method",
        "name": "stream",
        "isStatic": false,
        "params": "[]",
        "returnType": "ReadableStream<Uint8Array>"
      },
      {
        "kind": "Method",
        "name": "text",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<string>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional blobParts<(array BlobPart)>) (optional options<BlobPropertyBag>)]",
        "returnType": "Blob"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Blob"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "arrayBuffer",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "bytes",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<Uint8Array>"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>) (optional contentType<string>)]",
        "returnType": "Blob"
      },
      {
        "kind": "Method",
        "name": "stream",
        "isStatic": false,
        "params": "[]",
        "returnType": "ReadableStream<Uint8Array>"
      },
      {
        "kind": "Method",
        "name": "text",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<string>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Blob}) (new [(optional blobParts<(array BlobPart)>) (optional options<BlobPropertyBag>)] Blob)}"
  },
  "BlobEvent": {
    "kind": "Property",
    "name": "BlobEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<BlobEventInit>]",
        "returnType": "BlobEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "BlobEvent"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "Blob"
      },
      {
        "kind": "Property",
        "name": "timecode",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype BlobEvent}) (new [type<string> eventInitDict<BlobEventInit>] BlobEvent)}"
  },
  "BroadcastChannel": {
    "kind": "Property",
    "name": "BroadcastChannel",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[name<string>]",
        "returnType": "BroadcastChannel"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "BroadcastChannel"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<BroadcastChannel> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessageerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<BroadcastChannel> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<BroadcastChannel> ev<(get BroadcastChannelEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<BroadcastChannel> ev<(get BroadcastChannelEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[name<string>]",
        "returnType": "BroadcastChannel"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "BroadcastChannel"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<BroadcastChannel> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessageerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<BroadcastChannel> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<BroadcastChannel> ev<(get BroadcastChannelEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<BroadcastChannel> ev<(get BroadcastChannelEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype BroadcastChannel}) (new [name<string>] BroadcastChannel)}"
  },
  "ByteLengthQueuingStrategy": {
    "kind": "Property",
    "name": "ByteLengthQueuingStrategy",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<QueuingStrategyInit>]",
        "returnType": "ByteLengthQueuingStrategy"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ByteLengthQueuingStrategy"
      },
      {
        "kind": "Property",
        "name": "highWaterMark",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "QueuingStrategySize<ArrayBufferView>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<QueuingStrategyInit>]",
        "returnType": "ByteLengthQueuingStrategy"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ByteLengthQueuingStrategy"
      },
      {
        "kind": "Property",
        "name": "highWaterMark",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "QueuingStrategySize<ArrayBufferView>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ByteLengthQueuingStrategy}) (new [init<QueuingStrategyInit>] ByteLengthQueuingStrategy)}"
  },
  "CDATASection": {
    "kind": "Property",
    "name": "CDATASection",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CDATASection"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CDATASection"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CDATASection}) (new [] CDATASection)}"
  },
  "CSSAnimation": {
    "kind": "Property",
    "name": "CSSAnimation",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSAnimation"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSAnimation"
      },
      {
        "kind": "Property",
        "name": "animationName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<CSSAnimation> ev<(get AnimationEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<CSSAnimation> ev<(get AnimationEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSAnimation}) (new [] CSSAnimation)}"
  },
  "CSSConditionRule": {
    "kind": "Property",
    "name": "CSSConditionRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSConditionRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSConditionRule"
      },
      {
        "kind": "Property",
        "name": "conditionText",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSConditionRule}) (new [] CSSConditionRule)}"
  },
  "CSSContainerRule": {
    "kind": "Property",
    "name": "CSSContainerRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSContainerRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSContainerRule"
      },
      {
        "kind": "Property",
        "name": "containerName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "containerQuery",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSContainerRule}) (new [] CSSContainerRule)}"
  },
  "CSSCounterStyleRule": {
    "kind": "Property",
    "name": "CSSCounterStyleRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSCounterStyleRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSCounterStyleRule"
      },
      {
        "kind": "Property",
        "name": "additiveSymbols",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fallback",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "negative",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pad",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "prefix",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "range",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "speakAs",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "suffix",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "symbols",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "system",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSCounterStyleRule}) (new [] CSSCounterStyleRule)}"
  },
  "CSSFontFaceRule": {
    "kind": "Property",
    "name": "CSSFontFaceRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSFontFaceRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSFontFaceRule"
      },
      {
        "kind": "Property",
        "name": "style",
        "isStatic": true,
        "returnType": "CSSStyleDeclaration"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSFontFaceRule}) (new [] CSSFontFaceRule)}"
  },
  "CSSFontFeatureValuesRule": {
    "kind": "Property",
    "name": "CSSFontFeatureValuesRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSFontFeatureValuesRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSFontFeatureValuesRule"
      },
      {
        "kind": "Property",
        "name": "fontFamily",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSFontFeatureValuesRule}) (new [] CSSFontFeatureValuesRule)}"
  },
  "CSSFontPaletteValuesRule": {
    "kind": "Property",
    "name": "CSSFontPaletteValuesRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSFontPaletteValuesRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSFontPaletteValuesRule"
      },
      {
        "kind": "Property",
        "name": "basePalette",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontFamily",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "overrideColors",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSFontPaletteValuesRule}) (new [] CSSFontPaletteValuesRule)}"
  },
  "CSSGroupingRule": {
    "kind": "Property",
    "name": "CSSGroupingRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSGroupingRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSGroupingRule"
      },
      {
        "kind": "Property",
        "name": "cssRules",
        "isStatic": true,
        "returnType": "CSSRuleList"
      },
      {
        "kind": "Method",
        "name": "deleteRule",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "insertRule",
        "isStatic": false,
        "params": "[rule<string> (optional index<number>)]",
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSGroupingRule}) (new [] CSSGroupingRule)}"
  },
  "CSSImageValue": {
    "kind": "Property",
    "name": "CSSImageValue",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSImageValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSImageValue"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSImageValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSImageValue"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSImageValue}) (new [] CSSImageValue)}"
  },
  "CSSImportRule": {
    "kind": "Property",
    "name": "CSSImportRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSImportRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSImportRule"
      },
      {
        "kind": "Property",
        "name": "href",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "layerName",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "media",
        "isStatic": true,
        "returnType": "MediaList"
      },
      {
        "kind": "Property",
        "name": "styleSheet",
        "isStatic": true,
        "returnType": "(or CSSStyleSheet null)"
      },
      {
        "kind": "Property",
        "name": "supportsText",
        "isStatic": true,
        "returnType": "(or string null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSImportRule}) (new [] CSSImportRule)}"
  },
  "CSSKeyframeRule": {
    "kind": "Property",
    "name": "CSSKeyframeRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSKeyframeRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSKeyframeRule"
      },
      {
        "kind": "Property",
        "name": "keyText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "style",
        "isStatic": true,
        "returnType": "CSSStyleDeclaration"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSKeyframeRule}) (new [] CSSKeyframeRule)}"
  },
  "CSSKeyframesRule": {
    "kind": "Property",
    "name": "CSSKeyframesRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSKeyframesRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSKeyframesRule"
      },
      {
        "kind": "Property",
        "name": "cssRules",
        "isStatic": true,
        "returnType": "CSSRuleList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "appendRule",
        "isStatic": false,
        "params": "[rule<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteRule",
        "isStatic": false,
        "params": "[select<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "findRule",
        "isStatic": false,
        "params": "[select<string>]",
        "returnType": "(or CSSKeyframeRule null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSKeyframeRule>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSKeyframesRule}) (new [] CSSKeyframesRule)}"
  },
  "CSSKeywordValue": {
    "kind": "Property",
    "name": "CSSKeywordValue",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[value<string>]",
        "returnType": "CSSKeywordValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSKeywordValue"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[value<string>]",
        "returnType": "CSSKeywordValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSKeywordValue"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSKeywordValue}) (new [value<string>] CSSKeywordValue)}"
  },
  "CSSLayerBlockRule": {
    "kind": "Property",
    "name": "CSSLayerBlockRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSLayerBlockRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSLayerBlockRule"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSLayerBlockRule}) (new [] CSSLayerBlockRule)}"
  },
  "CSSLayerStatementRule": {
    "kind": "Property",
    "name": "CSSLayerStatementRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSLayerStatementRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSLayerStatementRule"
      },
      {
        "kind": "Property",
        "name": "nameList",
        "isStatic": true,
        "returnType": "ReadonlyArray<string>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSLayerStatementRule}) (new [] CSSLayerStatementRule)}"
  },
  "CSSMathClamp": {
    "kind": "Property",
    "name": "CSSMathClamp",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[lower<CSSNumberish> value<CSSNumberish> upper<CSSNumberish>]",
        "returnType": "CSSMathClamp"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathClamp"
      },
      {
        "kind": "Property",
        "name": "lower",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "upper",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[lower<CSSNumberish> value<CSSNumberish> upper<CSSNumberish>]",
        "returnType": "CSSMathClamp"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathClamp"
      },
      {
        "kind": "Property",
        "name": "lower",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "upper",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSMathClamp}) (new [lower<CSSNumberish> value<CSSNumberish> upper<CSSNumberish>] CSSMathClamp)}"
  },
  "CSSMathInvert": {
    "kind": "Property",
    "name": "CSSMathInvert",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[arg<CSSNumberish>]",
        "returnType": "CSSMathInvert"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathInvert"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[arg<CSSNumberish>]",
        "returnType": "CSSMathInvert"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathInvert"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSMathInvert}) (new [arg<CSSNumberish>] CSSMathInvert)}"
  },
  "CSSMathMax": {
    "kind": "Property",
    "name": "CSSMathMax",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(& rest<args<(array CSSNumberish)>>)]",
        "returnType": "CSSMathMax"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathMax"
      },
      {
        "kind": "Property",
        "name": "values",
        "isStatic": true,
        "returnType": "CSSNumericArray"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(& rest<args<(array CSSNumberish)>>)]",
        "returnType": "CSSMathMax"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathMax"
      },
      {
        "kind": "Property",
        "name": "values",
        "isStatic": true,
        "returnType": "CSSNumericArray"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSMathMax}) (new [(& rest<args<(array CSSNumberish)>>)] CSSMathMax)}"
  },
  "CSSMathMin": {
    "kind": "Property",
    "name": "CSSMathMin",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(& rest<args<(array CSSNumberish)>>)]",
        "returnType": "CSSMathMin"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathMin"
      },
      {
        "kind": "Property",
        "name": "values",
        "isStatic": true,
        "returnType": "CSSNumericArray"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(& rest<args<(array CSSNumberish)>>)]",
        "returnType": "CSSMathMin"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathMin"
      },
      {
        "kind": "Property",
        "name": "values",
        "isStatic": true,
        "returnType": "CSSNumericArray"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSMathMin}) (new [(& rest<args<(array CSSNumberish)>>)] CSSMathMin)}"
  },
  "CSSMathNegate": {
    "kind": "Property",
    "name": "CSSMathNegate",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[arg<CSSNumberish>]",
        "returnType": "CSSMathNegate"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathNegate"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[arg<CSSNumberish>]",
        "returnType": "CSSMathNegate"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathNegate"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSMathNegate}) (new [arg<CSSNumberish>] CSSMathNegate)}"
  },
  "CSSMathProduct": {
    "kind": "Property",
    "name": "CSSMathProduct",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(& rest<args<(array CSSNumberish)>>)]",
        "returnType": "CSSMathProduct"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathProduct"
      },
      {
        "kind": "Property",
        "name": "values",
        "isStatic": true,
        "returnType": "CSSNumericArray"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(& rest<args<(array CSSNumberish)>>)]",
        "returnType": "CSSMathProduct"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathProduct"
      },
      {
        "kind": "Property",
        "name": "values",
        "isStatic": true,
        "returnType": "CSSNumericArray"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSMathProduct}) (new [(& rest<args<(array CSSNumberish)>>)] CSSMathProduct)}"
  },
  "CSSMathSum": {
    "kind": "Property",
    "name": "CSSMathSum",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(& rest<args<(array CSSNumberish)>>)]",
        "returnType": "CSSMathSum"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathSum"
      },
      {
        "kind": "Property",
        "name": "values",
        "isStatic": true,
        "returnType": "CSSNumericArray"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(& rest<args<(array CSSNumberish)>>)]",
        "returnType": "CSSMathSum"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathSum"
      },
      {
        "kind": "Property",
        "name": "values",
        "isStatic": true,
        "returnType": "CSSNumericArray"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSMathSum}) (new [(& rest<args<(array CSSNumberish)>>)] CSSMathSum)}"
  },
  "CSSMathValue": {
    "kind": "Property",
    "name": "CSSMathValue",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSMathValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathValue"
      },
      {
        "kind": "Property",
        "name": "operator",
        "isStatic": true,
        "returnType": "CSSMathOperator"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSMathValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMathValue"
      },
      {
        "kind": "Property",
        "name": "operator",
        "isStatic": true,
        "returnType": "CSSMathOperator"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSMathValue}) (new [] CSSMathValue)}"
  },
  "CSSMatrixComponent": {
    "kind": "Property",
    "name": "CSSMatrixComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[matrix<DOMMatrixReadOnly> (optional options<CSSMatrixComponentOptions>)]",
        "returnType": "CSSMatrixComponent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMatrixComponent"
      },
      {
        "kind": "Property",
        "name": "matrix",
        "isStatic": true,
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[matrix<DOMMatrixReadOnly> (optional options<CSSMatrixComponentOptions>)]",
        "returnType": "CSSMatrixComponent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMatrixComponent"
      },
      {
        "kind": "Property",
        "name": "matrix",
        "isStatic": true,
        "returnType": "DOMMatrix"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSMatrixComponent}) (new [matrix<DOMMatrixReadOnly> (optional options<CSSMatrixComponentOptions>)] CSSMatrixComponent)}"
  },
  "CSSMediaRule": {
    "kind": "Property",
    "name": "CSSMediaRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSMediaRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSMediaRule"
      },
      {
        "kind": "Property",
        "name": "media",
        "isStatic": true,
        "returnType": "MediaList"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSMediaRule}) (new [] CSSMediaRule)}"
  },
  "CSSNamespaceRule": {
    "kind": "Property",
    "name": "CSSNamespaceRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSNamespaceRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSNamespaceRule"
      },
      {
        "kind": "Property",
        "name": "namespaceURI",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "prefix",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSNamespaceRule}) (new [] CSSNamespaceRule)}"
  },
  "CSSNumericArray": {
    "kind": "Property",
    "name": "CSSNumericArray",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSNumericArray"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSNumericArray"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<CSSNumericValue> key<number> parent<CSSNumericArray>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSNumericValue>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number CSSNumericValue]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSNumericValue>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSNumericArray"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSNumericArray"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<CSSNumericValue> key<number> parent<CSSNumericArray>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSNumericValue>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number CSSNumericValue]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSNumericValue>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSNumericArray}) (new [] CSSNumericArray)}"
  },
  "CSSNumericValue": {
    "kind": "Property",
    "name": "CSSNumericValue",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "parse",
        "isStatic": false,
        "params": "[cssText<string>]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[(& rest<values<(array CSSNumberish)>>)]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "div",
        "isStatic": false,
        "params": "[(& rest<values<(array CSSNumberish)>>)]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "equals",
        "isStatic": false,
        "params": "[(& rest<value<(array CSSNumberish)>>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "max",
        "isStatic": false,
        "params": "[(& rest<values<(array CSSNumberish)>>)]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "min",
        "isStatic": false,
        "params": "[(& rest<values<(array CSSNumberish)>>)]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "mul",
        "isStatic": false,
        "params": "[(& rest<values<(array CSSNumberish)>>)]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "sub",
        "isStatic": false,
        "params": "[(& rest<values<(array CSSNumberish)>>)]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "to",
        "isStatic": false,
        "params": "[unit<string>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "toSum",
        "isStatic": false,
        "params": "[(& rest<units<(array string)>>)]",
        "returnType": "CSSMathSum"
      },
      {
        "kind": "Method",
        "name": "type",
        "isStatic": false,
        "params": "[]",
        "returnType": "CSSNumericType"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[(& rest<values<(array CSSNumberish)>>)]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "div",
        "isStatic": false,
        "params": "[(& rest<values<(array CSSNumberish)>>)]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "equals",
        "isStatic": false,
        "params": "[(& rest<value<(array CSSNumberish)>>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "max",
        "isStatic": false,
        "params": "[(& rest<values<(array CSSNumberish)>>)]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "min",
        "isStatic": false,
        "params": "[(& rest<values<(array CSSNumberish)>>)]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "mul",
        "isStatic": false,
        "params": "[(& rest<values<(array CSSNumberish)>>)]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "sub",
        "isStatic": false,
        "params": "[(& rest<values<(array CSSNumberish)>>)]",
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Method",
        "name": "to",
        "isStatic": false,
        "params": "[unit<string>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "toSum",
        "isStatic": false,
        "params": "[(& rest<units<(array string)>>)]",
        "returnType": "CSSMathSum"
      },
      {
        "kind": "Method",
        "name": "type",
        "isStatic": false,
        "params": "[]",
        "returnType": "CSSNumericType"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSNumericValue}) (new [] CSSNumericValue) (method [cssText<string>])<CSSNumericValue>}"
  },
  "CSSPageRule": {
    "kind": "Property",
    "name": "CSSPageRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSPageRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSPageRule"
      },
      {
        "kind": "Property",
        "name": "selectorText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "style",
        "isStatic": true,
        "returnType": "CSSStyleDeclaration"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSPageRule}) (new [] CSSPageRule)}"
  },
  "CSSPerspective": {
    "kind": "Property",
    "name": "CSSPerspective",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[length<CSSPerspectiveValue>]",
        "returnType": "CSSPerspective"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSPerspective"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "CSSPerspectiveValue"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[length<CSSPerspectiveValue>]",
        "returnType": "CSSPerspective"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSPerspective"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "CSSPerspectiveValue"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSPerspective}) (new [length<CSSPerspectiveValue>] CSSPerspective)}"
  },
  "CSSPropertyRule": {
    "kind": "Property",
    "name": "CSSPropertyRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSPropertyRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSPropertyRule"
      },
      {
        "kind": "Property",
        "name": "inherits",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "initialValue",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "syntax",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSPropertyRule}) (new [] CSSPropertyRule)}"
  },
  "CSSRotate": {
    "kind": "Property",
    "name": "CSSRotate",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[angle<CSSNumericValue>]",
        "returnType": "CSSRotate"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[x<CSSNumberish> y<CSSNumberish> z<CSSNumberish> angle<CSSNumericValue>]",
        "returnType": "CSSRotate"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSRotate"
      },
      {
        "kind": "Property",
        "name": "angle",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "CSSNumberish"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "CSSNumberish"
      },
      {
        "kind": "Property",
        "name": "z",
        "isStatic": true,
        "returnType": "CSSNumberish"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[angle<CSSNumericValue>]",
        "returnType": "CSSRotate"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[x<CSSNumberish> y<CSSNumberish> z<CSSNumberish> angle<CSSNumericValue>]",
        "returnType": "CSSRotate"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSRotate"
      },
      {
        "kind": "Property",
        "name": "angle",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "CSSNumberish"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "CSSNumberish"
      },
      {
        "kind": "Property",
        "name": "z",
        "isStatic": true,
        "returnType": "CSSNumberish"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSRotate}) (new [angle<CSSNumericValue>] CSSRotate) (new [x<CSSNumberish> y<CSSNumberish> z<CSSNumberish> angle<CSSNumericValue>] CSSRotate)}"
  },
  "CSSRule": {
    "kind": "Property",
    "name": "CSSRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSRule"
      },
      {
        "kind": "Property",
        "name": "STYLE_RULE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "CHARSET_RULE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "IMPORT_RULE",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "MEDIA_RULE",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "FONT_FACE_RULE",
        "isStatic": false,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "PAGE_RULE",
        "isStatic": false,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "NAMESPACE_RULE",
        "isStatic": false,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "KEYFRAMES_RULE",
        "isStatic": false,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "KEYFRAME_RULE",
        "isStatic": false,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "SUPPORTS_RULE",
        "isStatic": false,
        "returnType": "12"
      },
      {
        "kind": "Property",
        "name": "COUNTER_STYLE_RULE",
        "isStatic": false,
        "returnType": "11"
      },
      {
        "kind": "Property",
        "name": "FONT_FEATURE_VALUES_RULE",
        "isStatic": false,
        "returnType": "14"
      },
      {
        "kind": "Property",
        "name": "cssText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "parentRule",
        "isStatic": true,
        "returnType": "(or CSSRule null)"
      },
      {
        "kind": "Property",
        "name": "parentStyleSheet",
        "isStatic": true,
        "returnType": "(or CSSStyleSheet null)"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "STYLE_RULE",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "CHARSET_RULE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "IMPORT_RULE",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "MEDIA_RULE",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "FONT_FACE_RULE",
        "isStatic": true,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "PAGE_RULE",
        "isStatic": true,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "NAMESPACE_RULE",
        "isStatic": true,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "KEYFRAMES_RULE",
        "isStatic": true,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "KEYFRAME_RULE",
        "isStatic": true,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "SUPPORTS_RULE",
        "isStatic": true,
        "returnType": "12"
      },
      {
        "kind": "Property",
        "name": "COUNTER_STYLE_RULE",
        "isStatic": true,
        "returnType": "11"
      },
      {
        "kind": "Property",
        "name": "FONT_FEATURE_VALUES_RULE",
        "isStatic": true,
        "returnType": "14"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSRule}) (new [] CSSRule) (property {:STYLE_RULE 1}) (property {:CHARSET_RULE 2}) (property {:IMPORT_RULE 3}) (property {:MEDIA_RULE 4}) (property {:FONT_FACE_RULE 5}) (property {:PAGE_RULE 6}) (property {:NAMESPACE_RULE 10}) (property {:KEYFRAMES_RULE 7}) (property {:KEYFRAME_RULE 8}) (property {:SUPPORTS_RULE 12}) (property {:COUNTER_STYLE_RULE 11}) (property {:FONT_FEATURE_VALUES_RULE 14})}"
  },
  "CSSRuleList": {
    "kind": "Property",
    "name": "CSSRuleList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSRuleList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSRuleList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or CSSRule null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSRule>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSRuleList}) (new [] CSSRuleList)}"
  },
  "CSSScale": {
    "kind": "Property",
    "name": "CSSScale",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[x<CSSNumberish> y<CSSNumberish> (optional z<CSSNumberish>)]",
        "returnType": "CSSScale"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSScale"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "CSSNumberish"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "CSSNumberish"
      },
      {
        "kind": "Property",
        "name": "z",
        "isStatic": true,
        "returnType": "CSSNumberish"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[x<CSSNumberish> y<CSSNumberish> (optional z<CSSNumberish>)]",
        "returnType": "CSSScale"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSScale"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "CSSNumberish"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "CSSNumberish"
      },
      {
        "kind": "Property",
        "name": "z",
        "isStatic": true,
        "returnType": "CSSNumberish"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSScale}) (new [x<CSSNumberish> y<CSSNumberish> (optional z<CSSNumberish>)] CSSScale)}"
  },
  "CSSScopeRule": {
    "kind": "Property",
    "name": "CSSScopeRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSScopeRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSScopeRule"
      },
      {
        "kind": "Property",
        "name": "end",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "start",
        "isStatic": true,
        "returnType": "(or string null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSScopeRule}) (new [] CSSScopeRule)}"
  },
  "CSSSkew": {
    "kind": "Property",
    "name": "CSSSkew",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[ax<CSSNumericValue> ay<CSSNumericValue>]",
        "returnType": "CSSSkew"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSSkew"
      },
      {
        "kind": "Property",
        "name": "ax",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "ay",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[ax<CSSNumericValue> ay<CSSNumericValue>]",
        "returnType": "CSSSkew"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSSkew"
      },
      {
        "kind": "Property",
        "name": "ax",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "ay",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSSkew}) (new [ax<CSSNumericValue> ay<CSSNumericValue>] CSSSkew)}"
  },
  "CSSSkewX": {
    "kind": "Property",
    "name": "CSSSkewX",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[ax<CSSNumericValue>]",
        "returnType": "CSSSkewX"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSSkewX"
      },
      {
        "kind": "Property",
        "name": "ax",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[ax<CSSNumericValue>]",
        "returnType": "CSSSkewX"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSSkewX"
      },
      {
        "kind": "Property",
        "name": "ax",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSSkewX}) (new [ax<CSSNumericValue>] CSSSkewX)}"
  },
  "CSSSkewY": {
    "kind": "Property",
    "name": "CSSSkewY",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[ay<CSSNumericValue>]",
        "returnType": "CSSSkewY"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSSkewY"
      },
      {
        "kind": "Property",
        "name": "ay",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[ay<CSSNumericValue>]",
        "returnType": "CSSSkewY"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSSkewY"
      },
      {
        "kind": "Property",
        "name": "ay",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSSkewY}) (new [ay<CSSNumericValue>] CSSSkewY)}"
  },
  "CSSStartingStyleRule": {
    "kind": "Property",
    "name": "CSSStartingStyleRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSStartingStyleRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSStartingStyleRule"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSStartingStyleRule}) (new [] CSSStartingStyleRule)}"
  },
  "CSSStyleDeclaration": {
    "kind": "Property",
    "name": "CSSStyleDeclaration",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSStyleDeclaration"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSStyleDeclaration"
      },
      {
        "kind": "Property",
        "name": "accentColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "alignContent",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "alignItems",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "alignSelf",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "alignmentBaseline",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "all",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "animation",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "animationComposition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "animationDelay",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "animationDirection",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "animationDuration",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "animationFillMode",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "animationIterationCount",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "animationName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "animationPlayState",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "animationTimingFunction",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "appearance",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "aspectRatio",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backdropFilter",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backfaceVisibility",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "background",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backgroundAttachment",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backgroundBlendMode",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backgroundClip",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backgroundColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backgroundImage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backgroundOrigin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backgroundPosition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backgroundPositionX",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backgroundPositionY",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backgroundRepeat",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "backgroundSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "baselineShift",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "baselineSource",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "blockSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "border",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBlock",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBlockColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBlockEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBlockEndColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBlockEndStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBlockEndWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBlockStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBlockStartColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBlockStartStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBlockStartWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBlockStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBlockWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBottom",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBottomColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBottomLeftRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBottomRightRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBottomStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderBottomWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderCollapse",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderEndEndRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderEndStartRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderImage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderImageOutset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderImageRepeat",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderImageSlice",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderImageSource",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderImageWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderInline",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderInlineColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderInlineEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderInlineEndColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderInlineEndStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderInlineEndWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderInlineStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderInlineStartColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderInlineStartStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderInlineStartWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderInlineStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderInlineWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderLeft",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderLeftColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderLeftStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderLeftWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderRight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderRightColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderRightStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderRightWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderSpacing",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderStartEndRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderStartStartRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderTop",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderTopColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderTopLeftRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderTopRightRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderTopStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderTopWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "borderWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "bottom",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "boxShadow",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "boxSizing",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "breakAfter",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "breakBefore",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "breakInside",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "captionSide",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "caretColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "clear",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "clip",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "clipPath",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "clipRule",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "color",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "colorInterpolation",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "colorInterpolationFilters",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "colorScheme",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "columnCount",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "columnFill",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "columnGap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "columnRule",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "columnRuleColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "columnRuleStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "columnRuleWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "columnSpan",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "columnWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "columns",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "contain",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "containIntrinsicBlockSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "containIntrinsicHeight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "containIntrinsicInlineSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "containIntrinsicSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "containIntrinsicWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "container",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "containerName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "containerType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "content",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "contentVisibility",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "counterIncrement",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "counterReset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "counterSet",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "cssFloat",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "cssText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "cursor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "cx",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "cy",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "d",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "direction",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "display",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "dominantBaseline",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "emptyCells",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fill",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fillOpacity",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fillRule",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "filter",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "flex",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "flexBasis",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "flexDirection",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "flexFlow",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "flexGrow",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "flexShrink",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "flexWrap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "float",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "floodColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "floodOpacity",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "font",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontFamily",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontFeatureSettings",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontKerning",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontOpticalSizing",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontPalette",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontSizeAdjust",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontStretch",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontSynthesis",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontSynthesisSmallCaps",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontSynthesisStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontSynthesisWeight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontVariant",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontVariantAlternates",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontVariantCaps",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontVariantEastAsian",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontVariantLigatures",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontVariantNumeric",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontVariantPosition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontVariationSettings",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fontWeight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "forcedColorAdjust",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "grid",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridArea",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridAutoColumns",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridAutoFlow",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridAutoRows",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridColumn",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridColumnEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridColumnGap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridColumnStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridGap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridRow",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridRowEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridRowGap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridRowStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridTemplate",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridTemplateAreas",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridTemplateColumns",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "gridTemplateRows",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "hyphenateCharacter",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "hyphens",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "imageOrientation",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "imageRendering",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "inlineSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "inset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "insetBlock",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "insetBlockEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "insetBlockStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "insetInline",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "insetInlineEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "insetInlineStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "isolation",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "justifyContent",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "justifyItems",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "justifySelf",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "left",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "letterSpacing",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lightingColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lineBreak",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lineHeight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "listStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "listStyleImage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "listStylePosition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "listStyleType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "margin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginBlock",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginBlockEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginBlockStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginBottom",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginInline",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginInlineEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginInlineStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginLeft",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginRight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginTop",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marker",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "markerEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "markerMid",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "markerStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "mask",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maskClip",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maskComposite",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maskImage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maskMode",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maskOrigin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maskPosition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maskRepeat",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maskSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maskType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "mathDepth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "mathStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maxBlockSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maxHeight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maxInlineSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maxWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "minBlockSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "minHeight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "minInlineSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "minWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "mixBlendMode",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "objectFit",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "objectPosition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "offset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "offsetAnchor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "offsetDistance",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "offsetPath",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "offsetPosition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "offsetRotate",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "opacity",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "order",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "orphans",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "outline",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "outlineColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "outlineOffset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "outlineStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "outlineWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "overflow",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "overflowAnchor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "overflowClipMargin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "overflowWrap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "overflowX",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "overflowY",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "overscrollBehavior",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "overscrollBehaviorBlock",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "overscrollBehaviorInline",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "overscrollBehaviorX",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "overscrollBehaviorY",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "padding",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "paddingBlock",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "paddingBlockEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "paddingBlockStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "paddingBottom",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "paddingInline",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "paddingInlineEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "paddingInlineStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "paddingLeft",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "paddingRight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "paddingTop",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "page",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pageBreakAfter",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pageBreakBefore",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pageBreakInside",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "paintOrder",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "parentRule",
        "isStatic": true,
        "returnType": "(or CSSRule null)"
      },
      {
        "kind": "Property",
        "name": "perspective",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "perspectiveOrigin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "placeContent",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "placeItems",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "placeSelf",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pointerEvents",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "position",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "printColorAdjust",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "quotes",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "r",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "resize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "right",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rotate",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rowGap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rubyAlign",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rubyPosition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rx",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ry",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scale",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollBehavior",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollMargin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollMarginBlock",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollMarginBlockEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollMarginBlockStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollMarginBottom",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollMarginInline",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollMarginInlineEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollMarginInlineStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollMarginLeft",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollMarginRight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollMarginTop",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollPadding",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollPaddingBlock",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollPaddingBlockEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollPaddingBlockStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollPaddingBottom",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollPaddingInline",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollPaddingInlineEnd",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollPaddingInlineStart",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollPaddingLeft",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollPaddingRight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollPaddingTop",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollSnapAlign",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollSnapStop",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollSnapType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollbarColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollbarGutter",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scrollbarWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "shapeImageThreshold",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "shapeMargin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "shapeOutside",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "shapeRendering",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "stopColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "stopOpacity",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "stroke",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "strokeDasharray",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "strokeDashoffset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "strokeLinecap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "strokeLinejoin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "strokeMiterlimit",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "strokeOpacity",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "strokeWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "tabSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "tableLayout",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textAlign",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textAlignLast",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textAnchor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textCombineUpright",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textDecoration",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textDecorationColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textDecorationLine",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textDecorationSkipInk",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textDecorationStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textDecorationThickness",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textEmphasis",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textEmphasisColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textEmphasisPosition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textEmphasisStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textIndent",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textOrientation",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textOverflow",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textRendering",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textShadow",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textTransform",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textUnderlineOffset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textUnderlinePosition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textWrap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textWrapMode",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "textWrapStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "top",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "touchAction",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "transform",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "transformBox",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "transformOrigin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "transformStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "transition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "transitionBehavior",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "transitionDelay",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "transitionDuration",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "transitionProperty",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "transitionTimingFunction",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "translate",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "unicodeBidi",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "userSelect",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "vectorEffect",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "verticalAlign",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "viewTransitionName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "visibility",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAlignContent",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAlignItems",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAlignSelf",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAnimation",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAnimationDelay",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAnimationDirection",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAnimationDuration",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAnimationFillMode",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAnimationIterationCount",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAnimationName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAnimationPlayState",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAnimationTimingFunction",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitAppearance",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBackfaceVisibility",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBackgroundClip",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBackgroundOrigin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBackgroundSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBorderBottomLeftRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBorderBottomRightRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBorderRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBorderTopLeftRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBorderTopRightRadius",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBoxAlign",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBoxFlex",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBoxOrdinalGroup",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBoxOrient",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBoxPack",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBoxShadow",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitBoxSizing",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitFilter",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitFlex",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitFlexBasis",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitFlexDirection",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitFlexFlow",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitFlexGrow",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitFlexShrink",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitFlexWrap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitJustifyContent",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitLineClamp",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMask",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskBoxImage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskBoxImageOutset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskBoxImageRepeat",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskBoxImageSlice",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskBoxImageSource",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskBoxImageWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskClip",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskComposite",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskImage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskOrigin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskPosition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskRepeat",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitMaskSize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitOrder",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitPerspective",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitPerspectiveOrigin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTextFillColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTextSizeAdjust",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTextStroke",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTextStrokeColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTextStrokeWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTransform",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTransformOrigin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTransformStyle",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTransition",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTransitionDelay",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTransitionDuration",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTransitionProperty",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitTransitionTimingFunction",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitUserSelect",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "whiteSpace",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "whiteSpaceCollapse",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "widows",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "willChange",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "wordBreak",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "wordSpacing",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "wordWrap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "writingMode",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "zIndex",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "zoom",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPropertyPriority",
        "isStatic": false,
        "params": "[property<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPropertyValue",
        "isStatic": false,
        "params": "[property<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "removeProperty",
        "isStatic": false,
        "params": "[property<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "setProperty",
        "isStatic": false,
        "params": "[property<string> value<(or string null)> (optional priority<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<string>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSStyleDeclaration}) (new [] CSSStyleDeclaration)}"
  },
  "CSSStyleRule": {
    "kind": "Property",
    "name": "CSSStyleRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSStyleRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSStyleRule"
      },
      {
        "kind": "Property",
        "name": "selectorText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "style",
        "isStatic": true,
        "returnType": "CSSStyleDeclaration"
      },
      {
        "kind": "Property",
        "name": "styleMap",
        "isStatic": true,
        "returnType": "StylePropertyMap"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSStyleRule}) (new [] CSSStyleRule)}"
  },
  "CSSStyleSheet": {
    "kind": "Property",
    "name": "CSSStyleSheet",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional options<CSSStyleSheetInit>)]",
        "returnType": "CSSStyleSheet"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSStyleSheet"
      },
      {
        "kind": "Property",
        "name": "cssRules",
        "isStatic": true,
        "returnType": "CSSRuleList"
      },
      {
        "kind": "Property",
        "name": "ownerRule",
        "isStatic": true,
        "returnType": "(or CSSRule null)"
      },
      {
        "kind": "Property",
        "name": "rules",
        "isStatic": true,
        "returnType": "CSSRuleList"
      },
      {
        "kind": "Method",
        "name": "addRule",
        "isStatic": false,
        "params": "[(optional selector<string>) (optional style<string>) (optional index<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "deleteRule",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "insertRule",
        "isStatic": false,
        "params": "[rule<string> (optional index<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "removeRule",
        "isStatic": false,
        "params": "[(optional index<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "replace",
        "isStatic": false,
        "params": "[text<string>]",
        "returnType": "Promise<CSSStyleSheet>"
      },
      {
        "kind": "Method",
        "name": "replaceSync",
        "isStatic": false,
        "params": "[text<string>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSStyleSheet}) (new [(optional options<CSSStyleSheetInit>)] CSSStyleSheet)}"
  },
  "CSSStyleValue": {
    "kind": "Property",
    "name": "CSSStyleValue",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSStyleValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSStyleValue"
      },
      {
        "kind": "Method",
        "name": "parse",
        "isStatic": false,
        "params": "[property<string> cssText<string>]",
        "returnType": "CSSStyleValue"
      },
      {
        "kind": "Method",
        "name": "parseAll",
        "isStatic": false,
        "params": "[property<string> cssText<string>]",
        "returnType": "(array CSSStyleValue)"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSStyleValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSStyleValue"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSStyleValue}) (new [] CSSStyleValue) (method [property<string> cssText<string>])<CSSStyleValue> (method [property<string> cssText<string>])<(array CSSStyleValue)>}"
  },
  "CSSSupportsRule": {
    "kind": "Property",
    "name": "CSSSupportsRule",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSSupportsRule"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSSupportsRule"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSSupportsRule}) (new [] CSSSupportsRule)}"
  },
  "CSSTransformComponent": {
    "kind": "Property",
    "name": "CSSTransformComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSTransformComponent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSTransformComponent"
      },
      {
        "kind": "Property",
        "name": "is2D",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "toMatrix",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSTransformComponent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSTransformComponent"
      },
      {
        "kind": "Property",
        "name": "is2D",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "toMatrix",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSTransformComponent}) (new [] CSSTransformComponent)}"
  },
  "CSSTransformValue": {
    "kind": "Property",
    "name": "CSSTransformValue",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[transforms<(array CSSTransformComponent)>]",
        "returnType": "CSSTransformValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSTransformValue"
      },
      {
        "kind": "Property",
        "name": "is2D",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toMatrix",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<CSSTransformComponent> key<number> parent<CSSTransformValue>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSTransformComponent>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number CSSTransformComponent]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSTransformComponent>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[transforms<(array CSSTransformComponent)>]",
        "returnType": "CSSTransformValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSTransformValue"
      },
      {
        "kind": "Property",
        "name": "is2D",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toMatrix",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<CSSTransformComponent> key<number> parent<CSSTransformValue>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSTransformComponent>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number CSSTransformComponent]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSTransformComponent>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSTransformValue}) (new [transforms<(array CSSTransformComponent)>] CSSTransformValue)}"
  },
  "CSSTransition": {
    "kind": "Property",
    "name": "CSSTransition",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CSSTransition"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSTransition"
      },
      {
        "kind": "Property",
        "name": "transitionProperty",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<CSSTransition> ev<(get AnimationEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<CSSTransition> ev<(get AnimationEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSTransition}) (new [] CSSTransition)}"
  },
  "CSSTranslate": {
    "kind": "Property",
    "name": "CSSTranslate",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[x<CSSNumericValue> y<CSSNumericValue> (optional z<CSSNumericValue>)]",
        "returnType": "CSSTranslate"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSTranslate"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "z",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[x<CSSNumericValue> y<CSSNumericValue> (optional z<CSSNumericValue>)]",
        "returnType": "CSSTranslate"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSTranslate"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      },
      {
        "kind": "Property",
        "name": "z",
        "isStatic": true,
        "returnType": "CSSNumericValue"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSTranslate}) (new [x<CSSNumericValue> y<CSSNumericValue> (optional z<CSSNumericValue>)] CSSTranslate)}"
  },
  "CSSUnitValue": {
    "kind": "Property",
    "name": "CSSUnitValue",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[value<number> unit<string>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Property",
        "name": "unit",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[value<number> unit<string>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Property",
        "name": "unit",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSUnitValue}) (new [value<number> unit<string>] CSSUnitValue)}"
  },
  "CSSUnparsedValue": {
    "kind": "Property",
    "name": "CSSUnparsedValue",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[members<(array CSSUnparsedSegment)>]",
        "returnType": "CSSUnparsedValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSUnparsedValue"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<CSSUnparsedSegment> key<number> parent<CSSUnparsedValue>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSUnparsedSegment>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number CSSUnparsedSegment]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSUnparsedSegment>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[members<(array CSSUnparsedSegment)>]",
        "returnType": "CSSUnparsedValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSUnparsedValue"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<CSSUnparsedSegment> key<number> parent<CSSUnparsedValue>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSUnparsedSegment>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number CSSUnparsedSegment]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSUnparsedSegment>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSUnparsedValue}) (new [members<(array CSSUnparsedSegment)>] CSSUnparsedValue)}"
  },
  "CSSVariableReferenceValue": {
    "kind": "Property",
    "name": "CSSVariableReferenceValue",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[variable<string> (optional fallback<(or CSSUnparsedValue null)>)]",
        "returnType": "CSSVariableReferenceValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSVariableReferenceValue"
      },
      {
        "kind": "Property",
        "name": "fallback",
        "isStatic": true,
        "returnType": "(or CSSUnparsedValue null)"
      },
      {
        "kind": "Property",
        "name": "variable",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[variable<string> (optional fallback<(or CSSUnparsedValue null)>)]",
        "returnType": "CSSVariableReferenceValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CSSVariableReferenceValue"
      },
      {
        "kind": "Property",
        "name": "fallback",
        "isStatic": true,
        "returnType": "(or CSSUnparsedValue null)"
      },
      {
        "kind": "Property",
        "name": "variable",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CSSVariableReferenceValue}) (new [variable<string> (optional fallback<(or CSSUnparsedValue null)>)] CSSVariableReferenceValue)}"
  },
  "Cache": {
    "kind": "Property",
    "name": "Cache",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Cache"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Cache"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[request<(or RequestInfo URL)>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addAll",
        "isStatic": false,
        "params": "[requests<(array RequestInfo)>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[request<(or RequestInfo URL)> (optional options<CacheQueryOptions>)]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[(optional request<(or RequestInfo URL)>) (optional options<CacheQueryOptions>)]",
        "returnType": "Promise<ReadonlyArray<Request>>"
      },
      {
        "kind": "Method",
        "name": "match",
        "isStatic": false,
        "params": "[request<(or RequestInfo URL)> (optional options<CacheQueryOptions>)]",
        "returnType": "Promise<(or Response undefined)>"
      },
      {
        "kind": "Method",
        "name": "matchAll",
        "isStatic": false,
        "params": "[(optional request<(or RequestInfo URL)>) (optional options<CacheQueryOptions>)]",
        "returnType": "Promise<ReadonlyArray<Response>>"
      },
      {
        "kind": "Method",
        "name": "put",
        "isStatic": false,
        "params": "[request<(or RequestInfo URL)> response<Response>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addAll",
        "isStatic": false,
        "params": "[requests<Iterable<RequestInfo>>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Cache"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Cache"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[request<(or RequestInfo URL)>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addAll",
        "isStatic": false,
        "params": "[requests<(array RequestInfo)>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[request<(or RequestInfo URL)> (optional options<CacheQueryOptions>)]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[(optional request<(or RequestInfo URL)>) (optional options<CacheQueryOptions>)]",
        "returnType": "Promise<ReadonlyArray<Request>>"
      },
      {
        "kind": "Method",
        "name": "match",
        "isStatic": false,
        "params": "[request<(or RequestInfo URL)> (optional options<CacheQueryOptions>)]",
        "returnType": "Promise<(or Response undefined)>"
      },
      {
        "kind": "Method",
        "name": "matchAll",
        "isStatic": false,
        "params": "[(optional request<(or RequestInfo URL)>) (optional options<CacheQueryOptions>)]",
        "returnType": "Promise<ReadonlyArray<Response>>"
      },
      {
        "kind": "Method",
        "name": "put",
        "isStatic": false,
        "params": "[request<(or RequestInfo URL)> response<Response>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addAll",
        "isStatic": false,
        "params": "[requests<Iterable<RequestInfo>>]",
        "returnType": "Promise<void>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Cache}) (new [] Cache)}"
  },
  "CacheStorage": {
    "kind": "Property",
    "name": "CacheStorage",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CacheStorage"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CacheStorage"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[cacheName<string>]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[cacheName<string>]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<(array string)>"
      },
      {
        "kind": "Method",
        "name": "match",
        "isStatic": false,
        "params": "[request<(or RequestInfo URL)> (optional options<MultiCacheQueryOptions>)]",
        "returnType": "Promise<(or Response undefined)>"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[cacheName<string>]",
        "returnType": "Promise<Cache>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CacheStorage"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CacheStorage"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[cacheName<string>]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[cacheName<string>]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<(array string)>"
      },
      {
        "kind": "Method",
        "name": "match",
        "isStatic": false,
        "params": "[request<(or RequestInfo URL)> (optional options<MultiCacheQueryOptions>)]",
        "returnType": "Promise<(or Response undefined)>"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[cacheName<string>]",
        "returnType": "Promise<Cache>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CacheStorage}) (new [] CacheStorage)}"
  },
  "CanvasCaptureMediaStreamTrack": {
    "kind": "Property",
    "name": "CanvasCaptureMediaStreamTrack",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CanvasCaptureMediaStreamTrack"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CanvasCaptureMediaStreamTrack"
      },
      {
        "kind": "Property",
        "name": "canvas",
        "isStatic": true,
        "returnType": "HTMLCanvasElement"
      },
      {
        "kind": "Method",
        "name": "requestFrame",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<CanvasCaptureMediaStreamTrack> ev<(get MediaStreamTrackEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<CanvasCaptureMediaStreamTrack> ev<(get MediaStreamTrackEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CanvasCaptureMediaStreamTrack}) (new [] CanvasCaptureMediaStreamTrack)}"
  },
  "CanvasGradient": {
    "kind": "Property",
    "name": "CanvasGradient",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CanvasGradient"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CanvasGradient"
      },
      {
        "kind": "Method",
        "name": "addColorStop",
        "isStatic": false,
        "params": "[offset<number> color<string>]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CanvasGradient"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CanvasGradient"
      },
      {
        "kind": "Method",
        "name": "addColorStop",
        "isStatic": false,
        "params": "[offset<number> color<string>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CanvasGradient}) (new [] CanvasGradient)}"
  },
  "CanvasPattern": {
    "kind": "Property",
    "name": "CanvasPattern",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CanvasPattern"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CanvasPattern"
      },
      {
        "kind": "Method",
        "name": "setTransform",
        "isStatic": false,
        "params": "[(optional transform<DOMMatrix2DInit>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CanvasPattern"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CanvasPattern"
      },
      {
        "kind": "Method",
        "name": "setTransform",
        "isStatic": false,
        "params": "[(optional transform<DOMMatrix2DInit>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CanvasPattern}) (new [] CanvasPattern)}"
  },
  "CanvasRenderingContext2D": {
    "kind": "Property",
    "name": "CanvasRenderingContext2D",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CanvasRenderingContext2D"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CanvasRenderingContext2D"
      },
      {
        "kind": "Property",
        "name": "canvas",
        "isStatic": true,
        "returnType": "HTMLCanvasElement"
      },
      {
        "kind": "Method",
        "name": "getContextAttributes",
        "isStatic": false,
        "params": "[]",
        "returnType": "CanvasRenderingContext2DSettings"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CanvasRenderingContext2D}) (new [] CanvasRenderingContext2D)}"
  },
  "CaretPosition": {
    "kind": "Property",
    "name": "CaretPosition",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CaretPosition"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CaretPosition"
      },
      {
        "kind": "Property",
        "name": "offset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "offsetNode",
        "isStatic": true,
        "returnType": "Node"
      },
      {
        "kind": "Method",
        "name": "getClientRect",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or DOMRect null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CaretPosition}) (new [] CaretPosition)}"
  },
  "ChannelMergerNode": {
    "kind": "Property",
    "name": "ChannelMergerNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<ChannelMergerOptions>)]",
        "returnType": "ChannelMergerNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ChannelMergerNode"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ChannelMergerNode}) (new [context<BaseAudioContext> (optional options<ChannelMergerOptions>)] ChannelMergerNode)}"
  },
  "ChannelSplitterNode": {
    "kind": "Property",
    "name": "ChannelSplitterNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<ChannelSplitterOptions>)]",
        "returnType": "ChannelSplitterNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ChannelSplitterNode"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ChannelSplitterNode}) (new [context<BaseAudioContext> (optional options<ChannelSplitterOptions>)] ChannelSplitterNode)}"
  },
  "CharacterData": {
    "kind": "Property",
    "name": "CharacterData",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CharacterData"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CharacterData"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ownerDocument",
        "isStatic": true,
        "returnType": "Document"
      },
      {
        "kind": "Method",
        "name": "appendData",
        "isStatic": false,
        "params": "[data<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteData",
        "isStatic": false,
        "params": "[offset<number> count<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "insertData",
        "isStatic": false,
        "params": "[offset<number> data<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "replaceData",
        "isStatic": false,
        "params": "[offset<number> count<number> data<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "substringData",
        "isStatic": false,
        "params": "[offset<number> count<number>]",
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CharacterData}) (new [] CharacterData)}"
  },
  "Clipboard": {
    "kind": "Property",
    "name": "Clipboard",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Clipboard"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Clipboard"
      },
      {
        "kind": "Method",
        "name": "read",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<ClipboardItems>"
      },
      {
        "kind": "Method",
        "name": "readText",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<string>"
      },
      {
        "kind": "Method",
        "name": "write",
        "isStatic": false,
        "params": "[data<ClipboardItems>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "writeText",
        "isStatic": false,
        "params": "[data<string>]",
        "returnType": "Promise<void>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Clipboard}) (new [] Clipboard)}"
  },
  "ClipboardEvent": {
    "kind": "Property",
    "name": "ClipboardEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<ClipboardEventInit>)]",
        "returnType": "ClipboardEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ClipboardEvent"
      },
      {
        "kind": "Property",
        "name": "clipboardData",
        "isStatic": true,
        "returnType": "(or DataTransfer null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ClipboardEvent}) (new [type<string> (optional eventInitDict<ClipboardEventInit>)] ClipboardEvent)}"
  },
  "ClipboardItem": {
    "kind": "Property",
    "name": "ClipboardItem",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[items<Record<string (or string Blob PromiseLike<(or string Blob)>)>> (optional options<ClipboardItemOptions>)]",
        "returnType": "ClipboardItem"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ClipboardItem"
      },
      {
        "kind": "Method",
        "name": "supports",
        "isStatic": false,
        "params": "[type<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "presentationStyle",
        "isStatic": true,
        "returnType": "PresentationStyle"
      },
      {
        "kind": "Property",
        "name": "types",
        "isStatic": true,
        "returnType": "ReadonlyArray<string>"
      },
      {
        "kind": "Method",
        "name": "getType",
        "isStatic": false,
        "params": "[type<string>]",
        "returnType": "Promise<Blob>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ClipboardItem}) (new [items<Record<string (or string Blob PromiseLike<(or string Blob)>)>> (optional options<ClipboardItemOptions>)] ClipboardItem) (method [type<string>])<boolean>}"
  },
  "CloseEvent": {
    "kind": "Property",
    "name": "CloseEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<CloseEventInit>)]",
        "returnType": "CloseEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CloseEvent"
      },
      {
        "kind": "Property",
        "name": "code",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "reason",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "wasClean",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<CloseEventInit>)]",
        "returnType": "CloseEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CloseEvent"
      },
      {
        "kind": "Property",
        "name": "code",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "reason",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "wasClean",
        "isStatic": true,
        "returnType": "boolean"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CloseEvent}) (new [type<string> (optional eventInitDict<CloseEventInit>)] CloseEvent)}"
  },
  "Comment": {
    "kind": "Property",
    "name": "Comment",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional data<string>)]",
        "returnType": "Comment"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Comment"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Comment}) (new [(optional data<string>)] Comment)}"
  },
  "CompositionEvent": {
    "kind": "Property",
    "name": "CompositionEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<CompositionEventInit>)]",
        "returnType": "CompositionEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CompositionEvent"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "initCompositionEvent",
        "isStatic": false,
        "params": "[typeArg<string> (optional bubblesArg<boolean>) (optional cancelableArg<boolean>) (optional viewArg<(or WindowProxy null)>) (optional dataArg<string>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CompositionEvent}) (new [type<string> (optional eventInitDict<CompositionEventInit>)] CompositionEvent)}"
  },
  "CompressionStream": {
    "kind": "Property",
    "name": "CompressionStream",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[format<CompressionFormat>]",
        "returnType": "CompressionStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CompressionStream"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream<Uint8Array>"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream<BufferSource>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[format<CompressionFormat>]",
        "returnType": "CompressionStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CompressionStream"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream<Uint8Array>"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream<BufferSource>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CompressionStream}) (new [format<CompressionFormat>] CompressionStream)}"
  },
  "ConstantSourceNode": {
    "kind": "Property",
    "name": "ConstantSourceNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<ConstantSourceOptions>)]",
        "returnType": "ConstantSourceNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ConstantSourceNode"
      },
      {
        "kind": "Property",
        "name": "offset",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ConstantSourceNode> ev<(get AudioScheduledSourceNodeEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ConstantSourceNode> ev<(get AudioScheduledSourceNodeEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ConstantSourceNode}) (new [context<BaseAudioContext> (optional options<ConstantSourceOptions>)] ConstantSourceNode)}"
  },
  "ContentVisibilityAutoStateChangeEvent": {
    "kind": "Property",
    "name": "ContentVisibilityAutoStateChangeEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<ContentVisibilityAutoStateChangeEventInit>)]",
        "returnType": "ContentVisibilityAutoStateChangeEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ContentVisibilityAutoStateChangeEvent"
      },
      {
        "kind": "Property",
        "name": "skipped",
        "isStatic": true,
        "returnType": "boolean"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ContentVisibilityAutoStateChangeEvent}) (new [type<string> (optional eventInitDict<ContentVisibilityAutoStateChangeEventInit>)] ContentVisibilityAutoStateChangeEvent)}"
  },
  "ConvolverNode": {
    "kind": "Property",
    "name": "ConvolverNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<ConvolverOptions>)]",
        "returnType": "ConvolverNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ConvolverNode"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "(or AudioBuffer null)"
      },
      {
        "kind": "Property",
        "name": "normalize",
        "isStatic": true,
        "returnType": "boolean"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ConvolverNode}) (new [context<BaseAudioContext> (optional options<ConvolverOptions>)] ConvolverNode)}"
  },
  "CountQueuingStrategy": {
    "kind": "Property",
    "name": "CountQueuingStrategy",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<QueuingStrategyInit>]",
        "returnType": "CountQueuingStrategy"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CountQueuingStrategy"
      },
      {
        "kind": "Property",
        "name": "highWaterMark",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "QueuingStrategySize"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<QueuingStrategyInit>]",
        "returnType": "CountQueuingStrategy"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CountQueuingStrategy"
      },
      {
        "kind": "Property",
        "name": "highWaterMark",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "QueuingStrategySize"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CountQueuingStrategy}) (new [init<QueuingStrategyInit>] CountQueuingStrategy)}"
  },
  "Credential": {
    "kind": "Property",
    "name": "Credential",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Credential"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Credential"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Credential}) (new [] Credential)}"
  },
  "CredentialsContainer": {
    "kind": "Property",
    "name": "CredentialsContainer",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CredentialsContainer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CredentialsContainer"
      },
      {
        "kind": "Method",
        "name": "create",
        "isStatic": false,
        "params": "[(optional options<CredentialCreationOptions>)]",
        "returnType": "Promise<(or Credential null)>"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[(optional options<CredentialRequestOptions>)]",
        "returnType": "Promise<(or Credential null)>"
      },
      {
        "kind": "Method",
        "name": "preventSilentAccess",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "store",
        "isStatic": false,
        "params": "[credential<Credential>]",
        "returnType": "Promise<void>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CredentialsContainer}) (new [] CredentialsContainer)}"
  },
  "Crypto": {
    "kind": "Property",
    "name": "Crypto",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Crypto"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Crypto"
      },
      {
        "kind": "Property",
        "name": "subtle",
        "isStatic": true,
        "returnType": "SubtleCrypto"
      },
      {
        "kind": "Method",
        "name": "getRandomValues",
        "isStatic": false,
        "params": "[array<T>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "randomUUID",
        "isStatic": false,
        "params": "[]",
        "returnType": "\"{{any}}string}-${{{any}}string}-${{{any}}string}-${{{any}}string}-${{{any}}string}`\""
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Crypto"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Crypto"
      },
      {
        "kind": "Property",
        "name": "subtle",
        "isStatic": true,
        "returnType": "SubtleCrypto"
      },
      {
        "kind": "Method",
        "name": "getRandomValues",
        "isStatic": false,
        "params": "[array<T>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "randomUUID",
        "isStatic": false,
        "params": "[]",
        "returnType": "\"{{any}}string}-${{{any}}string}-${{{any}}string}-${{{any}}string}-${{{any}}string}`\""
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Crypto}) (new [] Crypto)}"
  },
  "CryptoKey": {
    "kind": "Property",
    "name": "CryptoKey",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CryptoKey"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CryptoKey"
      },
      {
        "kind": "Property",
        "name": "algorithm",
        "isStatic": true,
        "returnType": "KeyAlgorithm"
      },
      {
        "kind": "Property",
        "name": "extractable",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "KeyType"
      },
      {
        "kind": "Property",
        "name": "usages",
        "isStatic": true,
        "returnType": "(array KeyUsage)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CryptoKey"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CryptoKey"
      },
      {
        "kind": "Property",
        "name": "algorithm",
        "isStatic": true,
        "returnType": "KeyAlgorithm"
      },
      {
        "kind": "Property",
        "name": "extractable",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "KeyType"
      },
      {
        "kind": "Property",
        "name": "usages",
        "isStatic": true,
        "returnType": "(array KeyUsage)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CryptoKey}) (new [] CryptoKey)}"
  },
  "CustomElementRegistry": {
    "kind": "Property",
    "name": "CustomElementRegistry",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CustomElementRegistry"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CustomElementRegistry"
      },
      {
        "kind": "Method",
        "name": "define",
        "isStatic": false,
        "params": "[name<string> constructor<CustomElementConstructor> (optional options<ElementDefinitionOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or CustomElementConstructor undefined)"
      },
      {
        "kind": "Method",
        "name": "getName",
        "isStatic": false,
        "params": "[constructor<CustomElementConstructor>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "upgrade",
        "isStatic": false,
        "params": "[root<Node>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "whenDefined",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "Promise<CustomElementConstructor>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CustomElementRegistry}) (new [] CustomElementRegistry)}"
  },
  "CustomEvent": {
    "kind": "Property",
    "name": "CustomEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<CustomEventInit<T>>)]",
        "returnType": "CustomEvent<T>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CustomEvent"
      },
      {
        "kind": "Property",
        "name": "detail",
        "isStatic": true,
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "initCustomEvent",
        "isStatic": false,
        "params": "[type<string> (optional bubbles<boolean>) (optional cancelable<boolean>) (optional detail<T>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<CustomEventInit<T>>)]",
        "returnType": "CustomEvent<T>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CustomEvent"
      },
      {
        "kind": "Property",
        "name": "detail",
        "isStatic": true,
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "initCustomEvent",
        "isStatic": false,
        "params": "[type<string> (optional bubbles<boolean>) (optional cancelable<boolean>) (optional detail<T>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CustomEvent}) (new [type<string> (optional eventInitDict<CustomEventInit<T>>)] CustomEvent<T>)}"
  },
  "CustomStateSet": {
    "kind": "Property",
    "name": "CustomStateSet",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "CustomStateSet"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "CustomStateSet"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<string> key<string> parent<CustomStateSet>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype CustomStateSet}) (new [] CustomStateSet)}"
  },
  "DOMException": {
    "kind": "Property",
    "name": "DOMException",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>) (optional name<string>)]",
        "returnType": "DOMException"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMException"
      },
      {
        "kind": "Property",
        "name": "INDEX_SIZE_ERR",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "DOMSTRING_SIZE_ERR",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "HIERARCHY_REQUEST_ERR",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "WRONG_DOCUMENT_ERR",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "INVALID_CHARACTER_ERR",
        "isStatic": false,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "NO_DATA_ALLOWED_ERR",
        "isStatic": false,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "NO_MODIFICATION_ALLOWED_ERR",
        "isStatic": false,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "NOT_FOUND_ERR",
        "isStatic": false,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "NOT_SUPPORTED_ERR",
        "isStatic": false,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "INUSE_ATTRIBUTE_ERR",
        "isStatic": false,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "INVALID_STATE_ERR",
        "isStatic": false,
        "returnType": "11"
      },
      {
        "kind": "Property",
        "name": "SYNTAX_ERR",
        "isStatic": false,
        "returnType": "12"
      },
      {
        "kind": "Property",
        "name": "INVALID_MODIFICATION_ERR",
        "isStatic": false,
        "returnType": "13"
      },
      {
        "kind": "Property",
        "name": "NAMESPACE_ERR",
        "isStatic": false,
        "returnType": "14"
      },
      {
        "kind": "Property",
        "name": "INVALID_ACCESS_ERR",
        "isStatic": false,
        "returnType": "15"
      },
      {
        "kind": "Property",
        "name": "VALIDATION_ERR",
        "isStatic": false,
        "returnType": "16"
      },
      {
        "kind": "Property",
        "name": "TYPE_MISMATCH_ERR",
        "isStatic": false,
        "returnType": "17"
      },
      {
        "kind": "Property",
        "name": "SECURITY_ERR",
        "isStatic": false,
        "returnType": "18"
      },
      {
        "kind": "Property",
        "name": "NETWORK_ERR",
        "isStatic": false,
        "returnType": "19"
      },
      {
        "kind": "Property",
        "name": "ABORT_ERR",
        "isStatic": false,
        "returnType": "20"
      },
      {
        "kind": "Property",
        "name": "URL_MISMATCH_ERR",
        "isStatic": false,
        "returnType": "21"
      },
      {
        "kind": "Property",
        "name": "QUOTA_EXCEEDED_ERR",
        "isStatic": false,
        "returnType": "22"
      },
      {
        "kind": "Property",
        "name": "TIMEOUT_ERR",
        "isStatic": false,
        "returnType": "23"
      },
      {
        "kind": "Property",
        "name": "INVALID_NODE_TYPE_ERR",
        "isStatic": false,
        "returnType": "24"
      },
      {
        "kind": "Property",
        "name": "DATA_CLONE_ERR",
        "isStatic": false,
        "returnType": "25"
      },
      {
        "kind": "Property",
        "name": "code",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "message",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "INDEX_SIZE_ERR",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "DOMSTRING_SIZE_ERR",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "HIERARCHY_REQUEST_ERR",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "WRONG_DOCUMENT_ERR",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "INVALID_CHARACTER_ERR",
        "isStatic": true,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "NO_DATA_ALLOWED_ERR",
        "isStatic": true,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "NO_MODIFICATION_ALLOWED_ERR",
        "isStatic": true,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "NOT_FOUND_ERR",
        "isStatic": true,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "NOT_SUPPORTED_ERR",
        "isStatic": true,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "INUSE_ATTRIBUTE_ERR",
        "isStatic": true,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "INVALID_STATE_ERR",
        "isStatic": true,
        "returnType": "11"
      },
      {
        "kind": "Property",
        "name": "SYNTAX_ERR",
        "isStatic": true,
        "returnType": "12"
      },
      {
        "kind": "Property",
        "name": "INVALID_MODIFICATION_ERR",
        "isStatic": true,
        "returnType": "13"
      },
      {
        "kind": "Property",
        "name": "NAMESPACE_ERR",
        "isStatic": true,
        "returnType": "14"
      },
      {
        "kind": "Property",
        "name": "INVALID_ACCESS_ERR",
        "isStatic": true,
        "returnType": "15"
      },
      {
        "kind": "Property",
        "name": "VALIDATION_ERR",
        "isStatic": true,
        "returnType": "16"
      },
      {
        "kind": "Property",
        "name": "TYPE_MISMATCH_ERR",
        "isStatic": true,
        "returnType": "17"
      },
      {
        "kind": "Property",
        "name": "SECURITY_ERR",
        "isStatic": true,
        "returnType": "18"
      },
      {
        "kind": "Property",
        "name": "NETWORK_ERR",
        "isStatic": true,
        "returnType": "19"
      },
      {
        "kind": "Property",
        "name": "ABORT_ERR",
        "isStatic": true,
        "returnType": "20"
      },
      {
        "kind": "Property",
        "name": "URL_MISMATCH_ERR",
        "isStatic": true,
        "returnType": "21"
      },
      {
        "kind": "Property",
        "name": "QUOTA_EXCEEDED_ERR",
        "isStatic": true,
        "returnType": "22"
      },
      {
        "kind": "Property",
        "name": "TIMEOUT_ERR",
        "isStatic": true,
        "returnType": "23"
      },
      {
        "kind": "Property",
        "name": "INVALID_NODE_TYPE_ERR",
        "isStatic": true,
        "returnType": "24"
      },
      {
        "kind": "Property",
        "name": "DATA_CLONE_ERR",
        "isStatic": true,
        "returnType": "25"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>) (optional name<string>)]",
        "returnType": "DOMException"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMException"
      },
      {
        "kind": "Property",
        "name": "INDEX_SIZE_ERR",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "DOMSTRING_SIZE_ERR",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "HIERARCHY_REQUEST_ERR",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "WRONG_DOCUMENT_ERR",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "INVALID_CHARACTER_ERR",
        "isStatic": false,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "NO_DATA_ALLOWED_ERR",
        "isStatic": false,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "NO_MODIFICATION_ALLOWED_ERR",
        "isStatic": false,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "NOT_FOUND_ERR",
        "isStatic": false,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "NOT_SUPPORTED_ERR",
        "isStatic": false,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "INUSE_ATTRIBUTE_ERR",
        "isStatic": false,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "INVALID_STATE_ERR",
        "isStatic": false,
        "returnType": "11"
      },
      {
        "kind": "Property",
        "name": "SYNTAX_ERR",
        "isStatic": false,
        "returnType": "12"
      },
      {
        "kind": "Property",
        "name": "INVALID_MODIFICATION_ERR",
        "isStatic": false,
        "returnType": "13"
      },
      {
        "kind": "Property",
        "name": "NAMESPACE_ERR",
        "isStatic": false,
        "returnType": "14"
      },
      {
        "kind": "Property",
        "name": "INVALID_ACCESS_ERR",
        "isStatic": false,
        "returnType": "15"
      },
      {
        "kind": "Property",
        "name": "VALIDATION_ERR",
        "isStatic": false,
        "returnType": "16"
      },
      {
        "kind": "Property",
        "name": "TYPE_MISMATCH_ERR",
        "isStatic": false,
        "returnType": "17"
      },
      {
        "kind": "Property",
        "name": "SECURITY_ERR",
        "isStatic": false,
        "returnType": "18"
      },
      {
        "kind": "Property",
        "name": "NETWORK_ERR",
        "isStatic": false,
        "returnType": "19"
      },
      {
        "kind": "Property",
        "name": "ABORT_ERR",
        "isStatic": false,
        "returnType": "20"
      },
      {
        "kind": "Property",
        "name": "URL_MISMATCH_ERR",
        "isStatic": false,
        "returnType": "21"
      },
      {
        "kind": "Property",
        "name": "QUOTA_EXCEEDED_ERR",
        "isStatic": false,
        "returnType": "22"
      },
      {
        "kind": "Property",
        "name": "TIMEOUT_ERR",
        "isStatic": false,
        "returnType": "23"
      },
      {
        "kind": "Property",
        "name": "INVALID_NODE_TYPE_ERR",
        "isStatic": false,
        "returnType": "24"
      },
      {
        "kind": "Property",
        "name": "DATA_CLONE_ERR",
        "isStatic": false,
        "returnType": "25"
      },
      {
        "kind": "Property",
        "name": "code",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "message",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "INDEX_SIZE_ERR",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "DOMSTRING_SIZE_ERR",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "HIERARCHY_REQUEST_ERR",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "WRONG_DOCUMENT_ERR",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "INVALID_CHARACTER_ERR",
        "isStatic": true,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "NO_DATA_ALLOWED_ERR",
        "isStatic": true,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "NO_MODIFICATION_ALLOWED_ERR",
        "isStatic": true,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "NOT_FOUND_ERR",
        "isStatic": true,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "NOT_SUPPORTED_ERR",
        "isStatic": true,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "INUSE_ATTRIBUTE_ERR",
        "isStatic": true,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "INVALID_STATE_ERR",
        "isStatic": true,
        "returnType": "11"
      },
      {
        "kind": "Property",
        "name": "SYNTAX_ERR",
        "isStatic": true,
        "returnType": "12"
      },
      {
        "kind": "Property",
        "name": "INVALID_MODIFICATION_ERR",
        "isStatic": true,
        "returnType": "13"
      },
      {
        "kind": "Property",
        "name": "NAMESPACE_ERR",
        "isStatic": true,
        "returnType": "14"
      },
      {
        "kind": "Property",
        "name": "INVALID_ACCESS_ERR",
        "isStatic": true,
        "returnType": "15"
      },
      {
        "kind": "Property",
        "name": "VALIDATION_ERR",
        "isStatic": true,
        "returnType": "16"
      },
      {
        "kind": "Property",
        "name": "TYPE_MISMATCH_ERR",
        "isStatic": true,
        "returnType": "17"
      },
      {
        "kind": "Property",
        "name": "SECURITY_ERR",
        "isStatic": true,
        "returnType": "18"
      },
      {
        "kind": "Property",
        "name": "NETWORK_ERR",
        "isStatic": true,
        "returnType": "19"
      },
      {
        "kind": "Property",
        "name": "ABORT_ERR",
        "isStatic": true,
        "returnType": "20"
      },
      {
        "kind": "Property",
        "name": "URL_MISMATCH_ERR",
        "isStatic": true,
        "returnType": "21"
      },
      {
        "kind": "Property",
        "name": "QUOTA_EXCEEDED_ERR",
        "isStatic": true,
        "returnType": "22"
      },
      {
        "kind": "Property",
        "name": "TIMEOUT_ERR",
        "isStatic": true,
        "returnType": "23"
      },
      {
        "kind": "Property",
        "name": "INVALID_NODE_TYPE_ERR",
        "isStatic": true,
        "returnType": "24"
      },
      {
        "kind": "Property",
        "name": "DATA_CLONE_ERR",
        "isStatic": true,
        "returnType": "25"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMException}) (new [(optional message<string>) (optional name<string>)] DOMException) (property {:INDEX_SIZE_ERR 1}) (property {:DOMSTRING_SIZE_ERR 2}) (property {:HIERARCHY_REQUEST_ERR 3}) (property {:WRONG_DOCUMENT_ERR 4}) (property {:INVALID_CHARACTER_ERR 5}) (property {:NO_DATA_ALLOWED_ERR 6}) (property {:NO_MODIFICATION_ALLOWED_ERR 7}) (property {:NOT_FOUND_ERR 8}) (property {:NOT_SUPPORTED_ERR 9}) (property {:INUSE_ATTRIBUTE_ERR 10}) (property {:INVALID_STATE_ERR 11}) (property {:SYNTAX_ERR 12}) (property {:INVALID_MODIFICATION_ERR 13}) (property {:NAMESPACE_ERR 14}) (property {:INVALID_ACCESS_ERR 15}) (property {:VALIDATION_ERR 16}) (property {:TYPE_MISMATCH_ERR 17}) (property {:SECURITY_ERR 18}) (property {:NETWORK_ERR 19}) (property {:ABORT_ERR 20}) (property {:URL_MISMATCH_ERR 21}) (property {:QUOTA_EXCEEDED_ERR 22}) (property {:TIMEOUT_ERR 23}) (property {:INVALID_NODE_TYPE_ERR 24}) (property {:DATA_CLONE_ERR 25})}"
  },
  "DOMImplementation": {
    "kind": "Property",
    "name": "DOMImplementation",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DOMImplementation"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMImplementation"
      },
      {
        "kind": "Method",
        "name": "createDocument",
        "isStatic": false,
        "params": "[namespace<(or string null)> qualifiedName<(or string null)> (optional doctype<(or DocumentType null)>)]",
        "returnType": "XMLDocument"
      },
      {
        "kind": "Method",
        "name": "createDocumentType",
        "isStatic": false,
        "params": "[qualifiedName<string> publicId<string> systemId<string>]",
        "returnType": "DocumentType"
      },
      {
        "kind": "Method",
        "name": "createHTMLDocument",
        "isStatic": false,
        "params": "[(optional title<string>)]",
        "returnType": "Document"
      },
      {
        "kind": "Method",
        "name": "hasFeature",
        "isStatic": false,
        "params": "[(& rest<args<(array any)>>)]",
        "returnType": "true"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMImplementation}) (new [] DOMImplementation)}"
  },
  "DOMMatrix": {
    "kind": "Property",
    "name": "DOMMatrix",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional init<(or string (array number))>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "fromFloat32Array",
        "isStatic": false,
        "params": "[array32<Float32Array>]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "fromFloat64Array",
        "isStatic": false,
        "params": "[array64<Float64Array>]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "fromMatrix",
        "isStatic": false,
        "params": "[(optional other<DOMMatrixInit>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Property",
        "name": "a",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "b",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "c",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "d",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "e",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "f",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m11",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m12",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m13",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m14",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m21",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m22",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m23",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m24",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m31",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m32",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m33",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m34",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m41",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m42",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m43",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m44",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "invertSelf",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "multiplySelf",
        "isStatic": false,
        "params": "[(optional other<DOMMatrixInit>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "preMultiplySelf",
        "isStatic": false,
        "params": "[(optional other<DOMMatrixInit>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "rotateAxisAngleSelf",
        "isStatic": false,
        "params": "[(optional x<number>) (optional y<number>) (optional z<number>) (optional angle<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "rotateFromVectorSelf",
        "isStatic": false,
        "params": "[(optional x<number>) (optional y<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "rotateSelf",
        "isStatic": false,
        "params": "[(optional rotX<number>) (optional rotY<number>) (optional rotZ<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "scale3dSelf",
        "isStatic": false,
        "params": "[(optional scale<number>) (optional originX<number>) (optional originY<number>) (optional originZ<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "scaleSelf",
        "isStatic": false,
        "params": "[(optional scaleX<number>) (optional scaleY<number>) (optional scaleZ<number>) (optional originX<number>) (optional originY<number>) (optional originZ<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "setMatrixValue",
        "isStatic": false,
        "params": "[transformList<string>]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "skewXSelf",
        "isStatic": false,
        "params": "[(optional sx<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "skewYSelf",
        "isStatic": false,
        "params": "[(optional sy<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "translateSelf",
        "isStatic": false,
        "params": "[(optional tx<number>) (optional ty<number>) (optional tz<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional init<(or string (array number))>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "fromFloat32Array",
        "isStatic": false,
        "params": "[array32<Float32Array>]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "fromFloat64Array",
        "isStatic": false,
        "params": "[array64<Float64Array>]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "fromMatrix",
        "isStatic": false,
        "params": "[(optional other<DOMMatrixInit>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Property",
        "name": "a",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "b",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "c",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "d",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "e",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "f",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m11",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m12",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m13",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m14",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m21",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m22",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m23",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m24",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m31",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m32",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m33",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m34",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m41",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m42",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m43",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m44",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "invertSelf",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "multiplySelf",
        "isStatic": false,
        "params": "[(optional other<DOMMatrixInit>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "preMultiplySelf",
        "isStatic": false,
        "params": "[(optional other<DOMMatrixInit>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "rotateAxisAngleSelf",
        "isStatic": false,
        "params": "[(optional x<number>) (optional y<number>) (optional z<number>) (optional angle<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "rotateFromVectorSelf",
        "isStatic": false,
        "params": "[(optional x<number>) (optional y<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "rotateSelf",
        "isStatic": false,
        "params": "[(optional rotX<number>) (optional rotY<number>) (optional rotZ<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "scale3dSelf",
        "isStatic": false,
        "params": "[(optional scale<number>) (optional originX<number>) (optional originY<number>) (optional originZ<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "scaleSelf",
        "isStatic": false,
        "params": "[(optional scaleX<number>) (optional scaleY<number>) (optional scaleZ<number>) (optional originX<number>) (optional originY<number>) (optional originZ<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "skewXSelf",
        "isStatic": false,
        "params": "[(optional sx<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "skewYSelf",
        "isStatic": false,
        "params": "[(optional sy<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "translateSelf",
        "isStatic": false,
        "params": "[(optional tx<number>) (optional ty<number>) (optional tz<number>)]",
        "returnType": "DOMMatrix"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMMatrix}) (new [(optional init<(or string (array number))>)] DOMMatrix) (method [array32<Float32Array>])<DOMMatrix> (method [array64<Float64Array>])<DOMMatrix> (method [(optional other<DOMMatrixInit>)])<DOMMatrix>}"
  },
  "DOMMatrixReadOnly": {
    "kind": "Property",
    "name": "DOMMatrixReadOnly",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional init<(or string (array number))>)]",
        "returnType": "DOMMatrixReadOnly"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMMatrixReadOnly"
      },
      {
        "kind": "Method",
        "name": "fromFloat32Array",
        "isStatic": false,
        "params": "[array32<Float32Array>]",
        "returnType": "DOMMatrixReadOnly"
      },
      {
        "kind": "Method",
        "name": "fromFloat64Array",
        "isStatic": false,
        "params": "[array64<Float64Array>]",
        "returnType": "DOMMatrixReadOnly"
      },
      {
        "kind": "Method",
        "name": "fromMatrix",
        "isStatic": false,
        "params": "[(optional other<DOMMatrixInit>)]",
        "returnType": "DOMMatrixReadOnly"
      },
      {
        "kind": "Property",
        "name": "a",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "b",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "c",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "d",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "e",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "f",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "is2D",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "isIdentity",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "m11",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m12",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m13",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m14",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m21",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m22",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m23",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m24",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m31",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m32",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m33",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m34",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m41",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m42",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m43",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m44",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "flipX",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "flipY",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "inverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "multiply",
        "isStatic": false,
        "params": "[(optional other<DOMMatrixInit>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "rotate",
        "isStatic": false,
        "params": "[(optional rotX<number>) (optional rotY<number>) (optional rotZ<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "rotateAxisAngle",
        "isStatic": false,
        "params": "[(optional x<number>) (optional y<number>) (optional z<number>) (optional angle<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "rotateFromVector",
        "isStatic": false,
        "params": "[(optional x<number>) (optional y<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "scale",
        "isStatic": false,
        "params": "[(optional scaleX<number>) (optional scaleY<number>) (optional scaleZ<number>) (optional originX<number>) (optional originY<number>) (optional originZ<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "scale3d",
        "isStatic": false,
        "params": "[(optional scale<number>) (optional originX<number>) (optional originY<number>) (optional originZ<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "scaleNonUniform",
        "isStatic": false,
        "params": "[(optional scaleX<number>) (optional scaleY<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "skewX",
        "isStatic": false,
        "params": "[(optional sx<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "skewY",
        "isStatic": false,
        "params": "[(optional sy<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "toFloat32Array",
        "isStatic": false,
        "params": "[]",
        "returnType": "Float32Array"
      },
      {
        "kind": "Method",
        "name": "toFloat64Array",
        "isStatic": false,
        "params": "[]",
        "returnType": "Float64Array"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "transformPoint",
        "isStatic": false,
        "params": "[(optional point<DOMPointInit>)]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "translate",
        "isStatic": false,
        "params": "[(optional tx<number>) (optional ty<number>) (optional tz<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional init<(or string (array number))>)]",
        "returnType": "DOMMatrixReadOnly"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMMatrixReadOnly"
      },
      {
        "kind": "Method",
        "name": "fromFloat32Array",
        "isStatic": false,
        "params": "[array32<Float32Array>]",
        "returnType": "DOMMatrixReadOnly"
      },
      {
        "kind": "Method",
        "name": "fromFloat64Array",
        "isStatic": false,
        "params": "[array64<Float64Array>]",
        "returnType": "DOMMatrixReadOnly"
      },
      {
        "kind": "Method",
        "name": "fromMatrix",
        "isStatic": false,
        "params": "[(optional other<DOMMatrixInit>)]",
        "returnType": "DOMMatrixReadOnly"
      },
      {
        "kind": "Property",
        "name": "a",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "b",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "c",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "d",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "e",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "f",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "is2D",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "isIdentity",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "m11",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m12",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m13",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m14",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m21",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m22",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m23",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m24",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m31",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m32",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m33",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m34",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m41",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m42",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m43",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "m44",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "flipX",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "flipY",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "inverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "multiply",
        "isStatic": false,
        "params": "[(optional other<DOMMatrixInit>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "rotate",
        "isStatic": false,
        "params": "[(optional rotX<number>) (optional rotY<number>) (optional rotZ<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "rotateAxisAngle",
        "isStatic": false,
        "params": "[(optional x<number>) (optional y<number>) (optional z<number>) (optional angle<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "rotateFromVector",
        "isStatic": false,
        "params": "[(optional x<number>) (optional y<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "scale",
        "isStatic": false,
        "params": "[(optional scaleX<number>) (optional scaleY<number>) (optional scaleZ<number>) (optional originX<number>) (optional originY<number>) (optional originZ<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "scale3d",
        "isStatic": false,
        "params": "[(optional scale<number>) (optional originX<number>) (optional originY<number>) (optional originZ<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "scaleNonUniform",
        "isStatic": false,
        "params": "[(optional scaleX<number>) (optional scaleY<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "skewX",
        "isStatic": false,
        "params": "[(optional sx<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "skewY",
        "isStatic": false,
        "params": "[(optional sy<number>)]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "toFloat32Array",
        "isStatic": false,
        "params": "[]",
        "returnType": "Float32Array"
      },
      {
        "kind": "Method",
        "name": "toFloat64Array",
        "isStatic": false,
        "params": "[]",
        "returnType": "Float64Array"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "transformPoint",
        "isStatic": false,
        "params": "[(optional point<DOMPointInit>)]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "translate",
        "isStatic": false,
        "params": "[(optional tx<number>) (optional ty<number>) (optional tz<number>)]",
        "returnType": "DOMMatrix"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMMatrixReadOnly}) (new [(optional init<(or string (array number))>)] DOMMatrixReadOnly) (method [array32<Float32Array>])<DOMMatrixReadOnly> (method [array64<Float64Array>])<DOMMatrixReadOnly> (method [(optional other<DOMMatrixInit>)])<DOMMatrixReadOnly>}"
  },
  "DOMParser": {
    "kind": "Property",
    "name": "DOMParser",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DOMParser"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMParser"
      },
      {
        "kind": "Method",
        "name": "parseFromString",
        "isStatic": false,
        "params": "[string<string> type<DOMParserSupportedType>]",
        "returnType": "Document"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMParser}) (new [] DOMParser)}"
  },
  "DOMPoint": {
    "kind": "Property",
    "name": "DOMPoint",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional x<number>) (optional y<number>) (optional z<number>) (optional w<number>)]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "fromPoint",
        "isStatic": false,
        "params": "[(optional other<DOMPointInit>)]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Property",
        "name": "w",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "z",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional x<number>) (optional y<number>) (optional z<number>) (optional w<number>)]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "fromPoint",
        "isStatic": false,
        "params": "[(optional other<DOMPointInit>)]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Property",
        "name": "w",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "z",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMPoint}) (new [(optional x<number>) (optional y<number>) (optional z<number>) (optional w<number>)] DOMPoint) (method [(optional other<DOMPointInit>)])<DOMPoint>}"
  },
  "DOMPointReadOnly": {
    "kind": "Property",
    "name": "DOMPointReadOnly",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional x<number>) (optional y<number>) (optional z<number>) (optional w<number>)]",
        "returnType": "DOMPointReadOnly"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMPointReadOnly"
      },
      {
        "kind": "Method",
        "name": "fromPoint",
        "isStatic": false,
        "params": "[(optional other<DOMPointInit>)]",
        "returnType": "DOMPointReadOnly"
      },
      {
        "kind": "Property",
        "name": "w",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "z",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "matrixTransform",
        "isStatic": false,
        "params": "[(optional matrix<DOMMatrixInit>)]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional x<number>) (optional y<number>) (optional z<number>) (optional w<number>)]",
        "returnType": "DOMPointReadOnly"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMPointReadOnly"
      },
      {
        "kind": "Method",
        "name": "fromPoint",
        "isStatic": false,
        "params": "[(optional other<DOMPointInit>)]",
        "returnType": "DOMPointReadOnly"
      },
      {
        "kind": "Property",
        "name": "w",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "z",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "matrixTransform",
        "isStatic": false,
        "params": "[(optional matrix<DOMMatrixInit>)]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMPointReadOnly}) (new [(optional x<number>) (optional y<number>) (optional z<number>) (optional w<number>)] DOMPointReadOnly) (method [(optional other<DOMPointInit>)])<DOMPointReadOnly>}"
  },
  "DOMQuad": {
    "kind": "Property",
    "name": "DOMQuad",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional p1<DOMPointInit>) (optional p2<DOMPointInit>) (optional p3<DOMPointInit>) (optional p4<DOMPointInit>)]",
        "returnType": "DOMQuad"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMQuad"
      },
      {
        "kind": "Method",
        "name": "fromQuad",
        "isStatic": false,
        "params": "[(optional other<DOMQuadInit>)]",
        "returnType": "DOMQuad"
      },
      {
        "kind": "Method",
        "name": "fromRect",
        "isStatic": false,
        "params": "[(optional other<DOMRectInit>)]",
        "returnType": "DOMQuad"
      },
      {
        "kind": "Property",
        "name": "p1",
        "isStatic": true,
        "returnType": "DOMPoint"
      },
      {
        "kind": "Property",
        "name": "p2",
        "isStatic": true,
        "returnType": "DOMPoint"
      },
      {
        "kind": "Property",
        "name": "p3",
        "isStatic": true,
        "returnType": "DOMPoint"
      },
      {
        "kind": "Property",
        "name": "p4",
        "isStatic": true,
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "getBounds",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMRect"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional p1<DOMPointInit>) (optional p2<DOMPointInit>) (optional p3<DOMPointInit>) (optional p4<DOMPointInit>)]",
        "returnType": "DOMQuad"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMQuad"
      },
      {
        "kind": "Method",
        "name": "fromQuad",
        "isStatic": false,
        "params": "[(optional other<DOMQuadInit>)]",
        "returnType": "DOMQuad"
      },
      {
        "kind": "Method",
        "name": "fromRect",
        "isStatic": false,
        "params": "[(optional other<DOMRectInit>)]",
        "returnType": "DOMQuad"
      },
      {
        "kind": "Property",
        "name": "p1",
        "isStatic": true,
        "returnType": "DOMPoint"
      },
      {
        "kind": "Property",
        "name": "p2",
        "isStatic": true,
        "returnType": "DOMPoint"
      },
      {
        "kind": "Property",
        "name": "p3",
        "isStatic": true,
        "returnType": "DOMPoint"
      },
      {
        "kind": "Property",
        "name": "p4",
        "isStatic": true,
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "getBounds",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMRect"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMQuad}) (new [(optional p1<DOMPointInit>) (optional p2<DOMPointInit>) (optional p3<DOMPointInit>) (optional p4<DOMPointInit>)] DOMQuad) (method [(optional other<DOMQuadInit>)])<DOMQuad> (method [(optional other<DOMRectInit>)])<DOMQuad>}"
  },
  "DOMRect": {
    "kind": "Property",
    "name": "DOMRect",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional x<number>) (optional y<number>) (optional width<number>) (optional height<number>)]",
        "returnType": "DOMRect"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMRect"
      },
      {
        "kind": "Method",
        "name": "fromRect",
        "isStatic": false,
        "params": "[(optional other<DOMRectInit>)]",
        "returnType": "DOMRect"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional x<number>) (optional y<number>) (optional width<number>) (optional height<number>)]",
        "returnType": "DOMRect"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMRect"
      },
      {
        "kind": "Method",
        "name": "fromRect",
        "isStatic": false,
        "params": "[(optional other<DOMRectInit>)]",
        "returnType": "DOMRect"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMRect}) (new [(optional x<number>) (optional y<number>) (optional width<number>) (optional height<number>)] DOMRect) (method [(optional other<DOMRectInit>)])<DOMRect>}"
  },
  "DOMRectList": {
    "kind": "Property",
    "name": "DOMRectList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DOMRectList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMRectList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or DOMRect null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<DOMRect>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMRectList}) (new [] DOMRectList)}"
  },
  "DOMRectReadOnly": {
    "kind": "Property",
    "name": "DOMRectReadOnly",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional x<number>) (optional y<number>) (optional width<number>) (optional height<number>)]",
        "returnType": "DOMRectReadOnly"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMRectReadOnly"
      },
      {
        "kind": "Method",
        "name": "fromRect",
        "isStatic": false,
        "params": "[(optional other<DOMRectInit>)]",
        "returnType": "DOMRectReadOnly"
      },
      {
        "kind": "Property",
        "name": "bottom",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "left",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "right",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "top",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional x<number>) (optional y<number>) (optional width<number>) (optional height<number>)]",
        "returnType": "DOMRectReadOnly"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMRectReadOnly"
      },
      {
        "kind": "Method",
        "name": "fromRect",
        "isStatic": false,
        "params": "[(optional other<DOMRectInit>)]",
        "returnType": "DOMRectReadOnly"
      },
      {
        "kind": "Property",
        "name": "bottom",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "left",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "right",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "top",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMRectReadOnly}) (new [(optional x<number>) (optional y<number>) (optional width<number>) (optional height<number>)] DOMRectReadOnly) (method [(optional other<DOMRectInit>)])<DOMRectReadOnly>}"
  },
  "DOMStringList": {
    "kind": "Property",
    "name": "DOMStringList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DOMStringList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMStringList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "contains",
        "isStatic": false,
        "params": "[string<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<string>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DOMStringList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMStringList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "contains",
        "isStatic": false,
        "params": "[string<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<string>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMStringList}) (new [] DOMStringList)}"
  },
  "DOMStringMap": {
    "kind": "Property",
    "name": "DOMStringMap",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DOMStringMap"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMStringMap"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMStringMap}) (new [] DOMStringMap)}"
  },
  "DOMTokenList": {
    "kind": "Property",
    "name": "DOMTokenList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DOMTokenList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DOMTokenList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[(& rest<tokens<(array string)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "contains",
        "isStatic": false,
        "params": "[token<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "remove",
        "isStatic": false,
        "params": "[(& rest<tokens<(array string)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "replace",
        "isStatic": false,
        "params": "[token<string> newToken<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "supports",
        "isStatic": false,
        "params": "[token<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "toggle",
        "isStatic": false,
        "params": "[token<string> (optional force<boolean>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<string> key<number> parent<DOMTokenList>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<string>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number string]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<string>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DOMTokenList}) (new [] DOMTokenList)}"
  },
  "DataTransfer": {
    "kind": "Property",
    "name": "DataTransfer",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DataTransfer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DataTransfer"
      },
      {
        "kind": "Property",
        "name": "dropEffect",
        "isStatic": true,
        "returnType": "(or \"none\" \"copy\" \"link\" \"move\")"
      },
      {
        "kind": "Property",
        "name": "effectAllowed",
        "isStatic": true,
        "returnType": "(or \"none\" \"copy\" \"copyLink\" \"copyMove\" \"link\" \"linkMove\" \"move\" \"all\" \"uninitialized\")"
      },
      {
        "kind": "Property",
        "name": "files",
        "isStatic": true,
        "returnType": "FileList"
      },
      {
        "kind": "Property",
        "name": "items",
        "isStatic": true,
        "returnType": "DataTransferItemList"
      },
      {
        "kind": "Property",
        "name": "types",
        "isStatic": true,
        "returnType": "ReadonlyArray<string>"
      },
      {
        "kind": "Method",
        "name": "clearData",
        "isStatic": false,
        "params": "[(optional format<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getData",
        "isStatic": false,
        "params": "[format<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "setData",
        "isStatic": false,
        "params": "[format<string> data<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDragImage",
        "isStatic": false,
        "params": "[image<Element> x<number> y<number>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DataTransfer}) (new [] DataTransfer)}"
  },
  "DataTransferItem": {
    "kind": "Property",
    "name": "DataTransferItem",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DataTransferItem"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DataTransferItem"
      },
      {
        "kind": "Property",
        "name": "kind",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getAsFile",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or File null)"
      },
      {
        "kind": "Method",
        "name": "getAsString",
        "isStatic": false,
        "params": "[callback<(or FunctionStringCallback null)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "webkitGetAsEntry",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or FileSystemEntry null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DataTransferItem}) (new [] DataTransferItem)}"
  },
  "DataTransferItemList": {
    "kind": "Property",
    "name": "DataTransferItemList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DataTransferItemList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DataTransferItemList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[data<string> type<string>]",
        "returnType": "(or DataTransferItem null)"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[data<File>]",
        "returnType": "(or DataTransferItem null)"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "remove",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<DataTransferItem>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DataTransferItemList}) (new [] DataTransferItemList)}"
  },
  "DecompressionStream": {
    "kind": "Property",
    "name": "DecompressionStream",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[format<CompressionFormat>]",
        "returnType": "DecompressionStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DecompressionStream"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream<Uint8Array>"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream<BufferSource>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[format<CompressionFormat>]",
        "returnType": "DecompressionStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DecompressionStream"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream<Uint8Array>"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream<BufferSource>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DecompressionStream}) (new [format<CompressionFormat>] DecompressionStream)}"
  },
  "DelayNode": {
    "kind": "Property",
    "name": "DelayNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<DelayOptions>)]",
        "returnType": "DelayNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DelayNode"
      },
      {
        "kind": "Property",
        "name": "delayTime",
        "isStatic": true,
        "returnType": "AudioParam"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DelayNode}) (new [context<BaseAudioContext> (optional options<DelayOptions>)] DelayNode)}"
  },
  "DeviceMotionEvent": {
    "kind": "Property",
    "name": "DeviceMotionEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<DeviceMotionEventInit>)]",
        "returnType": "DeviceMotionEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DeviceMotionEvent"
      },
      {
        "kind": "Property",
        "name": "acceleration",
        "isStatic": true,
        "returnType": "(or DeviceMotionEventAcceleration null)"
      },
      {
        "kind": "Property",
        "name": "accelerationIncludingGravity",
        "isStatic": true,
        "returnType": "(or DeviceMotionEventAcceleration null)"
      },
      {
        "kind": "Property",
        "name": "interval",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "rotationRate",
        "isStatic": true,
        "returnType": "(or DeviceMotionEventRotationRate null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DeviceMotionEvent}) (new [type<string> (optional eventInitDict<DeviceMotionEventInit>)] DeviceMotionEvent)}"
  },
  "DeviceOrientationEvent": {
    "kind": "Property",
    "name": "DeviceOrientationEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<DeviceOrientationEventInit>)]",
        "returnType": "DeviceOrientationEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DeviceOrientationEvent"
      },
      {
        "kind": "Property",
        "name": "absolute",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "alpha",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "beta",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "gamma",
        "isStatic": true,
        "returnType": "(or number null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DeviceOrientationEvent}) (new [type<string> (optional eventInitDict<DeviceOrientationEventInit>)] DeviceOrientationEvent)}"
  },
  "Document": {
    "kind": "Property",
    "name": "Document",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Document"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Document"
      },
      {
        "kind": "Method",
        "name": "parseHTMLUnsafe",
        "isStatic": false,
        "params": "[html<string>]",
        "returnType": "Document"
      },
      {
        "kind": "Property",
        "name": "URL",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "alinkColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "all",
        "isStatic": true,
        "returnType": "HTMLAllCollection"
      },
      {
        "kind": "Property",
        "name": "anchors",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<HTMLAnchorElement>"
      },
      {
        "kind": "Property",
        "name": "applets",
        "isStatic": true,
        "returnType": "HTMLCollection"
      },
      {
        "kind": "Property",
        "name": "bgColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "body",
        "isStatic": true,
        "returnType": "HTMLElement"
      },
      {
        "kind": "Property",
        "name": "characterSet",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "charset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "compatMode",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "contentType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "cookie",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "currentScript",
        "isStatic": true,
        "returnType": "(or HTMLOrSVGScriptElement null)"
      },
      {
        "kind": "Property",
        "name": "defaultView",
        "isStatic": true,
        "returnType": "(or (list (intersect WindowProxy (typeof globalThis))) null)"
      },
      {
        "kind": "Property",
        "name": "designMode",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "dir",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "doctype",
        "isStatic": true,
        "returnType": "(or DocumentType null)"
      },
      {
        "kind": "Property",
        "name": "documentElement",
        "isStatic": true,
        "returnType": "HTMLElement"
      },
      {
        "kind": "Property",
        "name": "documentURI",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "domain",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "embeds",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<HTMLEmbedElement>"
      },
      {
        "kind": "Property",
        "name": "fgColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "forms",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<HTMLFormElement>"
      },
      {
        "kind": "Property",
        "name": "fragmentDirective",
        "isStatic": true,
        "returnType": "FragmentDirective"
      },
      {
        "kind": "Property",
        "name": "fullscreen",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "fullscreenEnabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "head",
        "isStatic": true,
        "returnType": "HTMLHeadElement"
      },
      {
        "kind": "Property",
        "name": "hidden",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "images",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<HTMLImageElement>"
      },
      {
        "kind": "Property",
        "name": "implementation",
        "isStatic": true,
        "returnType": "DOMImplementation"
      },
      {
        "kind": "Property",
        "name": "inputEncoding",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lastModified",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "linkColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "links",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<(or HTMLAnchorElement HTMLAreaElement)>"
      },
      {
        "kind": "Property",
        "name": "onfullscreenchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<Document> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onfullscreenerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<Document> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpointerlockchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<Document> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpointerlockerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<Document> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onreadystatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<Document> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onvisibilitychange",
        "isStatic": true,
        "returnType": "(or (list (function [this<Document> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ownerDocument",
        "isStatic": true,
        "returnType": "null"
      },
      {
        "kind": "Property",
        "name": "pictureInPictureEnabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "plugins",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<HTMLEmbedElement>"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "DocumentReadyState"
      },
      {
        "kind": "Property",
        "name": "referrer",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rootElement",
        "isStatic": true,
        "returnType": "(or SVGSVGElement null)"
      },
      {
        "kind": "Property",
        "name": "scripts",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<HTMLScriptElement>"
      },
      {
        "kind": "Property",
        "name": "scrollingElement",
        "isStatic": true,
        "returnType": "(or Element null)"
      },
      {
        "kind": "Property",
        "name": "timeline",
        "isStatic": true,
        "returnType": "DocumentTimeline"
      },
      {
        "kind": "Property",
        "name": "title",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "visibilityState",
        "isStatic": true,
        "returnType": "DocumentVisibilityState"
      },
      {
        "kind": "Property",
        "name": "vlinkColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "adoptNode",
        "isStatic": false,
        "params": "[node<T>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "captureEvents",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "caretPositionFromPoint",
        "isStatic": false,
        "params": "[x<number> y<number> (optional options<CaretPositionFromPointOptions>)]",
        "returnType": "(or CaretPosition null)"
      },
      {
        "kind": "Method",
        "name": "caretRangeFromPoint",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "(or Range null)"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createAttribute",
        "isStatic": false,
        "params": "[localName<string>]",
        "returnType": "Attr"
      },
      {
        "kind": "Method",
        "name": "createAttributeNS",
        "isStatic": false,
        "params": "[namespace<(or string null)> qualifiedName<string>]",
        "returnType": "Attr"
      },
      {
        "kind": "Method",
        "name": "createCDATASection",
        "isStatic": false,
        "params": "[data<string>]",
        "returnType": "CDATASection"
      },
      {
        "kind": "Method",
        "name": "createComment",
        "isStatic": false,
        "params": "[data<string>]",
        "returnType": "Comment"
      },
      {
        "kind": "Method",
        "name": "createDocumentFragment",
        "isStatic": false,
        "params": "[]",
        "returnType": "DocumentFragment"
      },
      {
        "kind": "Method",
        "name": "createElement",
        "isStatic": false,
        "params": "[tagName<K> (optional options<ElementCreationOptions>)]",
        "returnType": "(get HTMLElementTagNameMap K)"
      },
      {
        "kind": "Method",
        "name": "createElement",
        "isStatic": false,
        "params": "[tagName<K> (optional options<ElementCreationOptions>)]",
        "returnType": "(get HTMLElementDeprecatedTagNameMap K)"
      },
      {
        "kind": "Method",
        "name": "createElement",
        "isStatic": false,
        "params": "[tagName<string> (optional options<ElementCreationOptions>)]",
        "returnType": "HTMLElement"
      },
      {
        "kind": "Method",
        "name": "createElementNS",
        "isStatic": false,
        "params": "[namespaceURI<\"http://www.w3.org/1999/xhtml\"> qualifiedName<string>]",
        "returnType": "HTMLElement"
      },
      {
        "kind": "Method",
        "name": "createElementNS",
        "isStatic": false,
        "params": "[namespaceURI<\"http://www.w3.org/2000/svg\"> qualifiedName<K>]",
        "returnType": "(get SVGElementTagNameMap K)"
      },
      {
        "kind": "Method",
        "name": "createElementNS",
        "isStatic": false,
        "params": "[namespaceURI<\"http://www.w3.org/2000/svg\"> qualifiedName<string>]",
        "returnType": "SVGElement"
      },
      {
        "kind": "Method",
        "name": "createElementNS",
        "isStatic": false,
        "params": "[namespaceURI<\"http://www.w3.org/1998/Math/MathML\"> qualifiedName<K>]",
        "returnType": "(get MathMLElementTagNameMap K)"
      },
      {
        "kind": "Method",
        "name": "createElementNS",
        "isStatic": false,
        "params": "[namespaceURI<\"http://www.w3.org/1998/Math/MathML\"> qualifiedName<string>]",
        "returnType": "MathMLElement"
      },
      {
        "kind": "Method",
        "name": "createElementNS",
        "isStatic": false,
        "params": "[namespaceURI<(or string null)> qualifiedName<string> (optional options<ElementCreationOptions>)]",
        "returnType": "Element"
      },
      {
        "kind": "Method",
        "name": "createElementNS",
        "isStatic": false,
        "params": "[namespace<(or string null)> qualifiedName<string> (optional options<(or string ElementCreationOptions)>)]",
        "returnType": "Element"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"AnimationEvent\">]",
        "returnType": "AnimationEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"AnimationPlaybackEvent\">]",
        "returnType": "AnimationPlaybackEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"AudioProcessingEvent\">]",
        "returnType": "AudioProcessingEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"BeforeUnloadEvent\">]",
        "returnType": "BeforeUnloadEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"BlobEvent\">]",
        "returnType": "BlobEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"ClipboardEvent\">]",
        "returnType": "ClipboardEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"CloseEvent\">]",
        "returnType": "CloseEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"CompositionEvent\">]",
        "returnType": "CompositionEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"ContentVisibilityAutoStateChangeEvent\">]",
        "returnType": "ContentVisibilityAutoStateChangeEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"CustomEvent\">]",
        "returnType": "CustomEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"DeviceMotionEvent\">]",
        "returnType": "DeviceMotionEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"DeviceOrientationEvent\">]",
        "returnType": "DeviceOrientationEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"DragEvent\">]",
        "returnType": "DragEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"ErrorEvent\">]",
        "returnType": "ErrorEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"Event\">]",
        "returnType": "Event"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"Events\">]",
        "returnType": "Event"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"FocusEvent\">]",
        "returnType": "FocusEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"FontFaceSetLoadEvent\">]",
        "returnType": "FontFaceSetLoadEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"FormDataEvent\">]",
        "returnType": "FormDataEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"GamepadEvent\">]",
        "returnType": "GamepadEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"HashChangeEvent\">]",
        "returnType": "HashChangeEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"IDBVersionChangeEvent\">]",
        "returnType": "IDBVersionChangeEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"InputEvent\">]",
        "returnType": "InputEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"KeyboardEvent\">]",
        "returnType": "KeyboardEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"MIDIConnectionEvent\">]",
        "returnType": "MIDIConnectionEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"MIDIMessageEvent\">]",
        "returnType": "MIDIMessageEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"MediaEncryptedEvent\">]",
        "returnType": "MediaEncryptedEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"MediaKeyMessageEvent\">]",
        "returnType": "MediaKeyMessageEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"MediaQueryListEvent\">]",
        "returnType": "MediaQueryListEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"MediaStreamTrackEvent\">]",
        "returnType": "MediaStreamTrackEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"MessageEvent\">]",
        "returnType": "MessageEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"MouseEvent\">]",
        "returnType": "MouseEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"MouseEvents\">]",
        "returnType": "MouseEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"OfflineAudioCompletionEvent\">]",
        "returnType": "OfflineAudioCompletionEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"PageTransitionEvent\">]",
        "returnType": "PageTransitionEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"PaymentMethodChangeEvent\">]",
        "returnType": "PaymentMethodChangeEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"PaymentRequestUpdateEvent\">]",
        "returnType": "PaymentRequestUpdateEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"PictureInPictureEvent\">]",
        "returnType": "PictureInPictureEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"PointerEvent\">]",
        "returnType": "PointerEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"PopStateEvent\">]",
        "returnType": "PopStateEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"ProgressEvent\">]",
        "returnType": "ProgressEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"PromiseRejectionEvent\">]",
        "returnType": "PromiseRejectionEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"RTCDTMFToneChangeEvent\">]",
        "returnType": "RTCDTMFToneChangeEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"RTCDataChannelEvent\">]",
        "returnType": "RTCDataChannelEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"RTCErrorEvent\">]",
        "returnType": "RTCErrorEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"RTCPeerConnectionIceErrorEvent\">]",
        "returnType": "RTCPeerConnectionIceErrorEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"RTCPeerConnectionIceEvent\">]",
        "returnType": "RTCPeerConnectionIceEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"RTCTrackEvent\">]",
        "returnType": "RTCTrackEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"SecurityPolicyViolationEvent\">]",
        "returnType": "SecurityPolicyViolationEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"SpeechSynthesisErrorEvent\">]",
        "returnType": "SpeechSynthesisErrorEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"SpeechSynthesisEvent\">]",
        "returnType": "SpeechSynthesisEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"StorageEvent\">]",
        "returnType": "StorageEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"SubmitEvent\">]",
        "returnType": "SubmitEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"TextEvent\">]",
        "returnType": "TextEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"ToggleEvent\">]",
        "returnType": "ToggleEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"TouchEvent\">]",
        "returnType": "TouchEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"TrackEvent\">]",
        "returnType": "TrackEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"TransitionEvent\">]",
        "returnType": "TransitionEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"UIEvent\">]",
        "returnType": "UIEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"UIEvents\">]",
        "returnType": "UIEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"WebGLContextEvent\">]",
        "returnType": "WebGLContextEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<\"WheelEvent\">]",
        "returnType": "WheelEvent"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "isStatic": false,
        "params": "[eventInterface<string>]",
        "returnType": "Event"
      },
      {
        "kind": "Method",
        "name": "createNodeIterator",
        "isStatic": false,
        "params": "[root<Node> (optional whatToShow<number>) (optional filter<(or NodeFilter null)>)]",
        "returnType": "NodeIterator"
      },
      {
        "kind": "Method",
        "name": "createProcessingInstruction",
        "isStatic": false,
        "params": "[target<string> data<string>]",
        "returnType": "ProcessingInstruction"
      },
      {
        "kind": "Method",
        "name": "createRange",
        "isStatic": false,
        "params": "[]",
        "returnType": "Range"
      },
      {
        "kind": "Method",
        "name": "createTextNode",
        "isStatic": false,
        "params": "[data<string>]",
        "returnType": "Text"
      },
      {
        "kind": "Method",
        "name": "createTreeWalker",
        "isStatic": false,
        "params": "[root<Node> (optional whatToShow<number>) (optional filter<(or NodeFilter null)>)]",
        "returnType": "TreeWalker"
      },
      {
        "kind": "Method",
        "name": "execCommand",
        "isStatic": false,
        "params": "[commandId<string> (optional showUI<boolean>) (optional value<string>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "exitFullscreen",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "exitPictureInPicture",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "exitPointerLock",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getElementById",
        "isStatic": false,
        "params": "[elementId<string>]",
        "returnType": "(or HTMLElement null)"
      },
      {
        "kind": "Method",
        "name": "getElementsByClassName",
        "isStatic": false,
        "params": "[classNames<string>]",
        "returnType": "HTMLCollectionOf<Element>"
      },
      {
        "kind": "Method",
        "name": "getElementsByName",
        "isStatic": false,
        "params": "[elementName<string>]",
        "returnType": "NodeListOf<HTMLElement>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagName",
        "isStatic": false,
        "params": "[qualifiedName<K>]",
        "returnType": "HTMLCollectionOf<(get HTMLElementTagNameMap K)>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagName",
        "isStatic": false,
        "params": "[qualifiedName<K>]",
        "returnType": "HTMLCollectionOf<(get SVGElementTagNameMap K)>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagName",
        "isStatic": false,
        "params": "[qualifiedName<K>]",
        "returnType": "HTMLCollectionOf<(get MathMLElementTagNameMap K)>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagName",
        "isStatic": false,
        "params": "[qualifiedName<K>]",
        "returnType": "HTMLCollectionOf<(get HTMLElementDeprecatedTagNameMap K)>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagName",
        "isStatic": false,
        "params": "[qualifiedName<string>]",
        "returnType": "HTMLCollectionOf<Element>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagNameNS",
        "isStatic": false,
        "params": "[namespaceURI<\"http://www.w3.org/1999/xhtml\"> localName<string>]",
        "returnType": "HTMLCollectionOf<HTMLElement>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagNameNS",
        "isStatic": false,
        "params": "[namespaceURI<\"http://www.w3.org/2000/svg\"> localName<string>]",
        "returnType": "HTMLCollectionOf<SVGElement>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagNameNS",
        "isStatic": false,
        "params": "[namespaceURI<\"http://www.w3.org/1998/Math/MathML\"> localName<string>]",
        "returnType": "HTMLCollectionOf<MathMLElement>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagNameNS",
        "isStatic": false,
        "params": "[namespace<(or string null)> localName<string>]",
        "returnType": "HTMLCollectionOf<Element>"
      },
      {
        "kind": "Method",
        "name": "getSelection",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Selection null)"
      },
      {
        "kind": "Method",
        "name": "hasFocus",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "hasStorageAccess",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "importNode",
        "isStatic": false,
        "params": "[node<T> (optional deep<boolean>)]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[(optional unused1<string>) (optional unused2<string>)]",
        "returnType": "Document"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[url<(or string URL)> name<string> features<string>]",
        "returnType": "(or WindowProxy null)"
      },
      {
        "kind": "Method",
        "name": "queryCommandEnabled",
        "isStatic": false,
        "params": "[commandId<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "queryCommandIndeterm",
        "isStatic": false,
        "params": "[commandId<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "queryCommandState",
        "isStatic": false,
        "params": "[commandId<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "queryCommandSupported",
        "isStatic": false,
        "params": "[commandId<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "queryCommandValue",
        "isStatic": false,
        "params": "[commandId<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "releaseEvents",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "requestStorageAccess",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "startViewTransition",
        "isStatic": false,
        "params": "[(optional callbackOptions<ViewTransitionUpdateCallback>)]",
        "returnType": "ViewTransition"
      },
      {
        "kind": "Method",
        "name": "write",
        "isStatic": false,
        "params": "[(& rest<text<(array string)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "writeln",
        "isStatic": false,
        "params": "[(& rest<text<(array string)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Document> ev<(get DocumentEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Document> ev<(get DocumentEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Document}) (new [] Document) (method [html<string>])<Document>}"
  },
  "DocumentFragment": {
    "kind": "Property",
    "name": "DocumentFragment",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DocumentFragment"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DocumentFragment"
      },
      {
        "kind": "Property",
        "name": "ownerDocument",
        "isStatic": true,
        "returnType": "Document"
      },
      {
        "kind": "Method",
        "name": "getElementById",
        "isStatic": false,
        "params": "[elementId<string>]",
        "returnType": "(or HTMLElement null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DocumentFragment}) (new [] DocumentFragment)}"
  },
  "DocumentTimeline": {
    "kind": "Property",
    "name": "DocumentTimeline",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional options<DocumentTimelineOptions>)]",
        "returnType": "DocumentTimeline"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DocumentTimeline"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DocumentTimeline}) (new [(optional options<DocumentTimelineOptions>)] DocumentTimeline)}"
  },
  "DocumentType": {
    "kind": "Property",
    "name": "DocumentType",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DocumentType"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DocumentType"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ownerDocument",
        "isStatic": true,
        "returnType": "Document"
      },
      {
        "kind": "Property",
        "name": "publicId",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "systemId",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DocumentType}) (new [] DocumentType)}"
  },
  "DragEvent": {
    "kind": "Property",
    "name": "DragEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<DragEventInit>)]",
        "returnType": "DragEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DragEvent"
      },
      {
        "kind": "Property",
        "name": "dataTransfer",
        "isStatic": true,
        "returnType": "(or DataTransfer null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DragEvent}) (new [type<string> (optional eventInitDict<DragEventInit>)] DragEvent)}"
  },
  "DynamicsCompressorNode": {
    "kind": "Property",
    "name": "DynamicsCompressorNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<DynamicsCompressorOptions>)]",
        "returnType": "DynamicsCompressorNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DynamicsCompressorNode"
      },
      {
        "kind": "Property",
        "name": "attack",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "knee",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "ratio",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "reduction",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "release",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "threshold",
        "isStatic": true,
        "returnType": "AudioParam"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DynamicsCompressorNode}) (new [context<BaseAudioContext> (optional options<DynamicsCompressorOptions>)] DynamicsCompressorNode)}"
  },
  "Element": {
    "kind": "Property",
    "name": "Element",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Element"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Element"
      },
      {
        "kind": "Property",
        "name": "attributes",
        "isStatic": true,
        "returnType": "NamedNodeMap"
      },
      {
        "kind": "Property",
        "name": "classList",
        "isStatic": true,
        "returnType": "DOMTokenList"
      },
      {
        "kind": "Property",
        "name": "className",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "clientHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "clientLeft",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "clientTop",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "clientWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "currentCSSZoom",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "innerHTML",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "localName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "namespaceURI",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "onfullscreenchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<Element> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onfullscreenerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<Element> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "outerHTML",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ownerDocument",
        "isStatic": true,
        "returnType": "Document"
      },
      {
        "kind": "Property",
        "name": "part",
        "isStatic": true,
        "returnType": "DOMTokenList"
      },
      {
        "kind": "Property",
        "name": "prefix",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "scrollHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scrollLeft",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scrollTop",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scrollWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "shadowRoot",
        "isStatic": true,
        "returnType": "(or ShadowRoot null)"
      },
      {
        "kind": "Property",
        "name": "slot",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "tagName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "attachShadow",
        "isStatic": false,
        "params": "[init<ShadowRootInit>]",
        "returnType": "ShadowRoot"
      },
      {
        "kind": "Method",
        "name": "checkVisibility",
        "isStatic": false,
        "params": "[(optional options<CheckVisibilityOptions>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "closest",
        "isStatic": false,
        "params": "[selector<K>]",
        "returnType": "(or (get HTMLElementTagNameMap K) null)"
      },
      {
        "kind": "Method",
        "name": "closest",
        "isStatic": false,
        "params": "[selector<K>]",
        "returnType": "(or (get SVGElementTagNameMap K) null)"
      },
      {
        "kind": "Method",
        "name": "closest",
        "isStatic": false,
        "params": "[selector<K>]",
        "returnType": "(or (get MathMLElementTagNameMap K) null)"
      },
      {
        "kind": "Method",
        "name": "closest",
        "isStatic": false,
        "params": "[selectors<string>]",
        "returnType": "(or E null)"
      },
      {
        "kind": "Method",
        "name": "computedStyleMap",
        "isStatic": false,
        "params": "[]",
        "returnType": "StylePropertyMapReadOnly"
      },
      {
        "kind": "Method",
        "name": "getAttribute",
        "isStatic": false,
        "params": "[qualifiedName<string>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "getAttributeNS",
        "isStatic": false,
        "params": "[namespace<(or string null)> localName<string>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "getAttributeNames",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array string)"
      },
      {
        "kind": "Method",
        "name": "getAttributeNode",
        "isStatic": false,
        "params": "[qualifiedName<string>]",
        "returnType": "(or Attr null)"
      },
      {
        "kind": "Method",
        "name": "getAttributeNodeNS",
        "isStatic": false,
        "params": "[namespace<(or string null)> localName<string>]",
        "returnType": "(or Attr null)"
      },
      {
        "kind": "Method",
        "name": "getBoundingClientRect",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMRect"
      },
      {
        "kind": "Method",
        "name": "getClientRects",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMRectList"
      },
      {
        "kind": "Method",
        "name": "getElementsByClassName",
        "isStatic": false,
        "params": "[classNames<string>]",
        "returnType": "HTMLCollectionOf<Element>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagName",
        "isStatic": false,
        "params": "[qualifiedName<K>]",
        "returnType": "HTMLCollectionOf<(get HTMLElementTagNameMap K)>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagName",
        "isStatic": false,
        "params": "[qualifiedName<K>]",
        "returnType": "HTMLCollectionOf<(get SVGElementTagNameMap K)>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagName",
        "isStatic": false,
        "params": "[qualifiedName<K>]",
        "returnType": "HTMLCollectionOf<(get MathMLElementTagNameMap K)>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagName",
        "isStatic": false,
        "params": "[qualifiedName<K>]",
        "returnType": "HTMLCollectionOf<(get HTMLElementDeprecatedTagNameMap K)>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagName",
        "isStatic": false,
        "params": "[qualifiedName<string>]",
        "returnType": "HTMLCollectionOf<Element>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagNameNS",
        "isStatic": false,
        "params": "[namespaceURI<\"http://www.w3.org/1999/xhtml\"> localName<string>]",
        "returnType": "HTMLCollectionOf<HTMLElement>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagNameNS",
        "isStatic": false,
        "params": "[namespaceURI<\"http://www.w3.org/2000/svg\"> localName<string>]",
        "returnType": "HTMLCollectionOf<SVGElement>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagNameNS",
        "isStatic": false,
        "params": "[namespaceURI<\"http://www.w3.org/1998/Math/MathML\"> localName<string>]",
        "returnType": "HTMLCollectionOf<MathMLElement>"
      },
      {
        "kind": "Method",
        "name": "getElementsByTagNameNS",
        "isStatic": false,
        "params": "[namespace<(or string null)> localName<string>]",
        "returnType": "HTMLCollectionOf<Element>"
      },
      {
        "kind": "Method",
        "name": "getHTML",
        "isStatic": false,
        "params": "[(optional options<GetHTMLOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "hasAttribute",
        "isStatic": false,
        "params": "[qualifiedName<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "hasAttributeNS",
        "isStatic": false,
        "params": "[namespace<(or string null)> localName<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "hasAttributes",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "hasPointerCapture",
        "isStatic": false,
        "params": "[pointerId<number>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "insertAdjacentElement",
        "isStatic": false,
        "params": "[where<InsertPosition> element<Element>]",
        "returnType": "(or Element null)"
      },
      {
        "kind": "Method",
        "name": "insertAdjacentHTML",
        "isStatic": false,
        "params": "[position<InsertPosition> string<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "insertAdjacentText",
        "isStatic": false,
        "params": "[where<InsertPosition> data<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "matches",
        "isStatic": false,
        "params": "[selectors<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "releasePointerCapture",
        "isStatic": false,
        "params": "[pointerId<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeAttribute",
        "isStatic": false,
        "params": "[qualifiedName<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeAttributeNS",
        "isStatic": false,
        "params": "[namespace<(or string null)> localName<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeAttributeNode",
        "isStatic": false,
        "params": "[attr<Attr>]",
        "returnType": "Attr"
      },
      {
        "kind": "Method",
        "name": "requestFullscreen",
        "isStatic": false,
        "params": "[(optional options<FullscreenOptions>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "requestPointerLock",
        "isStatic": false,
        "params": "[(optional options<PointerLockOptions>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "scroll",
        "isStatic": false,
        "params": "[(optional options<ScrollToOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scroll",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollBy",
        "isStatic": false,
        "params": "[(optional options<ScrollToOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollBy",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollIntoView",
        "isStatic": false,
        "params": "[(optional arg<(or boolean ScrollIntoViewOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollTo",
        "isStatic": false,
        "params": "[(optional options<ScrollToOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollTo",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setAttribute",
        "isStatic": false,
        "params": "[qualifiedName<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setAttributeNS",
        "isStatic": false,
        "params": "[namespace<(or string null)> qualifiedName<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setAttributeNode",
        "isStatic": false,
        "params": "[attr<Attr>]",
        "returnType": "(or Attr null)"
      },
      {
        "kind": "Method",
        "name": "setAttributeNodeNS",
        "isStatic": false,
        "params": "[attr<Attr>]",
        "returnType": "(or Attr null)"
      },
      {
        "kind": "Method",
        "name": "setHTMLUnsafe",
        "isStatic": false,
        "params": "[html<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPointerCapture",
        "isStatic": false,
        "params": "[pointerId<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toggleAttribute",
        "isStatic": false,
        "params": "[qualifiedName<string> (optional force<boolean>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "webkitMatchesSelector",
        "isStatic": false,
        "params": "[selectors<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Element> ev<(get ElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Element> ev<(get ElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Element}) (new [] Element)}"
  },
  "ElementInternals": {
    "kind": "Property",
    "name": "ElementInternals",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ElementInternals"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ElementInternals"
      },
      {
        "kind": "Property",
        "name": "form",
        "isStatic": true,
        "returnType": "(or HTMLFormElement null)"
      },
      {
        "kind": "Property",
        "name": "labels",
        "isStatic": true,
        "returnType": "NodeList"
      },
      {
        "kind": "Property",
        "name": "shadowRoot",
        "isStatic": true,
        "returnType": "(or ShadowRoot null)"
      },
      {
        "kind": "Property",
        "name": "states",
        "isStatic": true,
        "returnType": "CustomStateSet"
      },
      {
        "kind": "Property",
        "name": "validationMessage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validity",
        "isStatic": true,
        "returnType": "ValidityState"
      },
      {
        "kind": "Property",
        "name": "willValidate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "checkValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "reportValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setFormValue",
        "isStatic": false,
        "params": "[value<(or File string FormData null)> (optional state<(or File string FormData null)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setValidity",
        "isStatic": false,
        "params": "[(optional flags<ValidityStateFlags>) (optional message<string>) (optional anchor<HTMLElement>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ElementInternals}) (new [] ElementInternals)}"
  },
  "EncodedAudioChunk": {
    "kind": "Property",
    "name": "EncodedAudioChunk",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<EncodedAudioChunkInit>]",
        "returnType": "EncodedAudioChunk"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "EncodedAudioChunk"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "EncodedAudioChunkType"
      },
      {
        "kind": "Method",
        "name": "copyTo",
        "isStatic": false,
        "params": "[destination<AllowSharedBufferSource>]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<EncodedAudioChunkInit>]",
        "returnType": "EncodedAudioChunk"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "EncodedAudioChunk"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "EncodedAudioChunkType"
      },
      {
        "kind": "Method",
        "name": "copyTo",
        "isStatic": false,
        "params": "[destination<AllowSharedBufferSource>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype EncodedAudioChunk}) (new [init<EncodedAudioChunkInit>] EncodedAudioChunk)}"
  },
  "EncodedVideoChunk": {
    "kind": "Property",
    "name": "EncodedVideoChunk",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<EncodedVideoChunkInit>]",
        "returnType": "EncodedVideoChunk"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "EncodedVideoChunk"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "EncodedVideoChunkType"
      },
      {
        "kind": "Method",
        "name": "copyTo",
        "isStatic": false,
        "params": "[destination<AllowSharedBufferSource>]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<EncodedVideoChunkInit>]",
        "returnType": "EncodedVideoChunk"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "EncodedVideoChunk"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "EncodedVideoChunkType"
      },
      {
        "kind": "Method",
        "name": "copyTo",
        "isStatic": false,
        "params": "[destination<AllowSharedBufferSource>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype EncodedVideoChunk}) (new [init<EncodedVideoChunkInit>] EncodedVideoChunk)}"
  },
  "ErrorEvent": {
    "kind": "Property",
    "name": "ErrorEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<ErrorEventInit>)]",
        "returnType": "ErrorEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ErrorEvent"
      },
      {
        "kind": "Property",
        "name": "colno",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "error",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "filename",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lineno",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "message",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<ErrorEventInit>)]",
        "returnType": "ErrorEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ErrorEvent"
      },
      {
        "kind": "Property",
        "name": "colno",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "error",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "filename",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lineno",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "message",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ErrorEvent}) (new [type<string> (optional eventInitDict<ErrorEventInit>)] ErrorEvent)}"
  },
  "Event": {
    "kind": "Property",
    "name": "Event",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<EventInit>)]",
        "returnType": "Event"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Event"
      },
      {
        "kind": "Property",
        "name": "NONE",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "CAPTURING_PHASE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "AT_TARGET",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "BUBBLING_PHASE",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "bubbles",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "cancelBubble",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "cancelable",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "composed",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "currentTarget",
        "isStatic": true,
        "returnType": "(or EventTarget null)"
      },
      {
        "kind": "Property",
        "name": "defaultPrevented",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "eventPhase",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "isTrusted",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "returnValue",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "srcElement",
        "isStatic": true,
        "returnType": "(or EventTarget null)"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "(or EventTarget null)"
      },
      {
        "kind": "Property",
        "name": "timeStamp",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "NONE",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "CAPTURING_PHASE",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "AT_TARGET",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "BUBBLING_PHASE",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Method",
        "name": "composedPath",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array EventTarget)"
      },
      {
        "kind": "Method",
        "name": "initEvent",
        "isStatic": false,
        "params": "[type<string> (optional bubbles<boolean>) (optional cancelable<boolean>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "preventDefault",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stopImmediatePropagation",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stopPropagation",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<EventInit>)]",
        "returnType": "Event"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Event"
      },
      {
        "kind": "Property",
        "name": "NONE",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "CAPTURING_PHASE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "AT_TARGET",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "BUBBLING_PHASE",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "bubbles",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "cancelBubble",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "cancelable",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "composed",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "currentTarget",
        "isStatic": true,
        "returnType": "(or EventTarget null)"
      },
      {
        "kind": "Property",
        "name": "defaultPrevented",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "eventPhase",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "isTrusted",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "returnValue",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "srcElement",
        "isStatic": true,
        "returnType": "(or EventTarget null)"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "(or EventTarget null)"
      },
      {
        "kind": "Property",
        "name": "timeStamp",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "NONE",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "CAPTURING_PHASE",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "AT_TARGET",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "BUBBLING_PHASE",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Method",
        "name": "composedPath",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array EventTarget)"
      },
      {
        "kind": "Method",
        "name": "initEvent",
        "isStatic": false,
        "params": "[type<string> (optional bubbles<boolean>) (optional cancelable<boolean>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "preventDefault",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stopImmediatePropagation",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stopPropagation",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Event}) (new [type<string> (optional eventInitDict<EventInit>)] Event) (property {:NONE 0}) (property {:CAPTURING_PHASE 1}) (property {:AT_TARGET 2}) (property {:BUBBLING_PHASE 3})}"
  },
  "EventCounts": {
    "kind": "Property",
    "name": "EventCounts",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "EventCounts"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "EventCounts"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> key<string> parent<EventCounts>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype EventCounts}) (new [] EventCounts)}"
  },
  "EventSource": {
    "kind": "Property",
    "name": "EventSource",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[url<(or string URL)> (optional eventSourceInitDict<EventSourceInit>)]",
        "returnType": "EventSource"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "EventSource"
      },
      {
        "kind": "Property",
        "name": "CONNECTING",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "OPEN",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "CLOSED",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<EventSource> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<EventSource> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onopen",
        "isStatic": true,
        "returnType": "(or (list (function [this<EventSource> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "withCredentials",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "CONNECTING",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "OPEN",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "CLOSED",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<EventSource> ev<(get EventSourceEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<(function [this<EventSource> event<MessageEvent>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<EventSource> ev<(get EventSourceEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<(function [this<EventSource> event<MessageEvent>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[url<(or string URL)> (optional eventSourceInitDict<EventSourceInit>)]",
        "returnType": "EventSource"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "EventSource"
      },
      {
        "kind": "Property",
        "name": "CONNECTING",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "OPEN",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "CLOSED",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<EventSource> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<EventSource> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onopen",
        "isStatic": true,
        "returnType": "(or (list (function [this<EventSource> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "withCredentials",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "CONNECTING",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "OPEN",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "CLOSED",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<EventSource> ev<(get EventSourceEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<(function [this<EventSource> event<MessageEvent>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<EventSource> ev<(get EventSourceEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<(function [this<EventSource> event<MessageEvent>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype EventSource}) (new [url<(or string URL)> (optional eventSourceInitDict<EventSourceInit>)] EventSource) (property {:CONNECTING 0}) (property {:OPEN 1}) (property {:CLOSED 2})}"
  },
  "EventTarget": {
    "kind": "Property",
    "name": "EventTarget",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "EventTarget"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "EventTarget"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> callback<(or EventListenerOrEventListenerObject null)> (optional options<(or AddEventListenerOptions boolean)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dispatchEvent",
        "isStatic": false,
        "params": "[event<Event>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> callback<(or EventListenerOrEventListenerObject null)> (optional options<(or EventListenerOptions boolean)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "EventTarget"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "EventTarget"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> callback<(or EventListenerOrEventListenerObject null)> (optional options<(or AddEventListenerOptions boolean)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dispatchEvent",
        "isStatic": false,
        "params": "[event<Event>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> callback<(or EventListenerOrEventListenerObject null)> (optional options<(or EventListenerOptions boolean)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype EventTarget}) (new [] EventTarget)}"
  },
  "External": {
    "kind": "Property",
    "name": "External",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "External"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "External"
      },
      {
        "kind": "Method",
        "name": "AddSearchProvider",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "IsSearchProviderInstalled",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype External}) (new [] External)}"
  },
  "File": {
    "kind": "Property",
    "name": "File",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[fileBits<(array BlobPart)> fileName<string> (optional options<FilePropertyBag>)]",
        "returnType": "File"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "File"
      },
      {
        "kind": "Property",
        "name": "lastModified",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitRelativePath",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[fileBits<(array BlobPart)> fileName<string> (optional options<FilePropertyBag>)]",
        "returnType": "File"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "File"
      },
      {
        "kind": "Property",
        "name": "lastModified",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "webkitRelativePath",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype File}) (new [fileBits<(array BlobPart)> fileName<string> (optional options<FilePropertyBag>)] File)}"
  },
  "FileList": {
    "kind": "Property",
    "name": "FileList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or File null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<File>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or File null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<File>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FileList}) (new [] FileList)}"
  },
  "FileReader": {
    "kind": "Property",
    "name": "FileReader",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileReader"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileReader"
      },
      {
        "kind": "Property",
        "name": "EMPTY",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "LOADING",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "DONE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "error",
        "isStatic": true,
        "returnType": "(or DOMException null)"
      },
      {
        "kind": "Property",
        "name": "onabort",
        "isStatic": true,
        "returnType": "(or (list (function [this<FileReader> ev<ProgressEvent<FileReader>>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<FileReader> ev<ProgressEvent<FileReader>>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onload",
        "isStatic": true,
        "returnType": "(or (list (function [this<FileReader> ev<ProgressEvent<FileReader>>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadend",
        "isStatic": true,
        "returnType": "(or (list (function [this<FileReader> ev<ProgressEvent<FileReader>>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadstart",
        "isStatic": true,
        "returnType": "(or (list (function [this<FileReader> ev<ProgressEvent<FileReader>>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onprogress",
        "isStatic": true,
        "returnType": "(or (list (function [this<FileReader> ev<ProgressEvent<FileReader>>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "(or (typeof FileReader.EMPTY) (typeof FileReader.LOADING) (typeof FileReader.DONE))"
      },
      {
        "kind": "Property",
        "name": "result",
        "isStatic": true,
        "returnType": "(or string ArrayBuffer null)"
      },
      {
        "kind": "Property",
        "name": "EMPTY",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "LOADING",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "DONE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "readAsArrayBuffer",
        "isStatic": false,
        "params": "[blob<Blob>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "readAsBinaryString",
        "isStatic": false,
        "params": "[blob<Blob>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "readAsDataURL",
        "isStatic": false,
        "params": "[blob<Blob>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "readAsText",
        "isStatic": false,
        "params": "[blob<Blob> (optional encoding<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<FileReader> ev<(get FileReaderEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<FileReader> ev<(get FileReaderEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileReader"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileReader"
      },
      {
        "kind": "Property",
        "name": "EMPTY",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "LOADING",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "DONE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "error",
        "isStatic": true,
        "returnType": "(or DOMException null)"
      },
      {
        "kind": "Property",
        "name": "onabort",
        "isStatic": true,
        "returnType": "(or (list (function [this<FileReader> ev<ProgressEvent<FileReader>>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<FileReader> ev<ProgressEvent<FileReader>>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onload",
        "isStatic": true,
        "returnType": "(or (list (function [this<FileReader> ev<ProgressEvent<FileReader>>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadend",
        "isStatic": true,
        "returnType": "(or (list (function [this<FileReader> ev<ProgressEvent<FileReader>>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadstart",
        "isStatic": true,
        "returnType": "(or (list (function [this<FileReader> ev<ProgressEvent<FileReader>>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onprogress",
        "isStatic": true,
        "returnType": "(or (list (function [this<FileReader> ev<ProgressEvent<FileReader>>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "(or (typeof FileReader.EMPTY) (typeof FileReader.LOADING) (typeof FileReader.DONE))"
      },
      {
        "kind": "Property",
        "name": "result",
        "isStatic": true,
        "returnType": "(or string ArrayBuffer null)"
      },
      {
        "kind": "Property",
        "name": "EMPTY",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "LOADING",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "DONE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "readAsArrayBuffer",
        "isStatic": false,
        "params": "[blob<Blob>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "readAsBinaryString",
        "isStatic": false,
        "params": "[blob<Blob>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "readAsDataURL",
        "isStatic": false,
        "params": "[blob<Blob>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "readAsText",
        "isStatic": false,
        "params": "[blob<Blob> (optional encoding<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<FileReader> ev<(get FileReaderEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<FileReader> ev<(get FileReaderEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FileReader}) (new [] FileReader) (property {:EMPTY 0}) (property {:LOADING 1}) (property {:DONE 2})}"
  },
  "FileSystem": {
    "kind": "Property",
    "name": "FileSystem",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystem"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystem"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "root",
        "isStatic": true,
        "returnType": "FileSystemDirectoryEntry"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FileSystem}) (new [] FileSystem)}"
  },
  "FileSystemDirectoryEntry": {
    "kind": "Property",
    "name": "FileSystemDirectoryEntry",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemDirectoryEntry"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemDirectoryEntry"
      },
      {
        "kind": "Method",
        "name": "createReader",
        "isStatic": false,
        "params": "[]",
        "returnType": "FileSystemDirectoryReader"
      },
      {
        "kind": "Method",
        "name": "getDirectory",
        "isStatic": false,
        "params": "[(optional path<(or string null)>) (optional options<FileSystemFlags>) (optional successCallback<FileSystemEntryCallback>) (optional errorCallback<ErrorCallback>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getFile",
        "isStatic": false,
        "params": "[(optional path<(or string null)>) (optional options<FileSystemFlags>) (optional successCallback<FileSystemEntryCallback>) (optional errorCallback<ErrorCallback>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FileSystemDirectoryEntry}) (new [] FileSystemDirectoryEntry)}"
  },
  "FileSystemDirectoryReader": {
    "kind": "Property",
    "name": "FileSystemDirectoryReader",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemDirectoryReader"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemDirectoryReader"
      },
      {
        "kind": "Method",
        "name": "readEntries",
        "isStatic": false,
        "params": "[successCallback<FileSystemEntriesCallback> (optional errorCallback<ErrorCallback>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FileSystemDirectoryReader}) (new [] FileSystemDirectoryReader)}"
  },
  "FileSystemEntry": {
    "kind": "Property",
    "name": "FileSystemEntry",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemEntry"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemEntry"
      },
      {
        "kind": "Property",
        "name": "filesystem",
        "isStatic": true,
        "returnType": "FileSystem"
      },
      {
        "kind": "Property",
        "name": "fullPath",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "isDirectory",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "isFile",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getParent",
        "isStatic": false,
        "params": "[(optional successCallback<FileSystemEntryCallback>) (optional errorCallback<ErrorCallback>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FileSystemEntry}) (new [] FileSystemEntry)}"
  },
  "FileSystemFileEntry": {
    "kind": "Property",
    "name": "FileSystemFileEntry",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemFileEntry"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemFileEntry"
      },
      {
        "kind": "Method",
        "name": "file",
        "isStatic": false,
        "params": "[successCallback<FileCallback> (optional errorCallback<ErrorCallback>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FileSystemFileEntry}) (new [] FileSystemFileEntry)}"
  },
  "FileSystemFileHandle": {
    "kind": "Property",
    "name": "FileSystemFileHandle",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemFileHandle"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemFileHandle"
      },
      {
        "kind": "Property",
        "name": "kind",
        "isStatic": true,
        "returnType": "\"file\""
      },
      {
        "kind": "Method",
        "name": "createWritable",
        "isStatic": false,
        "params": "[(optional options<FileSystemCreateWritableOptions>)]",
        "returnType": "Promise<FileSystemWritableFileStream>"
      },
      {
        "kind": "Method",
        "name": "getFile",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<File>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemFileHandle"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemFileHandle"
      },
      {
        "kind": "Property",
        "name": "kind",
        "isStatic": true,
        "returnType": "\"file\""
      },
      {
        "kind": "Method",
        "name": "createSyncAccessHandle",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<FileSystemSyncAccessHandle>"
      },
      {
        "kind": "Method",
        "name": "createWritable",
        "isStatic": false,
        "params": "[(optional options<FileSystemCreateWritableOptions>)]",
        "returnType": "Promise<FileSystemWritableFileStream>"
      },
      {
        "kind": "Method",
        "name": "getFile",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<File>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FileSystemFileHandle}) (new [] FileSystemFileHandle)}"
  },
  "FileSystemHandle": {
    "kind": "Property",
    "name": "FileSystemHandle",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemHandle"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemHandle"
      },
      {
        "kind": "Property",
        "name": "kind",
        "isStatic": true,
        "returnType": "FileSystemHandleKind"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "isSameEntry",
        "isStatic": false,
        "params": "[other<FileSystemHandle>]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemHandle"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemHandle"
      },
      {
        "kind": "Property",
        "name": "kind",
        "isStatic": true,
        "returnType": "FileSystemHandleKind"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "isSameEntry",
        "isStatic": false,
        "params": "[other<FileSystemHandle>]",
        "returnType": "Promise<boolean>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FileSystemHandle}) (new [] FileSystemHandle)}"
  },
  "FileSystemWritableFileStream": {
    "kind": "Property",
    "name": "FileSystemWritableFileStream",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemWritableFileStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemWritableFileStream"
      },
      {
        "kind": "Method",
        "name": "seek",
        "isStatic": false,
        "params": "[position<number>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "truncate",
        "isStatic": false,
        "params": "[size<number>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "write",
        "isStatic": false,
        "params": "[data<FileSystemWriteChunkType>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemWritableFileStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemWritableFileStream"
      },
      {
        "kind": "Method",
        "name": "seek",
        "isStatic": false,
        "params": "[position<number>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "truncate",
        "isStatic": false,
        "params": "[size<number>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "write",
        "isStatic": false,
        "params": "[data<FileSystemWriteChunkType>]",
        "returnType": "Promise<void>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FileSystemWritableFileStream}) (new [] FileSystemWritableFileStream)}"
  },
  "FocusEvent": {
    "kind": "Property",
    "name": "FocusEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<FocusEventInit>)]",
        "returnType": "FocusEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FocusEvent"
      },
      {
        "kind": "Property",
        "name": "relatedTarget",
        "isStatic": true,
        "returnType": "(or EventTarget null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FocusEvent}) (new [type<string> (optional eventInitDict<FocusEventInit>)] FocusEvent)}"
  },
  "FontFace": {
    "kind": "Property",
    "name": "FontFace",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[family<string> source<(or string BufferSource)> (optional descriptors<FontFaceDescriptors>)]",
        "returnType": "FontFace"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FontFace"
      },
      {
        "kind": "Property",
        "name": "ascentOverride",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "descentOverride",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "display",
        "isStatic": true,
        "returnType": "FontDisplay"
      },
      {
        "kind": "Property",
        "name": "family",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "featureSettings",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lineGapOverride",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "loaded",
        "isStatic": true,
        "returnType": "Promise<FontFace>"
      },
      {
        "kind": "Property",
        "name": "status",
        "isStatic": true,
        "returnType": "FontFaceLoadStatus"
      },
      {
        "kind": "Property",
        "name": "stretch",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "style",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "unicodeRange",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "weight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "load",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<FontFace>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[family<string> source<(or string BufferSource)> (optional descriptors<FontFaceDescriptors>)]",
        "returnType": "FontFace"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FontFace"
      },
      {
        "kind": "Property",
        "name": "ascentOverride",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "descentOverride",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "display",
        "isStatic": true,
        "returnType": "FontDisplay"
      },
      {
        "kind": "Property",
        "name": "family",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "featureSettings",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lineGapOverride",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "loaded",
        "isStatic": true,
        "returnType": "Promise<FontFace>"
      },
      {
        "kind": "Property",
        "name": "status",
        "isStatic": true,
        "returnType": "FontFaceLoadStatus"
      },
      {
        "kind": "Property",
        "name": "stretch",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "style",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "unicodeRange",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "weight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "load",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<FontFace>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FontFace}) (new [family<string> source<(or string BufferSource)> (optional descriptors<FontFaceDescriptors>)] FontFace)}"
  },
  "FontFaceSet": {
    "kind": "Property",
    "name": "FontFaceSet",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FontFaceSet"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FontFaceSet"
      },
      {
        "kind": "Property",
        "name": "onloading",
        "isStatic": true,
        "returnType": "(or (list (function [this<FontFaceSet> ev<FontFaceSetLoadEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadingdone",
        "isStatic": true,
        "returnType": "(or (list (function [this<FontFaceSet> ev<FontFaceSetLoadEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadingerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<FontFaceSet> ev<FontFaceSetLoadEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ready",
        "isStatic": true,
        "returnType": "Promise<FontFaceSet>"
      },
      {
        "kind": "Property",
        "name": "status",
        "isStatic": true,
        "returnType": "FontFaceSetLoadStatus"
      },
      {
        "kind": "Method",
        "name": "check",
        "isStatic": false,
        "params": "[font<string> (optional text<string>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "load",
        "isStatic": false,
        "params": "[font<string> (optional text<string>)]",
        "returnType": "Promise<(array FontFace)>"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<FontFace> key<FontFace> parent<FontFaceSet>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<FontFaceSet> ev<(get FontFaceSetEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<FontFaceSet> ev<(get FontFaceSetEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FontFaceSet"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FontFaceSet"
      },
      {
        "kind": "Property",
        "name": "onloading",
        "isStatic": true,
        "returnType": "(or (list (function [this<FontFaceSet> ev<FontFaceSetLoadEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadingdone",
        "isStatic": true,
        "returnType": "(or (list (function [this<FontFaceSet> ev<FontFaceSetLoadEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadingerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<FontFaceSet> ev<FontFaceSetLoadEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ready",
        "isStatic": true,
        "returnType": "Promise<FontFaceSet>"
      },
      {
        "kind": "Property",
        "name": "status",
        "isStatic": true,
        "returnType": "FontFaceSetLoadStatus"
      },
      {
        "kind": "Method",
        "name": "check",
        "isStatic": false,
        "params": "[font<string> (optional text<string>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "load",
        "isStatic": false,
        "params": "[font<string> (optional text<string>)]",
        "returnType": "Promise<(array FontFace)>"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<FontFace> key<FontFace> parent<FontFaceSet>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<FontFaceSet> ev<(get FontFaceSetEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<FontFaceSet> ev<(get FontFaceSetEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FontFaceSet}) (new [] FontFaceSet)}"
  },
  "FontFaceSetLoadEvent": {
    "kind": "Property",
    "name": "FontFaceSetLoadEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<FontFaceSetLoadEventInit>)]",
        "returnType": "FontFaceSetLoadEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FontFaceSetLoadEvent"
      },
      {
        "kind": "Property",
        "name": "fontfaces",
        "isStatic": true,
        "returnType": "ReadonlyArray<FontFace>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<FontFaceSetLoadEventInit>)]",
        "returnType": "FontFaceSetLoadEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FontFaceSetLoadEvent"
      },
      {
        "kind": "Property",
        "name": "fontfaces",
        "isStatic": true,
        "returnType": "ReadonlyArray<FontFace>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FontFaceSetLoadEvent}) (new [type<string> (optional eventInitDict<FontFaceSetLoadEventInit>)] FontFaceSetLoadEvent)}"
  },
  "FormData": {
    "kind": "Property",
    "name": "FormData",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional form<HTMLFormElement>) (optional submitter<(or HTMLElement null)>)]",
        "returnType": "FormData"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FormData"
      },
      {
        "kind": "Method",
        "name": "append",
        "isStatic": false,
        "params": "[name<string> value<(or string Blob)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "append",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "append",
        "isStatic": false,
        "params": "[name<string> blobValue<Blob> (optional filename<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or FormDataEntryValue null)"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(array FormDataEntryValue)"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[name<string> value<(or string Blob)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[name<string> blobValue<Blob> (optional filename<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<FormDataEntryValue> key<string> parent<FormData>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "FormDataIterator<[string FormDataEntryValue]>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "FormDataIterator<[string FormDataEntryValue]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "FormDataIterator<string>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "FormDataIterator<FormDataEntryValue>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FormData"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FormData"
      },
      {
        "kind": "Method",
        "name": "append",
        "isStatic": false,
        "params": "[name<string> value<(or string Blob)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "append",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "append",
        "isStatic": false,
        "params": "[name<string> blobValue<Blob> (optional filename<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or FormDataEntryValue null)"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(array FormDataEntryValue)"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[name<string> value<(or string Blob)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[name<string> blobValue<Blob> (optional filename<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<FormDataEntryValue> key<string> parent<FormData>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "FormDataIterator<[string FormDataEntryValue]>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "FormDataIterator<[string FormDataEntryValue]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "FormDataIterator<string>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "FormDataIterator<FormDataEntryValue>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FormData}) (new [(optional form<HTMLFormElement>) (optional submitter<(or HTMLElement null)>)] FormData)}"
  },
  "FormDataEvent": {
    "kind": "Property",
    "name": "FormDataEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<FormDataEventInit>]",
        "returnType": "FormDataEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FormDataEvent"
      },
      {
        "kind": "Property",
        "name": "formData",
        "isStatic": true,
        "returnType": "FormData"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FormDataEvent}) (new [type<string> eventInitDict<FormDataEventInit>] FormDataEvent)}"
  },
  "FragmentDirective": {
    "kind": "Property",
    "name": "FragmentDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FragmentDirective"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FragmentDirective"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FragmentDirective}) (new [] FragmentDirective)}"
  },
  "GainNode": {
    "kind": "Property",
    "name": "GainNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<GainOptions>)]",
        "returnType": "GainNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "GainNode"
      },
      {
        "kind": "Property",
        "name": "gain",
        "isStatic": true,
        "returnType": "AudioParam"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype GainNode}) (new [context<BaseAudioContext> (optional options<GainOptions>)] GainNode)}"
  },
  "Gamepad": {
    "kind": "Property",
    "name": "Gamepad",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Gamepad"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Gamepad"
      },
      {
        "kind": "Property",
        "name": "axes",
        "isStatic": true,
        "returnType": "ReadonlyArray<number>"
      },
      {
        "kind": "Property",
        "name": "buttons",
        "isStatic": true,
        "returnType": "ReadonlyArray<GamepadButton>"
      },
      {
        "kind": "Property",
        "name": "connected",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "index",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "mapping",
        "isStatic": true,
        "returnType": "GamepadMappingType"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "vibrationActuator",
        "isStatic": true,
        "returnType": "GamepadHapticActuator"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Gamepad}) (new [] Gamepad)}"
  },
  "GamepadButton": {
    "kind": "Property",
    "name": "GamepadButton",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "GamepadButton"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "GamepadButton"
      },
      {
        "kind": "Property",
        "name": "pressed",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "touched",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype GamepadButton}) (new [] GamepadButton)}"
  },
  "GamepadEvent": {
    "kind": "Property",
    "name": "GamepadEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<GamepadEventInit>]",
        "returnType": "GamepadEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "GamepadEvent"
      },
      {
        "kind": "Property",
        "name": "gamepad",
        "isStatic": true,
        "returnType": "Gamepad"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype GamepadEvent}) (new [type<string> eventInitDict<GamepadEventInit>] GamepadEvent)}"
  },
  "GamepadHapticActuator": {
    "kind": "Property",
    "name": "GamepadHapticActuator",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "GamepadHapticActuator"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "GamepadHapticActuator"
      },
      {
        "kind": "Method",
        "name": "playEffect",
        "isStatic": false,
        "params": "[type<GamepadHapticEffectType> (optional params<GamepadEffectParameters>)]",
        "returnType": "Promise<GamepadHapticsResult>"
      },
      {
        "kind": "Method",
        "name": "reset",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<GamepadHapticsResult>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype GamepadHapticActuator}) (new [] GamepadHapticActuator)}"
  },
  "Geolocation": {
    "kind": "Property",
    "name": "Geolocation",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Geolocation"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Geolocation"
      },
      {
        "kind": "Method",
        "name": "clearWatch",
        "isStatic": false,
        "params": "[watchId<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCurrentPosition",
        "isStatic": false,
        "params": "[successCallback<PositionCallback> (optional errorCallback<(or PositionErrorCallback null)>) (optional options<PositionOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "watchPosition",
        "isStatic": false,
        "params": "[successCallback<PositionCallback> (optional errorCallback<(or PositionErrorCallback null)>) (optional options<PositionOptions>)]",
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Geolocation}) (new [] Geolocation)}"
  },
  "GeolocationCoordinates": {
    "kind": "Property",
    "name": "GeolocationCoordinates",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "GeolocationCoordinates"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "GeolocationCoordinates"
      },
      {
        "kind": "Property",
        "name": "accuracy",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "altitude",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "altitudeAccuracy",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "heading",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "latitude",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "longitude",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "speed",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype GeolocationCoordinates}) (new [] GeolocationCoordinates)}"
  },
  "GeolocationPosition": {
    "kind": "Property",
    "name": "GeolocationPosition",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "GeolocationPosition"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "GeolocationPosition"
      },
      {
        "kind": "Property",
        "name": "coords",
        "isStatic": true,
        "returnType": "GeolocationCoordinates"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "EpochTimeStamp"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype GeolocationPosition}) (new [] GeolocationPosition)}"
  },
  "GeolocationPositionError": {
    "kind": "Property",
    "name": "GeolocationPositionError",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "GeolocationPositionError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "GeolocationPositionError"
      },
      {
        "kind": "Property",
        "name": "PERMISSION_DENIED",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "POSITION_UNAVAILABLE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "TIMEOUT",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "code",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "message",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "PERMISSION_DENIED",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "POSITION_UNAVAILABLE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "TIMEOUT",
        "isStatic": true,
        "returnType": "3"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype GeolocationPositionError}) (new [] GeolocationPositionError) (property {:PERMISSION_DENIED 1}) (property {:POSITION_UNAVAILABLE 2}) (property {:TIMEOUT 3})}"
  },
  "HTMLAllCollection": {
    "kind": "Property",
    "name": "HTMLAllCollection",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLAllCollection"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLAllCollection"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[(optional nameOrIndex<string>)]",
        "returnType": "(or HTMLCollection Element null)"
      },
      {
        "kind": "Method",
        "name": "namedItem",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or HTMLCollection Element null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<Element>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLAllCollection}) (new [] HTMLAllCollection)}"
  },
  "HTMLAnchorElement": {
    "kind": "Property",
    "name": "HTMLAnchorElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLAnchorElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLAnchorElement"
      },
      {
        "kind": "Property",
        "name": "charset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "coords",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "download",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "hreflang",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ping",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "referrerPolicy",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rel",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "relList",
        "isStatic": true,
        "returnType": "DOMTokenList"
      },
      {
        "kind": "Property",
        "name": "rev",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "shape",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "text",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLAnchorElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLAnchorElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLAnchorElement}) (new [] HTMLAnchorElement)}"
  },
  "HTMLAreaElement": {
    "kind": "Property",
    "name": "HTMLAreaElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLAreaElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLAreaElement"
      },
      {
        "kind": "Property",
        "name": "alt",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "coords",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "download",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "noHref",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "ping",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "referrerPolicy",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rel",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "relList",
        "isStatic": true,
        "returnType": "DOMTokenList"
      },
      {
        "kind": "Property",
        "name": "shape",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLAreaElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLAreaElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLAreaElement}) (new [] HTMLAreaElement)}"
  },
  "HTMLAudioElement": {
    "kind": "Property",
    "name": "HTMLAudioElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLAudioElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLAudioElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLAudioElement> ev<(get HTMLMediaElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLAudioElement> ev<(get HTMLMediaElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLAudioElement}) (new [] HTMLAudioElement)}"
  },
  "HTMLBRElement": {
    "kind": "Property",
    "name": "HTMLBRElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLBRElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLBRElement"
      },
      {
        "kind": "Property",
        "name": "clear",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLBRElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLBRElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLBRElement}) (new [] HTMLBRElement)}"
  },
  "HTMLBaseElement": {
    "kind": "Property",
    "name": "HTMLBaseElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLBaseElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLBaseElement"
      },
      {
        "kind": "Property",
        "name": "href",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLBaseElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLBaseElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLBaseElement}) (new [] HTMLBaseElement)}"
  },
  "HTMLBodyElement": {
    "kind": "Property",
    "name": "HTMLBodyElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLBodyElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLBodyElement"
      },
      {
        "kind": "Property",
        "name": "aLink",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "background",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "bgColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "link",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "text",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "vLink",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLBodyElement> ev<(get HTMLBodyElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLBodyElement> ev<(get HTMLBodyElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLBodyElement}) (new [] HTMLBodyElement)}"
  },
  "HTMLButtonElement": {
    "kind": "Property",
    "name": "HTMLButtonElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLButtonElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLButtonElement"
      },
      {
        "kind": "Property",
        "name": "disabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "form",
        "isStatic": true,
        "returnType": "(or HTMLFormElement null)"
      },
      {
        "kind": "Property",
        "name": "formAction",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "formEnctype",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "formMethod",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "formNoValidate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "formTarget",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "labels",
        "isStatic": true,
        "returnType": "NodeListOf<HTMLLabelElement>"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "(or \"submit\" \"reset\" \"button\")"
      },
      {
        "kind": "Property",
        "name": "validationMessage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validity",
        "isStatic": true,
        "returnType": "ValidityState"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "willValidate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "checkValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "reportValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setCustomValidity",
        "isStatic": false,
        "params": "[error<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLButtonElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLButtonElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLButtonElement}) (new [] HTMLButtonElement)}"
  },
  "HTMLCanvasElement": {
    "kind": "Property",
    "name": "HTMLCanvasElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLCanvasElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLCanvasElement"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "captureStream",
        "isStatic": false,
        "params": "[(optional frameRequestRate<number>)]",
        "returnType": "MediaStream"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<\"2d\"> (optional options<CanvasRenderingContext2DSettings>)]",
        "returnType": "(or CanvasRenderingContext2D null)"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<\"bitmaprenderer\"> (optional options<ImageBitmapRenderingContextSettings>)]",
        "returnType": "(or ImageBitmapRenderingContext null)"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<\"webgl\"> (optional options<WebGLContextAttributes>)]",
        "returnType": "(or WebGLRenderingContext null)"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<\"webgl2\"> (optional options<WebGLContextAttributes>)]",
        "returnType": "(or WebGL2RenderingContext null)"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<string> (optional options<any>)]",
        "returnType": "(or RenderingContext null)"
      },
      {
        "kind": "Method",
        "name": "toBlob",
        "isStatic": false,
        "params": "[callback<BlobCallback> (optional type<string>) (optional quality<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toDataURL",
        "isStatic": false,
        "params": "[(optional type<string>) (optional quality<any>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "transferControlToOffscreen",
        "isStatic": false,
        "params": "[]",
        "returnType": "OffscreenCanvas"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLCanvasElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLCanvasElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLCanvasElement}) (new [] HTMLCanvasElement)}"
  },
  "HTMLCollection": {
    "kind": "Property",
    "name": "HTMLCollection",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLCollection"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLCollection"
      },
      {
        "kind": "Method",
        "name": "namedItem",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or Element null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLCollection}) (new [] HTMLCollection)}"
  },
  "HTMLDListElement": {
    "kind": "Property",
    "name": "HTMLDListElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLDListElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLDListElement"
      },
      {
        "kind": "Property",
        "name": "compact",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDListElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDListElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLDListElement}) (new [] HTMLDListElement)}"
  },
  "HTMLDataElement": {
    "kind": "Property",
    "name": "HTMLDataElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLDataElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLDataElement"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDataElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDataElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLDataElement}) (new [] HTMLDataElement)}"
  },
  "HTMLDataListElement": {
    "kind": "Property",
    "name": "HTMLDataListElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLDataListElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLDataListElement"
      },
      {
        "kind": "Property",
        "name": "options",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<HTMLOptionElement>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDataListElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDataListElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLDataListElement}) (new [] HTMLDataListElement)}"
  },
  "HTMLDetailsElement": {
    "kind": "Property",
    "name": "HTMLDetailsElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLDetailsElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLDetailsElement"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "open",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDetailsElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDetailsElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLDetailsElement}) (new [] HTMLDetailsElement)}"
  },
  "HTMLDialogElement": {
    "kind": "Property",
    "name": "HTMLDialogElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLDialogElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLDialogElement"
      },
      {
        "kind": "Property",
        "name": "open",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "returnValue",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[(optional returnValue<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "show",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "showModal",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDialogElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDialogElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLDialogElement}) (new [] HTMLDialogElement)}"
  },
  "HTMLDirectoryElement": {
    "kind": "Property",
    "name": "HTMLDirectoryElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLDirectoryElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLDirectoryElement"
      },
      {
        "kind": "Property",
        "name": "compact",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDirectoryElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDirectoryElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLDirectoryElement}) (new [] HTMLDirectoryElement)}"
  },
  "HTMLDivElement": {
    "kind": "Property",
    "name": "HTMLDivElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLDivElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLDivElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDivElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDivElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLDivElement}) (new [] HTMLDivElement)}"
  },
  "HTMLDocument": {
    "kind": "Property",
    "name": "HTMLDocument",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLDocument"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLDocument"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDocument> ev<(get DocumentEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLDocument> ev<(get DocumentEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLDocument}) (new [] HTMLDocument)}"
  },
  "HTMLElement": {
    "kind": "Property",
    "name": "HTMLElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLElement"
      },
      {
        "kind": "Property",
        "name": "accessKey",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "accessKeyLabel",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "autocapitalize",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "dir",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "draggable",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "hidden",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "inert",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "innerText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lang",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "offsetHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "offsetLeft",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "offsetParent",
        "isStatic": true,
        "returnType": "(or Element null)"
      },
      {
        "kind": "Property",
        "name": "offsetTop",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "offsetWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "outerText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "popover",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "spellcheck",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "title",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "translate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "writingSuggestions",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "attachInternals",
        "isStatic": false,
        "params": "[]",
        "returnType": "ElementInternals"
      },
      {
        "kind": "Method",
        "name": "click",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "hidePopover",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "showPopover",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "togglePopover",
        "isStatic": false,
        "params": "[(optional force<boolean>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLElement}) (new [] HTMLElement)}"
  },
  "HTMLEmbedElement": {
    "kind": "Property",
    "name": "HTMLEmbedElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLEmbedElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLEmbedElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "src",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSVGDocument",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Document null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLEmbedElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLEmbedElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLEmbedElement}) (new [] HTMLEmbedElement)}"
  },
  "HTMLFieldSetElement": {
    "kind": "Property",
    "name": "HTMLFieldSetElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLFieldSetElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLFieldSetElement"
      },
      {
        "kind": "Property",
        "name": "disabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "elements",
        "isStatic": true,
        "returnType": "HTMLCollection"
      },
      {
        "kind": "Property",
        "name": "form",
        "isStatic": true,
        "returnType": "(or HTMLFormElement null)"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validationMessage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validity",
        "isStatic": true,
        "returnType": "ValidityState"
      },
      {
        "kind": "Property",
        "name": "willValidate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "checkValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "reportValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setCustomValidity",
        "isStatic": false,
        "params": "[error<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLFieldSetElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLFieldSetElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLFieldSetElement}) (new [] HTMLFieldSetElement)}"
  },
  "HTMLFontElement": {
    "kind": "Property",
    "name": "HTMLFontElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLFontElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLFontElement"
      },
      {
        "kind": "Property",
        "name": "color",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "face",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLFontElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLFontElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLFontElement}) (new [] HTMLFontElement)}"
  },
  "HTMLFormControlsCollection": {
    "kind": "Property",
    "name": "HTMLFormControlsCollection",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLFormControlsCollection"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLFormControlsCollection"
      },
      {
        "kind": "Method",
        "name": "namedItem",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or RadioNodeList Element null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLFormControlsCollection}) (new [] HTMLFormControlsCollection)}"
  },
  "HTMLFormElement": {
    "kind": "Property",
    "name": "HTMLFormElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLFormElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLFormElement"
      },
      {
        "kind": "Property",
        "name": "acceptCharset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "action",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "autocomplete",
        "isStatic": true,
        "returnType": "AutoFillBase"
      },
      {
        "kind": "Property",
        "name": "elements",
        "isStatic": true,
        "returnType": "HTMLFormControlsCollection"
      },
      {
        "kind": "Property",
        "name": "encoding",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "enctype",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "method",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "noValidate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "rel",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "relList",
        "isStatic": true,
        "returnType": "DOMTokenList"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "checkValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "reportValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "requestSubmit",
        "isStatic": false,
        "params": "[(optional submitter<(or HTMLElement null)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reset",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "submit",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLFormElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLFormElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<Element>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLFormElement}) (new [] HTMLFormElement)}"
  },
  "HTMLFrameElement": {
    "kind": "Property",
    "name": "HTMLFrameElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLFrameElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLFrameElement"
      },
      {
        "kind": "Property",
        "name": "contentDocument",
        "isStatic": true,
        "returnType": "(or Document null)"
      },
      {
        "kind": "Property",
        "name": "contentWindow",
        "isStatic": true,
        "returnType": "(or WindowProxy null)"
      },
      {
        "kind": "Property",
        "name": "frameBorder",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "longDesc",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginHeight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "noResize",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "scrolling",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "src",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLFrameElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLFrameElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLFrameElement}) (new [] HTMLFrameElement)}"
  },
  "HTMLFrameSetElement": {
    "kind": "Property",
    "name": "HTMLFrameSetElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLFrameSetElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLFrameSetElement"
      },
      {
        "kind": "Property",
        "name": "cols",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rows",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLFrameSetElement> ev<(get HTMLFrameSetElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLFrameSetElement> ev<(get HTMLFrameSetElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLFrameSetElement}) (new [] HTMLFrameSetElement)}"
  },
  "HTMLHRElement": {
    "kind": "Property",
    "name": "HTMLHRElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLHRElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLHRElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "color",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "noShade",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLHRElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLHRElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLHRElement}) (new [] HTMLHRElement)}"
  },
  "HTMLHeadElement": {
    "kind": "Property",
    "name": "HTMLHeadElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLHeadElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLHeadElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLHeadElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLHeadElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLHeadElement}) (new [] HTMLHeadElement)}"
  },
  "HTMLHeadingElement": {
    "kind": "Property",
    "name": "HTMLHeadingElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLHeadingElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLHeadingElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLHeadingElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLHeadingElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLHeadingElement}) (new [] HTMLHeadingElement)}"
  },
  "HTMLHtmlElement": {
    "kind": "Property",
    "name": "HTMLHtmlElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLHtmlElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLHtmlElement"
      },
      {
        "kind": "Property",
        "name": "version",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLHtmlElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLHtmlElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLHtmlElement}) (new [] HTMLHtmlElement)}"
  },
  "HTMLIFrameElement": {
    "kind": "Property",
    "name": "HTMLIFrameElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLIFrameElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLIFrameElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "allow",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "allowFullscreen",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "contentDocument",
        "isStatic": true,
        "returnType": "(or Document null)"
      },
      {
        "kind": "Property",
        "name": "contentWindow",
        "isStatic": true,
        "returnType": "(or WindowProxy null)"
      },
      {
        "kind": "Property",
        "name": "frameBorder",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "loading",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "longDesc",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginHeight",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "marginWidth",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "referrerPolicy",
        "isStatic": true,
        "returnType": "ReferrerPolicy"
      },
      {
        "kind": "Property",
        "name": "sandbox",
        "isStatic": true,
        "returnType": "DOMTokenList"
      },
      {
        "kind": "Property",
        "name": "scrolling",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "src",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "srcdoc",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSVGDocument",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Document null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLIFrameElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLIFrameElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLIFrameElement}) (new [] HTMLIFrameElement)}"
  },
  "HTMLImageElement": {
    "kind": "Property",
    "name": "HTMLImageElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLImageElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLImageElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "alt",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "border",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "complete",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "crossOrigin",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "currentSrc",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "decoding",
        "isStatic": true,
        "returnType": "(or \"async\" \"sync\" \"auto\")"
      },
      {
        "kind": "Property",
        "name": "fetchPriority",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "hspace",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "isMap",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "loading",
        "isStatic": true,
        "returnType": "(or \"eager\" \"lazy\")"
      },
      {
        "kind": "Property",
        "name": "longDesc",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lowsrc",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "naturalHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "naturalWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "referrerPolicy",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "sizes",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "src",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "srcset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "useMap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "vspace",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "decode",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLImageElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLImageElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLImageElement}) (new [] HTMLImageElement)}"
  },
  "HTMLInputElement": {
    "kind": "Property",
    "name": "HTMLInputElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLInputElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLInputElement"
      },
      {
        "kind": "Property",
        "name": "accept",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "alt",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "autocomplete",
        "isStatic": true,
        "returnType": "AutoFill"
      },
      {
        "kind": "Property",
        "name": "capture",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "checked",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "defaultChecked",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "defaultValue",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "dirName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "disabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "files",
        "isStatic": true,
        "returnType": "(or FileList null)"
      },
      {
        "kind": "Property",
        "name": "form",
        "isStatic": true,
        "returnType": "(or HTMLFormElement null)"
      },
      {
        "kind": "Property",
        "name": "formAction",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "formEnctype",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "formMethod",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "formNoValidate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "formTarget",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "indeterminate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "labels",
        "isStatic": true,
        "returnType": "(or NodeListOf<HTMLLabelElement> null)"
      },
      {
        "kind": "Property",
        "name": "list",
        "isStatic": true,
        "returnType": "(or HTMLDataListElement null)"
      },
      {
        "kind": "Property",
        "name": "max",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maxLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "min",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "minLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "multiple",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pattern",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "placeholder",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "readOnly",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "required",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "selectionDirection",
        "isStatic": true,
        "returnType": "(or \"forward\" \"backward\" \"none\" null)"
      },
      {
        "kind": "Property",
        "name": "selectionEnd",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "selectionStart",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "src",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "step",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "useMap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validationMessage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validity",
        "isStatic": true,
        "returnType": "ValidityState"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "valueAsDate",
        "isStatic": true,
        "returnType": "(or Date null)"
      },
      {
        "kind": "Property",
        "name": "valueAsNumber",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "webkitEntries",
        "isStatic": true,
        "returnType": "ReadonlyArray<FileSystemEntry>"
      },
      {
        "kind": "Property",
        "name": "webkitdirectory",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "willValidate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "checkValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "reportValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "select",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setCustomValidity",
        "isStatic": false,
        "params": "[error<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setRangeText",
        "isStatic": false,
        "params": "[replacement<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setRangeText",
        "isStatic": false,
        "params": "[replacement<string> start<number> end<number> (optional selectionMode<SelectionMode>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setSelectionRange",
        "isStatic": false,
        "params": "[start<(or number null)> end<(or number null)> (optional direction<(or \"forward\" \"backward\" \"none\")>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "showPicker",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stepDown",
        "isStatic": false,
        "params": "[(optional n<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stepUp",
        "isStatic": false,
        "params": "[(optional n<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLInputElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLInputElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLInputElement}) (new [] HTMLInputElement)}"
  },
  "HTMLLIElement": {
    "kind": "Property",
    "name": "HTMLLIElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLLIElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLLIElement"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLLIElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLLIElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLLIElement}) (new [] HTMLLIElement)}"
  },
  "HTMLLabelElement": {
    "kind": "Property",
    "name": "HTMLLabelElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLLabelElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLLabelElement"
      },
      {
        "kind": "Property",
        "name": "control",
        "isStatic": true,
        "returnType": "(or HTMLElement null)"
      },
      {
        "kind": "Property",
        "name": "form",
        "isStatic": true,
        "returnType": "(or HTMLFormElement null)"
      },
      {
        "kind": "Property",
        "name": "htmlFor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLLabelElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLLabelElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLLabelElement}) (new [] HTMLLabelElement)}"
  },
  "HTMLLegendElement": {
    "kind": "Property",
    "name": "HTMLLegendElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLLegendElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLLegendElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "form",
        "isStatic": true,
        "returnType": "(or HTMLFormElement null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLLegendElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLLegendElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLLegendElement}) (new [] HTMLLegendElement)}"
  },
  "HTMLLinkElement": {
    "kind": "Property",
    "name": "HTMLLinkElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLLinkElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLLinkElement"
      },
      {
        "kind": "Property",
        "name": "as",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "charset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "crossOrigin",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "disabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "fetchPriority",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "href",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "hreflang",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "imageSizes",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "imageSrcset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "integrity",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "media",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "referrerPolicy",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rel",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "relList",
        "isStatic": true,
        "returnType": "DOMTokenList"
      },
      {
        "kind": "Property",
        "name": "rev",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "sizes",
        "isStatic": true,
        "returnType": "DOMTokenList"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLLinkElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLLinkElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLLinkElement}) (new [] HTMLLinkElement)}"
  },
  "HTMLMapElement": {
    "kind": "Property",
    "name": "HTMLMapElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLMapElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLMapElement"
      },
      {
        "kind": "Property",
        "name": "areas",
        "isStatic": true,
        "returnType": "HTMLCollection"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLMapElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLMapElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLMapElement}) (new [] HTMLMapElement)}"
  },
  "HTMLMarqueeElement": {
    "kind": "Property",
    "name": "HTMLMarqueeElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLMarqueeElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLMarqueeElement"
      },
      {
        "kind": "Property",
        "name": "behavior",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "bgColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "direction",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "hspace",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "loop",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scrollAmount",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scrollDelay",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "trueSpeed",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "vspace",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "start",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stop",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLMarqueeElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLMarqueeElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLMarqueeElement}) (new [] HTMLMarqueeElement)}"
  },
  "HTMLMediaElement": {
    "kind": "Property",
    "name": "HTMLMediaElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLMediaElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLMediaElement"
      },
      {
        "kind": "Property",
        "name": "NETWORK_EMPTY",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "NETWORK_IDLE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "NETWORK_LOADING",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "NETWORK_NO_SOURCE",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "HAVE_NOTHING",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "HAVE_METADATA",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "HAVE_CURRENT_DATA",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "HAVE_FUTURE_DATA",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "HAVE_ENOUGH_DATA",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "autoplay",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "buffered",
        "isStatic": true,
        "returnType": "TimeRanges"
      },
      {
        "kind": "Property",
        "name": "controls",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "crossOrigin",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "currentSrc",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "currentTime",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "defaultMuted",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "defaultPlaybackRate",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "disableRemotePlayback",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ended",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "error",
        "isStatic": true,
        "returnType": "(or MediaError null)"
      },
      {
        "kind": "Property",
        "name": "loop",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "mediaKeys",
        "isStatic": true,
        "returnType": "(or MediaKeys null)"
      },
      {
        "kind": "Property",
        "name": "muted",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "networkState",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "onencrypted",
        "isStatic": true,
        "returnType": "(or (list (function [this<HTMLMediaElement> ev<MediaEncryptedEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onwaitingforkey",
        "isStatic": true,
        "returnType": "(or (list (function [this<HTMLMediaElement> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "paused",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "playbackRate",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "played",
        "isStatic": true,
        "returnType": "TimeRanges"
      },
      {
        "kind": "Property",
        "name": "preload",
        "isStatic": true,
        "returnType": "(or \"none\" \"metadata\" \"auto\" \"\")"
      },
      {
        "kind": "Property",
        "name": "preservesPitch",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "remote",
        "isStatic": true,
        "returnType": "RemotePlayback"
      },
      {
        "kind": "Property",
        "name": "seekable",
        "isStatic": true,
        "returnType": "TimeRanges"
      },
      {
        "kind": "Property",
        "name": "seeking",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "sinkId",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "src",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "srcObject",
        "isStatic": true,
        "returnType": "(or MediaProvider null)"
      },
      {
        "kind": "Property",
        "name": "textTracks",
        "isStatic": true,
        "returnType": "TextTrackList"
      },
      {
        "kind": "Property",
        "name": "volume",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "NETWORK_EMPTY",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "NETWORK_IDLE",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "NETWORK_LOADING",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "NETWORK_NO_SOURCE",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "HAVE_NOTHING",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "HAVE_METADATA",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "HAVE_CURRENT_DATA",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "HAVE_FUTURE_DATA",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "HAVE_ENOUGH_DATA",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Method",
        "name": "addTextTrack",
        "isStatic": false,
        "params": "[kind<TextTrackKind> (optional label<string>) (optional language<string>)]",
        "returnType": "TextTrack"
      },
      {
        "kind": "Method",
        "name": "canPlayType",
        "isStatic": false,
        "params": "[type<string>]",
        "returnType": "CanPlayTypeResult"
      },
      {
        "kind": "Method",
        "name": "fastSeek",
        "isStatic": false,
        "params": "[time<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "load",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pause",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "play",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "setMediaKeys",
        "isStatic": false,
        "params": "[mediaKeys<(or MediaKeys null)>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "setSinkId",
        "isStatic": false,
        "params": "[sinkId<string>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLMediaElement> ev<(get HTMLMediaElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLMediaElement> ev<(get HTMLMediaElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLMediaElement}) (new [] HTMLMediaElement) (property {:NETWORK_EMPTY 0}) (property {:NETWORK_IDLE 1}) (property {:NETWORK_LOADING 2}) (property {:NETWORK_NO_SOURCE 3}) (property {:HAVE_NOTHING 0}) (property {:HAVE_METADATA 1}) (property {:HAVE_CURRENT_DATA 2}) (property {:HAVE_FUTURE_DATA 3}) (property {:HAVE_ENOUGH_DATA 4})}"
  },
  "HTMLMenuElement": {
    "kind": "Property",
    "name": "HTMLMenuElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLMenuElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLMenuElement"
      },
      {
        "kind": "Property",
        "name": "compact",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLMenuElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLMenuElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLMenuElement}) (new [] HTMLMenuElement)}"
  },
  "HTMLMetaElement": {
    "kind": "Property",
    "name": "HTMLMetaElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLMetaElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLMetaElement"
      },
      {
        "kind": "Property",
        "name": "content",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "httpEquiv",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "media",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "scheme",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLMetaElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLMetaElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLMetaElement}) (new [] HTMLMetaElement)}"
  },
  "HTMLMeterElement": {
    "kind": "Property",
    "name": "HTMLMeterElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLMeterElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLMeterElement"
      },
      {
        "kind": "Property",
        "name": "high",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "labels",
        "isStatic": true,
        "returnType": "NodeListOf<HTMLLabelElement>"
      },
      {
        "kind": "Property",
        "name": "low",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "max",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "min",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "optimum",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLMeterElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLMeterElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLMeterElement}) (new [] HTMLMeterElement)}"
  },
  "HTMLModElement": {
    "kind": "Property",
    "name": "HTMLModElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLModElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLModElement"
      },
      {
        "kind": "Property",
        "name": "cite",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "dateTime",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLModElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLModElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLModElement}) (new [] HTMLModElement)}"
  },
  "HTMLOListElement": {
    "kind": "Property",
    "name": "HTMLOListElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLOListElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLOListElement"
      },
      {
        "kind": "Property",
        "name": "compact",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "reversed",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "start",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLOListElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLOListElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLOListElement}) (new [] HTMLOListElement)}"
  },
  "HTMLObjectElement": {
    "kind": "Property",
    "name": "HTMLObjectElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLObjectElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLObjectElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "archive",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "border",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "code",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "codeBase",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "codeType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "contentDocument",
        "isStatic": true,
        "returnType": "(or Document null)"
      },
      {
        "kind": "Property",
        "name": "contentWindow",
        "isStatic": true,
        "returnType": "(or WindowProxy null)"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "declare",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "form",
        "isStatic": true,
        "returnType": "(or HTMLFormElement null)"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "hspace",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "standby",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "useMap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validationMessage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validity",
        "isStatic": true,
        "returnType": "ValidityState"
      },
      {
        "kind": "Property",
        "name": "vspace",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "willValidate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "checkValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "getSVGDocument",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Document null)"
      },
      {
        "kind": "Method",
        "name": "reportValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setCustomValidity",
        "isStatic": false,
        "params": "[error<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLObjectElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLObjectElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLObjectElement}) (new [] HTMLObjectElement)}"
  },
  "HTMLOptGroupElement": {
    "kind": "Property",
    "name": "HTMLOptGroupElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLOptGroupElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLOptGroupElement"
      },
      {
        "kind": "Property",
        "name": "disabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "label",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLOptGroupElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLOptGroupElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLOptGroupElement}) (new [] HTMLOptGroupElement)}"
  },
  "HTMLOptionElement": {
    "kind": "Property",
    "name": "HTMLOptionElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLOptionElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLOptionElement"
      },
      {
        "kind": "Property",
        "name": "defaultSelected",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "disabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "form",
        "isStatic": true,
        "returnType": "(or HTMLFormElement null)"
      },
      {
        "kind": "Property",
        "name": "index",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "label",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "selected",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "text",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLOptionElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLOptionElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLOptionElement}) (new [] HTMLOptionElement)}"
  },
  "HTMLOptionsCollection": {
    "kind": "Property",
    "name": "HTMLOptionsCollection",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLOptionsCollection"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLOptionsCollection"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "selectedIndex",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[element<(or HTMLOptionElement HTMLOptGroupElement)> (optional before<(or HTMLElement number null)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "remove",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLOptionsCollection}) (new [] HTMLOptionsCollection)}"
  },
  "HTMLOutputElement": {
    "kind": "Property",
    "name": "HTMLOutputElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLOutputElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLOutputElement"
      },
      {
        "kind": "Property",
        "name": "defaultValue",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "form",
        "isStatic": true,
        "returnType": "(or HTMLFormElement null)"
      },
      {
        "kind": "Property",
        "name": "htmlFor",
        "isStatic": true,
        "returnType": "DOMTokenList"
      },
      {
        "kind": "Property",
        "name": "labels",
        "isStatic": true,
        "returnType": "NodeListOf<HTMLLabelElement>"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validationMessage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validity",
        "isStatic": true,
        "returnType": "ValidityState"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "willValidate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "checkValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "reportValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setCustomValidity",
        "isStatic": false,
        "params": "[error<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLOutputElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLOutputElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLOutputElement}) (new [] HTMLOutputElement)}"
  },
  "HTMLParagraphElement": {
    "kind": "Property",
    "name": "HTMLParagraphElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLParagraphElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLParagraphElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLParagraphElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLParagraphElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLParagraphElement}) (new [] HTMLParagraphElement)}"
  },
  "HTMLParamElement": {
    "kind": "Property",
    "name": "HTMLParamElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLParamElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLParamElement"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "valueType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLParamElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLParamElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLParamElement}) (new [] HTMLParamElement)}"
  },
  "HTMLPictureElement": {
    "kind": "Property",
    "name": "HTMLPictureElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLPictureElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLPictureElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLPictureElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLPictureElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLPictureElement}) (new [] HTMLPictureElement)}"
  },
  "HTMLPreElement": {
    "kind": "Property",
    "name": "HTMLPreElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLPreElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLPreElement"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLPreElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLPreElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLPreElement}) (new [] HTMLPreElement)}"
  },
  "HTMLProgressElement": {
    "kind": "Property",
    "name": "HTMLProgressElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLProgressElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLProgressElement"
      },
      {
        "kind": "Property",
        "name": "labels",
        "isStatic": true,
        "returnType": "NodeListOf<HTMLLabelElement>"
      },
      {
        "kind": "Property",
        "name": "max",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "position",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLProgressElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLProgressElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLProgressElement}) (new [] HTMLProgressElement)}"
  },
  "HTMLQuoteElement": {
    "kind": "Property",
    "name": "HTMLQuoteElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLQuoteElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLQuoteElement"
      },
      {
        "kind": "Property",
        "name": "cite",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLQuoteElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLQuoteElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLQuoteElement}) (new [] HTMLQuoteElement)}"
  },
  "HTMLScriptElement": {
    "kind": "Property",
    "name": "HTMLScriptElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLScriptElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLScriptElement"
      },
      {
        "kind": "Method",
        "name": "supports",
        "isStatic": false,
        "params": "[type<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "async",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "charset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "crossOrigin",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "defer",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "event",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "fetchPriority",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "htmlFor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "integrity",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "noModule",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "referrerPolicy",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "src",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "text",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLScriptElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLScriptElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLScriptElement}) (new [] HTMLScriptElement) (method [type<string>])<boolean>}"
  },
  "HTMLSelectElement": {
    "kind": "Property",
    "name": "HTMLSelectElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLSelectElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLSelectElement"
      },
      {
        "kind": "Property",
        "name": "autocomplete",
        "isStatic": true,
        "returnType": "AutoFill"
      },
      {
        "kind": "Property",
        "name": "disabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "form",
        "isStatic": true,
        "returnType": "(or HTMLFormElement null)"
      },
      {
        "kind": "Property",
        "name": "labels",
        "isStatic": true,
        "returnType": "NodeListOf<HTMLLabelElement>"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "multiple",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "options",
        "isStatic": true,
        "returnType": "HTMLOptionsCollection"
      },
      {
        "kind": "Property",
        "name": "required",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "selectedIndex",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "selectedOptions",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<HTMLOptionElement>"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "(or \"select-one\" \"select-multiple\")"
      },
      {
        "kind": "Property",
        "name": "validationMessage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validity",
        "isStatic": true,
        "returnType": "ValidityState"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "willValidate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[element<(or HTMLOptionElement HTMLOptGroupElement)> (optional before<(or HTMLElement number null)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "checkValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or HTMLOptionElement null)"
      },
      {
        "kind": "Method",
        "name": "namedItem",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or HTMLOptionElement null)"
      },
      {
        "kind": "Method",
        "name": "remove",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "remove",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reportValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setCustomValidity",
        "isStatic": false,
        "params": "[error<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "showPicker",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLSelectElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLSelectElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<HTMLOptionElement>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLSelectElement}) (new [] HTMLSelectElement)}"
  },
  "HTMLSlotElement": {
    "kind": "Property",
    "name": "HTMLSlotElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLSlotElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLSlotElement"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "assign",
        "isStatic": false,
        "params": "[(& rest<nodes<(array (list (or Element Text)))>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "assignedElements",
        "isStatic": false,
        "params": "[(optional options<AssignedNodesOptions>)]",
        "returnType": "(array Element)"
      },
      {
        "kind": "Method",
        "name": "assignedNodes",
        "isStatic": false,
        "params": "[(optional options<AssignedNodesOptions>)]",
        "returnType": "(array Node)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLSlotElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLSlotElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLSlotElement}) (new [] HTMLSlotElement)}"
  },
  "HTMLSourceElement": {
    "kind": "Property",
    "name": "HTMLSourceElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLSourceElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLSourceElement"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "media",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "sizes",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "src",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "srcset",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLSourceElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLSourceElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLSourceElement}) (new [] HTMLSourceElement)}"
  },
  "HTMLSpanElement": {
    "kind": "Property",
    "name": "HTMLSpanElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLSpanElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLSpanElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLSpanElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLSpanElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLSpanElement}) (new [] HTMLSpanElement)}"
  },
  "HTMLStyleElement": {
    "kind": "Property",
    "name": "HTMLStyleElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLStyleElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLStyleElement"
      },
      {
        "kind": "Property",
        "name": "disabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "media",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLStyleElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLStyleElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLStyleElement}) (new [] HTMLStyleElement)}"
  },
  "HTMLTableCaptionElement": {
    "kind": "Property",
    "name": "HTMLTableCaptionElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLTableCaptionElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLTableCaptionElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTableCaptionElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTableCaptionElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLTableCaptionElement}) (new [] HTMLTableCaptionElement)}"
  },
  "HTMLTableCellElement": {
    "kind": "Property",
    "name": "HTMLTableCellElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLTableCellElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLTableCellElement"
      },
      {
        "kind": "Property",
        "name": "abbr",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "axis",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "bgColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "cellIndex",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ch",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "chOff",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "colSpan",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "headers",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "noWrap",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "rowSpan",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scope",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "vAlign",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTableCellElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTableCellElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLTableCellElement}) (new [] HTMLTableCellElement)}"
  },
  "HTMLTableColElement": {
    "kind": "Property",
    "name": "HTMLTableColElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLTableColElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLTableColElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ch",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "chOff",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "span",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "vAlign",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTableColElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTableColElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLTableColElement}) (new [] HTMLTableColElement)}"
  },
  "HTMLTableElement": {
    "kind": "Property",
    "name": "HTMLTableElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLTableElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLTableElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "bgColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "border",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "caption",
        "isStatic": true,
        "returnType": "(or HTMLTableCaptionElement null)"
      },
      {
        "kind": "Property",
        "name": "cellPadding",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "cellSpacing",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "frame",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rows",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<HTMLTableRowElement>"
      },
      {
        "kind": "Property",
        "name": "rules",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "summary",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "tBodies",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<HTMLTableSectionElement>"
      },
      {
        "kind": "Property",
        "name": "tFoot",
        "isStatic": true,
        "returnType": "(or HTMLTableSectionElement null)"
      },
      {
        "kind": "Property",
        "name": "tHead",
        "isStatic": true,
        "returnType": "(or HTMLTableSectionElement null)"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "createCaption",
        "isStatic": false,
        "params": "[]",
        "returnType": "HTMLTableCaptionElement"
      },
      {
        "kind": "Method",
        "name": "createTBody",
        "isStatic": false,
        "params": "[]",
        "returnType": "HTMLTableSectionElement"
      },
      {
        "kind": "Method",
        "name": "createTFoot",
        "isStatic": false,
        "params": "[]",
        "returnType": "HTMLTableSectionElement"
      },
      {
        "kind": "Method",
        "name": "createTHead",
        "isStatic": false,
        "params": "[]",
        "returnType": "HTMLTableSectionElement"
      },
      {
        "kind": "Method",
        "name": "deleteCaption",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteRow",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteTFoot",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteTHead",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "insertRow",
        "isStatic": false,
        "params": "[(optional index<number>)]",
        "returnType": "HTMLTableRowElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTableElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTableElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLTableElement}) (new [] HTMLTableElement)}"
  },
  "HTMLTableRowElement": {
    "kind": "Property",
    "name": "HTMLTableRowElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLTableRowElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLTableRowElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "bgColor",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "cells",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<HTMLTableCellElement>"
      },
      {
        "kind": "Property",
        "name": "ch",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "chOff",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rowIndex",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "sectionRowIndex",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "vAlign",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "deleteCell",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "insertCell",
        "isStatic": false,
        "params": "[(optional index<number>)]",
        "returnType": "HTMLTableCellElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTableRowElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTableRowElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLTableRowElement}) (new [] HTMLTableRowElement)}"
  },
  "HTMLTableSectionElement": {
    "kind": "Property",
    "name": "HTMLTableSectionElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLTableSectionElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLTableSectionElement"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ch",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "chOff",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "rows",
        "isStatic": true,
        "returnType": "HTMLCollectionOf<HTMLTableRowElement>"
      },
      {
        "kind": "Property",
        "name": "vAlign",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "deleteRow",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "insertRow",
        "isStatic": false,
        "params": "[(optional index<number>)]",
        "returnType": "HTMLTableRowElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTableSectionElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTableSectionElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLTableSectionElement}) (new [] HTMLTableSectionElement)}"
  },
  "HTMLTemplateElement": {
    "kind": "Property",
    "name": "HTMLTemplateElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLTemplateElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLTemplateElement"
      },
      {
        "kind": "Property",
        "name": "content",
        "isStatic": true,
        "returnType": "DocumentFragment"
      },
      {
        "kind": "Property",
        "name": "shadowRootClonable",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "shadowRootDelegatesFocus",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "shadowRootMode",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "shadowRootSerializable",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTemplateElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTemplateElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLTemplateElement}) (new [] HTMLTemplateElement)}"
  },
  "HTMLTextAreaElement": {
    "kind": "Property",
    "name": "HTMLTextAreaElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLTextAreaElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLTextAreaElement"
      },
      {
        "kind": "Property",
        "name": "autocomplete",
        "isStatic": true,
        "returnType": "AutoFill"
      },
      {
        "kind": "Property",
        "name": "cols",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "defaultValue",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "dirName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "disabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "form",
        "isStatic": true,
        "returnType": "(or HTMLFormElement null)"
      },
      {
        "kind": "Property",
        "name": "labels",
        "isStatic": true,
        "returnType": "NodeListOf<HTMLLabelElement>"
      },
      {
        "kind": "Property",
        "name": "maxLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "minLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "placeholder",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "readOnly",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "required",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "rows",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "selectionDirection",
        "isStatic": true,
        "returnType": "(or \"forward\" \"backward\" \"none\")"
      },
      {
        "kind": "Property",
        "name": "selectionEnd",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "selectionStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "textLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validationMessage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "validity",
        "isStatic": true,
        "returnType": "ValidityState"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "willValidate",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "wrap",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "checkValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "reportValidity",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "select",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setCustomValidity",
        "isStatic": false,
        "params": "[error<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setRangeText",
        "isStatic": false,
        "params": "[replacement<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setRangeText",
        "isStatic": false,
        "params": "[replacement<string> start<number> end<number> (optional selectionMode<SelectionMode>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setSelectionRange",
        "isStatic": false,
        "params": "[start<(or number null)> end<(or number null)> (optional direction<(or \"forward\" \"backward\" \"none\")>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTextAreaElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTextAreaElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLTextAreaElement}) (new [] HTMLTextAreaElement)}"
  },
  "HTMLTimeElement": {
    "kind": "Property",
    "name": "HTMLTimeElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLTimeElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLTimeElement"
      },
      {
        "kind": "Property",
        "name": "dateTime",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTimeElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTimeElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLTimeElement}) (new [] HTMLTimeElement)}"
  },
  "HTMLTitleElement": {
    "kind": "Property",
    "name": "HTMLTitleElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLTitleElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLTitleElement"
      },
      {
        "kind": "Property",
        "name": "text",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTitleElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTitleElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLTitleElement}) (new [] HTMLTitleElement)}"
  },
  "HTMLTrackElement": {
    "kind": "Property",
    "name": "HTMLTrackElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLTrackElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLTrackElement"
      },
      {
        "kind": "Property",
        "name": "NONE",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "LOADING",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "LOADED",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "ERROR",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "default",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "kind",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "label",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "src",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "srclang",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "track",
        "isStatic": true,
        "returnType": "TextTrack"
      },
      {
        "kind": "Property",
        "name": "NONE",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "LOADING",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "LOADED",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "ERROR",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTrackElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLTrackElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLTrackElement}) (new [] HTMLTrackElement) (property {:NONE 0}) (property {:LOADING 1}) (property {:LOADED 2}) (property {:ERROR 3})}"
  },
  "HTMLUListElement": {
    "kind": "Property",
    "name": "HTMLUListElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLUListElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLUListElement"
      },
      {
        "kind": "Property",
        "name": "compact",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLUListElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLUListElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLUListElement}) (new [] HTMLUListElement)}"
  },
  "HTMLUnknownElement": {
    "kind": "Property",
    "name": "HTMLUnknownElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLUnknownElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLUnknownElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLUnknownElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLUnknownElement> ev<(get HTMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLUnknownElement}) (new [] HTMLUnknownElement)}"
  },
  "HTMLVideoElement": {
    "kind": "Property",
    "name": "HTMLVideoElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HTMLVideoElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HTMLVideoElement"
      },
      {
        "kind": "Property",
        "name": "disablePictureInPicture",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "onenterpictureinpicture",
        "isStatic": true,
        "returnType": "(or (list (function [this<HTMLVideoElement> ev<PictureInPictureEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onleavepictureinpicture",
        "isStatic": true,
        "returnType": "(or (list (function [this<HTMLVideoElement> ev<PictureInPictureEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "playsInline",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "poster",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "videoHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "videoWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "cancelVideoFrameCallback",
        "isStatic": false,
        "params": "[handle<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getVideoPlaybackQuality",
        "isStatic": false,
        "params": "[]",
        "returnType": "VideoPlaybackQuality"
      },
      {
        "kind": "Method",
        "name": "requestPictureInPicture",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<PictureInPictureWindow>"
      },
      {
        "kind": "Method",
        "name": "requestVideoFrameCallback",
        "isStatic": false,
        "params": "[callback<VideoFrameRequestCallback>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLVideoElement> ev<(get HTMLVideoElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<HTMLVideoElement> ev<(get HTMLVideoElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HTMLVideoElement}) (new [] HTMLVideoElement)}"
  },
  "HashChangeEvent": {
    "kind": "Property",
    "name": "HashChangeEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<HashChangeEventInit>)]",
        "returnType": "HashChangeEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HashChangeEvent"
      },
      {
        "kind": "Property",
        "name": "newURL",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "oldURL",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HashChangeEvent}) (new [type<string> (optional eventInitDict<HashChangeEventInit>)] HashChangeEvent)}"
  },
  "Headers": {
    "kind": "Property",
    "name": "Headers",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional init<HeadersInit>)]",
        "returnType": "Headers"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Headers"
      },
      {
        "kind": "Method",
        "name": "append",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "getSetCookie",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array string)"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<string> key<string> parent<Headers>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "HeadersIterator<[string string]>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "HeadersIterator<[string string]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "HeadersIterator<string>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "HeadersIterator<string>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional init<HeadersInit>)]",
        "returnType": "Headers"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Headers"
      },
      {
        "kind": "Method",
        "name": "append",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "getSetCookie",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array string)"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<string> key<string> parent<Headers>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "HeadersIterator<[string string]>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "HeadersIterator<[string string]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "HeadersIterator<string>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "HeadersIterator<string>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Headers}) (new [(optional init<HeadersInit>)] Headers)}"
  },
  "Highlight": {
    "kind": "Property",
    "name": "Highlight",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(& rest<initialRanges<(array AbstractRange)>>)]",
        "returnType": "Highlight"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Highlight"
      },
      {
        "kind": "Property",
        "name": "priority",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "HighlightType"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<AbstractRange> key<AbstractRange> parent<Highlight>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Highlight}) (new [(& rest<initialRanges<(array AbstractRange)>>)] Highlight)}"
  },
  "HighlightRegistry": {
    "kind": "Property",
    "name": "HighlightRegistry",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "HighlightRegistry"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "HighlightRegistry"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<Highlight> key<string> parent<HighlightRegistry>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype HighlightRegistry}) (new [] HighlightRegistry)}"
  },
  "History": {
    "kind": "Property",
    "name": "History",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "History"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "History"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scrollRestoration",
        "isStatic": true,
        "returnType": "ScrollRestoration"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "back",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "forward",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "go",
        "isStatic": false,
        "params": "[(optional delta<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pushState",
        "isStatic": false,
        "params": "[data<any> unused<string> (optional url<(or string URL null)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "replaceState",
        "isStatic": false,
        "params": "[data<any> unused<string> (optional url<(or string URL null)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype History}) (new [] History)}"
  },
  "IDBCursor": {
    "kind": "Property",
    "name": "IDBCursor",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBCursor"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBCursor"
      },
      {
        "kind": "Property",
        "name": "direction",
        "isStatic": true,
        "returnType": "IDBCursorDirection"
      },
      {
        "kind": "Property",
        "name": "key",
        "isStatic": true,
        "returnType": "IDBValidKey"
      },
      {
        "kind": "Property",
        "name": "primaryKey",
        "isStatic": true,
        "returnType": "IDBValidKey"
      },
      {
        "kind": "Property",
        "name": "request",
        "isStatic": true,
        "returnType": "IDBRequest"
      },
      {
        "kind": "Property",
        "name": "source",
        "isStatic": true,
        "returnType": "(or IDBObjectStore IDBIndex)"
      },
      {
        "kind": "Method",
        "name": "advance",
        "isStatic": false,
        "params": "[count<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "continue",
        "isStatic": false,
        "params": "[(optional key<IDBValidKey>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "continuePrimaryKey",
        "isStatic": false,
        "params": "[key<IDBValidKey> primaryKey<IDBValidKey>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[]",
        "returnType": "IDBRequest<undefined>"
      },
      {
        "kind": "Method",
        "name": "update",
        "isStatic": false,
        "params": "[value<any>]",
        "returnType": "IDBRequest<IDBValidKey>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBCursor"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBCursor"
      },
      {
        "kind": "Property",
        "name": "direction",
        "isStatic": true,
        "returnType": "IDBCursorDirection"
      },
      {
        "kind": "Property",
        "name": "key",
        "isStatic": true,
        "returnType": "IDBValidKey"
      },
      {
        "kind": "Property",
        "name": "primaryKey",
        "isStatic": true,
        "returnType": "IDBValidKey"
      },
      {
        "kind": "Property",
        "name": "request",
        "isStatic": true,
        "returnType": "IDBRequest"
      },
      {
        "kind": "Property",
        "name": "source",
        "isStatic": true,
        "returnType": "(or IDBObjectStore IDBIndex)"
      },
      {
        "kind": "Method",
        "name": "advance",
        "isStatic": false,
        "params": "[count<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "continue",
        "isStatic": false,
        "params": "[(optional key<IDBValidKey>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "continuePrimaryKey",
        "isStatic": false,
        "params": "[key<IDBValidKey> primaryKey<IDBValidKey>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[]",
        "returnType": "IDBRequest<undefined>"
      },
      {
        "kind": "Method",
        "name": "update",
        "isStatic": false,
        "params": "[value<any>]",
        "returnType": "IDBRequest<IDBValidKey>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IDBCursor}) (new [] IDBCursor)}"
  },
  "IDBCursorWithValue": {
    "kind": "Property",
    "name": "IDBCursorWithValue",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBCursorWithValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBCursorWithValue"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBCursorWithValue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBCursorWithValue"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IDBCursorWithValue}) (new [] IDBCursorWithValue)}"
  },
  "IDBDatabase": {
    "kind": "Property",
    "name": "IDBDatabase",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBDatabase"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBDatabase"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "objectStoreNames",
        "isStatic": true,
        "returnType": "DOMStringList"
      },
      {
        "kind": "Property",
        "name": "onabort",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBDatabase> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onclose",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBDatabase> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBDatabase> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onversionchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBDatabase> ev<IDBVersionChangeEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "version",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createObjectStore",
        "isStatic": false,
        "params": "[name<string> (optional options<IDBObjectStoreParameters>)]",
        "returnType": "IDBObjectStore"
      },
      {
        "kind": "Method",
        "name": "deleteObjectStore",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "transaction",
        "isStatic": false,
        "params": "[storeNames<(or string (array string))> (optional mode<IDBTransactionMode>) (optional options<IDBTransactionOptions>)]",
        "returnType": "IDBTransaction"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBDatabase> ev<(get IDBDatabaseEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBDatabase> ev<(get IDBDatabaseEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "transaction",
        "isStatic": false,
        "params": "[storeNames<(or string Iterable<string>)> (optional mode<IDBTransactionMode>) (optional options<IDBTransactionOptions>)]",
        "returnType": "IDBTransaction"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBDatabase"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBDatabase"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "objectStoreNames",
        "isStatic": true,
        "returnType": "DOMStringList"
      },
      {
        "kind": "Property",
        "name": "onabort",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBDatabase> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onclose",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBDatabase> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBDatabase> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onversionchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBDatabase> ev<IDBVersionChangeEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "version",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createObjectStore",
        "isStatic": false,
        "params": "[name<string> (optional options<IDBObjectStoreParameters>)]",
        "returnType": "IDBObjectStore"
      },
      {
        "kind": "Method",
        "name": "deleteObjectStore",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "transaction",
        "isStatic": false,
        "params": "[storeNames<(or string (array string))> (optional mode<IDBTransactionMode>) (optional options<IDBTransactionOptions>)]",
        "returnType": "IDBTransaction"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBDatabase> ev<(get IDBDatabaseEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBDatabase> ev<(get IDBDatabaseEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "transaction",
        "isStatic": false,
        "params": "[storeNames<(or string Iterable<string>)> (optional mode<IDBTransactionMode>) (optional options<IDBTransactionOptions>)]",
        "returnType": "IDBTransaction"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IDBDatabase}) (new [] IDBDatabase)}"
  },
  "IDBFactory": {
    "kind": "Property",
    "name": "IDBFactory",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBFactory"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBFactory"
      },
      {
        "kind": "Method",
        "name": "cmp",
        "isStatic": false,
        "params": "[first<any> second<any>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "databases",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<(array IDBDatabaseInfo)>"
      },
      {
        "kind": "Method",
        "name": "deleteDatabase",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "IDBOpenDBRequest"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[name<string> (optional version<number>)]",
        "returnType": "IDBOpenDBRequest"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBFactory"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBFactory"
      },
      {
        "kind": "Method",
        "name": "cmp",
        "isStatic": false,
        "params": "[first<any> second<any>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "databases",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<(array IDBDatabaseInfo)>"
      },
      {
        "kind": "Method",
        "name": "deleteDatabase",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "IDBOpenDBRequest"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[name<string> (optional version<number>)]",
        "returnType": "IDBOpenDBRequest"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IDBFactory}) (new [] IDBFactory)}"
  },
  "IDBIndex": {
    "kind": "Property",
    "name": "IDBIndex",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBIndex"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBIndex"
      },
      {
        "kind": "Property",
        "name": "keyPath",
        "isStatic": true,
        "returnType": "(or string (array string))"
      },
      {
        "kind": "Property",
        "name": "multiEntry",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "objectStore",
        "isStatic": true,
        "returnType": "IDBObjectStore"
      },
      {
        "kind": "Property",
        "name": "unique",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "count",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange)>)]",
        "returnType": "IDBRequest<number>"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[query<(or IDBValidKey IDBKeyRange)>]",
        "returnType": "IDBRequest<any>"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional count<number>)]",
        "returnType": "IDBRequest<(array any)>"
      },
      {
        "kind": "Method",
        "name": "getAllKeys",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional count<number>)]",
        "returnType": "IDBRequest<(array IDBValidKey)>"
      },
      {
        "kind": "Method",
        "name": "getKey",
        "isStatic": false,
        "params": "[query<(or IDBValidKey IDBKeyRange)>]",
        "returnType": "IDBRequest<(or IDBValidKey undefined)>"
      },
      {
        "kind": "Method",
        "name": "openCursor",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional direction<IDBCursorDirection>)]",
        "returnType": "IDBRequest<(or IDBCursorWithValue null)>"
      },
      {
        "kind": "Method",
        "name": "openKeyCursor",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional direction<IDBCursorDirection>)]",
        "returnType": "IDBRequest<(or IDBCursor null)>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBIndex"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBIndex"
      },
      {
        "kind": "Property",
        "name": "keyPath",
        "isStatic": true,
        "returnType": "(or string (array string))"
      },
      {
        "kind": "Property",
        "name": "multiEntry",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "objectStore",
        "isStatic": true,
        "returnType": "IDBObjectStore"
      },
      {
        "kind": "Property",
        "name": "unique",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "count",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange)>)]",
        "returnType": "IDBRequest<number>"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[query<(or IDBValidKey IDBKeyRange)>]",
        "returnType": "IDBRequest<any>"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional count<number>)]",
        "returnType": "IDBRequest<(array any)>"
      },
      {
        "kind": "Method",
        "name": "getAllKeys",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional count<number>)]",
        "returnType": "IDBRequest<(array IDBValidKey)>"
      },
      {
        "kind": "Method",
        "name": "getKey",
        "isStatic": false,
        "params": "[query<(or IDBValidKey IDBKeyRange)>]",
        "returnType": "IDBRequest<(or IDBValidKey undefined)>"
      },
      {
        "kind": "Method",
        "name": "openCursor",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional direction<IDBCursorDirection>)]",
        "returnType": "IDBRequest<(or IDBCursorWithValue null)>"
      },
      {
        "kind": "Method",
        "name": "openKeyCursor",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional direction<IDBCursorDirection>)]",
        "returnType": "IDBRequest<(or IDBCursor null)>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IDBIndex}) (new [] IDBIndex)}"
  },
  "IDBKeyRange": {
    "kind": "Property",
    "name": "IDBKeyRange",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBKeyRange"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBKeyRange"
      },
      {
        "kind": "Method",
        "name": "bound",
        "isStatic": false,
        "params": "[lower<any> upper<any> (optional lowerOpen<boolean>) (optional upperOpen<boolean>)]",
        "returnType": "IDBKeyRange"
      },
      {
        "kind": "Method",
        "name": "lowerBound",
        "isStatic": false,
        "params": "[lower<any> (optional open<boolean>)]",
        "returnType": "IDBKeyRange"
      },
      {
        "kind": "Method",
        "name": "only",
        "isStatic": false,
        "params": "[value<any>]",
        "returnType": "IDBKeyRange"
      },
      {
        "kind": "Method",
        "name": "upperBound",
        "isStatic": false,
        "params": "[upper<any> (optional open<boolean>)]",
        "returnType": "IDBKeyRange"
      },
      {
        "kind": "Property",
        "name": "lower",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "lowerOpen",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "upper",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "upperOpen",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[key<any>]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBKeyRange"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBKeyRange"
      },
      {
        "kind": "Method",
        "name": "bound",
        "isStatic": false,
        "params": "[lower<any> upper<any> (optional lowerOpen<boolean>) (optional upperOpen<boolean>)]",
        "returnType": "IDBKeyRange"
      },
      {
        "kind": "Method",
        "name": "lowerBound",
        "isStatic": false,
        "params": "[lower<any> (optional open<boolean>)]",
        "returnType": "IDBKeyRange"
      },
      {
        "kind": "Method",
        "name": "only",
        "isStatic": false,
        "params": "[value<any>]",
        "returnType": "IDBKeyRange"
      },
      {
        "kind": "Method",
        "name": "upperBound",
        "isStatic": false,
        "params": "[upper<any> (optional open<boolean>)]",
        "returnType": "IDBKeyRange"
      },
      {
        "kind": "Property",
        "name": "lower",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "lowerOpen",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "upper",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "upperOpen",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[key<any>]",
        "returnType": "boolean"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IDBKeyRange}) (new [] IDBKeyRange) (method [lower<any> upper<any> (optional lowerOpen<boolean>) (optional upperOpen<boolean>)])<IDBKeyRange> (method [lower<any> (optional open<boolean>)])<IDBKeyRange> (method [value<any>])<IDBKeyRange> (method [upper<any> (optional open<boolean>)])<IDBKeyRange>}"
  },
  "IDBObjectStore": {
    "kind": "Property",
    "name": "IDBObjectStore",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBObjectStore"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBObjectStore"
      },
      {
        "kind": "Property",
        "name": "autoIncrement",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "indexNames",
        "isStatic": true,
        "returnType": "DOMStringList"
      },
      {
        "kind": "Property",
        "name": "keyPath",
        "isStatic": true,
        "returnType": "(or string (array string))"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "transaction",
        "isStatic": true,
        "returnType": "IDBTransaction"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[value<any> (optional key<IDBValidKey>)]",
        "returnType": "IDBRequest<IDBValidKey>"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "IDBRequest<undefined>"
      },
      {
        "kind": "Method",
        "name": "count",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange)>)]",
        "returnType": "IDBRequest<number>"
      },
      {
        "kind": "Method",
        "name": "createIndex",
        "isStatic": false,
        "params": "[name<string> keyPath<(or string (array string))> (optional options<IDBIndexParameters>)]",
        "returnType": "IDBIndex"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[query<(or IDBValidKey IDBKeyRange)>]",
        "returnType": "IDBRequest<undefined>"
      },
      {
        "kind": "Method",
        "name": "deleteIndex",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[query<(or IDBValidKey IDBKeyRange)>]",
        "returnType": "IDBRequest<any>"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional count<number>)]",
        "returnType": "IDBRequest<(array any)>"
      },
      {
        "kind": "Method",
        "name": "getAllKeys",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional count<number>)]",
        "returnType": "IDBRequest<(array IDBValidKey)>"
      },
      {
        "kind": "Method",
        "name": "getKey",
        "isStatic": false,
        "params": "[query<(or IDBValidKey IDBKeyRange)>]",
        "returnType": "IDBRequest<(or IDBValidKey undefined)>"
      },
      {
        "kind": "Method",
        "name": "index",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "IDBIndex"
      },
      {
        "kind": "Method",
        "name": "openCursor",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional direction<IDBCursorDirection>)]",
        "returnType": "IDBRequest<(or IDBCursorWithValue null)>"
      },
      {
        "kind": "Method",
        "name": "openKeyCursor",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional direction<IDBCursorDirection>)]",
        "returnType": "IDBRequest<(or IDBCursor null)>"
      },
      {
        "kind": "Method",
        "name": "put",
        "isStatic": false,
        "params": "[value<any> (optional key<IDBValidKey>)]",
        "returnType": "IDBRequest<IDBValidKey>"
      },
      {
        "kind": "Method",
        "name": "createIndex",
        "isStatic": false,
        "params": "[name<string> keyPath<(or string Iterable<string>)> (optional options<IDBIndexParameters>)]",
        "returnType": "IDBIndex"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBObjectStore"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBObjectStore"
      },
      {
        "kind": "Property",
        "name": "autoIncrement",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "indexNames",
        "isStatic": true,
        "returnType": "DOMStringList"
      },
      {
        "kind": "Property",
        "name": "keyPath",
        "isStatic": true,
        "returnType": "(or string (array string))"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "transaction",
        "isStatic": true,
        "returnType": "IDBTransaction"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[value<any> (optional key<IDBValidKey>)]",
        "returnType": "IDBRequest<IDBValidKey>"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "IDBRequest<undefined>"
      },
      {
        "kind": "Method",
        "name": "count",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange)>)]",
        "returnType": "IDBRequest<number>"
      },
      {
        "kind": "Method",
        "name": "createIndex",
        "isStatic": false,
        "params": "[name<string> keyPath<(or string (array string))> (optional options<IDBIndexParameters>)]",
        "returnType": "IDBIndex"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[query<(or IDBValidKey IDBKeyRange)>]",
        "returnType": "IDBRequest<undefined>"
      },
      {
        "kind": "Method",
        "name": "deleteIndex",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[query<(or IDBValidKey IDBKeyRange)>]",
        "returnType": "IDBRequest<any>"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional count<number>)]",
        "returnType": "IDBRequest<(array any)>"
      },
      {
        "kind": "Method",
        "name": "getAllKeys",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional count<number>)]",
        "returnType": "IDBRequest<(array IDBValidKey)>"
      },
      {
        "kind": "Method",
        "name": "getKey",
        "isStatic": false,
        "params": "[query<(or IDBValidKey IDBKeyRange)>]",
        "returnType": "IDBRequest<(or IDBValidKey undefined)>"
      },
      {
        "kind": "Method",
        "name": "index",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "IDBIndex"
      },
      {
        "kind": "Method",
        "name": "openCursor",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional direction<IDBCursorDirection>)]",
        "returnType": "IDBRequest<(or IDBCursorWithValue null)>"
      },
      {
        "kind": "Method",
        "name": "openKeyCursor",
        "isStatic": false,
        "params": "[(optional query<(or IDBValidKey IDBKeyRange null)>) (optional direction<IDBCursorDirection>)]",
        "returnType": "IDBRequest<(or IDBCursor null)>"
      },
      {
        "kind": "Method",
        "name": "put",
        "isStatic": false,
        "params": "[value<any> (optional key<IDBValidKey>)]",
        "returnType": "IDBRequest<IDBValidKey>"
      },
      {
        "kind": "Method",
        "name": "createIndex",
        "isStatic": false,
        "params": "[name<string> keyPath<(or string Iterable<string>)> (optional options<IDBIndexParameters>)]",
        "returnType": "IDBIndex"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IDBObjectStore}) (new [] IDBObjectStore)}"
  },
  "IDBOpenDBRequest": {
    "kind": "Property",
    "name": "IDBOpenDBRequest",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBOpenDBRequest"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBOpenDBRequest"
      },
      {
        "kind": "Property",
        "name": "onblocked",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBOpenDBRequest> ev<IDBVersionChangeEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onupgradeneeded",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBOpenDBRequest> ev<IDBVersionChangeEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBOpenDBRequest> ev<(get IDBOpenDBRequestEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBOpenDBRequest> ev<(get IDBOpenDBRequestEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBOpenDBRequest"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBOpenDBRequest"
      },
      {
        "kind": "Property",
        "name": "onblocked",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBOpenDBRequest> ev<IDBVersionChangeEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onupgradeneeded",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBOpenDBRequest> ev<IDBVersionChangeEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBOpenDBRequest> ev<(get IDBOpenDBRequestEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBOpenDBRequest> ev<(get IDBOpenDBRequestEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IDBOpenDBRequest}) (new [] IDBOpenDBRequest)}"
  },
  "IDBRequest": {
    "kind": "Property",
    "name": "IDBRequest",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBRequest"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBRequest"
      },
      {
        "kind": "Property",
        "name": "error",
        "isStatic": true,
        "returnType": "(or DOMException null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBRequest<T>> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onsuccess",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBRequest<T>> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "IDBRequestReadyState"
      },
      {
        "kind": "Property",
        "name": "result",
        "isStatic": true,
        "returnType": "T"
      },
      {
        "kind": "Property",
        "name": "source",
        "isStatic": true,
        "returnType": "(or IDBObjectStore IDBIndex IDBCursor)"
      },
      {
        "kind": "Property",
        "name": "transaction",
        "isStatic": true,
        "returnType": "(or IDBTransaction null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBRequest<T>> ev<(get IDBRequestEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBRequest<T>> ev<(get IDBRequestEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBRequest"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBRequest"
      },
      {
        "kind": "Property",
        "name": "error",
        "isStatic": true,
        "returnType": "(or DOMException null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBRequest<T>> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onsuccess",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBRequest<T>> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "IDBRequestReadyState"
      },
      {
        "kind": "Property",
        "name": "result",
        "isStatic": true,
        "returnType": "T"
      },
      {
        "kind": "Property",
        "name": "source",
        "isStatic": true,
        "returnType": "(or IDBObjectStore IDBIndex IDBCursor)"
      },
      {
        "kind": "Property",
        "name": "transaction",
        "isStatic": true,
        "returnType": "(or IDBTransaction null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBRequest<T>> ev<(get IDBRequestEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBRequest<T>> ev<(get IDBRequestEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IDBRequest}) (new [] IDBRequest)}"
  },
  "IDBTransaction": {
    "kind": "Property",
    "name": "IDBTransaction",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBTransaction"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBTransaction"
      },
      {
        "kind": "Property",
        "name": "db",
        "isStatic": true,
        "returnType": "IDBDatabase"
      },
      {
        "kind": "Property",
        "name": "durability",
        "isStatic": true,
        "returnType": "IDBTransactionDurability"
      },
      {
        "kind": "Property",
        "name": "error",
        "isStatic": true,
        "returnType": "(or DOMException null)"
      },
      {
        "kind": "Property",
        "name": "mode",
        "isStatic": true,
        "returnType": "IDBTransactionMode"
      },
      {
        "kind": "Property",
        "name": "objectStoreNames",
        "isStatic": true,
        "returnType": "DOMStringList"
      },
      {
        "kind": "Property",
        "name": "onabort",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBTransaction> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncomplete",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBTransaction> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBTransaction> ev<Event>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "commit",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "objectStore",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "IDBObjectStore"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBTransaction> ev<(get IDBTransactionEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBTransaction> ev<(get IDBTransactionEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IDBTransaction"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBTransaction"
      },
      {
        "kind": "Property",
        "name": "db",
        "isStatic": true,
        "returnType": "IDBDatabase"
      },
      {
        "kind": "Property",
        "name": "durability",
        "isStatic": true,
        "returnType": "IDBTransactionDurability"
      },
      {
        "kind": "Property",
        "name": "error",
        "isStatic": true,
        "returnType": "(or DOMException null)"
      },
      {
        "kind": "Property",
        "name": "mode",
        "isStatic": true,
        "returnType": "IDBTransactionMode"
      },
      {
        "kind": "Property",
        "name": "objectStoreNames",
        "isStatic": true,
        "returnType": "DOMStringList"
      },
      {
        "kind": "Property",
        "name": "onabort",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBTransaction> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncomplete",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBTransaction> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<IDBTransaction> ev<Event>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "commit",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "objectStore",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "IDBObjectStore"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBTransaction> ev<(get IDBTransactionEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<IDBTransaction> ev<(get IDBTransactionEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IDBTransaction}) (new [] IDBTransaction)}"
  },
  "IDBVersionChangeEvent": {
    "kind": "Property",
    "name": "IDBVersionChangeEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<IDBVersionChangeEventInit>)]",
        "returnType": "IDBVersionChangeEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBVersionChangeEvent"
      },
      {
        "kind": "Property",
        "name": "newVersion",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "oldVersion",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<IDBVersionChangeEventInit>)]",
        "returnType": "IDBVersionChangeEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IDBVersionChangeEvent"
      },
      {
        "kind": "Property",
        "name": "newVersion",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "oldVersion",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IDBVersionChangeEvent}) (new [type<string> (optional eventInitDict<IDBVersionChangeEventInit>)] IDBVersionChangeEvent)}"
  },
  "IIRFilterNode": {
    "kind": "Property",
    "name": "IIRFilterNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> options<IIRFilterOptions>]",
        "returnType": "IIRFilterNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IIRFilterNode"
      },
      {
        "kind": "Method",
        "name": "getFrequencyResponse",
        "isStatic": false,
        "params": "[frequencyHz<Float32Array> magResponse<Float32Array> phaseResponse<Float32Array>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IIRFilterNode}) (new [context<BaseAudioContext> options<IIRFilterOptions>] IIRFilterNode)}"
  },
  "IdleDeadline": {
    "kind": "Property",
    "name": "IdleDeadline",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IdleDeadline"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IdleDeadline"
      },
      {
        "kind": "Property",
        "name": "didTimeout",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "timeRemaining",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMHighResTimeStamp"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IdleDeadline}) (new [] IdleDeadline)}"
  },
  "ImageBitmap": {
    "kind": "Property",
    "name": "ImageBitmap",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ImageBitmap"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ImageBitmap"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ImageBitmap"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ImageBitmap"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ImageBitmap}) (new [] ImageBitmap)}"
  },
  "ImageBitmapRenderingContext": {
    "kind": "Property",
    "name": "ImageBitmapRenderingContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ImageBitmapRenderingContext"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ImageBitmapRenderingContext"
      },
      {
        "kind": "Property",
        "name": "canvas",
        "isStatic": true,
        "returnType": "(or HTMLCanvasElement OffscreenCanvas)"
      },
      {
        "kind": "Method",
        "name": "transferFromImageBitmap",
        "isStatic": false,
        "params": "[bitmap<(or ImageBitmap null)>]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ImageBitmapRenderingContext"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ImageBitmapRenderingContext"
      },
      {
        "kind": "Method",
        "name": "transferFromImageBitmap",
        "isStatic": false,
        "params": "[bitmap<(or ImageBitmap null)>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ImageBitmapRenderingContext}) (new [] ImageBitmapRenderingContext)}"
  },
  "ImageData": {
    "kind": "Property",
    "name": "ImageData",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[sw<number> sh<number> (optional settings<ImageDataSettings>)]",
        "returnType": "ImageData"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[data<Uint8ClampedArray> sw<number> (optional sh<number>) (optional settings<ImageDataSettings>)]",
        "returnType": "ImageData"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ImageData"
      },
      {
        "kind": "Property",
        "name": "colorSpace",
        "isStatic": true,
        "returnType": "PredefinedColorSpace"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "Uint8ClampedArray"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[sw<number> sh<number> (optional settings<ImageDataSettings>)]",
        "returnType": "ImageData"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[data<Uint8ClampedArray> sw<number> (optional sh<number>) (optional settings<ImageDataSettings>)]",
        "returnType": "ImageData"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ImageData"
      },
      {
        "kind": "Property",
        "name": "colorSpace",
        "isStatic": true,
        "returnType": "PredefinedColorSpace"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "Uint8ClampedArray"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ImageData}) (new [sw<number> sh<number> (optional settings<ImageDataSettings>)] ImageData) (new [data<Uint8ClampedArray> sw<number> (optional sh<number>) (optional settings<ImageDataSettings>)] ImageData)}"
  },
  "InputDeviceInfo": {
    "kind": "Property",
    "name": "InputDeviceInfo",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "InputDeviceInfo"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "InputDeviceInfo"
      },
      {
        "kind": "Method",
        "name": "getCapabilities",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaTrackCapabilities"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype InputDeviceInfo}) (new [] InputDeviceInfo)}"
  },
  "InputEvent": {
    "kind": "Property",
    "name": "InputEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<InputEventInit>)]",
        "returnType": "InputEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "InputEvent"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "dataTransfer",
        "isStatic": true,
        "returnType": "(or DataTransfer null)"
      },
      {
        "kind": "Property",
        "name": "inputType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "isComposing",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "getTargetRanges",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array StaticRange)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype InputEvent}) (new [type<string> (optional eventInitDict<InputEventInit>)] InputEvent)}"
  },
  "IntersectionObserver": {
    "kind": "Property",
    "name": "IntersectionObserver",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[callback<IntersectionObserverCallback> (optional options<IntersectionObserverInit>)]",
        "returnType": "IntersectionObserver"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IntersectionObserver"
      },
      {
        "kind": "Property",
        "name": "root",
        "isStatic": true,
        "returnType": "(or Element Document null)"
      },
      {
        "kind": "Property",
        "name": "rootMargin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "thresholds",
        "isStatic": true,
        "returnType": "ReadonlyArray<number>"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "observe",
        "isStatic": false,
        "params": "[target<Element>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "takeRecords",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array IntersectionObserverEntry)"
      },
      {
        "kind": "Method",
        "name": "unobserve",
        "isStatic": false,
        "params": "[target<Element>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IntersectionObserver}) (new [callback<IntersectionObserverCallback> (optional options<IntersectionObserverInit>)] IntersectionObserver)}"
  },
  "IntersectionObserverEntry": {
    "kind": "Property",
    "name": "IntersectionObserverEntry",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "IntersectionObserverEntry"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "IntersectionObserverEntry"
      },
      {
        "kind": "Property",
        "name": "boundingClientRect",
        "isStatic": true,
        "returnType": "DOMRectReadOnly"
      },
      {
        "kind": "Property",
        "name": "intersectionRatio",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "intersectionRect",
        "isStatic": true,
        "returnType": "DOMRectReadOnly"
      },
      {
        "kind": "Property",
        "name": "isIntersecting",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "rootBounds",
        "isStatic": true,
        "returnType": "(or DOMRectReadOnly null)"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "Element"
      },
      {
        "kind": "Property",
        "name": "time",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype IntersectionObserverEntry}) (new [] IntersectionObserverEntry)}"
  },
  "KeyboardEvent": {
    "kind": "Property",
    "name": "KeyboardEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<KeyboardEventInit>)]",
        "returnType": "KeyboardEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "KeyboardEvent"
      },
      {
        "kind": "Property",
        "name": "DOM_KEY_LOCATION_STANDARD",
        "isStatic": false,
        "returnType": "0x00"
      },
      {
        "kind": "Property",
        "name": "DOM_KEY_LOCATION_LEFT",
        "isStatic": false,
        "returnType": "0x01"
      },
      {
        "kind": "Property",
        "name": "DOM_KEY_LOCATION_RIGHT",
        "isStatic": false,
        "returnType": "0x02"
      },
      {
        "kind": "Property",
        "name": "DOM_KEY_LOCATION_NUMPAD",
        "isStatic": false,
        "returnType": "0x03"
      },
      {
        "kind": "Property",
        "name": "altKey",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "charCode",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "code",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ctrlKey",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "isComposing",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "key",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "keyCode",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "location",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "metaKey",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "repeat",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "shiftKey",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "DOM_KEY_LOCATION_STANDARD",
        "isStatic": true,
        "returnType": "0x00"
      },
      {
        "kind": "Property",
        "name": "DOM_KEY_LOCATION_LEFT",
        "isStatic": true,
        "returnType": "0x01"
      },
      {
        "kind": "Property",
        "name": "DOM_KEY_LOCATION_RIGHT",
        "isStatic": true,
        "returnType": "0x02"
      },
      {
        "kind": "Property",
        "name": "DOM_KEY_LOCATION_NUMPAD",
        "isStatic": true,
        "returnType": "0x03"
      },
      {
        "kind": "Method",
        "name": "getModifierState",
        "isStatic": false,
        "params": "[keyArg<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "initKeyboardEvent",
        "isStatic": false,
        "params": "[typeArg<string> (optional bubblesArg<boolean>) (optional cancelableArg<boolean>) (optional viewArg<(or Window null)>) (optional keyArg<string>) (optional locationArg<number>) (optional ctrlKey<boolean>) (optional altKey<boolean>) (optional shiftKey<boolean>) (optional metaKey<boolean>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype KeyboardEvent}) (new [type<string> (optional eventInitDict<KeyboardEventInit>)] KeyboardEvent) (property {:DOM_KEY_LOCATION_STANDARD 0x00}) (property {:DOM_KEY_LOCATION_LEFT 0x01}) (property {:DOM_KEY_LOCATION_RIGHT 0x02}) (property {:DOM_KEY_LOCATION_NUMPAD 0x03})}"
  },
  "KeyframeEffect": {
    "kind": "Property",
    "name": "KeyframeEffect",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[target<(or Element null)> keyframes<(or (array Keyframe) PropertyIndexedKeyframes null)> (optional options<(or number KeyframeEffectOptions)>)]",
        "returnType": "KeyframeEffect"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[source<KeyframeEffect>]",
        "returnType": "KeyframeEffect"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "KeyframeEffect"
      },
      {
        "kind": "Property",
        "name": "composite",
        "isStatic": true,
        "returnType": "CompositeOperation"
      },
      {
        "kind": "Property",
        "name": "iterationComposite",
        "isStatic": true,
        "returnType": "IterationCompositeOperation"
      },
      {
        "kind": "Property",
        "name": "pseudoElement",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "(or Element null)"
      },
      {
        "kind": "Method",
        "name": "getKeyframes",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array ComputedKeyframe)"
      },
      {
        "kind": "Method",
        "name": "setKeyframes",
        "isStatic": false,
        "params": "[keyframes<(or (array Keyframe) PropertyIndexedKeyframes null)>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype KeyframeEffect}) (new [target<(or Element null)> keyframes<(or (array Keyframe) PropertyIndexedKeyframes null)> (optional options<(or number KeyframeEffectOptions)>)] KeyframeEffect) (new [source<KeyframeEffect>] KeyframeEffect)}"
  },
  "LargestContentfulPaint": {
    "kind": "Property",
    "name": "LargestContentfulPaint",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "LargestContentfulPaint"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "LargestContentfulPaint"
      },
      {
        "kind": "Property",
        "name": "element",
        "isStatic": true,
        "returnType": "(or Element null)"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "loadTime",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "renderTime",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype LargestContentfulPaint}) (new [] LargestContentfulPaint)}"
  },
  "Location": {
    "kind": "Property",
    "name": "Location",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Location"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Location"
      },
      {
        "kind": "Property",
        "name": "ancestorOrigins",
        "isStatic": true,
        "returnType": "DOMStringList"
      },
      {
        "kind": "Property",
        "name": "hash",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "host",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "hostname",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "href",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "origin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pathname",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "port",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "protocol",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "search",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "assign",
        "isStatic": false,
        "params": "[url<(or string URL)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reload",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "replace",
        "isStatic": false,
        "params": "[url<(or string URL)>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Location}) (new [] Location)}"
  },
  "Lock": {
    "kind": "Property",
    "name": "Lock",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Lock"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Lock"
      },
      {
        "kind": "Property",
        "name": "mode",
        "isStatic": true,
        "returnType": "LockMode"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Lock"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Lock"
      },
      {
        "kind": "Property",
        "name": "mode",
        "isStatic": true,
        "returnType": "LockMode"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Lock}) (new [] Lock)}"
  },
  "LockManager": {
    "kind": "Property",
    "name": "LockManager",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "LockManager"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "LockManager"
      },
      {
        "kind": "Method",
        "name": "query",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<LockManagerSnapshot>"
      },
      {
        "kind": "Method",
        "name": "request",
        "isStatic": false,
        "params": "[name<string> callback<LockGrantedCallback>]",
        "returnType": "Promise<any>"
      },
      {
        "kind": "Method",
        "name": "request",
        "isStatic": false,
        "params": "[name<string> options<LockOptions> callback<LockGrantedCallback>]",
        "returnType": "Promise<any>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "LockManager"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "LockManager"
      },
      {
        "kind": "Method",
        "name": "query",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<LockManagerSnapshot>"
      },
      {
        "kind": "Method",
        "name": "request",
        "isStatic": false,
        "params": "[name<string> callback<LockGrantedCallback>]",
        "returnType": "Promise<any>"
      },
      {
        "kind": "Method",
        "name": "request",
        "isStatic": false,
        "params": "[name<string> options<LockOptions> callback<LockGrantedCallback>]",
        "returnType": "Promise<any>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype LockManager}) (new [] LockManager)}"
  },
  "MIDIAccess": {
    "kind": "Property",
    "name": "MIDIAccess",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MIDIAccess"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MIDIAccess"
      },
      {
        "kind": "Property",
        "name": "inputs",
        "isStatic": true,
        "returnType": "MIDIInputMap"
      },
      {
        "kind": "Property",
        "name": "onstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<MIDIAccess> ev<MIDIConnectionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "outputs",
        "isStatic": true,
        "returnType": "MIDIOutputMap"
      },
      {
        "kind": "Property",
        "name": "sysexEnabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MIDIAccess> ev<(get MIDIAccessEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MIDIAccess> ev<(get MIDIAccessEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MIDIAccess}) (new [] MIDIAccess)}"
  },
  "MIDIConnectionEvent": {
    "kind": "Property",
    "name": "MIDIConnectionEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<MIDIConnectionEventInit>)]",
        "returnType": "MIDIConnectionEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MIDIConnectionEvent"
      },
      {
        "kind": "Property",
        "name": "port",
        "isStatic": true,
        "returnType": "(or MIDIPort null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MIDIConnectionEvent}) (new [type<string> (optional eventInitDict<MIDIConnectionEventInit>)] MIDIConnectionEvent)}"
  },
  "MIDIInput": {
    "kind": "Property",
    "name": "MIDIInput",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MIDIInput"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MIDIInput"
      },
      {
        "kind": "Property",
        "name": "onmidimessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<MIDIInput> ev<MIDIMessageEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MIDIInput> ev<(get MIDIInputEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MIDIInput> ev<(get MIDIInputEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MIDIInput}) (new [] MIDIInput)}"
  },
  "MIDIInputMap": {
    "kind": "Property",
    "name": "MIDIInputMap",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MIDIInputMap"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MIDIInputMap"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<MIDIInput> key<string> parent<MIDIInputMap>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MIDIInputMap}) (new [] MIDIInputMap)}"
  },
  "MIDIMessageEvent": {
    "kind": "Property",
    "name": "MIDIMessageEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<MIDIMessageEventInit>)]",
        "returnType": "MIDIMessageEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MIDIMessageEvent"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "(or Uint8Array null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MIDIMessageEvent}) (new [type<string> (optional eventInitDict<MIDIMessageEventInit>)] MIDIMessageEvent)}"
  },
  "MIDIOutput": {
    "kind": "Property",
    "name": "MIDIOutput",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MIDIOutput"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MIDIOutput"
      },
      {
        "kind": "Method",
        "name": "send",
        "isStatic": false,
        "params": "[data<(array number)> (optional timestamp<DOMHighResTimeStamp>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MIDIOutput> ev<(get MIDIPortEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MIDIOutput> ev<(get MIDIPortEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "send",
        "isStatic": false,
        "params": "[data<Iterable<number>> (optional timestamp<DOMHighResTimeStamp>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MIDIOutput}) (new [] MIDIOutput)}"
  },
  "MIDIOutputMap": {
    "kind": "Property",
    "name": "MIDIOutputMap",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MIDIOutputMap"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MIDIOutputMap"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<MIDIOutput> key<string> parent<MIDIOutputMap>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MIDIOutputMap}) (new [] MIDIOutputMap)}"
  },
  "MIDIPort": {
    "kind": "Property",
    "name": "MIDIPort",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MIDIPort"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MIDIPort"
      },
      {
        "kind": "Property",
        "name": "connection",
        "isStatic": true,
        "returnType": "MIDIPortConnectionState"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "manufacturer",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "onstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<MIDIPort> ev<MIDIConnectionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "MIDIPortDeviceState"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "MIDIPortType"
      },
      {
        "kind": "Property",
        "name": "version",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<MIDIPort>"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<MIDIPort>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MIDIPort> ev<(get MIDIPortEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MIDIPort> ev<(get MIDIPortEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MIDIPort}) (new [] MIDIPort)}"
  },
  "MathMLElement": {
    "kind": "Property",
    "name": "MathMLElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MathMLElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MathMLElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MathMLElement> ev<(get MathMLElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MathMLElement> ev<(get MathMLElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MathMLElement}) (new [] MathMLElement)}"
  },
  "MediaCapabilities": {
    "kind": "Property",
    "name": "MediaCapabilities",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaCapabilities"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaCapabilities"
      },
      {
        "kind": "Method",
        "name": "decodingInfo",
        "isStatic": false,
        "params": "[configuration<MediaDecodingConfiguration>]",
        "returnType": "Promise<MediaCapabilitiesDecodingInfo>"
      },
      {
        "kind": "Method",
        "name": "encodingInfo",
        "isStatic": false,
        "params": "[configuration<MediaEncodingConfiguration>]",
        "returnType": "Promise<MediaCapabilitiesEncodingInfo>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaCapabilities"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaCapabilities"
      },
      {
        "kind": "Method",
        "name": "decodingInfo",
        "isStatic": false,
        "params": "[configuration<MediaDecodingConfiguration>]",
        "returnType": "Promise<MediaCapabilitiesDecodingInfo>"
      },
      {
        "kind": "Method",
        "name": "encodingInfo",
        "isStatic": false,
        "params": "[configuration<MediaEncodingConfiguration>]",
        "returnType": "Promise<MediaCapabilitiesEncodingInfo>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaCapabilities}) (new [] MediaCapabilities)}"
  },
  "MediaDeviceInfo": {
    "kind": "Property",
    "name": "MediaDeviceInfo",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaDeviceInfo"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaDeviceInfo"
      },
      {
        "kind": "Property",
        "name": "deviceId",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "groupId",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "kind",
        "isStatic": true,
        "returnType": "MediaDeviceKind"
      },
      {
        "kind": "Property",
        "name": "label",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaDeviceInfo}) (new [] MediaDeviceInfo)}"
  },
  "MediaDevices": {
    "kind": "Property",
    "name": "MediaDevices",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaDevices"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaDevices"
      },
      {
        "kind": "Property",
        "name": "ondevicechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaDevices> ev<Event>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "enumerateDevices",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<(array MediaDeviceInfo)>"
      },
      {
        "kind": "Method",
        "name": "getDisplayMedia",
        "isStatic": false,
        "params": "[(optional options<DisplayMediaStreamOptions>)]",
        "returnType": "Promise<MediaStream>"
      },
      {
        "kind": "Method",
        "name": "getSupportedConstraints",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaTrackSupportedConstraints"
      },
      {
        "kind": "Method",
        "name": "getUserMedia",
        "isStatic": false,
        "params": "[(optional constraints<MediaStreamConstraints>)]",
        "returnType": "Promise<MediaStream>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaDevices> ev<(get MediaDevicesEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaDevices> ev<(get MediaDevicesEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaDevices}) (new [] MediaDevices)}"
  },
  "MediaElementAudioSourceNode": {
    "kind": "Property",
    "name": "MediaElementAudioSourceNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<AudioContext> options<MediaElementAudioSourceOptions>]",
        "returnType": "MediaElementAudioSourceNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaElementAudioSourceNode"
      },
      {
        "kind": "Property",
        "name": "mediaElement",
        "isStatic": true,
        "returnType": "HTMLMediaElement"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaElementAudioSourceNode}) (new [context<AudioContext> options<MediaElementAudioSourceOptions>] MediaElementAudioSourceNode)}"
  },
  "MediaEncryptedEvent": {
    "kind": "Property",
    "name": "MediaEncryptedEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<MediaEncryptedEventInit>)]",
        "returnType": "MediaEncryptedEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaEncryptedEvent"
      },
      {
        "kind": "Property",
        "name": "initData",
        "isStatic": true,
        "returnType": "(or ArrayBuffer null)"
      },
      {
        "kind": "Property",
        "name": "initDataType",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaEncryptedEvent}) (new [type<string> (optional eventInitDict<MediaEncryptedEventInit>)] MediaEncryptedEvent)}"
  },
  "MediaError": {
    "kind": "Property",
    "name": "MediaError",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaError"
      },
      {
        "kind": "Property",
        "name": "MEDIA_ERR_ABORTED",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "MEDIA_ERR_NETWORK",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "MEDIA_ERR_DECODE",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "MEDIA_ERR_SRC_NOT_SUPPORTED",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "code",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "message",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "MEDIA_ERR_ABORTED",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "MEDIA_ERR_NETWORK",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "MEDIA_ERR_DECODE",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "MEDIA_ERR_SRC_NOT_SUPPORTED",
        "isStatic": true,
        "returnType": "4"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaError}) (new [] MediaError) (property {:MEDIA_ERR_ABORTED 1}) (property {:MEDIA_ERR_NETWORK 2}) (property {:MEDIA_ERR_DECODE 3}) (property {:MEDIA_ERR_SRC_NOT_SUPPORTED 4})}"
  },
  "MediaKeyMessageEvent": {
    "kind": "Property",
    "name": "MediaKeyMessageEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<MediaKeyMessageEventInit>]",
        "returnType": "MediaKeyMessageEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaKeyMessageEvent"
      },
      {
        "kind": "Property",
        "name": "message",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "messageType",
        "isStatic": true,
        "returnType": "MediaKeyMessageType"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaKeyMessageEvent}) (new [type<string> eventInitDict<MediaKeyMessageEventInit>] MediaKeyMessageEvent)}"
  },
  "MediaKeySession": {
    "kind": "Property",
    "name": "MediaKeySession",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaKeySession"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaKeySession"
      },
      {
        "kind": "Property",
        "name": "closed",
        "isStatic": true,
        "returnType": "Promise<MediaKeySessionClosedReason>"
      },
      {
        "kind": "Property",
        "name": "expiration",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "keyStatuses",
        "isStatic": true,
        "returnType": "MediaKeyStatusMap"
      },
      {
        "kind": "Property",
        "name": "onkeystatuseschange",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaKeySession> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaKeySession> ev<MediaKeyMessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "sessionId",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "generateRequest",
        "isStatic": false,
        "params": "[initDataType<string> initData<BufferSource>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "load",
        "isStatic": false,
        "params": "[sessionId<string>]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "remove",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "update",
        "isStatic": false,
        "params": "[response<BufferSource>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaKeySession> ev<(get MediaKeySessionEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaKeySession> ev<(get MediaKeySessionEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaKeySession}) (new [] MediaKeySession)}"
  },
  "MediaKeyStatusMap": {
    "kind": "Property",
    "name": "MediaKeyStatusMap",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaKeyStatusMap"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaKeyStatusMap"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[keyId<BufferSource>]",
        "returnType": "(or MediaKeyStatus undefined)"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[keyId<BufferSource>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<MediaKeyStatus> key<BufferSource> parent<MediaKeyStatusMap>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaKeyStatusMapIterator<[BufferSource MediaKeyStatus]>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaKeyStatusMapIterator<[BufferSource MediaKeyStatus]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaKeyStatusMapIterator<BufferSource>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaKeyStatusMapIterator<MediaKeyStatus>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaKeyStatusMap}) (new [] MediaKeyStatusMap)}"
  },
  "MediaKeySystemAccess": {
    "kind": "Property",
    "name": "MediaKeySystemAccess",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaKeySystemAccess"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaKeySystemAccess"
      },
      {
        "kind": "Property",
        "name": "keySystem",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "createMediaKeys",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<MediaKeys>"
      },
      {
        "kind": "Method",
        "name": "getConfiguration",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaKeySystemConfiguration"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaKeySystemAccess}) (new [] MediaKeySystemAccess)}"
  },
  "MediaKeys": {
    "kind": "Property",
    "name": "MediaKeys",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaKeys"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaKeys"
      },
      {
        "kind": "Method",
        "name": "createSession",
        "isStatic": false,
        "params": "[(optional sessionType<MediaKeySessionType>)]",
        "returnType": "MediaKeySession"
      },
      {
        "kind": "Method",
        "name": "getStatusForPolicy",
        "isStatic": false,
        "params": "[(optional policy<MediaKeysPolicy>)]",
        "returnType": "Promise<MediaKeyStatus>"
      },
      {
        "kind": "Method",
        "name": "setServerCertificate",
        "isStatic": false,
        "params": "[serverCertificate<BufferSource>]",
        "returnType": "Promise<boolean>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaKeys}) (new [] MediaKeys)}"
  },
  "MediaList": {
    "kind": "Property",
    "name": "MediaList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "mediaText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "appendMedium",
        "isStatic": false,
        "params": "[medium<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteMedium",
        "isStatic": false,
        "params": "[medium<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<string>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaList}) (new [] MediaList)}"
  },
  "MediaMetadata": {
    "kind": "Property",
    "name": "MediaMetadata",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional init<MediaMetadataInit>)]",
        "returnType": "MediaMetadata"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaMetadata"
      },
      {
        "kind": "Property",
        "name": "album",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "artist",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "artwork",
        "isStatic": true,
        "returnType": "ReadonlyArray<MediaImage>"
      },
      {
        "kind": "Property",
        "name": "title",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaMetadata}) (new [(optional init<MediaMetadataInit>)] MediaMetadata)}"
  },
  "MediaQueryList": {
    "kind": "Property",
    "name": "MediaQueryList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaQueryList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaQueryList"
      },
      {
        "kind": "Property",
        "name": "matches",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "media",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaQueryList> ev<MediaQueryListEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "addListener",
        "isStatic": false,
        "params": "[callback<(or (list (function [this<MediaQueryList> ev<MediaQueryListEvent>])<any>) null)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeListener",
        "isStatic": false,
        "params": "[callback<(or (list (function [this<MediaQueryList> ev<MediaQueryListEvent>])<any>) null)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaQueryList> ev<(get MediaQueryListEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaQueryList> ev<(get MediaQueryListEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaQueryList}) (new [] MediaQueryList)}"
  },
  "MediaQueryListEvent": {
    "kind": "Property",
    "name": "MediaQueryListEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<MediaQueryListEventInit>)]",
        "returnType": "MediaQueryListEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaQueryListEvent"
      },
      {
        "kind": "Property",
        "name": "matches",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "media",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaQueryListEvent}) (new [type<string> (optional eventInitDict<MediaQueryListEventInit>)] MediaQueryListEvent)}"
  },
  "MediaRecorder": {
    "kind": "Property",
    "name": "MediaRecorder",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[stream<MediaStream> (optional options<MediaRecorderOptions>)]",
        "returnType": "MediaRecorder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaRecorder"
      },
      {
        "kind": "Method",
        "name": "isTypeSupported",
        "isStatic": false,
        "params": "[type<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "audioBitsPerSecond",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "mimeType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ondataavailable",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaRecorder> ev<BlobEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaRecorder> ev<ErrorEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpause",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaRecorder> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onresume",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaRecorder> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onstart",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaRecorder> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onstop",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaRecorder> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "RecordingState"
      },
      {
        "kind": "Property",
        "name": "stream",
        "isStatic": true,
        "returnType": "MediaStream"
      },
      {
        "kind": "Property",
        "name": "videoBitsPerSecond",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "pause",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "requestData",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resume",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "start",
        "isStatic": false,
        "params": "[(optional timeslice<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stop",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaRecorder> ev<(get MediaRecorderEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaRecorder> ev<(get MediaRecorderEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaRecorder}) (new [stream<MediaStream> (optional options<MediaRecorderOptions>)] MediaRecorder) (method [type<string>])<boolean>}"
  },
  "MediaSession": {
    "kind": "Property",
    "name": "MediaSession",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaSession"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaSession"
      },
      {
        "kind": "Property",
        "name": "metadata",
        "isStatic": true,
        "returnType": "(or MediaMetadata null)"
      },
      {
        "kind": "Property",
        "name": "playbackState",
        "isStatic": true,
        "returnType": "MediaSessionPlaybackState"
      },
      {
        "kind": "Method",
        "name": "setActionHandler",
        "isStatic": false,
        "params": "[action<MediaSessionAction> handler<(or MediaSessionActionHandler null)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPositionState",
        "isStatic": false,
        "params": "[(optional state<MediaPositionState>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaSession}) (new [] MediaSession)}"
  },
  "MediaSource": {
    "kind": "Property",
    "name": "MediaSource",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaSource"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaSource"
      },
      {
        "kind": "Property",
        "name": "canConstructInDedicatedWorker",
        "isStatic": false,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isTypeSupported",
        "isStatic": false,
        "params": "[type<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "activeSourceBuffers",
        "isStatic": true,
        "returnType": "SourceBufferList"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "onsourceclose",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaSource> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onsourceended",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaSource> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onsourceopen",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaSource> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "ReadyState"
      },
      {
        "kind": "Property",
        "name": "sourceBuffers",
        "isStatic": true,
        "returnType": "SourceBufferList"
      },
      {
        "kind": "Method",
        "name": "addSourceBuffer",
        "isStatic": false,
        "params": "[type<string>]",
        "returnType": "SourceBuffer"
      },
      {
        "kind": "Method",
        "name": "clearLiveSeekableRange",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "endOfStream",
        "isStatic": false,
        "params": "[(optional error<EndOfStreamError>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeSourceBuffer",
        "isStatic": false,
        "params": "[sourceBuffer<SourceBuffer>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setLiveSeekableRange",
        "isStatic": false,
        "params": "[start<number> end<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaSource> ev<(get MediaSourceEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaSource> ev<(get MediaSourceEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaSource}) (new [] MediaSource) (property {:canConstructInDedicatedWorker boolean}) (method [type<string>])<boolean>}"
  },
  "MediaSourceHandle": {
    "kind": "Property",
    "name": "MediaSourceHandle",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaSourceHandle"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaSourceHandle"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaSourceHandle"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaSourceHandle"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaSourceHandle}) (new [] MediaSourceHandle)}"
  },
  "MediaStream": {
    "kind": "Property",
    "name": "MediaStream",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaStream"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[stream<MediaStream>]",
        "returnType": "MediaStream"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[tracks<(array MediaStreamTrack)>]",
        "returnType": "MediaStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaStream"
      },
      {
        "kind": "Property",
        "name": "active",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onaddtrack",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaStream> ev<MediaStreamTrackEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onremovetrack",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaStream> ev<MediaStreamTrackEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "addTrack",
        "isStatic": false,
        "params": "[track<MediaStreamTrack>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clone",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaStream"
      },
      {
        "kind": "Method",
        "name": "getAudioTracks",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array MediaStreamTrack)"
      },
      {
        "kind": "Method",
        "name": "getTrackById",
        "isStatic": false,
        "params": "[trackId<string>]",
        "returnType": "(or MediaStreamTrack null)"
      },
      {
        "kind": "Method",
        "name": "getTracks",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array MediaStreamTrack)"
      },
      {
        "kind": "Method",
        "name": "getVideoTracks",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array MediaStreamTrack)"
      },
      {
        "kind": "Method",
        "name": "removeTrack",
        "isStatic": false,
        "params": "[track<MediaStreamTrack>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaStream> ev<(get MediaStreamEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaStream> ev<(get MediaStreamEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaStream}) (new [] MediaStream) (new [stream<MediaStream>] MediaStream) (new [tracks<(array MediaStreamTrack)>] MediaStream)}"
  },
  "MediaStreamAudioDestinationNode": {
    "kind": "Property",
    "name": "MediaStreamAudioDestinationNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<AudioContext> (optional options<AudioNodeOptions>)]",
        "returnType": "MediaStreamAudioDestinationNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaStreamAudioDestinationNode"
      },
      {
        "kind": "Property",
        "name": "stream",
        "isStatic": true,
        "returnType": "MediaStream"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaStreamAudioDestinationNode}) (new [context<AudioContext> (optional options<AudioNodeOptions>)] MediaStreamAudioDestinationNode)}"
  },
  "MediaStreamAudioSourceNode": {
    "kind": "Property",
    "name": "MediaStreamAudioSourceNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<AudioContext> options<MediaStreamAudioSourceOptions>]",
        "returnType": "MediaStreamAudioSourceNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaStreamAudioSourceNode"
      },
      {
        "kind": "Property",
        "name": "mediaStream",
        "isStatic": true,
        "returnType": "MediaStream"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaStreamAudioSourceNode}) (new [context<AudioContext> options<MediaStreamAudioSourceOptions>] MediaStreamAudioSourceNode)}"
  },
  "MediaStreamTrack": {
    "kind": "Property",
    "name": "MediaStreamTrack",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MediaStreamTrack"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaStreamTrack"
      },
      {
        "kind": "Property",
        "name": "contentHint",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "enabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "kind",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "label",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "muted",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "onended",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaStreamTrack> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmute",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaStreamTrack> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onunmute",
        "isStatic": true,
        "returnType": "(or (list (function [this<MediaStreamTrack> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "MediaStreamTrackState"
      },
      {
        "kind": "Method",
        "name": "applyConstraints",
        "isStatic": false,
        "params": "[(optional constraints<MediaTrackConstraints>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "clone",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaStreamTrack"
      },
      {
        "kind": "Method",
        "name": "getCapabilities",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaTrackCapabilities"
      },
      {
        "kind": "Method",
        "name": "getConstraints",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaTrackConstraints"
      },
      {
        "kind": "Method",
        "name": "getSettings",
        "isStatic": false,
        "params": "[]",
        "returnType": "MediaTrackSettings"
      },
      {
        "kind": "Method",
        "name": "stop",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaStreamTrack> ev<(get MediaStreamTrackEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MediaStreamTrack> ev<(get MediaStreamTrackEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaStreamTrack}) (new [] MediaStreamTrack)}"
  },
  "MediaStreamTrackEvent": {
    "kind": "Property",
    "name": "MediaStreamTrackEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<MediaStreamTrackEventInit>]",
        "returnType": "MediaStreamTrackEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaStreamTrackEvent"
      },
      {
        "kind": "Property",
        "name": "track",
        "isStatic": true,
        "returnType": "MediaStreamTrack"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaStreamTrackEvent}) (new [type<string> eventInitDict<MediaStreamTrackEventInit>] MediaStreamTrackEvent)}"
  },
  "MessageChannel": {
    "kind": "Property",
    "name": "MessageChannel",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MessageChannel"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MessageChannel"
      },
      {
        "kind": "Property",
        "name": "port1",
        "isStatic": true,
        "returnType": "MessagePort"
      },
      {
        "kind": "Property",
        "name": "port2",
        "isStatic": true,
        "returnType": "MessagePort"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MessageChannel"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MessageChannel"
      },
      {
        "kind": "Property",
        "name": "port1",
        "isStatic": true,
        "returnType": "MessagePort"
      },
      {
        "kind": "Property",
        "name": "port2",
        "isStatic": true,
        "returnType": "MessagePort"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MessageChannel}) (new [] MessageChannel)}"
  },
  "MessageEvent": {
    "kind": "Property",
    "name": "MessageEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<MessageEventInit<T>>)]",
        "returnType": "MessageEvent<T>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MessageEvent"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "T"
      },
      {
        "kind": "Property",
        "name": "lastEventId",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "origin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ports",
        "isStatic": true,
        "returnType": "ReadonlyArray<MessagePort>"
      },
      {
        "kind": "Property",
        "name": "source",
        "isStatic": true,
        "returnType": "(or MessageEventSource null)"
      },
      {
        "kind": "Method",
        "name": "initMessageEvent",
        "isStatic": false,
        "params": "[type<string> (optional bubbles<boolean>) (optional cancelable<boolean>) (optional data<any>) (optional origin<string>) (optional lastEventId<string>) (optional source<(or MessageEventSource null)>) (optional ports<(array MessagePort)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "initMessageEvent",
        "isStatic": false,
        "params": "[type<string> (optional bubbles<boolean>) (optional cancelable<boolean>) (optional data<any>) (optional origin<string>) (optional lastEventId<string>) (optional source<(or MessageEventSource null)>) (optional ports<Iterable<MessagePort>>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<MessageEventInit<T>>)]",
        "returnType": "MessageEvent<T>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MessageEvent"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "T"
      },
      {
        "kind": "Property",
        "name": "lastEventId",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "origin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ports",
        "isStatic": true,
        "returnType": "ReadonlyArray<MessagePort>"
      },
      {
        "kind": "Property",
        "name": "source",
        "isStatic": true,
        "returnType": "(or MessageEventSource null)"
      },
      {
        "kind": "Method",
        "name": "initMessageEvent",
        "isStatic": false,
        "params": "[type<string> (optional bubbles<boolean>) (optional cancelable<boolean>) (optional data<any>) (optional origin<string>) (optional lastEventId<string>) (optional source<(or MessageEventSource null)>) (optional ports<(array MessagePort)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "initMessageEvent",
        "isStatic": false,
        "params": "[type<string> (optional bubbles<boolean>) (optional cancelable<boolean>) (optional data<any>) (optional origin<string>) (optional lastEventId<string>) (optional source<(or MessageEventSource null)>) (optional ports<Iterable<MessagePort>>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MessageEvent}) (new [type<string> (optional eventInitDict<MessageEventInit<T>>)] MessageEvent<T>)}"
  },
  "MessagePort": {
    "kind": "Property",
    "name": "MessagePort",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MessagePort"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MessagePort"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<MessagePort> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessageerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<MessagePort> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> transfer<(array Transferable)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> (optional options<StructuredSerializeOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "start",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MessagePort> ev<(get MessagePortEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MessagePort> ev<(get MessagePortEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MessagePort"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MessagePort"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<MessagePort> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessageerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<MessagePort> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> transfer<(array Transferable)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> (optional options<StructuredSerializeOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "start",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MessagePort> ev<(get MessagePortEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<MessagePort> ev<(get MessagePortEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MessagePort}) (new [] MessagePort)}"
  },
  "MimeType": {
    "kind": "Property",
    "name": "MimeType",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MimeType"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MimeType"
      },
      {
        "kind": "Property",
        "name": "description",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "enabledPlugin",
        "isStatic": true,
        "returnType": "Plugin"
      },
      {
        "kind": "Property",
        "name": "suffixes",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MimeType}) (new [] MimeType)}"
  },
  "MimeTypeArray": {
    "kind": "Property",
    "name": "MimeTypeArray",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MimeTypeArray"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MimeTypeArray"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or MimeType null)"
      },
      {
        "kind": "Method",
        "name": "namedItem",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or MimeType null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<MimeType>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MimeTypeArray}) (new [] MimeTypeArray)}"
  },
  "MouseEvent": {
    "kind": "Property",
    "name": "MouseEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<MouseEventInit>)]",
        "returnType": "MouseEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MouseEvent"
      },
      {
        "kind": "Property",
        "name": "altKey",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "button",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buttons",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "clientX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "clientY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ctrlKey",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "layerX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "layerY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "metaKey",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "movementX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "movementY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "offsetX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "offsetY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "pageX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "pageY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "relatedTarget",
        "isStatic": true,
        "returnType": "(or EventTarget null)"
      },
      {
        "kind": "Property",
        "name": "screenX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "screenY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "shiftKey",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getModifierState",
        "isStatic": false,
        "params": "[keyArg<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "initMouseEvent",
        "isStatic": false,
        "params": "[typeArg<string> canBubbleArg<boolean> cancelableArg<boolean> viewArg<Window> detailArg<number> screenXArg<number> screenYArg<number> clientXArg<number> clientYArg<number> ctrlKeyArg<boolean> altKeyArg<boolean> shiftKeyArg<boolean> metaKeyArg<boolean> buttonArg<number> relatedTargetArg<(or EventTarget null)>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MouseEvent}) (new [type<string> (optional eventInitDict<MouseEventInit>)] MouseEvent)}"
  },
  "MutationObserver": {
    "kind": "Property",
    "name": "MutationObserver",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[callback<MutationCallback>]",
        "returnType": "MutationObserver"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MutationObserver"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "observe",
        "isStatic": false,
        "params": "[target<Node> (optional options<MutationObserverInit>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "takeRecords",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array MutationRecord)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MutationObserver}) (new [callback<MutationCallback>] MutationObserver)}"
  },
  "MutationRecord": {
    "kind": "Property",
    "name": "MutationRecord",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "MutationRecord"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MutationRecord"
      },
      {
        "kind": "Property",
        "name": "addedNodes",
        "isStatic": true,
        "returnType": "NodeList"
      },
      {
        "kind": "Property",
        "name": "attributeName",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "attributeNamespace",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "nextSibling",
        "isStatic": true,
        "returnType": "(or Node null)"
      },
      {
        "kind": "Property",
        "name": "oldValue",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "previousSibling",
        "isStatic": true,
        "returnType": "(or Node null)"
      },
      {
        "kind": "Property",
        "name": "removedNodes",
        "isStatic": true,
        "returnType": "NodeList"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "Node"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "MutationRecordType"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MutationRecord}) (new [] MutationRecord)}"
  },
  "NamedNodeMap": {
    "kind": "Property",
    "name": "NamedNodeMap",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "NamedNodeMap"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "NamedNodeMap"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getNamedItem",
        "isStatic": false,
        "params": "[qualifiedName<string>]",
        "returnType": "(or Attr null)"
      },
      {
        "kind": "Method",
        "name": "getNamedItemNS",
        "isStatic": false,
        "params": "[namespace<(or string null)> localName<string>]",
        "returnType": "(or Attr null)"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or Attr null)"
      },
      {
        "kind": "Method",
        "name": "removeNamedItem",
        "isStatic": false,
        "params": "[qualifiedName<string>]",
        "returnType": "Attr"
      },
      {
        "kind": "Method",
        "name": "removeNamedItemNS",
        "isStatic": false,
        "params": "[namespace<(or string null)> localName<string>]",
        "returnType": "Attr"
      },
      {
        "kind": "Method",
        "name": "setNamedItem",
        "isStatic": false,
        "params": "[attr<Attr>]",
        "returnType": "(or Attr null)"
      },
      {
        "kind": "Method",
        "name": "setNamedItemNS",
        "isStatic": false,
        "params": "[attr<Attr>]",
        "returnType": "(or Attr null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<Attr>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype NamedNodeMap}) (new [] NamedNodeMap)}"
  },
  "NavigationPreloadManager": {
    "kind": "Property",
    "name": "NavigationPreloadManager",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "NavigationPreloadManager"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "NavigationPreloadManager"
      },
      {
        "kind": "Method",
        "name": "disable",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "enable",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "getState",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<NavigationPreloadState>"
      },
      {
        "kind": "Method",
        "name": "setHeaderValue",
        "isStatic": false,
        "params": "[value<string>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "NavigationPreloadManager"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "NavigationPreloadManager"
      },
      {
        "kind": "Method",
        "name": "disable",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "enable",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "getState",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<NavigationPreloadState>"
      },
      {
        "kind": "Method",
        "name": "setHeaderValue",
        "isStatic": false,
        "params": "[value<string>]",
        "returnType": "Promise<void>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype NavigationPreloadManager}) (new [] NavigationPreloadManager)}"
  },
  "Navigator": {
    "kind": "Property",
    "name": "Navigator",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Navigator"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Navigator"
      },
      {
        "kind": "Property",
        "name": "clipboard",
        "isStatic": true,
        "returnType": "Clipboard"
      },
      {
        "kind": "Property",
        "name": "credentials",
        "isStatic": true,
        "returnType": "CredentialsContainer"
      },
      {
        "kind": "Property",
        "name": "doNotTrack",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "geolocation",
        "isStatic": true,
        "returnType": "Geolocation"
      },
      {
        "kind": "Property",
        "name": "maxTouchPoints",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "mediaCapabilities",
        "isStatic": true,
        "returnType": "MediaCapabilities"
      },
      {
        "kind": "Property",
        "name": "mediaDevices",
        "isStatic": true,
        "returnType": "MediaDevices"
      },
      {
        "kind": "Property",
        "name": "mediaSession",
        "isStatic": true,
        "returnType": "MediaSession"
      },
      {
        "kind": "Property",
        "name": "permissions",
        "isStatic": true,
        "returnType": "Permissions"
      },
      {
        "kind": "Property",
        "name": "serviceWorker",
        "isStatic": true,
        "returnType": "ServiceWorkerContainer"
      },
      {
        "kind": "Property",
        "name": "userActivation",
        "isStatic": true,
        "returnType": "UserActivation"
      },
      {
        "kind": "Property",
        "name": "wakeLock",
        "isStatic": true,
        "returnType": "WakeLock"
      },
      {
        "kind": "Method",
        "name": "canShare",
        "isStatic": false,
        "params": "[(optional data<ShareData>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "getGamepads",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array (list (or Gamepad null)))"
      },
      {
        "kind": "Method",
        "name": "requestMIDIAccess",
        "isStatic": false,
        "params": "[(optional options<MIDIOptions>)]",
        "returnType": "Promise<MIDIAccess>"
      },
      {
        "kind": "Method",
        "name": "requestMediaKeySystemAccess",
        "isStatic": false,
        "params": "[keySystem<string> supportedConfigurations<(array MediaKeySystemConfiguration)>]",
        "returnType": "Promise<MediaKeySystemAccess>"
      },
      {
        "kind": "Method",
        "name": "sendBeacon",
        "isStatic": false,
        "params": "[url<(or string URL)> (optional data<(or BodyInit null)>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "share",
        "isStatic": false,
        "params": "[(optional data<ShareData>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "vibrate",
        "isStatic": false,
        "params": "[pattern<VibratePattern>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "requestMediaKeySystemAccess",
        "isStatic": false,
        "params": "[keySystem<string> supportedConfigurations<Iterable<MediaKeySystemConfiguration>>]",
        "returnType": "Promise<MediaKeySystemAccess>"
      },
      {
        "kind": "Method",
        "name": "vibrate",
        "isStatic": false,
        "params": "[pattern<Iterable<number>>]",
        "returnType": "boolean"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Navigator}) (new [] Navigator)}"
  },
  "Node": {
    "kind": "Property",
    "name": "Node",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Node"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Node"
      },
      {
        "kind": "Property",
        "name": "ELEMENT_NODE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "ATTRIBUTE_NODE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "TEXT_NODE",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "CDATA_SECTION_NODE",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "ENTITY_REFERENCE_NODE",
        "isStatic": false,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "ENTITY_NODE",
        "isStatic": false,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "PROCESSING_INSTRUCTION_NODE",
        "isStatic": false,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "COMMENT_NODE",
        "isStatic": false,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_NODE",
        "isStatic": false,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_TYPE_NODE",
        "isStatic": false,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_FRAGMENT_NODE",
        "isStatic": false,
        "returnType": "11"
      },
      {
        "kind": "Property",
        "name": "NOTATION_NODE",
        "isStatic": false,
        "returnType": "12"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_POSITION_DISCONNECTED",
        "isStatic": false,
        "returnType": "0x01"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_POSITION_PRECEDING",
        "isStatic": false,
        "returnType": "0x02"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_POSITION_FOLLOWING",
        "isStatic": false,
        "returnType": "0x04"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_POSITION_CONTAINS",
        "isStatic": false,
        "returnType": "0x08"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_POSITION_CONTAINED_BY",
        "isStatic": false,
        "returnType": "0x10"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "isStatic": false,
        "returnType": "0x20"
      },
      {
        "kind": "Property",
        "name": "baseURI",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "childNodes",
        "isStatic": true,
        "returnType": "NodeListOf<ChildNode>"
      },
      {
        "kind": "Property",
        "name": "firstChild",
        "isStatic": true,
        "returnType": "(or ChildNode null)"
      },
      {
        "kind": "Property",
        "name": "isConnected",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "lastChild",
        "isStatic": true,
        "returnType": "(or ChildNode null)"
      },
      {
        "kind": "Property",
        "name": "nextSibling",
        "isStatic": true,
        "returnType": "(or ChildNode null)"
      },
      {
        "kind": "Property",
        "name": "nodeName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "nodeType",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "nodeValue",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "ownerDocument",
        "isStatic": true,
        "returnType": "(or Document null)"
      },
      {
        "kind": "Property",
        "name": "parentElement",
        "isStatic": true,
        "returnType": "(or HTMLElement null)"
      },
      {
        "kind": "Property",
        "name": "parentNode",
        "isStatic": true,
        "returnType": "(or ParentNode null)"
      },
      {
        "kind": "Property",
        "name": "previousSibling",
        "isStatic": true,
        "returnType": "(or ChildNode null)"
      },
      {
        "kind": "Property",
        "name": "textContent",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "ELEMENT_NODE",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "ATTRIBUTE_NODE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "TEXT_NODE",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "CDATA_SECTION_NODE",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "ENTITY_REFERENCE_NODE",
        "isStatic": true,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "ENTITY_NODE",
        "isStatic": true,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "PROCESSING_INSTRUCTION_NODE",
        "isStatic": true,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "COMMENT_NODE",
        "isStatic": true,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_NODE",
        "isStatic": true,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_TYPE_NODE",
        "isStatic": true,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_FRAGMENT_NODE",
        "isStatic": true,
        "returnType": "11"
      },
      {
        "kind": "Property",
        "name": "NOTATION_NODE",
        "isStatic": true,
        "returnType": "12"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_POSITION_DISCONNECTED",
        "isStatic": true,
        "returnType": "0x01"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_POSITION_PRECEDING",
        "isStatic": true,
        "returnType": "0x02"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_POSITION_FOLLOWING",
        "isStatic": true,
        "returnType": "0x04"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_POSITION_CONTAINS",
        "isStatic": true,
        "returnType": "0x08"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_POSITION_CONTAINED_BY",
        "isStatic": true,
        "returnType": "0x10"
      },
      {
        "kind": "Property",
        "name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
        "isStatic": true,
        "returnType": "0x20"
      },
      {
        "kind": "Method",
        "name": "appendChild",
        "isStatic": false,
        "params": "[node<T>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "cloneNode",
        "isStatic": false,
        "params": "[(optional deep<boolean>)]",
        "returnType": "Node"
      },
      {
        "kind": "Method",
        "name": "compareDocumentPosition",
        "isStatic": false,
        "params": "[other<Node>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "contains",
        "isStatic": false,
        "params": "[other<(or Node null)>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "getRootNode",
        "isStatic": false,
        "params": "[(optional options<GetRootNodeOptions>)]",
        "returnType": "Node"
      },
      {
        "kind": "Method",
        "name": "hasChildNodes",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "insertBefore",
        "isStatic": false,
        "params": "[node<T> child<(or Node null)>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "isDefaultNamespace",
        "isStatic": false,
        "params": "[namespace<(or string null)>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isEqualNode",
        "isStatic": false,
        "params": "[otherNode<(or Node null)>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isSameNode",
        "isStatic": false,
        "params": "[otherNode<(or Node null)>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "lookupNamespaceURI",
        "isStatic": false,
        "params": "[prefix<(or string null)>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "lookupPrefix",
        "isStatic": false,
        "params": "[namespace<(or string null)>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "normalize",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeChild",
        "isStatic": false,
        "params": "[child<T>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "replaceChild",
        "isStatic": false,
        "params": "[node<Node> child<T>]",
        "returnType": "T"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Node}) (new [] Node) (property {:ELEMENT_NODE 1}) (property {:ATTRIBUTE_NODE 2}) (property {:TEXT_NODE 3}) (property {:CDATA_SECTION_NODE 4}) (property {:ENTITY_REFERENCE_NODE 5}) (property {:ENTITY_NODE 6}) (property {:PROCESSING_INSTRUCTION_NODE 7}) (property {:COMMENT_NODE 8}) (property {:DOCUMENT_NODE 9}) (property {:DOCUMENT_TYPE_NODE 10}) (property {:DOCUMENT_FRAGMENT_NODE 11}) (property {:NOTATION_NODE 12}) (property {:DOCUMENT_POSITION_DISCONNECTED 0x01}) (property {:DOCUMENT_POSITION_PRECEDING 0x02}) (property {:DOCUMENT_POSITION_FOLLOWING 0x04}) (property {:DOCUMENT_POSITION_CONTAINS 0x08}) (property {:DOCUMENT_POSITION_CONTAINED_BY 0x10}) (property {:DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC 0x20})}"
  },
  "NodeIterator": {
    "kind": "Property",
    "name": "NodeIterator",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "NodeIterator"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "NodeIterator"
      },
      {
        "kind": "Property",
        "name": "filter",
        "isStatic": true,
        "returnType": "(or NodeFilter null)"
      },
      {
        "kind": "Property",
        "name": "pointerBeforeReferenceNode",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "referenceNode",
        "isStatic": true,
        "returnType": "Node"
      },
      {
        "kind": "Property",
        "name": "root",
        "isStatic": true,
        "returnType": "Node"
      },
      {
        "kind": "Property",
        "name": "whatToShow",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "detach",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "nextNode",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Node null)"
      },
      {
        "kind": "Method",
        "name": "previousNode",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Node null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype NodeIterator}) (new [] NodeIterator)}"
  },
  "NodeList": {
    "kind": "Property",
    "name": "NodeList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "NodeList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "NodeList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or Node null)"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<Node> key<number> parent<NodeList>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<Node>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number Node]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<Node>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype NodeList}) (new [] NodeList)}"
  },
  "Notification": {
    "kind": "Property",
    "name": "Notification",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[title<string> (optional options<NotificationOptions>)]",
        "returnType": "Notification"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Notification"
      },
      {
        "kind": "Property",
        "name": "permission",
        "isStatic": false,
        "returnType": "NotificationPermission"
      },
      {
        "kind": "Method",
        "name": "requestPermission",
        "isStatic": false,
        "params": "[(optional deprecatedCallback<NotificationPermissionCallback>)]",
        "returnType": "Promise<NotificationPermission>"
      },
      {
        "kind": "Property",
        "name": "badge",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "body",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "dir",
        "isStatic": true,
        "returnType": "NotificationDirection"
      },
      {
        "kind": "Property",
        "name": "icon",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lang",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onclick",
        "isStatic": true,
        "returnType": "(or (list (function [this<Notification> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onclose",
        "isStatic": true,
        "returnType": "(or (list (function [this<Notification> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<Notification> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onshow",
        "isStatic": true,
        "returnType": "(or (list (function [this<Notification> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "requireInteraction",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "silent",
        "isStatic": true,
        "returnType": "(or boolean null)"
      },
      {
        "kind": "Property",
        "name": "tag",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "title",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Notification> ev<(get NotificationEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Notification> ev<(get NotificationEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[title<string> (optional options<NotificationOptions>)]",
        "returnType": "Notification"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Notification"
      },
      {
        "kind": "Property",
        "name": "permission",
        "isStatic": false,
        "returnType": "NotificationPermission"
      },
      {
        "kind": "Property",
        "name": "badge",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "body",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "dir",
        "isStatic": true,
        "returnType": "NotificationDirection"
      },
      {
        "kind": "Property",
        "name": "icon",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lang",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onclick",
        "isStatic": true,
        "returnType": "(or (list (function [this<Notification> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onclose",
        "isStatic": true,
        "returnType": "(or (list (function [this<Notification> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<Notification> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onshow",
        "isStatic": true,
        "returnType": "(or (list (function [this<Notification> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "requireInteraction",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "silent",
        "isStatic": true,
        "returnType": "(or boolean null)"
      },
      {
        "kind": "Property",
        "name": "tag",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "title",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Notification> ev<(get NotificationEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Notification> ev<(get NotificationEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Notification}) (new [title<string> (optional options<NotificationOptions>)] Notification) (property {:permission NotificationPermission}) (method [(optional deprecatedCallback<NotificationPermissionCallback>)])<Promise<NotificationPermission>>}"
  },
  "OfflineAudioCompletionEvent": {
    "kind": "Property",
    "name": "OfflineAudioCompletionEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<OfflineAudioCompletionEventInit>]",
        "returnType": "OfflineAudioCompletionEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "OfflineAudioCompletionEvent"
      },
      {
        "kind": "Property",
        "name": "renderedBuffer",
        "isStatic": true,
        "returnType": "AudioBuffer"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype OfflineAudioCompletionEvent}) (new [type<string> eventInitDict<OfflineAudioCompletionEventInit>] OfflineAudioCompletionEvent)}"
  },
  "OfflineAudioContext": {
    "kind": "Property",
    "name": "OfflineAudioContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[contextOptions<OfflineAudioContextOptions>]",
        "returnType": "OfflineAudioContext"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[numberOfChannels<number> length<number> sampleRate<number>]",
        "returnType": "OfflineAudioContext"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "OfflineAudioContext"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "oncomplete",
        "isStatic": true,
        "returnType": "(or (list (function [this<OfflineAudioContext> ev<OfflineAudioCompletionEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "resume",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "startRendering",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<AudioBuffer>"
      },
      {
        "kind": "Method",
        "name": "suspend",
        "isStatic": false,
        "params": "[suspendTime<number>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<OfflineAudioContext> ev<(get OfflineAudioContextEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<OfflineAudioContext> ev<(get OfflineAudioContextEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype OfflineAudioContext}) (new [contextOptions<OfflineAudioContextOptions>] OfflineAudioContext) (new [numberOfChannels<number> length<number> sampleRate<number>] OfflineAudioContext)}"
  },
  "OffscreenCanvas": {
    "kind": "Property",
    "name": "OffscreenCanvas",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[width<number> height<number>]",
        "returnType": "OffscreenCanvas"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "OffscreenCanvas"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "oncontextlost",
        "isStatic": true,
        "returnType": "(or (list (function [this<OffscreenCanvas> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncontextrestored",
        "isStatic": true,
        "returnType": "(or (list (function [this<OffscreenCanvas> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "convertToBlob",
        "isStatic": false,
        "params": "[(optional options<ImageEncodeOptions>)]",
        "returnType": "Promise<Blob>"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<\"2d\"> (optional options<any>)]",
        "returnType": "(or OffscreenCanvasRenderingContext2D null)"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<\"bitmaprenderer\"> (optional options<any>)]",
        "returnType": "(or ImageBitmapRenderingContext null)"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<\"webgl\"> (optional options<any>)]",
        "returnType": "(or WebGLRenderingContext null)"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<\"webgl2\"> (optional options<any>)]",
        "returnType": "(or WebGL2RenderingContext null)"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<OffscreenRenderingContextId> (optional options<any>)]",
        "returnType": "(or OffscreenRenderingContext null)"
      },
      {
        "kind": "Method",
        "name": "transferToImageBitmap",
        "isStatic": false,
        "params": "[]",
        "returnType": "ImageBitmap"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<OffscreenCanvas> ev<(get OffscreenCanvasEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<OffscreenCanvas> ev<(get OffscreenCanvasEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[width<number> height<number>]",
        "returnType": "OffscreenCanvas"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "OffscreenCanvas"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "oncontextlost",
        "isStatic": true,
        "returnType": "(or (list (function [this<OffscreenCanvas> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oncontextrestored",
        "isStatic": true,
        "returnType": "(or (list (function [this<OffscreenCanvas> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "convertToBlob",
        "isStatic": false,
        "params": "[(optional options<ImageEncodeOptions>)]",
        "returnType": "Promise<Blob>"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<\"2d\"> (optional options<any>)]",
        "returnType": "(or OffscreenCanvasRenderingContext2D null)"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<\"bitmaprenderer\"> (optional options<any>)]",
        "returnType": "(or ImageBitmapRenderingContext null)"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<\"webgl\"> (optional options<any>)]",
        "returnType": "(or WebGLRenderingContext null)"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<\"webgl2\"> (optional options<any>)]",
        "returnType": "(or WebGL2RenderingContext null)"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "isStatic": false,
        "params": "[contextId<OffscreenRenderingContextId> (optional options<any>)]",
        "returnType": "(or OffscreenRenderingContext null)"
      },
      {
        "kind": "Method",
        "name": "transferToImageBitmap",
        "isStatic": false,
        "params": "[]",
        "returnType": "ImageBitmap"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<OffscreenCanvas> ev<(get OffscreenCanvasEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<OffscreenCanvas> ev<(get OffscreenCanvasEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype OffscreenCanvas}) (new [width<number> height<number>] OffscreenCanvas)}"
  },
  "OffscreenCanvasRenderingContext2D": {
    "kind": "Property",
    "name": "OffscreenCanvasRenderingContext2D",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "OffscreenCanvasRenderingContext2D"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "OffscreenCanvasRenderingContext2D"
      },
      {
        "kind": "Property",
        "name": "canvas",
        "isStatic": true,
        "returnType": "OffscreenCanvas"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "OffscreenCanvasRenderingContext2D"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "OffscreenCanvasRenderingContext2D"
      },
      {
        "kind": "Property",
        "name": "canvas",
        "isStatic": true,
        "returnType": "OffscreenCanvas"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype OffscreenCanvasRenderingContext2D}) (new [] OffscreenCanvasRenderingContext2D)}"
  },
  "OscillatorNode": {
    "kind": "Property",
    "name": "OscillatorNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<OscillatorOptions>)]",
        "returnType": "OscillatorNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "OscillatorNode"
      },
      {
        "kind": "Property",
        "name": "detune",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "frequency",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "OscillatorType"
      },
      {
        "kind": "Method",
        "name": "setPeriodicWave",
        "isStatic": false,
        "params": "[periodicWave<PeriodicWave>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<OscillatorNode> ev<(get AudioScheduledSourceNodeEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<OscillatorNode> ev<(get AudioScheduledSourceNodeEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype OscillatorNode}) (new [context<BaseAudioContext> (optional options<OscillatorOptions>)] OscillatorNode)}"
  },
  "OverconstrainedError": {
    "kind": "Property",
    "name": "OverconstrainedError",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[constraint<string> (optional message<string>)]",
        "returnType": "OverconstrainedError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "OverconstrainedError"
      },
      {
        "kind": "Property",
        "name": "constraint",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype OverconstrainedError}) (new [constraint<string> (optional message<string>)] OverconstrainedError)}"
  },
  "PageTransitionEvent": {
    "kind": "Property",
    "name": "PageTransitionEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<PageTransitionEventInit>)]",
        "returnType": "PageTransitionEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PageTransitionEvent"
      },
      {
        "kind": "Property",
        "name": "persisted",
        "isStatic": true,
        "returnType": "boolean"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PageTransitionEvent}) (new [type<string> (optional eventInitDict<PageTransitionEventInit>)] PageTransitionEvent)}"
  },
  "PannerNode": {
    "kind": "Property",
    "name": "PannerNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<PannerOptions>)]",
        "returnType": "PannerNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PannerNode"
      },
      {
        "kind": "Property",
        "name": "coneInnerAngle",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "coneOuterAngle",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "coneOuterGain",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "distanceModel",
        "isStatic": true,
        "returnType": "DistanceModelType"
      },
      {
        "kind": "Property",
        "name": "maxDistance",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "orientationX",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "orientationY",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "orientationZ",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "panningModel",
        "isStatic": true,
        "returnType": "PanningModelType"
      },
      {
        "kind": "Property",
        "name": "positionX",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "positionY",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "positionZ",
        "isStatic": true,
        "returnType": "AudioParam"
      },
      {
        "kind": "Property",
        "name": "refDistance",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "rolloffFactor",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setOrientation",
        "isStatic": false,
        "params": "[x<number> y<number> z<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPosition",
        "isStatic": false,
        "params": "[x<number> y<number> z<number>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PannerNode}) (new [context<BaseAudioContext> (optional options<PannerOptions>)] PannerNode)}"
  },
  "Path2D": {
    "kind": "Property",
    "name": "Path2D",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional path<(or Path2D string)>)]",
        "returnType": "Path2D"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Path2D"
      },
      {
        "kind": "Method",
        "name": "addPath",
        "isStatic": false,
        "params": "[path<Path2D> (optional transform<DOMMatrix2DInit>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional path<(or Path2D string)>)]",
        "returnType": "Path2D"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Path2D"
      },
      {
        "kind": "Method",
        "name": "addPath",
        "isStatic": false,
        "params": "[path<Path2D> (optional transform<DOMMatrix2DInit>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Path2D}) (new [(optional path<(or Path2D string)>)] Path2D)}"
  },
  "PaymentAddress": {
    "kind": "Property",
    "name": "PaymentAddress",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PaymentAddress"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PaymentAddress"
      },
      {
        "kind": "Property",
        "name": "addressLine",
        "isStatic": true,
        "returnType": "ReadonlyArray<string>"
      },
      {
        "kind": "Property",
        "name": "city",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "country",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "dependentLocality",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "organization",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "phone",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "postalCode",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "recipient",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "region",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "sortingCode",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PaymentAddress}) (new [] PaymentAddress)}"
  },
  "PaymentMethodChangeEvent": {
    "kind": "Property",
    "name": "PaymentMethodChangeEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<PaymentMethodChangeEventInit>)]",
        "returnType": "PaymentMethodChangeEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PaymentMethodChangeEvent"
      },
      {
        "kind": "Property",
        "name": "methodDetails",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "methodName",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PaymentMethodChangeEvent}) (new [type<string> (optional eventInitDict<PaymentMethodChangeEventInit>)] PaymentMethodChangeEvent)}"
  },
  "PaymentRequest": {
    "kind": "Property",
    "name": "PaymentRequest",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[methodData<(array PaymentMethodData)> details<PaymentDetailsInit> (optional options<PaymentOptions>)]",
        "returnType": "PaymentRequest"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PaymentRequest"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onpaymentmethodchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<PaymentRequest> ev<PaymentMethodChangeEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onshippingaddresschange",
        "isStatic": true,
        "returnType": "(or (list (function [this<PaymentRequest> ev<PaymentRequestUpdateEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onshippingoptionchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<PaymentRequest> ev<PaymentRequestUpdateEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "shippingAddress",
        "isStatic": true,
        "returnType": "(or PaymentAddress null)"
      },
      {
        "kind": "Property",
        "name": "shippingOption",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "shippingType",
        "isStatic": true,
        "returnType": "(or PaymentShippingType null)"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "canMakePayment",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "show",
        "isStatic": false,
        "params": "[(optional detailsPromise<(or PaymentDetailsUpdate PromiseLike<PaymentDetailsUpdate>)>)]",
        "returnType": "Promise<PaymentResponse>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<PaymentRequest> ev<(get PaymentRequestEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<PaymentRequest> ev<(get PaymentRequestEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PaymentRequest}) (new [methodData<(array PaymentMethodData)> details<PaymentDetailsInit> (optional options<PaymentOptions>)] PaymentRequest)}"
  },
  "PaymentRequestUpdateEvent": {
    "kind": "Property",
    "name": "PaymentRequestUpdateEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<PaymentRequestUpdateEventInit>)]",
        "returnType": "PaymentRequestUpdateEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PaymentRequestUpdateEvent"
      },
      {
        "kind": "Method",
        "name": "updateWith",
        "isStatic": false,
        "params": "[detailsPromise<(or PaymentDetailsUpdate PromiseLike<PaymentDetailsUpdate>)>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PaymentRequestUpdateEvent}) (new [type<string> (optional eventInitDict<PaymentRequestUpdateEventInit>)] PaymentRequestUpdateEvent)}"
  },
  "PaymentResponse": {
    "kind": "Property",
    "name": "PaymentResponse",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PaymentResponse"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PaymentResponse"
      },
      {
        "kind": "Property",
        "name": "details",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "methodName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onpayerdetailchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<PaymentResponse> ev<PaymentRequestUpdateEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "payerEmail",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "payerName",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "payerPhone",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "requestId",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "shippingAddress",
        "isStatic": true,
        "returnType": "(or PaymentAddress null)"
      },
      {
        "kind": "Property",
        "name": "shippingOption",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "complete",
        "isStatic": false,
        "params": "[(optional result<PaymentComplete>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "retry",
        "isStatic": false,
        "params": "[(optional errorFields<PaymentValidationErrors>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<PaymentResponse> ev<(get PaymentResponseEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<PaymentResponse> ev<(get PaymentResponseEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PaymentResponse}) (new [] PaymentResponse)}"
  },
  "Performance": {
    "kind": "Property",
    "name": "Performance",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Performance"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Performance"
      },
      {
        "kind": "Property",
        "name": "eventCounts",
        "isStatic": true,
        "returnType": "EventCounts"
      },
      {
        "kind": "Property",
        "name": "navigation",
        "isStatic": true,
        "returnType": "PerformanceNavigation"
      },
      {
        "kind": "Property",
        "name": "onresourcetimingbufferfull",
        "isStatic": true,
        "returnType": "(or (list (function [this<Performance> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "timeOrigin",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "timing",
        "isStatic": true,
        "returnType": "PerformanceTiming"
      },
      {
        "kind": "Method",
        "name": "clearMarks",
        "isStatic": false,
        "params": "[(optional markName<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearMeasures",
        "isStatic": false,
        "params": "[(optional measureName<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearResourceTimings",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "isStatic": false,
        "params": "[]",
        "returnType": "PerformanceEntryList"
      },
      {
        "kind": "Method",
        "name": "getEntriesByName",
        "isStatic": false,
        "params": "[name<string> (optional type<string>)]",
        "returnType": "PerformanceEntryList"
      },
      {
        "kind": "Method",
        "name": "getEntriesByType",
        "isStatic": false,
        "params": "[type<string>]",
        "returnType": "PerformanceEntryList"
      },
      {
        "kind": "Method",
        "name": "mark",
        "isStatic": false,
        "params": "[markName<string> (optional markOptions<PerformanceMarkOptions>)]",
        "returnType": "PerformanceMark"
      },
      {
        "kind": "Method",
        "name": "measure",
        "isStatic": false,
        "params": "[measureName<string> (optional startOrMeasureOptions<(or string PerformanceMeasureOptions)>) (optional endMark<string>)]",
        "returnType": "PerformanceMeasure"
      },
      {
        "kind": "Method",
        "name": "now",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Method",
        "name": "setResourceTimingBufferSize",
        "isStatic": false,
        "params": "[maxSize<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Performance> ev<(get PerformanceEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Performance> ev<(get PerformanceEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Performance"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Performance"
      },
      {
        "kind": "Property",
        "name": "onresourcetimingbufferfull",
        "isStatic": true,
        "returnType": "(or (list (function [this<Performance> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "timeOrigin",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Method",
        "name": "clearMarks",
        "isStatic": false,
        "params": "[(optional markName<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearMeasures",
        "isStatic": false,
        "params": "[(optional measureName<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearResourceTimings",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "isStatic": false,
        "params": "[]",
        "returnType": "PerformanceEntryList"
      },
      {
        "kind": "Method",
        "name": "getEntriesByName",
        "isStatic": false,
        "params": "[name<string> (optional type<string>)]",
        "returnType": "PerformanceEntryList"
      },
      {
        "kind": "Method",
        "name": "getEntriesByType",
        "isStatic": false,
        "params": "[type<string>]",
        "returnType": "PerformanceEntryList"
      },
      {
        "kind": "Method",
        "name": "mark",
        "isStatic": false,
        "params": "[markName<string> (optional markOptions<PerformanceMarkOptions>)]",
        "returnType": "PerformanceMark"
      },
      {
        "kind": "Method",
        "name": "measure",
        "isStatic": false,
        "params": "[measureName<string> (optional startOrMeasureOptions<(or string PerformanceMeasureOptions)>) (optional endMark<string>)]",
        "returnType": "PerformanceMeasure"
      },
      {
        "kind": "Method",
        "name": "now",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Method",
        "name": "setResourceTimingBufferSize",
        "isStatic": false,
        "params": "[maxSize<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Performance> ev<(get PerformanceEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Performance> ev<(get PerformanceEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Performance}) (new [] Performance)}"
  },
  "PerformanceEntry": {
    "kind": "Property",
    "name": "PerformanceEntry",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceEntry"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceEntry"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "entryType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "startTime",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceEntry"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceEntry"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "entryType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "startTime",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PerformanceEntry}) (new [] PerformanceEntry)}"
  },
  "PerformanceEventTiming": {
    "kind": "Property",
    "name": "PerformanceEventTiming",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceEventTiming"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceEventTiming"
      },
      {
        "kind": "Property",
        "name": "cancelable",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "processingEnd",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "processingStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "(or Node null)"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PerformanceEventTiming}) (new [] PerformanceEventTiming)}"
  },
  "PerformanceMark": {
    "kind": "Property",
    "name": "PerformanceMark",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[markName<string> (optional markOptions<PerformanceMarkOptions>)]",
        "returnType": "PerformanceMark"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceMark"
      },
      {
        "kind": "Property",
        "name": "detail",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[markName<string> (optional markOptions<PerformanceMarkOptions>)]",
        "returnType": "PerformanceMark"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceMark"
      },
      {
        "kind": "Property",
        "name": "detail",
        "isStatic": true,
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PerformanceMark}) (new [markName<string> (optional markOptions<PerformanceMarkOptions>)] PerformanceMark)}"
  },
  "PerformanceMeasure": {
    "kind": "Property",
    "name": "PerformanceMeasure",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceMeasure"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceMeasure"
      },
      {
        "kind": "Property",
        "name": "detail",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceMeasure"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceMeasure"
      },
      {
        "kind": "Property",
        "name": "detail",
        "isStatic": true,
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PerformanceMeasure}) (new [] PerformanceMeasure)}"
  },
  "PerformanceNavigation": {
    "kind": "Property",
    "name": "PerformanceNavigation",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceNavigation"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceNavigation"
      },
      {
        "kind": "Property",
        "name": "TYPE_NAVIGATE",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "TYPE_RELOAD",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "TYPE_BACK_FORWARD",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "TYPE_RESERVED",
        "isStatic": false,
        "returnType": "255"
      },
      {
        "kind": "Property",
        "name": "redirectCount",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "TYPE_NAVIGATE",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "TYPE_RELOAD",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "TYPE_BACK_FORWARD",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "TYPE_RESERVED",
        "isStatic": true,
        "returnType": "255"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PerformanceNavigation}) (new [] PerformanceNavigation) (property {:TYPE_NAVIGATE 0}) (property {:TYPE_RELOAD 1}) (property {:TYPE_BACK_FORWARD 2}) (property {:TYPE_RESERVED 255})}"
  },
  "PerformanceNavigationTiming": {
    "kind": "Property",
    "name": "PerformanceNavigationTiming",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceNavigationTiming"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceNavigationTiming"
      },
      {
        "kind": "Property",
        "name": "domComplete",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "domContentLoadedEventEnd",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "domContentLoadedEventStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "domInteractive",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "loadEventEnd",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "loadEventStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "redirectCount",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "NavigationTimingType"
      },
      {
        "kind": "Property",
        "name": "unloadEventEnd",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "unloadEventStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PerformanceNavigationTiming}) (new [] PerformanceNavigationTiming)}"
  },
  "PerformanceObserver": {
    "kind": "Property",
    "name": "PerformanceObserver",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[callback<PerformanceObserverCallback>]",
        "returnType": "PerformanceObserver"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceObserver"
      },
      {
        "kind": "Property",
        "name": "supportedEntryTypes",
        "isStatic": false,
        "returnType": "ReadonlyArray<string>"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "observe",
        "isStatic": false,
        "params": "[(optional options<PerformanceObserverInit>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "takeRecords",
        "isStatic": false,
        "params": "[]",
        "returnType": "PerformanceEntryList"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[callback<PerformanceObserverCallback>]",
        "returnType": "PerformanceObserver"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceObserver"
      },
      {
        "kind": "Property",
        "name": "supportedEntryTypes",
        "isStatic": false,
        "returnType": "ReadonlyArray<string>"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "observe",
        "isStatic": false,
        "params": "[(optional options<PerformanceObserverInit>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "takeRecords",
        "isStatic": false,
        "params": "[]",
        "returnType": "PerformanceEntryList"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PerformanceObserver}) (new [callback<PerformanceObserverCallback>] PerformanceObserver) (property {:supportedEntryTypes ReadonlyArray<string>})}"
  },
  "PerformanceObserverEntryList": {
    "kind": "Property",
    "name": "PerformanceObserverEntryList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceObserverEntryList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceObserverEntryList"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "isStatic": false,
        "params": "[]",
        "returnType": "PerformanceEntryList"
      },
      {
        "kind": "Method",
        "name": "getEntriesByName",
        "isStatic": false,
        "params": "[name<string> (optional type<string>)]",
        "returnType": "PerformanceEntryList"
      },
      {
        "kind": "Method",
        "name": "getEntriesByType",
        "isStatic": false,
        "params": "[type<string>]",
        "returnType": "PerformanceEntryList"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceObserverEntryList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceObserverEntryList"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "isStatic": false,
        "params": "[]",
        "returnType": "PerformanceEntryList"
      },
      {
        "kind": "Method",
        "name": "getEntriesByName",
        "isStatic": false,
        "params": "[name<string> (optional type<string>)]",
        "returnType": "PerformanceEntryList"
      },
      {
        "kind": "Method",
        "name": "getEntriesByType",
        "isStatic": false,
        "params": "[type<string>]",
        "returnType": "PerformanceEntryList"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PerformanceObserverEntryList}) (new [] PerformanceObserverEntryList)}"
  },
  "PerformancePaintTiming": {
    "kind": "Property",
    "name": "PerformancePaintTiming",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformancePaintTiming"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformancePaintTiming"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PerformancePaintTiming}) (new [] PerformancePaintTiming)}"
  },
  "PerformanceResourceTiming": {
    "kind": "Property",
    "name": "PerformanceResourceTiming",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceResourceTiming"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceResourceTiming"
      },
      {
        "kind": "Property",
        "name": "connectEnd",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "connectStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "decodedBodySize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "domainLookupEnd",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "domainLookupStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "encodedBodySize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "fetchStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "initiatorType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "nextHopProtocol",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "redirectEnd",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "redirectStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "requestStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "responseEnd",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "responseStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "responseStatus",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "secureConnectionStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "serverTiming",
        "isStatic": true,
        "returnType": "ReadonlyArray<PerformanceServerTiming>"
      },
      {
        "kind": "Property",
        "name": "transferSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "workerStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceResourceTiming"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceResourceTiming"
      },
      {
        "kind": "Property",
        "name": "connectEnd",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "connectStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "decodedBodySize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "domainLookupEnd",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "domainLookupStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "encodedBodySize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "fetchStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "initiatorType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "nextHopProtocol",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "redirectEnd",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "redirectStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "requestStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "responseEnd",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "responseStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "responseStatus",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "secureConnectionStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "serverTiming",
        "isStatic": true,
        "returnType": "ReadonlyArray<PerformanceServerTiming>"
      },
      {
        "kind": "Property",
        "name": "transferSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "workerStart",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PerformanceResourceTiming}) (new [] PerformanceResourceTiming)}"
  },
  "PerformanceServerTiming": {
    "kind": "Property",
    "name": "PerformanceServerTiming",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceServerTiming"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceServerTiming"
      },
      {
        "kind": "Property",
        "name": "description",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceServerTiming"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceServerTiming"
      },
      {
        "kind": "Property",
        "name": "description",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PerformanceServerTiming}) (new [] PerformanceServerTiming)}"
  },
  "PerformanceTiming": {
    "kind": "Property",
    "name": "PerformanceTiming",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PerformanceTiming"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PerformanceTiming"
      },
      {
        "kind": "Property",
        "name": "connectEnd",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "connectStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "domComplete",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "domContentLoadedEventEnd",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "domContentLoadedEventStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "domInteractive",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "domLoading",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "domainLookupEnd",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "domainLookupStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "fetchStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "loadEventEnd",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "loadEventStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "navigationStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "redirectEnd",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "redirectStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "requestStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "responseEnd",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "responseStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "secureConnectionStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "unloadEventEnd",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "unloadEventStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PerformanceTiming}) (new [] PerformanceTiming)}"
  },
  "PeriodicWave": {
    "kind": "Property",
    "name": "PeriodicWave",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<PeriodicWaveOptions>)]",
        "returnType": "PeriodicWave"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PeriodicWave"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PeriodicWave}) (new [context<BaseAudioContext> (optional options<PeriodicWaveOptions>)] PeriodicWave)}"
  },
  "PermissionStatus": {
    "kind": "Property",
    "name": "PermissionStatus",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PermissionStatus"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PermissionStatus"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<PermissionStatus> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "PermissionState"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<PermissionStatus> ev<(get PermissionStatusEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<PermissionStatus> ev<(get PermissionStatusEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PermissionStatus"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PermissionStatus"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<PermissionStatus> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "PermissionState"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<PermissionStatus> ev<(get PermissionStatusEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<PermissionStatus> ev<(get PermissionStatusEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PermissionStatus}) (new [] PermissionStatus)}"
  },
  "Permissions": {
    "kind": "Property",
    "name": "Permissions",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Permissions"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Permissions"
      },
      {
        "kind": "Method",
        "name": "query",
        "isStatic": false,
        "params": "[permissionDesc<PermissionDescriptor>]",
        "returnType": "Promise<PermissionStatus>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Permissions"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Permissions"
      },
      {
        "kind": "Method",
        "name": "query",
        "isStatic": false,
        "params": "[permissionDesc<PermissionDescriptor>]",
        "returnType": "Promise<PermissionStatus>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Permissions}) (new [] Permissions)}"
  },
  "PictureInPictureEvent": {
    "kind": "Property",
    "name": "PictureInPictureEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<PictureInPictureEventInit>]",
        "returnType": "PictureInPictureEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PictureInPictureEvent"
      },
      {
        "kind": "Property",
        "name": "pictureInPictureWindow",
        "isStatic": true,
        "returnType": "PictureInPictureWindow"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PictureInPictureEvent}) (new [type<string> eventInitDict<PictureInPictureEventInit>] PictureInPictureEvent)}"
  },
  "PictureInPictureWindow": {
    "kind": "Property",
    "name": "PictureInPictureWindow",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PictureInPictureWindow"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PictureInPictureWindow"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "onresize",
        "isStatic": true,
        "returnType": "(or (list (function [this<PictureInPictureWindow> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<PictureInPictureWindow> ev<(get PictureInPictureWindowEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<PictureInPictureWindow> ev<(get PictureInPictureWindowEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PictureInPictureWindow}) (new [] PictureInPictureWindow)}"
  },
  "Plugin": {
    "kind": "Property",
    "name": "Plugin",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Plugin"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Plugin"
      },
      {
        "kind": "Property",
        "name": "description",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "filename",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or MimeType null)"
      },
      {
        "kind": "Method",
        "name": "namedItem",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or MimeType null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<MimeType>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Plugin}) (new [] Plugin)}"
  },
  "PluginArray": {
    "kind": "Property",
    "name": "PluginArray",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PluginArray"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PluginArray"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or Plugin null)"
      },
      {
        "kind": "Method",
        "name": "namedItem",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or Plugin null)"
      },
      {
        "kind": "Method",
        "name": "refresh",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<Plugin>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PluginArray}) (new [] PluginArray)}"
  },
  "PointerEvent": {
    "kind": "Property",
    "name": "PointerEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<PointerEventInit>)]",
        "returnType": "PointerEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PointerEvent"
      },
      {
        "kind": "Property",
        "name": "altitudeAngle",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "azimuthAngle",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "isPrimary",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "pointerId",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "pointerType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pressure",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "tangentialPressure",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "tiltX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "tiltY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "twist",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getCoalescedEvents",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array PointerEvent)"
      },
      {
        "kind": "Method",
        "name": "getPredictedEvents",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array PointerEvent)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PointerEvent}) (new [type<string> (optional eventInitDict<PointerEventInit>)] PointerEvent)}"
  },
  "PopStateEvent": {
    "kind": "Property",
    "name": "PopStateEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<PopStateEventInit>)]",
        "returnType": "PopStateEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PopStateEvent"
      },
      {
        "kind": "Property",
        "name": "hasUAVisualTransition",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PopStateEvent}) (new [type<string> (optional eventInitDict<PopStateEventInit>)] PopStateEvent)}"
  },
  "ProcessingInstruction": {
    "kind": "Property",
    "name": "ProcessingInstruction",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ProcessingInstruction"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ProcessingInstruction"
      },
      {
        "kind": "Property",
        "name": "ownerDocument",
        "isStatic": true,
        "returnType": "Document"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ProcessingInstruction}) (new [] ProcessingInstruction)}"
  },
  "ProgressEvent": {
    "kind": "Property",
    "name": "ProgressEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<ProgressEventInit>)]",
        "returnType": "ProgressEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ProgressEvent"
      },
      {
        "kind": "Property",
        "name": "lengthComputable",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "loaded",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "(or T null)"
      },
      {
        "kind": "Property",
        "name": "total",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<ProgressEventInit>)]",
        "returnType": "ProgressEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ProgressEvent"
      },
      {
        "kind": "Property",
        "name": "lengthComputable",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "loaded",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "(or T null)"
      },
      {
        "kind": "Property",
        "name": "total",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ProgressEvent}) (new [type<string> (optional eventInitDict<ProgressEventInit>)] ProgressEvent)}"
  },
  "PromiseRejectionEvent": {
    "kind": "Property",
    "name": "PromiseRejectionEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<PromiseRejectionEventInit>]",
        "returnType": "PromiseRejectionEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PromiseRejectionEvent"
      },
      {
        "kind": "Property",
        "name": "promise",
        "isStatic": true,
        "returnType": "Promise<any>"
      },
      {
        "kind": "Property",
        "name": "reason",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<PromiseRejectionEventInit>]",
        "returnType": "PromiseRejectionEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PromiseRejectionEvent"
      },
      {
        "kind": "Property",
        "name": "promise",
        "isStatic": true,
        "returnType": "Promise<any>"
      },
      {
        "kind": "Property",
        "name": "reason",
        "isStatic": true,
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PromiseRejectionEvent}) (new [type<string> eventInitDict<PromiseRejectionEventInit>] PromiseRejectionEvent)}"
  },
  "PublicKeyCredential": {
    "kind": "Property",
    "name": "PublicKeyCredential",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PublicKeyCredential"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PublicKeyCredential"
      },
      {
        "kind": "Method",
        "name": "isConditionalMediationAvailable",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "isUserVerifyingPlatformAuthenticatorAvailable",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "parseCreationOptionsFromJSON",
        "isStatic": false,
        "params": "[options<PublicKeyCredentialCreationOptionsJSON>]",
        "returnType": "PublicKeyCredentialCreationOptions"
      },
      {
        "kind": "Method",
        "name": "parseRequestOptionsFromJSON",
        "isStatic": false,
        "params": "[options<PublicKeyCredentialRequestOptionsJSON>]",
        "returnType": "PublicKeyCredentialRequestOptions"
      },
      {
        "kind": "Property",
        "name": "authenticatorAttachment",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "rawId",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "response",
        "isStatic": true,
        "returnType": "AuthenticatorResponse"
      },
      {
        "kind": "Method",
        "name": "getClientExtensionResults",
        "isStatic": false,
        "params": "[]",
        "returnType": "AuthenticationExtensionsClientOutputs"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "PublicKeyCredentialJSON"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PublicKeyCredential}) (new [] PublicKeyCredential) (method [])<Promise<boolean>> (method [])<Promise<boolean>> (method [options<PublicKeyCredentialCreationOptionsJSON>])<PublicKeyCredentialCreationOptions> (method [options<PublicKeyCredentialRequestOptionsJSON>])<PublicKeyCredentialRequestOptions>}"
  },
  "PushManager": {
    "kind": "Property",
    "name": "PushManager",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PushManager"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PushManager"
      },
      {
        "kind": "Property",
        "name": "supportedContentEncodings",
        "isStatic": false,
        "returnType": "ReadonlyArray<string>"
      },
      {
        "kind": "Method",
        "name": "getSubscription",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<(or PushSubscription null)>"
      },
      {
        "kind": "Method",
        "name": "permissionState",
        "isStatic": false,
        "params": "[(optional options<PushSubscriptionOptionsInit>)]",
        "returnType": "Promise<PermissionState>"
      },
      {
        "kind": "Method",
        "name": "subscribe",
        "isStatic": false,
        "params": "[(optional options<PushSubscriptionOptionsInit>)]",
        "returnType": "Promise<PushSubscription>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PushManager"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PushManager"
      },
      {
        "kind": "Property",
        "name": "supportedContentEncodings",
        "isStatic": false,
        "returnType": "ReadonlyArray<string>"
      },
      {
        "kind": "Method",
        "name": "getSubscription",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<(or PushSubscription null)>"
      },
      {
        "kind": "Method",
        "name": "permissionState",
        "isStatic": false,
        "params": "[(optional options<PushSubscriptionOptionsInit>)]",
        "returnType": "Promise<PermissionState>"
      },
      {
        "kind": "Method",
        "name": "subscribe",
        "isStatic": false,
        "params": "[(optional options<PushSubscriptionOptionsInit>)]",
        "returnType": "Promise<PushSubscription>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PushManager}) (new [] PushManager) (property {:supportedContentEncodings ReadonlyArray<string>})}"
  },
  "PushSubscription": {
    "kind": "Property",
    "name": "PushSubscription",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PushSubscription"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PushSubscription"
      },
      {
        "kind": "Property",
        "name": "endpoint",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "expirationTime",
        "isStatic": true,
        "returnType": "(or EpochTimeStamp null)"
      },
      {
        "kind": "Property",
        "name": "options",
        "isStatic": true,
        "returnType": "PushSubscriptionOptions"
      },
      {
        "kind": "Method",
        "name": "getKey",
        "isStatic": false,
        "params": "[name<PushEncryptionKeyName>]",
        "returnType": "(or ArrayBuffer null)"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "PushSubscriptionJSON"
      },
      {
        "kind": "Method",
        "name": "unsubscribe",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PushSubscription"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PushSubscription"
      },
      {
        "kind": "Property",
        "name": "endpoint",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "expirationTime",
        "isStatic": true,
        "returnType": "(or EpochTimeStamp null)"
      },
      {
        "kind": "Property",
        "name": "options",
        "isStatic": true,
        "returnType": "PushSubscriptionOptions"
      },
      {
        "kind": "Method",
        "name": "getKey",
        "isStatic": false,
        "params": "[name<PushEncryptionKeyName>]",
        "returnType": "(or ArrayBuffer null)"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "PushSubscriptionJSON"
      },
      {
        "kind": "Method",
        "name": "unsubscribe",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<boolean>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PushSubscription}) (new [] PushSubscription)}"
  },
  "PushSubscriptionOptions": {
    "kind": "Property",
    "name": "PushSubscriptionOptions",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PushSubscriptionOptions"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PushSubscriptionOptions"
      },
      {
        "kind": "Property",
        "name": "applicationServerKey",
        "isStatic": true,
        "returnType": "(or ArrayBuffer null)"
      },
      {
        "kind": "Property",
        "name": "userVisibleOnly",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PushSubscriptionOptions"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PushSubscriptionOptions"
      },
      {
        "kind": "Property",
        "name": "applicationServerKey",
        "isStatic": true,
        "returnType": "(or ArrayBuffer null)"
      },
      {
        "kind": "Property",
        "name": "userVisibleOnly",
        "isStatic": true,
        "returnType": "boolean"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PushSubscriptionOptions}) (new [] PushSubscriptionOptions)}"
  },
  "RTCCertificate": {
    "kind": "Property",
    "name": "RTCCertificate",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCCertificate"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCCertificate"
      },
      {
        "kind": "Property",
        "name": "expires",
        "isStatic": true,
        "returnType": "EpochTimeStamp"
      },
      {
        "kind": "Method",
        "name": "getFingerprints",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array RTCDtlsFingerprint)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCCertificate}) (new [] RTCCertificate)}"
  },
  "RTCDTMFSender": {
    "kind": "Property",
    "name": "RTCDTMFSender",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCDTMFSender"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCDTMFSender"
      },
      {
        "kind": "Property",
        "name": "canInsertDTMF",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "ontonechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCDTMFSender> ev<RTCDTMFToneChangeEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "toneBuffer",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "insertDTMF",
        "isStatic": false,
        "params": "[tones<string> (optional duration<number>) (optional interToneGap<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RTCDTMFSender> ev<(get RTCDTMFSenderEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RTCDTMFSender> ev<(get RTCDTMFSenderEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCDTMFSender}) (new [] RTCDTMFSender)}"
  },
  "RTCDTMFToneChangeEvent": {
    "kind": "Property",
    "name": "RTCDTMFToneChangeEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<RTCDTMFToneChangeEventInit>)]",
        "returnType": "RTCDTMFToneChangeEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCDTMFToneChangeEvent"
      },
      {
        "kind": "Property",
        "name": "tone",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCDTMFToneChangeEvent}) (new [type<string> (optional eventInitDict<RTCDTMFToneChangeEventInit>)] RTCDTMFToneChangeEvent)}"
  },
  "RTCDataChannel": {
    "kind": "Property",
    "name": "RTCDataChannel",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCDataChannel"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCDataChannel"
      },
      {
        "kind": "Property",
        "name": "binaryType",
        "isStatic": true,
        "returnType": "BinaryType"
      },
      {
        "kind": "Property",
        "name": "bufferedAmount",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "bufferedAmountLowThreshold",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "label",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "maxPacketLifeTime",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "maxRetransmits",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "negotiated",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "onbufferedamountlow",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCDataChannel> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onclose",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCDataChannel> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onclosing",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCDataChannel> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCDataChannel> ev<RTCErrorEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCDataChannel> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onopen",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCDataChannel> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ordered",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "protocol",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "RTCDataChannelState"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "send",
        "isStatic": false,
        "params": "[data<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "send",
        "isStatic": false,
        "params": "[data<Blob>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "send",
        "isStatic": false,
        "params": "[data<ArrayBuffer>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "send",
        "isStatic": false,
        "params": "[data<ArrayBufferView>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RTCDataChannel> ev<(get RTCDataChannelEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RTCDataChannel> ev<(get RTCDataChannelEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCDataChannel}) (new [] RTCDataChannel)}"
  },
  "RTCDataChannelEvent": {
    "kind": "Property",
    "name": "RTCDataChannelEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<RTCDataChannelEventInit>]",
        "returnType": "RTCDataChannelEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCDataChannelEvent"
      },
      {
        "kind": "Property",
        "name": "channel",
        "isStatic": true,
        "returnType": "RTCDataChannel"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCDataChannelEvent}) (new [type<string> eventInitDict<RTCDataChannelEventInit>] RTCDataChannelEvent)}"
  },
  "RTCDtlsTransport": {
    "kind": "Property",
    "name": "RTCDtlsTransport",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCDtlsTransport"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCDtlsTransport"
      },
      {
        "kind": "Property",
        "name": "iceTransport",
        "isStatic": true,
        "returnType": "RTCIceTransport"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCDtlsTransport> ev<RTCErrorEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCDtlsTransport> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "RTCDtlsTransportState"
      },
      {
        "kind": "Method",
        "name": "getRemoteCertificates",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array ArrayBuffer)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RTCDtlsTransport> ev<(get RTCDtlsTransportEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RTCDtlsTransport> ev<(get RTCDtlsTransportEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCDtlsTransport}) (new [] RTCDtlsTransport)}"
  },
  "RTCEncodedAudioFrame": {
    "kind": "Property",
    "name": "RTCEncodedAudioFrame",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCEncodedAudioFrame"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCEncodedAudioFrame"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getMetadata",
        "isStatic": false,
        "params": "[]",
        "returnType": "RTCEncodedAudioFrameMetadata"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCEncodedAudioFrame"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCEncodedAudioFrame"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getMetadata",
        "isStatic": false,
        "params": "[]",
        "returnType": "RTCEncodedAudioFrameMetadata"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCEncodedAudioFrame}) (new [] RTCEncodedAudioFrame)}"
  },
  "RTCEncodedVideoFrame": {
    "kind": "Property",
    "name": "RTCEncodedVideoFrame",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCEncodedVideoFrame"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCEncodedVideoFrame"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "RTCEncodedVideoFrameType"
      },
      {
        "kind": "Method",
        "name": "getMetadata",
        "isStatic": false,
        "params": "[]",
        "returnType": "RTCEncodedVideoFrameMetadata"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCEncodedVideoFrame"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCEncodedVideoFrame"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "RTCEncodedVideoFrameType"
      },
      {
        "kind": "Method",
        "name": "getMetadata",
        "isStatic": false,
        "params": "[]",
        "returnType": "RTCEncodedVideoFrameMetadata"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCEncodedVideoFrame}) (new [] RTCEncodedVideoFrame)}"
  },
  "RTCError": {
    "kind": "Property",
    "name": "RTCError",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<RTCErrorInit> (optional message<string>)]",
        "returnType": "RTCError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCError"
      },
      {
        "kind": "Property",
        "name": "errorDetail",
        "isStatic": true,
        "returnType": "RTCErrorDetailType"
      },
      {
        "kind": "Property",
        "name": "receivedAlert",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "sctpCauseCode",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "sdpLineNumber",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "sentAlert",
        "isStatic": true,
        "returnType": "(or number null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCError}) (new [init<RTCErrorInit> (optional message<string>)] RTCError)}"
  },
  "RTCErrorEvent": {
    "kind": "Property",
    "name": "RTCErrorEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<RTCErrorEventInit>]",
        "returnType": "RTCErrorEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCErrorEvent"
      },
      {
        "kind": "Property",
        "name": "error",
        "isStatic": true,
        "returnType": "RTCError"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCErrorEvent}) (new [type<string> eventInitDict<RTCErrorEventInit>] RTCErrorEvent)}"
  },
  "RTCIceCandidate": {
    "kind": "Property",
    "name": "RTCIceCandidate",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional candidateInitDict<RTCIceCandidateInit>)]",
        "returnType": "RTCIceCandidate"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCIceCandidate"
      },
      {
        "kind": "Property",
        "name": "address",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "candidate",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "component",
        "isStatic": true,
        "returnType": "(or RTCIceComponent null)"
      },
      {
        "kind": "Property",
        "name": "foundation",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "port",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "priority",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "protocol",
        "isStatic": true,
        "returnType": "(or RTCIceProtocol null)"
      },
      {
        "kind": "Property",
        "name": "relatedAddress",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "relatedPort",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "sdpMLineIndex",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "sdpMid",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "tcpType",
        "isStatic": true,
        "returnType": "(or RTCIceTcpCandidateType null)"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "(or RTCIceCandidateType null)"
      },
      {
        "kind": "Property",
        "name": "usernameFragment",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "RTCIceCandidateInit"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCIceCandidate}) (new [(optional candidateInitDict<RTCIceCandidateInit>)] RTCIceCandidate)}"
  },
  "RTCIceTransport": {
    "kind": "Property",
    "name": "RTCIceTransport",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCIceTransport"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCIceTransport"
      },
      {
        "kind": "Property",
        "name": "gatheringState",
        "isStatic": true,
        "returnType": "RTCIceGathererState"
      },
      {
        "kind": "Property",
        "name": "ongatheringstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCIceTransport> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onselectedcandidatepairchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCIceTransport> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCIceTransport> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "RTCIceTransportState"
      },
      {
        "kind": "Method",
        "name": "getSelectedCandidatePair",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or RTCIceCandidatePair null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RTCIceTransport> ev<(get RTCIceTransportEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RTCIceTransport> ev<(get RTCIceTransportEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCIceTransport}) (new [] RTCIceTransport)}"
  },
  "RTCPeerConnection": {
    "kind": "Property",
    "name": "RTCPeerConnection",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional configuration<RTCConfiguration>)]",
        "returnType": "RTCPeerConnection"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCPeerConnection"
      },
      {
        "kind": "Method",
        "name": "generateCertificate",
        "isStatic": false,
        "params": "[keygenAlgorithm<AlgorithmIdentifier>]",
        "returnType": "Promise<RTCCertificate>"
      },
      {
        "kind": "Property",
        "name": "canTrickleIceCandidates",
        "isStatic": true,
        "returnType": "(or boolean null)"
      },
      {
        "kind": "Property",
        "name": "connectionState",
        "isStatic": true,
        "returnType": "RTCPeerConnectionState"
      },
      {
        "kind": "Property",
        "name": "currentLocalDescription",
        "isStatic": true,
        "returnType": "(or RTCSessionDescription null)"
      },
      {
        "kind": "Property",
        "name": "currentRemoteDescription",
        "isStatic": true,
        "returnType": "(or RTCSessionDescription null)"
      },
      {
        "kind": "Property",
        "name": "iceConnectionState",
        "isStatic": true,
        "returnType": "RTCIceConnectionState"
      },
      {
        "kind": "Property",
        "name": "iceGatheringState",
        "isStatic": true,
        "returnType": "RTCIceGatheringState"
      },
      {
        "kind": "Property",
        "name": "localDescription",
        "isStatic": true,
        "returnType": "(or RTCSessionDescription null)"
      },
      {
        "kind": "Property",
        "name": "onconnectionstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCPeerConnection> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondatachannel",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCPeerConnection> ev<RTCDataChannelEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onicecandidate",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCPeerConnection> ev<RTCPeerConnectionIceEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onicecandidateerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCPeerConnection> ev<RTCPeerConnectionIceErrorEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oniceconnectionstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCPeerConnection> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onicegatheringstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCPeerConnection> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onnegotiationneeded",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCPeerConnection> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onsignalingstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCPeerConnection> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ontrack",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCPeerConnection> ev<RTCTrackEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "pendingLocalDescription",
        "isStatic": true,
        "returnType": "(or RTCSessionDescription null)"
      },
      {
        "kind": "Property",
        "name": "pendingRemoteDescription",
        "isStatic": true,
        "returnType": "(or RTCSessionDescription null)"
      },
      {
        "kind": "Property",
        "name": "remoteDescription",
        "isStatic": true,
        "returnType": "(or RTCSessionDescription null)"
      },
      {
        "kind": "Property",
        "name": "sctp",
        "isStatic": true,
        "returnType": "(or RTCSctpTransport null)"
      },
      {
        "kind": "Property",
        "name": "signalingState",
        "isStatic": true,
        "returnType": "RTCSignalingState"
      },
      {
        "kind": "Method",
        "name": "addIceCandidate",
        "isStatic": false,
        "params": "[(optional candidate<(or RTCIceCandidateInit null)>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addIceCandidate",
        "isStatic": false,
        "params": "[candidate<(or RTCIceCandidateInit null)> successCallback<VoidFunction> failureCallback<RTCPeerConnectionErrorCallback>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addTrack",
        "isStatic": false,
        "params": "[track<MediaStreamTrack> (& rest<streams<(array MediaStream)>>)]",
        "returnType": "RTCRtpSender"
      },
      {
        "kind": "Method",
        "name": "addTransceiver",
        "isStatic": false,
        "params": "[trackOrKind<(or MediaStreamTrack string)> (optional init<RTCRtpTransceiverInit>)]",
        "returnType": "RTCRtpTransceiver"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createAnswer",
        "isStatic": false,
        "params": "[(optional options<RTCAnswerOptions>)]",
        "returnType": "Promise<RTCSessionDescriptionInit>"
      },
      {
        "kind": "Method",
        "name": "createAnswer",
        "isStatic": false,
        "params": "[successCallback<RTCSessionDescriptionCallback> failureCallback<RTCPeerConnectionErrorCallback>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "createDataChannel",
        "isStatic": false,
        "params": "[label<string> (optional dataChannelDict<RTCDataChannelInit>)]",
        "returnType": "RTCDataChannel"
      },
      {
        "kind": "Method",
        "name": "createOffer",
        "isStatic": false,
        "params": "[(optional options<RTCOfferOptions>)]",
        "returnType": "Promise<RTCSessionDescriptionInit>"
      },
      {
        "kind": "Method",
        "name": "createOffer",
        "isStatic": false,
        "params": "[successCallback<RTCSessionDescriptionCallback> failureCallback<RTCPeerConnectionErrorCallback> (optional options<RTCOfferOptions>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "getConfiguration",
        "isStatic": false,
        "params": "[]",
        "returnType": "RTCConfiguration"
      },
      {
        "kind": "Method",
        "name": "getReceivers",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array RTCRtpReceiver)"
      },
      {
        "kind": "Method",
        "name": "getSenders",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array RTCRtpSender)"
      },
      {
        "kind": "Method",
        "name": "getStats",
        "isStatic": false,
        "params": "[(optional selector<(or MediaStreamTrack null)>)]",
        "returnType": "Promise<RTCStatsReport>"
      },
      {
        "kind": "Method",
        "name": "getTransceivers",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array RTCRtpTransceiver)"
      },
      {
        "kind": "Method",
        "name": "removeTrack",
        "isStatic": false,
        "params": "[sender<RTCRtpSender>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "restartIce",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setConfiguration",
        "isStatic": false,
        "params": "[(optional configuration<RTCConfiguration>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setLocalDescription",
        "isStatic": false,
        "params": "[(optional description<RTCLocalSessionDescriptionInit>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "setLocalDescription",
        "isStatic": false,
        "params": "[description<RTCLocalSessionDescriptionInit> successCallback<VoidFunction> failureCallback<RTCPeerConnectionErrorCallback>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "setRemoteDescription",
        "isStatic": false,
        "params": "[description<RTCSessionDescriptionInit>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "setRemoteDescription",
        "isStatic": false,
        "params": "[description<RTCSessionDescriptionInit> successCallback<VoidFunction> failureCallback<RTCPeerConnectionErrorCallback>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RTCPeerConnection> ev<(get RTCPeerConnectionEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RTCPeerConnection> ev<(get RTCPeerConnectionEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCPeerConnection}) (new [(optional configuration<RTCConfiguration>)] RTCPeerConnection) (method [keygenAlgorithm<AlgorithmIdentifier>])<Promise<RTCCertificate>>}"
  },
  "RTCPeerConnectionIceErrorEvent": {
    "kind": "Property",
    "name": "RTCPeerConnectionIceErrorEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<RTCPeerConnectionIceErrorEventInit>]",
        "returnType": "RTCPeerConnectionIceErrorEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCPeerConnectionIceErrorEvent"
      },
      {
        "kind": "Property",
        "name": "address",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "errorCode",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "errorText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "port",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCPeerConnectionIceErrorEvent}) (new [type<string> eventInitDict<RTCPeerConnectionIceErrorEventInit>] RTCPeerConnectionIceErrorEvent)}"
  },
  "RTCPeerConnectionIceEvent": {
    "kind": "Property",
    "name": "RTCPeerConnectionIceEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<RTCPeerConnectionIceEventInit>)]",
        "returnType": "RTCPeerConnectionIceEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCPeerConnectionIceEvent"
      },
      {
        "kind": "Property",
        "name": "candidate",
        "isStatic": true,
        "returnType": "(or RTCIceCandidate null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCPeerConnectionIceEvent}) (new [type<string> (optional eventInitDict<RTCPeerConnectionIceEventInit>)] RTCPeerConnectionIceEvent)}"
  },
  "RTCRtpReceiver": {
    "kind": "Property",
    "name": "RTCRtpReceiver",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCRtpReceiver"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCRtpReceiver"
      },
      {
        "kind": "Method",
        "name": "getCapabilities",
        "isStatic": false,
        "params": "[kind<string>]",
        "returnType": "(or RTCRtpCapabilities null)"
      },
      {
        "kind": "Property",
        "name": "jitterBufferTarget",
        "isStatic": true,
        "returnType": "(or DOMHighResTimeStamp null)"
      },
      {
        "kind": "Property",
        "name": "track",
        "isStatic": true,
        "returnType": "MediaStreamTrack"
      },
      {
        "kind": "Property",
        "name": "transform",
        "isStatic": true,
        "returnType": "(or RTCRtpTransform null)"
      },
      {
        "kind": "Property",
        "name": "transport",
        "isStatic": true,
        "returnType": "(or RTCDtlsTransport null)"
      },
      {
        "kind": "Method",
        "name": "getContributingSources",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array RTCRtpContributingSource)"
      },
      {
        "kind": "Method",
        "name": "getParameters",
        "isStatic": false,
        "params": "[]",
        "returnType": "RTCRtpReceiveParameters"
      },
      {
        "kind": "Method",
        "name": "getStats",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<RTCStatsReport>"
      },
      {
        "kind": "Method",
        "name": "getSynchronizationSources",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array RTCRtpSynchronizationSource)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCRtpReceiver}) (new [] RTCRtpReceiver) (method [kind<string>])<(or RTCRtpCapabilities null)>}"
  },
  "RTCRtpScriptTransform": {
    "kind": "Property",
    "name": "RTCRtpScriptTransform",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[worker<Worker> (optional options<any>) (optional transfer<(array any)>)]",
        "returnType": "RTCRtpScriptTransform"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCRtpScriptTransform"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCRtpScriptTransform}) (new [worker<Worker> (optional options<any>) (optional transfer<(array any)>)] RTCRtpScriptTransform)}"
  },
  "RTCRtpSender": {
    "kind": "Property",
    "name": "RTCRtpSender",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCRtpSender"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCRtpSender"
      },
      {
        "kind": "Method",
        "name": "getCapabilities",
        "isStatic": false,
        "params": "[kind<string>]",
        "returnType": "(or RTCRtpCapabilities null)"
      },
      {
        "kind": "Property",
        "name": "dtmf",
        "isStatic": true,
        "returnType": "(or RTCDTMFSender null)"
      },
      {
        "kind": "Property",
        "name": "track",
        "isStatic": true,
        "returnType": "(or MediaStreamTrack null)"
      },
      {
        "kind": "Property",
        "name": "transform",
        "isStatic": true,
        "returnType": "(or RTCRtpTransform null)"
      },
      {
        "kind": "Property",
        "name": "transport",
        "isStatic": true,
        "returnType": "(or RTCDtlsTransport null)"
      },
      {
        "kind": "Method",
        "name": "getParameters",
        "isStatic": false,
        "params": "[]",
        "returnType": "RTCRtpSendParameters"
      },
      {
        "kind": "Method",
        "name": "getStats",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<RTCStatsReport>"
      },
      {
        "kind": "Method",
        "name": "replaceTrack",
        "isStatic": false,
        "params": "[withTrack<(or MediaStreamTrack null)>]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "setParameters",
        "isStatic": false,
        "params": "[parameters<RTCRtpSendParameters> (optional setParameterOptions<RTCSetParameterOptions>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "setStreams",
        "isStatic": false,
        "params": "[(& rest<streams<(array MediaStream)>>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCRtpSender}) (new [] RTCRtpSender) (method [kind<string>])<(or RTCRtpCapabilities null)>}"
  },
  "RTCRtpTransceiver": {
    "kind": "Property",
    "name": "RTCRtpTransceiver",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCRtpTransceiver"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCRtpTransceiver"
      },
      {
        "kind": "Property",
        "name": "currentDirection",
        "isStatic": true,
        "returnType": "(or RTCRtpTransceiverDirection null)"
      },
      {
        "kind": "Property",
        "name": "direction",
        "isStatic": true,
        "returnType": "RTCRtpTransceiverDirection"
      },
      {
        "kind": "Property",
        "name": "mid",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "receiver",
        "isStatic": true,
        "returnType": "RTCRtpReceiver"
      },
      {
        "kind": "Property",
        "name": "sender",
        "isStatic": true,
        "returnType": "RTCRtpSender"
      },
      {
        "kind": "Method",
        "name": "setCodecPreferences",
        "isStatic": false,
        "params": "[codecs<(array RTCRtpCodec)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stop",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setCodecPreferences",
        "isStatic": false,
        "params": "[codecs<Iterable<RTCRtpCodec>>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCRtpTransceiver}) (new [] RTCRtpTransceiver)}"
  },
  "RTCSctpTransport": {
    "kind": "Property",
    "name": "RTCSctpTransport",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCSctpTransport"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCSctpTransport"
      },
      {
        "kind": "Property",
        "name": "maxChannels",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "maxMessageSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "onstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<RTCSctpTransport> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "RTCSctpTransportState"
      },
      {
        "kind": "Property",
        "name": "transport",
        "isStatic": true,
        "returnType": "RTCDtlsTransport"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RTCSctpTransport> ev<(get RTCSctpTransportEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RTCSctpTransport> ev<(get RTCSctpTransportEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCSctpTransport}) (new [] RTCSctpTransport)}"
  },
  "RTCSessionDescription": {
    "kind": "Property",
    "name": "RTCSessionDescription",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[descriptionInitDict<RTCSessionDescriptionInit>]",
        "returnType": "RTCSessionDescription"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCSessionDescription"
      },
      {
        "kind": "Property",
        "name": "sdp",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "RTCSdpType"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "RTCSessionDescriptionInit"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCSessionDescription}) (new [descriptionInitDict<RTCSessionDescriptionInit>] RTCSessionDescription)}"
  },
  "RTCStatsReport": {
    "kind": "Property",
    "name": "RTCStatsReport",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCStatsReport"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCStatsReport"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<any> key<string> parent<RTCStatsReport>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCStatsReport}) (new [] RTCStatsReport)}"
  },
  "RTCTrackEvent": {
    "kind": "Property",
    "name": "RTCTrackEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<RTCTrackEventInit>]",
        "returnType": "RTCTrackEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCTrackEvent"
      },
      {
        "kind": "Property",
        "name": "receiver",
        "isStatic": true,
        "returnType": "RTCRtpReceiver"
      },
      {
        "kind": "Property",
        "name": "streams",
        "isStatic": true,
        "returnType": "ReadonlyArray<MediaStream>"
      },
      {
        "kind": "Property",
        "name": "track",
        "isStatic": true,
        "returnType": "MediaStreamTrack"
      },
      {
        "kind": "Property",
        "name": "transceiver",
        "isStatic": true,
        "returnType": "RTCRtpTransceiver"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCTrackEvent}) (new [type<string> eventInitDict<RTCTrackEventInit>] RTCTrackEvent)}"
  },
  "RadioNodeList": {
    "kind": "Property",
    "name": "RadioNodeList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RadioNodeList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RadioNodeList"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RadioNodeList}) (new [] RadioNodeList)}"
  },
  "Range": {
    "kind": "Property",
    "name": "Range",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Range"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Range"
      },
      {
        "kind": "Property",
        "name": "START_TO_START",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "START_TO_END",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "END_TO_END",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "END_TO_START",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "commonAncestorContainer",
        "isStatic": true,
        "returnType": "Node"
      },
      {
        "kind": "Property",
        "name": "START_TO_START",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "START_TO_END",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "END_TO_END",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "END_TO_START",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Method",
        "name": "cloneContents",
        "isStatic": false,
        "params": "[]",
        "returnType": "DocumentFragment"
      },
      {
        "kind": "Method",
        "name": "cloneRange",
        "isStatic": false,
        "params": "[]",
        "returnType": "Range"
      },
      {
        "kind": "Method",
        "name": "collapse",
        "isStatic": false,
        "params": "[(optional toStart<boolean>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "compareBoundaryPoints",
        "isStatic": false,
        "params": "[how<number> sourceRange<Range>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "comparePoint",
        "isStatic": false,
        "params": "[node<Node> offset<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "createContextualFragment",
        "isStatic": false,
        "params": "[string<string>]",
        "returnType": "DocumentFragment"
      },
      {
        "kind": "Method",
        "name": "deleteContents",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "detach",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "extractContents",
        "isStatic": false,
        "params": "[]",
        "returnType": "DocumentFragment"
      },
      {
        "kind": "Method",
        "name": "getBoundingClientRect",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMRect"
      },
      {
        "kind": "Method",
        "name": "getClientRects",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMRectList"
      },
      {
        "kind": "Method",
        "name": "insertNode",
        "isStatic": false,
        "params": "[node<Node>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "intersectsNode",
        "isStatic": false,
        "params": "[node<Node>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isPointInRange",
        "isStatic": false,
        "params": "[node<Node> offset<number>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "selectNode",
        "isStatic": false,
        "params": "[node<Node>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "selectNodeContents",
        "isStatic": false,
        "params": "[node<Node>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setEnd",
        "isStatic": false,
        "params": "[node<Node> offset<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setEndAfter",
        "isStatic": false,
        "params": "[node<Node>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setEndBefore",
        "isStatic": false,
        "params": "[node<Node>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setStart",
        "isStatic": false,
        "params": "[node<Node> offset<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setStartAfter",
        "isStatic": false,
        "params": "[node<Node>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setStartBefore",
        "isStatic": false,
        "params": "[node<Node>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "surroundContents",
        "isStatic": false,
        "params": "[newParent<Node>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Range}) (new [] Range) (property {:START_TO_START 0}) (property {:START_TO_END 1}) (property {:END_TO_END 2}) (property {:END_TO_START 3})}"
  },
  "ReadableByteStreamController": {
    "kind": "Property",
    "name": "ReadableByteStreamController",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ReadableByteStreamController"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReadableByteStreamController"
      },
      {
        "kind": "Property",
        "name": "byobRequest",
        "isStatic": true,
        "returnType": "(or ReadableStreamBYOBRequest null)"
      },
      {
        "kind": "Property",
        "name": "desiredSize",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "enqueue",
        "isStatic": false,
        "params": "[chunk<ArrayBufferView>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "error",
        "isStatic": false,
        "params": "[(optional e<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ReadableByteStreamController"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReadableByteStreamController"
      },
      {
        "kind": "Property",
        "name": "byobRequest",
        "isStatic": true,
        "returnType": "(or ReadableStreamBYOBRequest null)"
      },
      {
        "kind": "Property",
        "name": "desiredSize",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "enqueue",
        "isStatic": false,
        "params": "[chunk<ArrayBufferView>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "error",
        "isStatic": false,
        "params": "[(optional e<any>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ReadableByteStreamController}) (new [] ReadableByteStreamController)}"
  },
  "ReadableStreamBYOBReader": {
    "kind": "Property",
    "name": "ReadableStreamBYOBReader",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[stream<ReadableStream<Uint8Array>>]",
        "returnType": "ReadableStreamBYOBReader"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReadableStreamBYOBReader"
      },
      {
        "kind": "Method",
        "name": "read",
        "isStatic": false,
        "params": "[view<T>]",
        "returnType": "Promise<ReadableStreamReadResult<T>>"
      },
      {
        "kind": "Method",
        "name": "releaseLock",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[stream<ReadableStream<Uint8Array>>]",
        "returnType": "ReadableStreamBYOBReader"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReadableStreamBYOBReader"
      },
      {
        "kind": "Method",
        "name": "read",
        "isStatic": false,
        "params": "[view<T>]",
        "returnType": "Promise<ReadableStreamReadResult<T>>"
      },
      {
        "kind": "Method",
        "name": "releaseLock",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ReadableStreamBYOBReader}) (new [stream<ReadableStream<Uint8Array>>] ReadableStreamBYOBReader)}"
  },
  "ReadableStreamBYOBRequest": {
    "kind": "Property",
    "name": "ReadableStreamBYOBRequest",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ReadableStreamBYOBRequest"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReadableStreamBYOBRequest"
      },
      {
        "kind": "Property",
        "name": "view",
        "isStatic": true,
        "returnType": "(or ArrayBufferView null)"
      },
      {
        "kind": "Method",
        "name": "respond",
        "isStatic": false,
        "params": "[bytesWritten<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "respondWithNewView",
        "isStatic": false,
        "params": "[view<ArrayBufferView>]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ReadableStreamBYOBRequest"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReadableStreamBYOBRequest"
      },
      {
        "kind": "Property",
        "name": "view",
        "isStatic": true,
        "returnType": "(or ArrayBufferView null)"
      },
      {
        "kind": "Method",
        "name": "respond",
        "isStatic": false,
        "params": "[bytesWritten<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "respondWithNewView",
        "isStatic": false,
        "params": "[view<ArrayBufferView>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ReadableStreamBYOBRequest}) (new [] ReadableStreamBYOBRequest)}"
  },
  "ReadableStreamDefaultController": {
    "kind": "Property",
    "name": "ReadableStreamDefaultController",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ReadableStreamDefaultController"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReadableStreamDefaultController"
      },
      {
        "kind": "Property",
        "name": "desiredSize",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "enqueue",
        "isStatic": false,
        "params": "[(optional chunk<R>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "error",
        "isStatic": false,
        "params": "[(optional e<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ReadableStreamDefaultController"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReadableStreamDefaultController"
      },
      {
        "kind": "Property",
        "name": "desiredSize",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "enqueue",
        "isStatic": false,
        "params": "[(optional chunk<R>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "error",
        "isStatic": false,
        "params": "[(optional e<any>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ReadableStreamDefaultController}) (new [] ReadableStreamDefaultController)}"
  },
  "ReadableStreamDefaultReader": {
    "kind": "Property",
    "name": "ReadableStreamDefaultReader",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[stream<ReadableStream<R>>]",
        "returnType": "ReadableStreamDefaultReader<R>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReadableStreamDefaultReader"
      },
      {
        "kind": "Method",
        "name": "read",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<ReadableStreamReadResult<R>>"
      },
      {
        "kind": "Method",
        "name": "releaseLock",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[stream<ReadableStream<R>>]",
        "returnType": "ReadableStreamDefaultReader<R>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReadableStreamDefaultReader"
      },
      {
        "kind": "Method",
        "name": "read",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<ReadableStreamReadResult<R>>"
      },
      {
        "kind": "Method",
        "name": "releaseLock",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ReadableStreamDefaultReader}) (new [stream<ReadableStream<R>>] ReadableStreamDefaultReader<R>)}"
  },
  "RemotePlayback": {
    "kind": "Property",
    "name": "RemotePlayback",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RemotePlayback"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RemotePlayback"
      },
      {
        "kind": "Property",
        "name": "onconnect",
        "isStatic": true,
        "returnType": "(or (list (function [this<RemotePlayback> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onconnecting",
        "isStatic": true,
        "returnType": "(or (list (function [this<RemotePlayback> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondisconnect",
        "isStatic": true,
        "returnType": "(or (list (function [this<RemotePlayback> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "RemotePlaybackState"
      },
      {
        "kind": "Method",
        "name": "cancelWatchAvailability",
        "isStatic": false,
        "params": "[(optional id<number>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "prompt",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "watchAvailability",
        "isStatic": false,
        "params": "[callback<RemotePlaybackAvailabilityCallback>]",
        "returnType": "Promise<number>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RemotePlayback> ev<(get RemotePlaybackEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<RemotePlayback> ev<(get RemotePlaybackEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RemotePlayback}) (new [] RemotePlayback)}"
  },
  "Report": {
    "kind": "Property",
    "name": "Report",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Report"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Report"
      },
      {
        "kind": "Property",
        "name": "body",
        "isStatic": true,
        "returnType": "(or ReportBody null)"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Report"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Report"
      },
      {
        "kind": "Property",
        "name": "body",
        "isStatic": true,
        "returnType": "(or ReportBody null)"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Report}) (new [] Report)}"
  },
  "ReportBody": {
    "kind": "Property",
    "name": "ReportBody",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ReportBody"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReportBody"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ReportBody"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReportBody"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ReportBody}) (new [] ReportBody)}"
  },
  "ReportingObserver": {
    "kind": "Property",
    "name": "ReportingObserver",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[callback<ReportingObserverCallback> (optional options<ReportingObserverOptions>)]",
        "returnType": "ReportingObserver"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReportingObserver"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "observe",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "takeRecords",
        "isStatic": false,
        "params": "[]",
        "returnType": "ReportList"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[callback<ReportingObserverCallback> (optional options<ReportingObserverOptions>)]",
        "returnType": "ReportingObserver"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ReportingObserver"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "observe",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "takeRecords",
        "isStatic": false,
        "params": "[]",
        "returnType": "ReportList"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ReportingObserver}) (new [callback<ReportingObserverCallback> (optional options<ReportingObserverOptions>)] ReportingObserver)}"
  },
  "Request": {
    "kind": "Property",
    "name": "Request",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[input<(or RequestInfo URL)> (optional init<RequestInit>)]",
        "returnType": "Request"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Request"
      },
      {
        "kind": "Property",
        "name": "cache",
        "isStatic": true,
        "returnType": "RequestCache"
      },
      {
        "kind": "Property",
        "name": "credentials",
        "isStatic": true,
        "returnType": "RequestCredentials"
      },
      {
        "kind": "Property",
        "name": "destination",
        "isStatic": true,
        "returnType": "RequestDestination"
      },
      {
        "kind": "Property",
        "name": "headers",
        "isStatic": true,
        "returnType": "Headers"
      },
      {
        "kind": "Property",
        "name": "integrity",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "keepalive",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "method",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "mode",
        "isStatic": true,
        "returnType": "RequestMode"
      },
      {
        "kind": "Property",
        "name": "redirect",
        "isStatic": true,
        "returnType": "RequestRedirect"
      },
      {
        "kind": "Property",
        "name": "referrer",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "referrerPolicy",
        "isStatic": true,
        "returnType": "ReferrerPolicy"
      },
      {
        "kind": "Property",
        "name": "signal",
        "isStatic": true,
        "returnType": "AbortSignal"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "clone",
        "isStatic": false,
        "params": "[]",
        "returnType": "Request"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[input<(or RequestInfo URL)> (optional init<RequestInit>)]",
        "returnType": "Request"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Request"
      },
      {
        "kind": "Property",
        "name": "cache",
        "isStatic": true,
        "returnType": "RequestCache"
      },
      {
        "kind": "Property",
        "name": "credentials",
        "isStatic": true,
        "returnType": "RequestCredentials"
      },
      {
        "kind": "Property",
        "name": "destination",
        "isStatic": true,
        "returnType": "RequestDestination"
      },
      {
        "kind": "Property",
        "name": "headers",
        "isStatic": true,
        "returnType": "Headers"
      },
      {
        "kind": "Property",
        "name": "integrity",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "keepalive",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "method",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "mode",
        "isStatic": true,
        "returnType": "RequestMode"
      },
      {
        "kind": "Property",
        "name": "redirect",
        "isStatic": true,
        "returnType": "RequestRedirect"
      },
      {
        "kind": "Property",
        "name": "referrer",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "referrerPolicy",
        "isStatic": true,
        "returnType": "ReferrerPolicy"
      },
      {
        "kind": "Property",
        "name": "signal",
        "isStatic": true,
        "returnType": "AbortSignal"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "clone",
        "isStatic": false,
        "params": "[]",
        "returnType": "Request"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Request}) (new [input<(or RequestInfo URL)> (optional init<RequestInit>)] Request)}"
  },
  "ResizeObserver": {
    "kind": "Property",
    "name": "ResizeObserver",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[callback<ResizeObserverCallback>]",
        "returnType": "ResizeObserver"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ResizeObserver"
      },
      {
        "kind": "Method",
        "name": "disconnect",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "observe",
        "isStatic": false,
        "params": "[target<Element> (optional options<ResizeObserverOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unobserve",
        "isStatic": false,
        "params": "[target<Element>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ResizeObserver}) (new [callback<ResizeObserverCallback>] ResizeObserver)}"
  },
  "ResizeObserverEntry": {
    "kind": "Property",
    "name": "ResizeObserverEntry",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ResizeObserverEntry"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ResizeObserverEntry"
      },
      {
        "kind": "Property",
        "name": "borderBoxSize",
        "isStatic": true,
        "returnType": "ReadonlyArray<ResizeObserverSize>"
      },
      {
        "kind": "Property",
        "name": "contentBoxSize",
        "isStatic": true,
        "returnType": "ReadonlyArray<ResizeObserverSize>"
      },
      {
        "kind": "Property",
        "name": "contentRect",
        "isStatic": true,
        "returnType": "DOMRectReadOnly"
      },
      {
        "kind": "Property",
        "name": "devicePixelContentBoxSize",
        "isStatic": true,
        "returnType": "ReadonlyArray<ResizeObserverSize>"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "Element"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ResizeObserverEntry}) (new [] ResizeObserverEntry)}"
  },
  "ResizeObserverSize": {
    "kind": "Property",
    "name": "ResizeObserverSize",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ResizeObserverSize"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ResizeObserverSize"
      },
      {
        "kind": "Property",
        "name": "blockSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "inlineSize",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ResizeObserverSize}) (new [] ResizeObserverSize)}"
  },
  "Response": {
    "kind": "Property",
    "name": "Response",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional body<(or BodyInit null)>) (optional init<ResponseInit>)]",
        "returnType": "Response"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Response"
      },
      {
        "kind": "Method",
        "name": "error",
        "isStatic": false,
        "params": "[]",
        "returnType": "Response"
      },
      {
        "kind": "Method",
        "name": "json",
        "isStatic": false,
        "params": "[data<any> (optional init<ResponseInit>)]",
        "returnType": "Response"
      },
      {
        "kind": "Method",
        "name": "redirect",
        "isStatic": false,
        "params": "[url<(or string URL)> (optional status<number>)]",
        "returnType": "Response"
      },
      {
        "kind": "Property",
        "name": "headers",
        "isStatic": true,
        "returnType": "Headers"
      },
      {
        "kind": "Property",
        "name": "ok",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "redirected",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "status",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "statusText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "ResponseType"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "clone",
        "isStatic": false,
        "params": "[]",
        "returnType": "Response"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional body<(or BodyInit null)>) (optional init<ResponseInit>)]",
        "returnType": "Response"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Response"
      },
      {
        "kind": "Method",
        "name": "error",
        "isStatic": false,
        "params": "[]",
        "returnType": "Response"
      },
      {
        "kind": "Method",
        "name": "json",
        "isStatic": false,
        "params": "[data<any> (optional init<ResponseInit>)]",
        "returnType": "Response"
      },
      {
        "kind": "Method",
        "name": "redirect",
        "isStatic": false,
        "params": "[url<(or string URL)> (optional status<number>)]",
        "returnType": "Response"
      },
      {
        "kind": "Property",
        "name": "headers",
        "isStatic": true,
        "returnType": "Headers"
      },
      {
        "kind": "Property",
        "name": "ok",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "redirected",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "status",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "statusText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "ResponseType"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "clone",
        "isStatic": false,
        "params": "[]",
        "returnType": "Response"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Response}) (new [(optional body<(or BodyInit null)>) (optional init<ResponseInit>)] Response) (method [])<Response> (method [data<any> (optional init<ResponseInit>)])<Response> (method [url<(or string URL)> (optional status<number>)])<Response>}"
  },
  "SVGAElement": {
    "kind": "Property",
    "name": "SVGAElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAElement"
      },
      {
        "kind": "Property",
        "name": "rel",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "relList",
        "isStatic": true,
        "returnType": "DOMTokenList"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGAElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGAElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAElement}) (new [] SVGAElement)}"
  },
  "SVGAngle": {
    "kind": "Property",
    "name": "SVGAngle",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAngle"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAngle"
      },
      {
        "kind": "Property",
        "name": "SVG_ANGLETYPE_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_ANGLETYPE_UNSPECIFIED",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_ANGLETYPE_DEG",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_ANGLETYPE_RAD",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_ANGLETYPE_GRAD",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "unitType",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "valueAsString",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "valueInSpecifiedUnits",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "SVG_ANGLETYPE_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_ANGLETYPE_UNSPECIFIED",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_ANGLETYPE_DEG",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_ANGLETYPE_RAD",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_ANGLETYPE_GRAD",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Method",
        "name": "convertToSpecifiedUnits",
        "isStatic": false,
        "params": "[unitType<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "newValueSpecifiedUnits",
        "isStatic": false,
        "params": "[unitType<number> valueInSpecifiedUnits<number>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAngle}) (new [] SVGAngle) (property {:SVG_ANGLETYPE_UNKNOWN 0}) (property {:SVG_ANGLETYPE_UNSPECIFIED 1}) (property {:SVG_ANGLETYPE_DEG 2}) (property {:SVG_ANGLETYPE_RAD 3}) (property {:SVG_ANGLETYPE_GRAD 4})}"
  },
  "SVGAnimateElement": {
    "kind": "Property",
    "name": "SVGAnimateElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimateElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimateElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGAnimateElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGAnimateElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimateElement}) (new [] SVGAnimateElement)}"
  },
  "SVGAnimateMotionElement": {
    "kind": "Property",
    "name": "SVGAnimateMotionElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimateMotionElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimateMotionElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGAnimateMotionElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGAnimateMotionElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimateMotionElement}) (new [] SVGAnimateMotionElement)}"
  },
  "SVGAnimateTransformElement": {
    "kind": "Property",
    "name": "SVGAnimateTransformElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimateTransformElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimateTransformElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGAnimateTransformElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGAnimateTransformElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimateTransformElement}) (new [] SVGAnimateTransformElement)}"
  },
  "SVGAnimatedAngle": {
    "kind": "Property",
    "name": "SVGAnimatedAngle",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimatedAngle"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimatedAngle"
      },
      {
        "kind": "Property",
        "name": "animVal",
        "isStatic": true,
        "returnType": "SVGAngle"
      },
      {
        "kind": "Property",
        "name": "baseVal",
        "isStatic": true,
        "returnType": "SVGAngle"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimatedAngle}) (new [] SVGAnimatedAngle)}"
  },
  "SVGAnimatedBoolean": {
    "kind": "Property",
    "name": "SVGAnimatedBoolean",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimatedBoolean"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimatedBoolean"
      },
      {
        "kind": "Property",
        "name": "animVal",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "baseVal",
        "isStatic": true,
        "returnType": "boolean"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimatedBoolean}) (new [] SVGAnimatedBoolean)}"
  },
  "SVGAnimatedEnumeration": {
    "kind": "Property",
    "name": "SVGAnimatedEnumeration",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "animVal",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "baseVal",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimatedEnumeration}) (new [] SVGAnimatedEnumeration)}"
  },
  "SVGAnimatedInteger": {
    "kind": "Property",
    "name": "SVGAnimatedInteger",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimatedInteger"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimatedInteger"
      },
      {
        "kind": "Property",
        "name": "animVal",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "baseVal",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimatedInteger}) (new [] SVGAnimatedInteger)}"
  },
  "SVGAnimatedLength": {
    "kind": "Property",
    "name": "SVGAnimatedLength",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "animVal",
        "isStatic": true,
        "returnType": "SVGLength"
      },
      {
        "kind": "Property",
        "name": "baseVal",
        "isStatic": true,
        "returnType": "SVGLength"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimatedLength}) (new [] SVGAnimatedLength)}"
  },
  "SVGAnimatedLengthList": {
    "kind": "Property",
    "name": "SVGAnimatedLengthList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimatedLengthList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimatedLengthList"
      },
      {
        "kind": "Property",
        "name": "animVal",
        "isStatic": true,
        "returnType": "SVGLengthList"
      },
      {
        "kind": "Property",
        "name": "baseVal",
        "isStatic": true,
        "returnType": "SVGLengthList"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimatedLengthList}) (new [] SVGAnimatedLengthList)}"
  },
  "SVGAnimatedNumber": {
    "kind": "Property",
    "name": "SVGAnimatedNumber",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "animVal",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "baseVal",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimatedNumber}) (new [] SVGAnimatedNumber)}"
  },
  "SVGAnimatedNumberList": {
    "kind": "Property",
    "name": "SVGAnimatedNumberList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimatedNumberList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimatedNumberList"
      },
      {
        "kind": "Property",
        "name": "animVal",
        "isStatic": true,
        "returnType": "SVGNumberList"
      },
      {
        "kind": "Property",
        "name": "baseVal",
        "isStatic": true,
        "returnType": "SVGNumberList"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimatedNumberList}) (new [] SVGAnimatedNumberList)}"
  },
  "SVGAnimatedPreserveAspectRatio": {
    "kind": "Property",
    "name": "SVGAnimatedPreserveAspectRatio",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimatedPreserveAspectRatio"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimatedPreserveAspectRatio"
      },
      {
        "kind": "Property",
        "name": "animVal",
        "isStatic": true,
        "returnType": "SVGPreserveAspectRatio"
      },
      {
        "kind": "Property",
        "name": "baseVal",
        "isStatic": true,
        "returnType": "SVGPreserveAspectRatio"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimatedPreserveAspectRatio}) (new [] SVGAnimatedPreserveAspectRatio)}"
  },
  "SVGAnimatedRect": {
    "kind": "Property",
    "name": "SVGAnimatedRect",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimatedRect"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimatedRect"
      },
      {
        "kind": "Property",
        "name": "animVal",
        "isStatic": true,
        "returnType": "DOMRectReadOnly"
      },
      {
        "kind": "Property",
        "name": "baseVal",
        "isStatic": true,
        "returnType": "DOMRect"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimatedRect}) (new [] SVGAnimatedRect)}"
  },
  "SVGAnimatedString": {
    "kind": "Property",
    "name": "SVGAnimatedString",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "animVal",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "baseVal",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimatedString}) (new [] SVGAnimatedString)}"
  },
  "SVGAnimatedTransformList": {
    "kind": "Property",
    "name": "SVGAnimatedTransformList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimatedTransformList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimatedTransformList"
      },
      {
        "kind": "Property",
        "name": "animVal",
        "isStatic": true,
        "returnType": "SVGTransformList"
      },
      {
        "kind": "Property",
        "name": "baseVal",
        "isStatic": true,
        "returnType": "SVGTransformList"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimatedTransformList}) (new [] SVGAnimatedTransformList)}"
  },
  "SVGAnimationElement": {
    "kind": "Property",
    "name": "SVGAnimationElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGAnimationElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGAnimationElement"
      },
      {
        "kind": "Property",
        "name": "targetElement",
        "isStatic": true,
        "returnType": "(or SVGElement null)"
      },
      {
        "kind": "Method",
        "name": "beginElement",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "beginElementAt",
        "isStatic": false,
        "params": "[offset<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "endElement",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "endElementAt",
        "isStatic": false,
        "params": "[offset<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCurrentTime",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getSimpleDuration",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getStartTime",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGAnimationElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGAnimationElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGAnimationElement}) (new [] SVGAnimationElement)}"
  },
  "SVGCircleElement": {
    "kind": "Property",
    "name": "SVGCircleElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGCircleElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGCircleElement"
      },
      {
        "kind": "Property",
        "name": "cx",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "cy",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "r",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGCircleElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGCircleElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGCircleElement}) (new [] SVGCircleElement)}"
  },
  "SVGClipPathElement": {
    "kind": "Property",
    "name": "SVGClipPathElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGClipPathElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGClipPathElement"
      },
      {
        "kind": "Property",
        "name": "clipPathUnits",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "transform",
        "isStatic": true,
        "returnType": "SVGAnimatedTransformList"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGClipPathElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGClipPathElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGClipPathElement}) (new [] SVGClipPathElement)}"
  },
  "SVGComponentTransferFunctionElement": {
    "kind": "Property",
    "name": "SVGComponentTransferFunctionElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGComponentTransferFunctionElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGComponentTransferFunctionElement"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
        "isStatic": false,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "amplitude",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "exponent",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "intercept",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "offset",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "slope",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "tableValues",
        "isStatic": true,
        "returnType": "SVGAnimatedNumberList"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
        "isStatic": true,
        "returnType": "5"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGComponentTransferFunctionElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGComponentTransferFunctionElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGComponentTransferFunctionElement}) (new [] SVGComponentTransferFunctionElement) (property {:SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN 0}) (property {:SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY 1}) (property {:SVG_FECOMPONENTTRANSFER_TYPE_TABLE 2}) (property {:SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE 3}) (property {:SVG_FECOMPONENTTRANSFER_TYPE_LINEAR 4}) (property {:SVG_FECOMPONENTTRANSFER_TYPE_GAMMA 5})}"
  },
  "SVGDefsElement": {
    "kind": "Property",
    "name": "SVGDefsElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGDefsElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGDefsElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGDefsElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGDefsElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGDefsElement}) (new [] SVGDefsElement)}"
  },
  "SVGDescElement": {
    "kind": "Property",
    "name": "SVGDescElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGDescElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGDescElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGDescElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGDescElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGDescElement}) (new [] SVGDescElement)}"
  },
  "SVGElement": {
    "kind": "Property",
    "name": "SVGElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGElement"
      },
      {
        "kind": "Property",
        "name": "className",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "ownerSVGElement",
        "isStatic": true,
        "returnType": "(or SVGSVGElement null)"
      },
      {
        "kind": "Property",
        "name": "viewportElement",
        "isStatic": true,
        "returnType": "(or SVGElement null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGElement}) (new [] SVGElement)}"
  },
  "SVGEllipseElement": {
    "kind": "Property",
    "name": "SVGEllipseElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGEllipseElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGEllipseElement"
      },
      {
        "kind": "Property",
        "name": "cx",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "cy",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "rx",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "ry",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGEllipseElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGEllipseElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGEllipseElement}) (new [] SVGEllipseElement)}"
  },
  "SVGFEBlendElement": {
    "kind": "Property",
    "name": "SVGFEBlendElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEBlendElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEBlendElement"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_NORMAL",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_MULTIPLY",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_SCREEN",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_DARKEN",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_LIGHTEN",
        "isStatic": false,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_OVERLAY",
        "isStatic": false,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_COLOR_DODGE",
        "isStatic": false,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_COLOR_BURN",
        "isStatic": false,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_HARD_LIGHT",
        "isStatic": false,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_SOFT_LIGHT",
        "isStatic": false,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_DIFFERENCE",
        "isStatic": false,
        "returnType": "11"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_EXCLUSION",
        "isStatic": false,
        "returnType": "12"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_HUE",
        "isStatic": false,
        "returnType": "13"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_SATURATION",
        "isStatic": false,
        "returnType": "14"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_COLOR",
        "isStatic": false,
        "returnType": "15"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_LUMINOSITY",
        "isStatic": false,
        "returnType": "16"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "in2",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "mode",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_NORMAL",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_MULTIPLY",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_SCREEN",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_DARKEN",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_LIGHTEN",
        "isStatic": true,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_OVERLAY",
        "isStatic": true,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_COLOR_DODGE",
        "isStatic": true,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_COLOR_BURN",
        "isStatic": true,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_HARD_LIGHT",
        "isStatic": true,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_SOFT_LIGHT",
        "isStatic": true,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_DIFFERENCE",
        "isStatic": true,
        "returnType": "11"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_EXCLUSION",
        "isStatic": true,
        "returnType": "12"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_HUE",
        "isStatic": true,
        "returnType": "13"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_SATURATION",
        "isStatic": true,
        "returnType": "14"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_COLOR",
        "isStatic": true,
        "returnType": "15"
      },
      {
        "kind": "Property",
        "name": "SVG_FEBLEND_MODE_LUMINOSITY",
        "isStatic": true,
        "returnType": "16"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEBlendElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEBlendElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEBlendElement}) (new [] SVGFEBlendElement) (property {:SVG_FEBLEND_MODE_UNKNOWN 0}) (property {:SVG_FEBLEND_MODE_NORMAL 1}) (property {:SVG_FEBLEND_MODE_MULTIPLY 2}) (property {:SVG_FEBLEND_MODE_SCREEN 3}) (property {:SVG_FEBLEND_MODE_DARKEN 4}) (property {:SVG_FEBLEND_MODE_LIGHTEN 5}) (property {:SVG_FEBLEND_MODE_OVERLAY 6}) (property {:SVG_FEBLEND_MODE_COLOR_DODGE 7}) (property {:SVG_FEBLEND_MODE_COLOR_BURN 8}) (property {:SVG_FEBLEND_MODE_HARD_LIGHT 9}) (property {:SVG_FEBLEND_MODE_SOFT_LIGHT 10}) (property {:SVG_FEBLEND_MODE_DIFFERENCE 11}) (property {:SVG_FEBLEND_MODE_EXCLUSION 12}) (property {:SVG_FEBLEND_MODE_HUE 13}) (property {:SVG_FEBLEND_MODE_SATURATION 14}) (property {:SVG_FEBLEND_MODE_COLOR 15}) (property {:SVG_FEBLEND_MODE_LUMINOSITY 16})}"
  },
  "SVGFEColorMatrixElement": {
    "kind": "Property",
    "name": "SVGFEColorMatrixElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEColorMatrixElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEColorMatrixElement"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOLORMATRIX_TYPE_MATRIX",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOLORMATRIX_TYPE_SATURATE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOLORMATRIX_TYPE_HUEROTATE",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "values",
        "isStatic": true,
        "returnType": "SVGAnimatedNumberList"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOLORMATRIX_TYPE_MATRIX",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOLORMATRIX_TYPE_SATURATE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOLORMATRIX_TYPE_HUEROTATE",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEColorMatrixElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEColorMatrixElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEColorMatrixElement}) (new [] SVGFEColorMatrixElement) (property {:SVG_FECOLORMATRIX_TYPE_UNKNOWN 0}) (property {:SVG_FECOLORMATRIX_TYPE_MATRIX 1}) (property {:SVG_FECOLORMATRIX_TYPE_SATURATE 2}) (property {:SVG_FECOLORMATRIX_TYPE_HUEROTATE 3}) (property {:SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA 4})}"
  },
  "SVGFEComponentTransferElement": {
    "kind": "Property",
    "name": "SVGFEComponentTransferElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEComponentTransferElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEComponentTransferElement"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEComponentTransferElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEComponentTransferElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEComponentTransferElement}) (new [] SVGFEComponentTransferElement)}"
  },
  "SVGFECompositeElement": {
    "kind": "Property",
    "name": "SVGFECompositeElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFECompositeElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFECompositeElement"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_OVER",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_IN",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_OUT",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_ATOP",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_XOR",
        "isStatic": false,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
        "isStatic": false,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "in2",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "k1",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "k2",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "k3",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "k4",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "operator",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_OVER",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_IN",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_OUT",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_ATOP",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_XOR",
        "isStatic": true,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
        "isStatic": true,
        "returnType": "6"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFECompositeElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFECompositeElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFECompositeElement}) (new [] SVGFECompositeElement) (property {:SVG_FECOMPOSITE_OPERATOR_UNKNOWN 0}) (property {:SVG_FECOMPOSITE_OPERATOR_OVER 1}) (property {:SVG_FECOMPOSITE_OPERATOR_IN 2}) (property {:SVG_FECOMPOSITE_OPERATOR_OUT 3}) (property {:SVG_FECOMPOSITE_OPERATOR_ATOP 4}) (property {:SVG_FECOMPOSITE_OPERATOR_XOR 5}) (property {:SVG_FECOMPOSITE_OPERATOR_ARITHMETIC 6})}"
  },
  "SVGFEConvolveMatrixElement": {
    "kind": "Property",
    "name": "SVGFEConvolveMatrixElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEConvolveMatrixElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEConvolveMatrixElement"
      },
      {
        "kind": "Property",
        "name": "SVG_EDGEMODE_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_EDGEMODE_DUPLICATE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_EDGEMODE_WRAP",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_EDGEMODE_NONE",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "bias",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "divisor",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "edgeMode",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "kernelMatrix",
        "isStatic": true,
        "returnType": "SVGAnimatedNumberList"
      },
      {
        "kind": "Property",
        "name": "kernelUnitLengthX",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "kernelUnitLengthY",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "orderX",
        "isStatic": true,
        "returnType": "SVGAnimatedInteger"
      },
      {
        "kind": "Property",
        "name": "orderY",
        "isStatic": true,
        "returnType": "SVGAnimatedInteger"
      },
      {
        "kind": "Property",
        "name": "preserveAlpha",
        "isStatic": true,
        "returnType": "SVGAnimatedBoolean"
      },
      {
        "kind": "Property",
        "name": "targetX",
        "isStatic": true,
        "returnType": "SVGAnimatedInteger"
      },
      {
        "kind": "Property",
        "name": "targetY",
        "isStatic": true,
        "returnType": "SVGAnimatedInteger"
      },
      {
        "kind": "Property",
        "name": "SVG_EDGEMODE_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_EDGEMODE_DUPLICATE",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_EDGEMODE_WRAP",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_EDGEMODE_NONE",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEConvolveMatrixElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEConvolveMatrixElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEConvolveMatrixElement}) (new [] SVGFEConvolveMatrixElement) (property {:SVG_EDGEMODE_UNKNOWN 0}) (property {:SVG_EDGEMODE_DUPLICATE 1}) (property {:SVG_EDGEMODE_WRAP 2}) (property {:SVG_EDGEMODE_NONE 3})}"
  },
  "SVGFEDiffuseLightingElement": {
    "kind": "Property",
    "name": "SVGFEDiffuseLightingElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEDiffuseLightingElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEDiffuseLightingElement"
      },
      {
        "kind": "Property",
        "name": "diffuseConstant",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "kernelUnitLengthX",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "kernelUnitLengthY",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "surfaceScale",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEDiffuseLightingElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEDiffuseLightingElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEDiffuseLightingElement}) (new [] SVGFEDiffuseLightingElement)}"
  },
  "SVGFEDisplacementMapElement": {
    "kind": "Property",
    "name": "SVGFEDisplacementMapElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEDisplacementMapElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEDisplacementMapElement"
      },
      {
        "kind": "Property",
        "name": "SVG_CHANNEL_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_CHANNEL_R",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_CHANNEL_G",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_CHANNEL_B",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_CHANNEL_A",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "in2",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "scale",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "xChannelSelector",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "yChannelSelector",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "SVG_CHANNEL_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_CHANNEL_R",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_CHANNEL_G",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_CHANNEL_B",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_CHANNEL_A",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEDisplacementMapElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEDisplacementMapElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEDisplacementMapElement}) (new [] SVGFEDisplacementMapElement) (property {:SVG_CHANNEL_UNKNOWN 0}) (property {:SVG_CHANNEL_R 1}) (property {:SVG_CHANNEL_G 2}) (property {:SVG_CHANNEL_B 3}) (property {:SVG_CHANNEL_A 4})}"
  },
  "SVGFEDistantLightElement": {
    "kind": "Property",
    "name": "SVGFEDistantLightElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEDistantLightElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEDistantLightElement"
      },
      {
        "kind": "Property",
        "name": "azimuth",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "elevation",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEDistantLightElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEDistantLightElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEDistantLightElement}) (new [] SVGFEDistantLightElement)}"
  },
  "SVGFEDropShadowElement": {
    "kind": "Property",
    "name": "SVGFEDropShadowElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEDropShadowElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEDropShadowElement"
      },
      {
        "kind": "Property",
        "name": "dx",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "dy",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "stdDeviationX",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "stdDeviationY",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Method",
        "name": "setStdDeviation",
        "isStatic": false,
        "params": "[stdDeviationX<number> stdDeviationY<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEDropShadowElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEDropShadowElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEDropShadowElement}) (new [] SVGFEDropShadowElement)}"
  },
  "SVGFEFloodElement": {
    "kind": "Property",
    "name": "SVGFEFloodElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEFloodElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEFloodElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEFloodElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEFloodElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEFloodElement}) (new [] SVGFEFloodElement)}"
  },
  "SVGFEFuncAElement": {
    "kind": "Property",
    "name": "SVGFEFuncAElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEFuncAElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEFuncAElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEFuncAElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEFuncAElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEFuncAElement}) (new [] SVGFEFuncAElement)}"
  },
  "SVGFEFuncBElement": {
    "kind": "Property",
    "name": "SVGFEFuncBElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEFuncBElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEFuncBElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEFuncBElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEFuncBElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEFuncBElement}) (new [] SVGFEFuncBElement)}"
  },
  "SVGFEFuncGElement": {
    "kind": "Property",
    "name": "SVGFEFuncGElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEFuncGElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEFuncGElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEFuncGElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEFuncGElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEFuncGElement}) (new [] SVGFEFuncGElement)}"
  },
  "SVGFEFuncRElement": {
    "kind": "Property",
    "name": "SVGFEFuncRElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEFuncRElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEFuncRElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEFuncRElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEFuncRElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEFuncRElement}) (new [] SVGFEFuncRElement)}"
  },
  "SVGFEGaussianBlurElement": {
    "kind": "Property",
    "name": "SVGFEGaussianBlurElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEGaussianBlurElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEGaussianBlurElement"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "stdDeviationX",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "stdDeviationY",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Method",
        "name": "setStdDeviation",
        "isStatic": false,
        "params": "[stdDeviationX<number> stdDeviationY<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEGaussianBlurElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEGaussianBlurElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEGaussianBlurElement}) (new [] SVGFEGaussianBlurElement)}"
  },
  "SVGFEImageElement": {
    "kind": "Property",
    "name": "SVGFEImageElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEImageElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEImageElement"
      },
      {
        "kind": "Property",
        "name": "preserveAspectRatio",
        "isStatic": true,
        "returnType": "SVGAnimatedPreserveAspectRatio"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEImageElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEImageElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEImageElement}) (new [] SVGFEImageElement)}"
  },
  "SVGFEMergeElement": {
    "kind": "Property",
    "name": "SVGFEMergeElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEMergeElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEMergeElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEMergeElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEMergeElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEMergeElement}) (new [] SVGFEMergeElement)}"
  },
  "SVGFEMergeNodeElement": {
    "kind": "Property",
    "name": "SVGFEMergeNodeElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEMergeNodeElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEMergeNodeElement"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEMergeNodeElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEMergeNodeElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEMergeNodeElement}) (new [] SVGFEMergeNodeElement)}"
  },
  "SVGFEMorphologyElement": {
    "kind": "Property",
    "name": "SVGFEMorphologyElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEMorphologyElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEMorphologyElement"
      },
      {
        "kind": "Property",
        "name": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_MORPHOLOGY_OPERATOR_ERODE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_MORPHOLOGY_OPERATOR_DILATE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "operator",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "radiusX",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "radiusY",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_MORPHOLOGY_OPERATOR_ERODE",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_MORPHOLOGY_OPERATOR_DILATE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEMorphologyElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEMorphologyElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEMorphologyElement}) (new [] SVGFEMorphologyElement) (property {:SVG_MORPHOLOGY_OPERATOR_UNKNOWN 0}) (property {:SVG_MORPHOLOGY_OPERATOR_ERODE 1}) (property {:SVG_MORPHOLOGY_OPERATOR_DILATE 2})}"
  },
  "SVGFEOffsetElement": {
    "kind": "Property",
    "name": "SVGFEOffsetElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEOffsetElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEOffsetElement"
      },
      {
        "kind": "Property",
        "name": "dx",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "dy",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEOffsetElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEOffsetElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEOffsetElement}) (new [] SVGFEOffsetElement)}"
  },
  "SVGFEPointLightElement": {
    "kind": "Property",
    "name": "SVGFEPointLightElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFEPointLightElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFEPointLightElement"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "z",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEPointLightElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFEPointLightElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFEPointLightElement}) (new [] SVGFEPointLightElement)}"
  },
  "SVGFESpecularLightingElement": {
    "kind": "Property",
    "name": "SVGFESpecularLightingElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFESpecularLightingElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFESpecularLightingElement"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Property",
        "name": "kernelUnitLengthX",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "kernelUnitLengthY",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "specularConstant",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "specularExponent",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "surfaceScale",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFESpecularLightingElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFESpecularLightingElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFESpecularLightingElement}) (new [] SVGFESpecularLightingElement)}"
  },
  "SVGFESpotLightElement": {
    "kind": "Property",
    "name": "SVGFESpotLightElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFESpotLightElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFESpotLightElement"
      },
      {
        "kind": "Property",
        "name": "limitingConeAngle",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "pointsAtX",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "pointsAtY",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "pointsAtZ",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "specularExponent",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "z",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFESpotLightElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFESpotLightElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFESpotLightElement}) (new [] SVGFESpotLightElement)}"
  },
  "SVGFETileElement": {
    "kind": "Property",
    "name": "SVGFETileElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFETileElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFETileElement"
      },
      {
        "kind": "Property",
        "name": "in1",
        "isStatic": true,
        "returnType": "SVGAnimatedString"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFETileElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFETileElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFETileElement}) (new [] SVGFETileElement)}"
  },
  "SVGFETurbulenceElement": {
    "kind": "Property",
    "name": "SVGFETurbulenceElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFETurbulenceElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFETurbulenceElement"
      },
      {
        "kind": "Property",
        "name": "SVG_TURBULENCE_TYPE_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_TURBULENCE_TYPE_FRACTALNOISE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_TURBULENCE_TYPE_TURBULENCE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_STITCHTYPE_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_STITCHTYPE_STITCH",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_STITCHTYPE_NOSTITCH",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "baseFrequencyX",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "baseFrequencyY",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "numOctaves",
        "isStatic": true,
        "returnType": "SVGAnimatedInteger"
      },
      {
        "kind": "Property",
        "name": "seed",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Property",
        "name": "stitchTiles",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "SVG_TURBULENCE_TYPE_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_TURBULENCE_TYPE_FRACTALNOISE",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_TURBULENCE_TYPE_TURBULENCE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_STITCHTYPE_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_STITCHTYPE_STITCH",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_STITCHTYPE_NOSTITCH",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFETurbulenceElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFETurbulenceElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFETurbulenceElement}) (new [] SVGFETurbulenceElement) (property {:SVG_TURBULENCE_TYPE_UNKNOWN 0}) (property {:SVG_TURBULENCE_TYPE_FRACTALNOISE 1}) (property {:SVG_TURBULENCE_TYPE_TURBULENCE 2}) (property {:SVG_STITCHTYPE_UNKNOWN 0}) (property {:SVG_STITCHTYPE_STITCH 1}) (property {:SVG_STITCHTYPE_NOSTITCH 2})}"
  },
  "SVGFilterElement": {
    "kind": "Property",
    "name": "SVGFilterElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGFilterElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGFilterElement"
      },
      {
        "kind": "Property",
        "name": "filterUnits",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "primitiveUnits",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFilterElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGFilterElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGFilterElement}) (new [] SVGFilterElement)}"
  },
  "SVGForeignObjectElement": {
    "kind": "Property",
    "name": "SVGForeignObjectElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGForeignObjectElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGForeignObjectElement"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGForeignObjectElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGForeignObjectElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGForeignObjectElement}) (new [] SVGForeignObjectElement)}"
  },
  "SVGGElement": {
    "kind": "Property",
    "name": "SVGGElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGGElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGGElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGGElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGGElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGGElement}) (new [] SVGGElement)}"
  },
  "SVGGeometryElement": {
    "kind": "Property",
    "name": "SVGGeometryElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGGeometryElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGGeometryElement"
      },
      {
        "kind": "Property",
        "name": "pathLength",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Method",
        "name": "getPointAtLength",
        "isStatic": false,
        "params": "[distance<number>]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "getTotalLength",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "isPointInFill",
        "isStatic": false,
        "params": "[(optional point<DOMPointInit>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isPointInStroke",
        "isStatic": false,
        "params": "[(optional point<DOMPointInit>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGGeometryElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGGeometryElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGGeometryElement}) (new [] SVGGeometryElement)}"
  },
  "SVGGradientElement": {
    "kind": "Property",
    "name": "SVGGradientElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGGradientElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGGradientElement"
      },
      {
        "kind": "Property",
        "name": "SVG_SPREADMETHOD_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_SPREADMETHOD_PAD",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_SPREADMETHOD_REFLECT",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_SPREADMETHOD_REPEAT",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "gradientTransform",
        "isStatic": true,
        "returnType": "SVGAnimatedTransformList"
      },
      {
        "kind": "Property",
        "name": "gradientUnits",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "spreadMethod",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "SVG_SPREADMETHOD_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_SPREADMETHOD_PAD",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_SPREADMETHOD_REFLECT",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_SPREADMETHOD_REPEAT",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGGradientElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGGradientElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGGradientElement}) (new [] SVGGradientElement) (property {:SVG_SPREADMETHOD_UNKNOWN 0}) (property {:SVG_SPREADMETHOD_PAD 1}) (property {:SVG_SPREADMETHOD_REFLECT 2}) (property {:SVG_SPREADMETHOD_REPEAT 3})}"
  },
  "SVGGraphicsElement": {
    "kind": "Property",
    "name": "SVGGraphicsElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGGraphicsElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGGraphicsElement"
      },
      {
        "kind": "Property",
        "name": "transform",
        "isStatic": true,
        "returnType": "SVGAnimatedTransformList"
      },
      {
        "kind": "Method",
        "name": "getBBox",
        "isStatic": false,
        "params": "[(optional options<SVGBoundingBoxOptions>)]",
        "returnType": "DOMRect"
      },
      {
        "kind": "Method",
        "name": "getCTM",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or DOMMatrix null)"
      },
      {
        "kind": "Method",
        "name": "getScreenCTM",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or DOMMatrix null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGGraphicsElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGGraphicsElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGGraphicsElement}) (new [] SVGGraphicsElement)}"
  },
  "SVGImageElement": {
    "kind": "Property",
    "name": "SVGImageElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGImageElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGImageElement"
      },
      {
        "kind": "Property",
        "name": "crossOrigin",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "preserveAspectRatio",
        "isStatic": true,
        "returnType": "SVGAnimatedPreserveAspectRatio"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGImageElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGImageElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGImageElement}) (new [] SVGImageElement)}"
  },
  "SVGLength": {
    "kind": "Property",
    "name": "SVGLength",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGLength"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGLength"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_NUMBER",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_PERCENTAGE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_EMS",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_EXS",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_PX",
        "isStatic": false,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_CM",
        "isStatic": false,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_MM",
        "isStatic": false,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_IN",
        "isStatic": false,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_PT",
        "isStatic": false,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_PC",
        "isStatic": false,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "unitType",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "valueAsString",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "valueInSpecifiedUnits",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_NUMBER",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_PERCENTAGE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_EMS",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_EXS",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_PX",
        "isStatic": true,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_CM",
        "isStatic": true,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_MM",
        "isStatic": true,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_IN",
        "isStatic": true,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_PT",
        "isStatic": true,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "SVG_LENGTHTYPE_PC",
        "isStatic": true,
        "returnType": "10"
      },
      {
        "kind": "Method",
        "name": "convertToSpecifiedUnits",
        "isStatic": false,
        "params": "[unitType<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "newValueSpecifiedUnits",
        "isStatic": false,
        "params": "[unitType<number> valueInSpecifiedUnits<number>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGLength}) (new [] SVGLength) (property {:SVG_LENGTHTYPE_UNKNOWN 0}) (property {:SVG_LENGTHTYPE_NUMBER 1}) (property {:SVG_LENGTHTYPE_PERCENTAGE 2}) (property {:SVG_LENGTHTYPE_EMS 3}) (property {:SVG_LENGTHTYPE_EXS 4}) (property {:SVG_LENGTHTYPE_PX 5}) (property {:SVG_LENGTHTYPE_CM 6}) (property {:SVG_LENGTHTYPE_MM 7}) (property {:SVG_LENGTHTYPE_IN 8}) (property {:SVG_LENGTHTYPE_PT 9}) (property {:SVG_LENGTHTYPE_PC 10})}"
  },
  "SVGLengthList": {
    "kind": "Property",
    "name": "SVGLengthList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGLengthList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGLengthList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "numberOfItems",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "appendItem",
        "isStatic": false,
        "params": "[newItem<SVGLength>]",
        "returnType": "SVGLength"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "SVGLength"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "isStatic": false,
        "params": "[newItem<SVGLength>]",
        "returnType": "SVGLength"
      },
      {
        "kind": "Method",
        "name": "insertItemBefore",
        "isStatic": false,
        "params": "[newItem<SVGLength> index<number>]",
        "returnType": "SVGLength"
      },
      {
        "kind": "Method",
        "name": "removeItem",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "SVGLength"
      },
      {
        "kind": "Method",
        "name": "replaceItem",
        "isStatic": false,
        "params": "[newItem<SVGLength> index<number>]",
        "returnType": "SVGLength"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<SVGLength>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGLengthList}) (new [] SVGLengthList)}"
  },
  "SVGLineElement": {
    "kind": "Property",
    "name": "SVGLineElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGLineElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGLineElement"
      },
      {
        "kind": "Property",
        "name": "x1",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "x2",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "y1",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "y2",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGLineElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGLineElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGLineElement}) (new [] SVGLineElement)}"
  },
  "SVGLinearGradientElement": {
    "kind": "Property",
    "name": "SVGLinearGradientElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGLinearGradientElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGLinearGradientElement"
      },
      {
        "kind": "Property",
        "name": "x1",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "x2",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "y1",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "y2",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGLinearGradientElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGLinearGradientElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGLinearGradientElement}) (new [] SVGLinearGradientElement)}"
  },
  "SVGMPathElement": {
    "kind": "Property",
    "name": "SVGMPathElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGMPathElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGMPathElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGMPathElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGMPathElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGMPathElement}) (new [] SVGMPathElement)}"
  },
  "SVGMarkerElement": {
    "kind": "Property",
    "name": "SVGMarkerElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGMarkerElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGMarkerElement"
      },
      {
        "kind": "Property",
        "name": "SVG_MARKERUNITS_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_MARKERUNITS_USERSPACEONUSE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_MARKERUNITS_STROKEWIDTH",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_MARKER_ORIENT_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_MARKER_ORIENT_AUTO",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_MARKER_ORIENT_ANGLE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "markerHeight",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "markerUnits",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "markerWidth",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "orientAngle",
        "isStatic": true,
        "returnType": "SVGAnimatedAngle"
      },
      {
        "kind": "Property",
        "name": "orientType",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "refX",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "refY",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "SVG_MARKERUNITS_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_MARKERUNITS_USERSPACEONUSE",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_MARKERUNITS_STROKEWIDTH",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_MARKER_ORIENT_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_MARKER_ORIENT_AUTO",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_MARKER_ORIENT_ANGLE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Method",
        "name": "setOrientToAngle",
        "isStatic": false,
        "params": "[angle<SVGAngle>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setOrientToAuto",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGMarkerElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGMarkerElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGMarkerElement}) (new [] SVGMarkerElement) (property {:SVG_MARKERUNITS_UNKNOWN 0}) (property {:SVG_MARKERUNITS_USERSPACEONUSE 1}) (property {:SVG_MARKERUNITS_STROKEWIDTH 2}) (property {:SVG_MARKER_ORIENT_UNKNOWN 0}) (property {:SVG_MARKER_ORIENT_AUTO 1}) (property {:SVG_MARKER_ORIENT_ANGLE 2})}"
  },
  "SVGMaskElement": {
    "kind": "Property",
    "name": "SVGMaskElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGMaskElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGMaskElement"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "maskContentUnits",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "maskUnits",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGMaskElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGMaskElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGMaskElement}) (new [] SVGMaskElement)}"
  },
  "SVGMetadataElement": {
    "kind": "Property",
    "name": "SVGMetadataElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGMetadataElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGMetadataElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGMetadataElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGMetadataElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGMetadataElement}) (new [] SVGMetadataElement)}"
  },
  "SVGNumber": {
    "kind": "Property",
    "name": "SVGNumber",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGNumber"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGNumber"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGNumber}) (new [] SVGNumber)}"
  },
  "SVGNumberList": {
    "kind": "Property",
    "name": "SVGNumberList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGNumberList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGNumberList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "numberOfItems",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "appendItem",
        "isStatic": false,
        "params": "[newItem<SVGNumber>]",
        "returnType": "SVGNumber"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "SVGNumber"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "isStatic": false,
        "params": "[newItem<SVGNumber>]",
        "returnType": "SVGNumber"
      },
      {
        "kind": "Method",
        "name": "insertItemBefore",
        "isStatic": false,
        "params": "[newItem<SVGNumber> index<number>]",
        "returnType": "SVGNumber"
      },
      {
        "kind": "Method",
        "name": "removeItem",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "SVGNumber"
      },
      {
        "kind": "Method",
        "name": "replaceItem",
        "isStatic": false,
        "params": "[newItem<SVGNumber> index<number>]",
        "returnType": "SVGNumber"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<SVGNumber>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGNumberList}) (new [] SVGNumberList)}"
  },
  "SVGPathElement": {
    "kind": "Property",
    "name": "SVGPathElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGPathElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGPathElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGPathElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGPathElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGPathElement}) (new [] SVGPathElement)}"
  },
  "SVGPatternElement": {
    "kind": "Property",
    "name": "SVGPatternElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGPatternElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGPatternElement"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "patternContentUnits",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "patternTransform",
        "isStatic": true,
        "returnType": "SVGAnimatedTransformList"
      },
      {
        "kind": "Property",
        "name": "patternUnits",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGPatternElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGPatternElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGPatternElement}) (new [] SVGPatternElement)}"
  },
  "SVGPointList": {
    "kind": "Property",
    "name": "SVGPointList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGPointList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGPointList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "numberOfItems",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "appendItem",
        "isStatic": false,
        "params": "[newItem<DOMPoint>]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "isStatic": false,
        "params": "[newItem<DOMPoint>]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "insertItemBefore",
        "isStatic": false,
        "params": "[newItem<DOMPoint> index<number>]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "removeItem",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "replaceItem",
        "isStatic": false,
        "params": "[newItem<DOMPoint> index<number>]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<DOMPoint>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGPointList}) (new [] SVGPointList)}"
  },
  "SVGPolygonElement": {
    "kind": "Property",
    "name": "SVGPolygonElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGPolygonElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGPolygonElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGPolygonElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGPolygonElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGPolygonElement}) (new [] SVGPolygonElement)}"
  },
  "SVGPolylineElement": {
    "kind": "Property",
    "name": "SVGPolylineElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGPolylineElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGPolylineElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGPolylineElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGPolylineElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGPolylineElement}) (new [] SVGPolylineElement)}"
  },
  "SVGPreserveAspectRatio": {
    "kind": "Property",
    "name": "SVGPreserveAspectRatio",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGPreserveAspectRatio"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGPreserveAspectRatio"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_NONE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMINYMIN",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMIDYMIN",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMAXYMIN",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMINYMID",
        "isStatic": false,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMIDYMID",
        "isStatic": false,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMAXYMID",
        "isStatic": false,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMINYMAX",
        "isStatic": false,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMIDYMAX",
        "isStatic": false,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMAXYMAX",
        "isStatic": false,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "SVG_MEETORSLICE_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_MEETORSLICE_MEET",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_MEETORSLICE_SLICE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "meetOrSlice",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_NONE",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMINYMIN",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMIDYMIN",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMAXYMIN",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMINYMID",
        "isStatic": true,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMIDYMID",
        "isStatic": true,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMAXYMID",
        "isStatic": true,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMINYMAX",
        "isStatic": true,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMIDYMAX",
        "isStatic": true,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "SVG_PRESERVEASPECTRATIO_XMAXYMAX",
        "isStatic": true,
        "returnType": "10"
      },
      {
        "kind": "Property",
        "name": "SVG_MEETORSLICE_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_MEETORSLICE_MEET",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_MEETORSLICE_SLICE",
        "isStatic": true,
        "returnType": "2"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGPreserveAspectRatio}) (new [] SVGPreserveAspectRatio) (property {:SVG_PRESERVEASPECTRATIO_UNKNOWN 0}) (property {:SVG_PRESERVEASPECTRATIO_NONE 1}) (property {:SVG_PRESERVEASPECTRATIO_XMINYMIN 2}) (property {:SVG_PRESERVEASPECTRATIO_XMIDYMIN 3}) (property {:SVG_PRESERVEASPECTRATIO_XMAXYMIN 4}) (property {:SVG_PRESERVEASPECTRATIO_XMINYMID 5}) (property {:SVG_PRESERVEASPECTRATIO_XMIDYMID 6}) (property {:SVG_PRESERVEASPECTRATIO_XMAXYMID 7}) (property {:SVG_PRESERVEASPECTRATIO_XMINYMAX 8}) (property {:SVG_PRESERVEASPECTRATIO_XMIDYMAX 9}) (property {:SVG_PRESERVEASPECTRATIO_XMAXYMAX 10}) (property {:SVG_MEETORSLICE_UNKNOWN 0}) (property {:SVG_MEETORSLICE_MEET 1}) (property {:SVG_MEETORSLICE_SLICE 2})}"
  },
  "SVGRadialGradientElement": {
    "kind": "Property",
    "name": "SVGRadialGradientElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGRadialGradientElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGRadialGradientElement"
      },
      {
        "kind": "Property",
        "name": "cx",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "cy",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "fr",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "fx",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "fy",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "r",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGRadialGradientElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGRadialGradientElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGRadialGradientElement}) (new [] SVGRadialGradientElement)}"
  },
  "SVGRectElement": {
    "kind": "Property",
    "name": "SVGRectElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGRectElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGRectElement"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "rx",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "ry",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGRectElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGRectElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGRectElement}) (new [] SVGRectElement)}"
  },
  "SVGSVGElement": {
    "kind": "Property",
    "name": "SVGSVGElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGSVGElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGSVGElement"
      },
      {
        "kind": "Property",
        "name": "currentScale",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "currentTranslate",
        "isStatic": true,
        "returnType": "DOMPointReadOnly"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "animationsPaused",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "checkEnclosure",
        "isStatic": false,
        "params": "[element<SVGElement> rect<DOMRectReadOnly>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "checkIntersection",
        "isStatic": false,
        "params": "[element<SVGElement> rect<DOMRectReadOnly>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "createSVGAngle",
        "isStatic": false,
        "params": "[]",
        "returnType": "SVGAngle"
      },
      {
        "kind": "Method",
        "name": "createSVGLength",
        "isStatic": false,
        "params": "[]",
        "returnType": "SVGLength"
      },
      {
        "kind": "Method",
        "name": "createSVGMatrix",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Method",
        "name": "createSVGNumber",
        "isStatic": false,
        "params": "[]",
        "returnType": "SVGNumber"
      },
      {
        "kind": "Method",
        "name": "createSVGPoint",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "createSVGRect",
        "isStatic": false,
        "params": "[]",
        "returnType": "DOMRect"
      },
      {
        "kind": "Method",
        "name": "createSVGTransform",
        "isStatic": false,
        "params": "[]",
        "returnType": "SVGTransform"
      },
      {
        "kind": "Method",
        "name": "createSVGTransformFromMatrix",
        "isStatic": false,
        "params": "[(optional matrix<DOMMatrix2DInit>)]",
        "returnType": "SVGTransform"
      },
      {
        "kind": "Method",
        "name": "deselectAll",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "forceRedraw",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCurrentTime",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getElementById",
        "isStatic": false,
        "params": "[elementId<string>]",
        "returnType": "Element"
      },
      {
        "kind": "Method",
        "name": "getEnclosureList",
        "isStatic": false,
        "params": "[rect<DOMRectReadOnly> referenceElement<(or SVGElement null)>]",
        "returnType": "NodeListOf<(or SVGCircleElement SVGEllipseElement SVGImageElement SVGLineElement SVGPathElement SVGPolygonElement SVGPolylineElement SVGRectElement SVGTextElement SVGUseElement)>"
      },
      {
        "kind": "Method",
        "name": "getIntersectionList",
        "isStatic": false,
        "params": "[rect<DOMRectReadOnly> referenceElement<(or SVGElement null)>]",
        "returnType": "NodeListOf<(or SVGCircleElement SVGEllipseElement SVGImageElement SVGLineElement SVGPathElement SVGPolygonElement SVGPolylineElement SVGRectElement SVGTextElement SVGUseElement)>"
      },
      {
        "kind": "Method",
        "name": "pauseAnimations",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setCurrentTime",
        "isStatic": false,
        "params": "[seconds<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "suspendRedraw",
        "isStatic": false,
        "params": "[maxWaitMilliseconds<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "unpauseAnimations",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unsuspendRedraw",
        "isStatic": false,
        "params": "[suspendHandleID<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unsuspendRedrawAll",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGSVGElement> ev<(get SVGSVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGSVGElement> ev<(get SVGSVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGSVGElement}) (new [] SVGSVGElement)}"
  },
  "SVGScriptElement": {
    "kind": "Property",
    "name": "SVGScriptElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGScriptElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGScriptElement"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGScriptElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGScriptElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGScriptElement}) (new [] SVGScriptElement)}"
  },
  "SVGSetElement": {
    "kind": "Property",
    "name": "SVGSetElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGSetElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGSetElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGSetElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGSetElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGSetElement}) (new [] SVGSetElement)}"
  },
  "SVGStopElement": {
    "kind": "Property",
    "name": "SVGStopElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGStopElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGStopElement"
      },
      {
        "kind": "Property",
        "name": "offset",
        "isStatic": true,
        "returnType": "SVGAnimatedNumber"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGStopElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGStopElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGStopElement}) (new [] SVGStopElement)}"
  },
  "SVGStringList": {
    "kind": "Property",
    "name": "SVGStringList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGStringList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGStringList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "numberOfItems",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "appendItem",
        "isStatic": false,
        "params": "[newItem<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "isStatic": false,
        "params": "[newItem<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "insertItemBefore",
        "isStatic": false,
        "params": "[newItem<string> index<number>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "removeItem",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "replaceItem",
        "isStatic": false,
        "params": "[newItem<string> index<number>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<string>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGStringList}) (new [] SVGStringList)}"
  },
  "SVGStyleElement": {
    "kind": "Property",
    "name": "SVGStyleElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGStyleElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGStyleElement"
      },
      {
        "kind": "Property",
        "name": "disabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "media",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "title",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGStyleElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGStyleElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGStyleElement}) (new [] SVGStyleElement)}"
  },
  "SVGSwitchElement": {
    "kind": "Property",
    "name": "SVGSwitchElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGSwitchElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGSwitchElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGSwitchElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGSwitchElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGSwitchElement}) (new [] SVGSwitchElement)}"
  },
  "SVGSymbolElement": {
    "kind": "Property",
    "name": "SVGSymbolElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGSymbolElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGSymbolElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGSymbolElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGSymbolElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGSymbolElement}) (new [] SVGSymbolElement)}"
  },
  "SVGTSpanElement": {
    "kind": "Property",
    "name": "SVGTSpanElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGTSpanElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGTSpanElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGTSpanElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGTSpanElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGTSpanElement}) (new [] SVGTSpanElement)}"
  },
  "SVGTextContentElement": {
    "kind": "Property",
    "name": "SVGTextContentElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGTextContentElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGTextContentElement"
      },
      {
        "kind": "Property",
        "name": "LENGTHADJUST_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "LENGTHADJUST_SPACING",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "LENGTHADJUST_SPACINGANDGLYPHS",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "lengthAdjust",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "textLength",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "LENGTHADJUST_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "LENGTHADJUST_SPACING",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "LENGTHADJUST_SPACINGANDGLYPHS",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Method",
        "name": "getCharNumAtPosition",
        "isStatic": false,
        "params": "[(optional point<DOMPointInit>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getComputedTextLength",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getEndPositionOfChar",
        "isStatic": false,
        "params": "[charnum<number>]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "getExtentOfChar",
        "isStatic": false,
        "params": "[charnum<number>]",
        "returnType": "DOMRect"
      },
      {
        "kind": "Method",
        "name": "getNumberOfChars",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getRotationOfChar",
        "isStatic": false,
        "params": "[charnum<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getStartPositionOfChar",
        "isStatic": false,
        "params": "[charnum<number>]",
        "returnType": "DOMPoint"
      },
      {
        "kind": "Method",
        "name": "getSubStringLength",
        "isStatic": false,
        "params": "[charnum<number> nchars<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "selectSubString",
        "isStatic": false,
        "params": "[charnum<number> nchars<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGTextContentElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGTextContentElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGTextContentElement}) (new [] SVGTextContentElement) (property {:LENGTHADJUST_UNKNOWN 0}) (property {:LENGTHADJUST_SPACING 1}) (property {:LENGTHADJUST_SPACINGANDGLYPHS 2})}"
  },
  "SVGTextElement": {
    "kind": "Property",
    "name": "SVGTextElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGTextElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGTextElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGTextElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGTextElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGTextElement}) (new [] SVGTextElement)}"
  },
  "SVGTextPathElement": {
    "kind": "Property",
    "name": "SVGTextPathElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGTextPathElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGTextPathElement"
      },
      {
        "kind": "Property",
        "name": "TEXTPATH_METHODTYPE_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "TEXTPATH_METHODTYPE_ALIGN",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "TEXTPATH_METHODTYPE_STRETCH",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "TEXTPATH_SPACINGTYPE_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "TEXTPATH_SPACINGTYPE_AUTO",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "TEXTPATH_SPACINGTYPE_EXACT",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "method",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "spacing",
        "isStatic": true,
        "returnType": "SVGAnimatedEnumeration"
      },
      {
        "kind": "Property",
        "name": "startOffset",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "TEXTPATH_METHODTYPE_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "TEXTPATH_METHODTYPE_ALIGN",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "TEXTPATH_METHODTYPE_STRETCH",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "TEXTPATH_SPACINGTYPE_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "TEXTPATH_SPACINGTYPE_AUTO",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "TEXTPATH_SPACINGTYPE_EXACT",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGTextPathElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGTextPathElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGTextPathElement}) (new [] SVGTextPathElement) (property {:TEXTPATH_METHODTYPE_UNKNOWN 0}) (property {:TEXTPATH_METHODTYPE_ALIGN 1}) (property {:TEXTPATH_METHODTYPE_STRETCH 2}) (property {:TEXTPATH_SPACINGTYPE_UNKNOWN 0}) (property {:TEXTPATH_SPACINGTYPE_AUTO 1}) (property {:TEXTPATH_SPACINGTYPE_EXACT 2})}"
  },
  "SVGTextPositioningElement": {
    "kind": "Property",
    "name": "SVGTextPositioningElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGTextPositioningElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGTextPositioningElement"
      },
      {
        "kind": "Property",
        "name": "dx",
        "isStatic": true,
        "returnType": "SVGAnimatedLengthList"
      },
      {
        "kind": "Property",
        "name": "dy",
        "isStatic": true,
        "returnType": "SVGAnimatedLengthList"
      },
      {
        "kind": "Property",
        "name": "rotate",
        "isStatic": true,
        "returnType": "SVGAnimatedNumberList"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "SVGAnimatedLengthList"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "SVGAnimatedLengthList"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGTextPositioningElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGTextPositioningElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGTextPositioningElement}) (new [] SVGTextPositioningElement)}"
  },
  "SVGTitleElement": {
    "kind": "Property",
    "name": "SVGTitleElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGTitleElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGTitleElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGTitleElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGTitleElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGTitleElement}) (new [] SVGTitleElement)}"
  },
  "SVGTransform": {
    "kind": "Property",
    "name": "SVGTransform",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGTransform"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGTransform"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_MATRIX",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_TRANSLATE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_SCALE",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_ROTATE",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_SKEWX",
        "isStatic": false,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_SKEWY",
        "isStatic": false,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "angle",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "matrix",
        "isStatic": true,
        "returnType": "DOMMatrix"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_MATRIX",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_TRANSLATE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_SCALE",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_ROTATE",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_SKEWX",
        "isStatic": true,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "SVG_TRANSFORM_SKEWY",
        "isStatic": true,
        "returnType": "6"
      },
      {
        "kind": "Method",
        "name": "setMatrix",
        "isStatic": false,
        "params": "[(optional matrix<DOMMatrix2DInit>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setRotate",
        "isStatic": false,
        "params": "[angle<number> cx<number> cy<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setScale",
        "isStatic": false,
        "params": "[sx<number> sy<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setSkewX",
        "isStatic": false,
        "params": "[angle<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setSkewY",
        "isStatic": false,
        "params": "[angle<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setTranslate",
        "isStatic": false,
        "params": "[tx<number> ty<number>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGTransform}) (new [] SVGTransform) (property {:SVG_TRANSFORM_UNKNOWN 0}) (property {:SVG_TRANSFORM_MATRIX 1}) (property {:SVG_TRANSFORM_TRANSLATE 2}) (property {:SVG_TRANSFORM_SCALE 3}) (property {:SVG_TRANSFORM_ROTATE 4}) (property {:SVG_TRANSFORM_SKEWX 5}) (property {:SVG_TRANSFORM_SKEWY 6})}"
  },
  "SVGTransformList": {
    "kind": "Property",
    "name": "SVGTransformList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGTransformList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGTransformList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "numberOfItems",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "appendItem",
        "isStatic": false,
        "params": "[newItem<SVGTransform>]",
        "returnType": "SVGTransform"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "consolidate",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or SVGTransform null)"
      },
      {
        "kind": "Method",
        "name": "createSVGTransformFromMatrix",
        "isStatic": false,
        "params": "[(optional matrix<DOMMatrix2DInit>)]",
        "returnType": "SVGTransform"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "SVGTransform"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "isStatic": false,
        "params": "[newItem<SVGTransform>]",
        "returnType": "SVGTransform"
      },
      {
        "kind": "Method",
        "name": "insertItemBefore",
        "isStatic": false,
        "params": "[newItem<SVGTransform> index<number>]",
        "returnType": "SVGTransform"
      },
      {
        "kind": "Method",
        "name": "removeItem",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "SVGTransform"
      },
      {
        "kind": "Method",
        "name": "replaceItem",
        "isStatic": false,
        "params": "[newItem<SVGTransform> index<number>]",
        "returnType": "SVGTransform"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<SVGTransform>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGTransformList}) (new [] SVGTransformList)}"
  },
  "SVGUnitTypes": {
    "kind": "Property",
    "name": "SVGUnitTypes",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGUnitTypes"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGUnitTypes"
      },
      {
        "kind": "Property",
        "name": "SVG_UNIT_TYPE_UNKNOWN",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_UNIT_TYPE_USERSPACEONUSE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "SVG_UNIT_TYPE_UNKNOWN",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "SVG_UNIT_TYPE_USERSPACEONUSE",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX",
        "isStatic": true,
        "returnType": "2"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGUnitTypes}) (new [] SVGUnitTypes) (property {:SVG_UNIT_TYPE_UNKNOWN 0}) (property {:SVG_UNIT_TYPE_USERSPACEONUSE 1}) (property {:SVG_UNIT_TYPE_OBJECTBOUNDINGBOX 2})}"
  },
  "SVGUseElement": {
    "kind": "Property",
    "name": "SVGUseElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGUseElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGUseElement"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "x",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Property",
        "name": "y",
        "isStatic": true,
        "returnType": "SVGAnimatedLength"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGUseElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGUseElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGUseElement}) (new [] SVGUseElement)}"
  },
  "SVGViewElement": {
    "kind": "Property",
    "name": "SVGViewElement",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SVGViewElement"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SVGViewElement"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGViewElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SVGViewElement> ev<(get SVGElementEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SVGViewElement}) (new [] SVGViewElement)}"
  },
  "Screen": {
    "kind": "Property",
    "name": "Screen",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Screen"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Screen"
      },
      {
        "kind": "Property",
        "name": "availHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "availWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "colorDepth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "orientation",
        "isStatic": true,
        "returnType": "ScreenOrientation"
      },
      {
        "kind": "Property",
        "name": "pixelDepth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Screen}) (new [] Screen)}"
  },
  "ScreenOrientation": {
    "kind": "Property",
    "name": "ScreenOrientation",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ScreenOrientation"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ScreenOrientation"
      },
      {
        "kind": "Property",
        "name": "angle",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "onchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<ScreenOrientation> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "OrientationType"
      },
      {
        "kind": "Method",
        "name": "unlock",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ScreenOrientation> ev<(get ScreenOrientationEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ScreenOrientation> ev<(get ScreenOrientationEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ScreenOrientation}) (new [] ScreenOrientation)}"
  },
  "ScriptProcessorNode": {
    "kind": "Property",
    "name": "ScriptProcessorNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ScriptProcessorNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ScriptProcessorNode"
      },
      {
        "kind": "Property",
        "name": "bufferSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "onaudioprocess",
        "isStatic": true,
        "returnType": "(or (list (function [this<ScriptProcessorNode> ev<AudioProcessingEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ScriptProcessorNode> ev<(get ScriptProcessorNodeEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ScriptProcessorNode> ev<(get ScriptProcessorNodeEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ScriptProcessorNode}) (new [] ScriptProcessorNode)}"
  },
  "SecurityPolicyViolationEvent": {
    "kind": "Property",
    "name": "SecurityPolicyViolationEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<SecurityPolicyViolationEventInit>)]",
        "returnType": "SecurityPolicyViolationEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SecurityPolicyViolationEvent"
      },
      {
        "kind": "Property",
        "name": "blockedURI",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "columnNumber",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "disposition",
        "isStatic": true,
        "returnType": "SecurityPolicyViolationEventDisposition"
      },
      {
        "kind": "Property",
        "name": "documentURI",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "effectiveDirective",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lineNumber",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "originalPolicy",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "referrer",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "sample",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "sourceFile",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "statusCode",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "violatedDirective",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<SecurityPolicyViolationEventInit>)]",
        "returnType": "SecurityPolicyViolationEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SecurityPolicyViolationEvent"
      },
      {
        "kind": "Property",
        "name": "blockedURI",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "columnNumber",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "disposition",
        "isStatic": true,
        "returnType": "SecurityPolicyViolationEventDisposition"
      },
      {
        "kind": "Property",
        "name": "documentURI",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "effectiveDirective",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lineNumber",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "originalPolicy",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "referrer",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "sample",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "sourceFile",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "statusCode",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "violatedDirective",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SecurityPolicyViolationEvent}) (new [type<string> (optional eventInitDict<SecurityPolicyViolationEventInit>)] SecurityPolicyViolationEvent)}"
  },
  "Selection": {
    "kind": "Property",
    "name": "Selection",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Selection"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Selection"
      },
      {
        "kind": "Property",
        "name": "anchorNode",
        "isStatic": true,
        "returnType": "(or Node null)"
      },
      {
        "kind": "Property",
        "name": "anchorOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "direction",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "focusNode",
        "isStatic": true,
        "returnType": "(or Node null)"
      },
      {
        "kind": "Property",
        "name": "focusOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "isCollapsed",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "rangeCount",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "addRange",
        "isStatic": false,
        "params": "[range<Range>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "collapse",
        "isStatic": false,
        "params": "[node<(or Node null)> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "collapseToEnd",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "collapseToStart",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "containsNode",
        "isStatic": false,
        "params": "[node<Node> (optional allowPartialContainment<boolean>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "deleteFromDocument",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "empty",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "extend",
        "isStatic": false,
        "params": "[node<Node> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getRangeAt",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "Range"
      },
      {
        "kind": "Method",
        "name": "modify",
        "isStatic": false,
        "params": "[(optional alter<string>) (optional direction<string>) (optional granularity<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeAllRanges",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeRange",
        "isStatic": false,
        "params": "[range<Range>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "selectAllChildren",
        "isStatic": false,
        "params": "[node<Node>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setBaseAndExtent",
        "isStatic": false,
        "params": "[anchorNode<Node> anchorOffset<number> focusNode<Node> focusOffset<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPosition",
        "isStatic": false,
        "params": "[node<(or Node null)> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Selection}) (new [] Selection)}"
  },
  "ServiceWorker": {
    "kind": "Property",
    "name": "ServiceWorker",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ServiceWorker"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ServiceWorker"
      },
      {
        "kind": "Property",
        "name": "onstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorker> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "scriptURL",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "ServiceWorkerState"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> transfer<(array Transferable)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> (optional options<StructuredSerializeOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorker> ev<(get ServiceWorkerEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorker> ev<(get ServiceWorkerEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ServiceWorker"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ServiceWorker"
      },
      {
        "kind": "Property",
        "name": "onstatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorker> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "scriptURL",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "ServiceWorkerState"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> transfer<(array Transferable)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> (optional options<StructuredSerializeOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorker> ev<(get ServiceWorkerEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorker> ev<(get ServiceWorkerEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ServiceWorker}) (new [] ServiceWorker)}"
  },
  "ServiceWorkerContainer": {
    "kind": "Property",
    "name": "ServiceWorkerContainer",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ServiceWorkerContainer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ServiceWorkerContainer"
      },
      {
        "kind": "Property",
        "name": "controller",
        "isStatic": true,
        "returnType": "(or ServiceWorker null)"
      },
      {
        "kind": "Property",
        "name": "oncontrollerchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerContainer> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerContainer> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessageerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerContainer> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ready",
        "isStatic": true,
        "returnType": "Promise<ServiceWorkerRegistration>"
      },
      {
        "kind": "Method",
        "name": "getRegistration",
        "isStatic": false,
        "params": "[(optional clientURL<(or string URL)>)]",
        "returnType": "Promise<(or ServiceWorkerRegistration undefined)>"
      },
      {
        "kind": "Method",
        "name": "getRegistrations",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<ReadonlyArray<ServiceWorkerRegistration>>"
      },
      {
        "kind": "Method",
        "name": "register",
        "isStatic": false,
        "params": "[scriptURL<(or string URL)> (optional options<RegistrationOptions>)]",
        "returnType": "Promise<ServiceWorkerRegistration>"
      },
      {
        "kind": "Method",
        "name": "startMessages",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorkerContainer> ev<(get ServiceWorkerContainerEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorkerContainer> ev<(get ServiceWorkerContainerEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ServiceWorkerContainer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ServiceWorkerContainer"
      },
      {
        "kind": "Property",
        "name": "controller",
        "isStatic": true,
        "returnType": "(or ServiceWorker null)"
      },
      {
        "kind": "Property",
        "name": "oncontrollerchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerContainer> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerContainer> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessageerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerContainer> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ready",
        "isStatic": true,
        "returnType": "Promise<ServiceWorkerRegistration>"
      },
      {
        "kind": "Method",
        "name": "getRegistration",
        "isStatic": false,
        "params": "[(optional clientURL<(or string URL)>)]",
        "returnType": "Promise<(or ServiceWorkerRegistration undefined)>"
      },
      {
        "kind": "Method",
        "name": "getRegistrations",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<ReadonlyArray<ServiceWorkerRegistration>>"
      },
      {
        "kind": "Method",
        "name": "register",
        "isStatic": false,
        "params": "[scriptURL<(or string URL)> (optional options<RegistrationOptions>)]",
        "returnType": "Promise<ServiceWorkerRegistration>"
      },
      {
        "kind": "Method",
        "name": "startMessages",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorkerContainer> ev<(get ServiceWorkerContainerEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorkerContainer> ev<(get ServiceWorkerContainerEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ServiceWorkerContainer}) (new [] ServiceWorkerContainer)}"
  },
  "ServiceWorkerRegistration": {
    "kind": "Property",
    "name": "ServiceWorkerRegistration",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ServiceWorkerRegistration"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ServiceWorkerRegistration"
      },
      {
        "kind": "Property",
        "name": "active",
        "isStatic": true,
        "returnType": "(or ServiceWorker null)"
      },
      {
        "kind": "Property",
        "name": "installing",
        "isStatic": true,
        "returnType": "(or ServiceWorker null)"
      },
      {
        "kind": "Property",
        "name": "navigationPreload",
        "isStatic": true,
        "returnType": "NavigationPreloadManager"
      },
      {
        "kind": "Property",
        "name": "onupdatefound",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerRegistration> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "pushManager",
        "isStatic": true,
        "returnType": "PushManager"
      },
      {
        "kind": "Property",
        "name": "scope",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "updateViaCache",
        "isStatic": true,
        "returnType": "ServiceWorkerUpdateViaCache"
      },
      {
        "kind": "Property",
        "name": "waiting",
        "isStatic": true,
        "returnType": "(or ServiceWorker null)"
      },
      {
        "kind": "Method",
        "name": "getNotifications",
        "isStatic": false,
        "params": "[(optional filter<GetNotificationOptions>)]",
        "returnType": "Promise<(array Notification)>"
      },
      {
        "kind": "Method",
        "name": "showNotification",
        "isStatic": false,
        "params": "[title<string> (optional options<NotificationOptions>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "unregister",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "update",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorkerRegistration> ev<(get ServiceWorkerRegistrationEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorkerRegistration> ev<(get ServiceWorkerRegistrationEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ServiceWorkerRegistration"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ServiceWorkerRegistration"
      },
      {
        "kind": "Property",
        "name": "active",
        "isStatic": true,
        "returnType": "(or ServiceWorker null)"
      },
      {
        "kind": "Property",
        "name": "installing",
        "isStatic": true,
        "returnType": "(or ServiceWorker null)"
      },
      {
        "kind": "Property",
        "name": "navigationPreload",
        "isStatic": true,
        "returnType": "NavigationPreloadManager"
      },
      {
        "kind": "Property",
        "name": "onupdatefound",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerRegistration> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "pushManager",
        "isStatic": true,
        "returnType": "PushManager"
      },
      {
        "kind": "Property",
        "name": "scope",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "updateViaCache",
        "isStatic": true,
        "returnType": "ServiceWorkerUpdateViaCache"
      },
      {
        "kind": "Property",
        "name": "waiting",
        "isStatic": true,
        "returnType": "(or ServiceWorker null)"
      },
      {
        "kind": "Method",
        "name": "getNotifications",
        "isStatic": false,
        "params": "[(optional filter<GetNotificationOptions>)]",
        "returnType": "Promise<(array Notification)>"
      },
      {
        "kind": "Method",
        "name": "showNotification",
        "isStatic": false,
        "params": "[title<string> (optional options<NotificationOptions>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "unregister",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "update",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorkerRegistration> ev<(get ServiceWorkerRegistrationEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorkerRegistration> ev<(get ServiceWorkerRegistrationEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ServiceWorkerRegistration}) (new [] ServiceWorkerRegistration)}"
  },
  "ShadowRoot": {
    "kind": "Property",
    "name": "ShadowRoot",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ShadowRoot"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ShadowRoot"
      },
      {
        "kind": "Property",
        "name": "clonable",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "delegatesFocus",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "host",
        "isStatic": true,
        "returnType": "Element"
      },
      {
        "kind": "Property",
        "name": "innerHTML",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "mode",
        "isStatic": true,
        "returnType": "ShadowRootMode"
      },
      {
        "kind": "Property",
        "name": "onslotchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<ShadowRoot> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "serializable",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "slotAssignment",
        "isStatic": true,
        "returnType": "SlotAssignmentMode"
      },
      {
        "kind": "Method",
        "name": "getHTML",
        "isStatic": false,
        "params": "[(optional options<GetHTMLOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "setHTMLUnsafe",
        "isStatic": false,
        "params": "[html<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ShadowRoot> ev<(get ShadowRootEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ShadowRoot> ev<(get ShadowRootEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ShadowRoot}) (new [] ShadowRoot)}"
  },
  "SharedWorker": {
    "kind": "Property",
    "name": "SharedWorker",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[scriptURL<(or string URL)> (optional options<(or string WorkerOptions)>)]",
        "returnType": "SharedWorker"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SharedWorker"
      },
      {
        "kind": "Property",
        "name": "port",
        "isStatic": true,
        "returnType": "MessagePort"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SharedWorker> ev<(get AbstractWorkerEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SharedWorker> ev<(get AbstractWorkerEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SharedWorker}) (new [scriptURL<(or string URL)> (optional options<(or string WorkerOptions)>)] SharedWorker)}"
  },
  "SourceBuffer": {
    "kind": "Property",
    "name": "SourceBuffer",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SourceBuffer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SourceBuffer"
      },
      {
        "kind": "Property",
        "name": "appendWindowEnd",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "appendWindowStart",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffered",
        "isStatic": true,
        "returnType": "TimeRanges"
      },
      {
        "kind": "Property",
        "name": "mode",
        "isStatic": true,
        "returnType": "AppendMode"
      },
      {
        "kind": "Property",
        "name": "onabort",
        "isStatic": true,
        "returnType": "(or (list (function [this<SourceBuffer> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<SourceBuffer> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onupdate",
        "isStatic": true,
        "returnType": "(or (list (function [this<SourceBuffer> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onupdateend",
        "isStatic": true,
        "returnType": "(or (list (function [this<SourceBuffer> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onupdatestart",
        "isStatic": true,
        "returnType": "(or (list (function [this<SourceBuffer> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "timestampOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "updating",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "appendBuffer",
        "isStatic": false,
        "params": "[data<BufferSource>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeType",
        "isStatic": false,
        "params": "[type<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "remove",
        "isStatic": false,
        "params": "[start<number> end<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SourceBuffer> ev<(get SourceBufferEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SourceBuffer> ev<(get SourceBufferEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SourceBuffer}) (new [] SourceBuffer)}"
  },
  "SourceBufferList": {
    "kind": "Property",
    "name": "SourceBufferList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SourceBufferList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SourceBufferList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "onaddsourcebuffer",
        "isStatic": true,
        "returnType": "(or (list (function [this<SourceBufferList> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onremovesourcebuffer",
        "isStatic": true,
        "returnType": "(or (list (function [this<SourceBufferList> ev<Event>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SourceBufferList> ev<(get SourceBufferListEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SourceBufferList> ev<(get SourceBufferListEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<SourceBuffer>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SourceBufferList}) (new [] SourceBufferList)}"
  },
  "SpeechRecognitionAlternative": {
    "kind": "Property",
    "name": "SpeechRecognitionAlternative",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SpeechRecognitionAlternative"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SpeechRecognitionAlternative"
      },
      {
        "kind": "Property",
        "name": "confidence",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "transcript",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SpeechRecognitionAlternative}) (new [] SpeechRecognitionAlternative)}"
  },
  "SpeechRecognitionResult": {
    "kind": "Property",
    "name": "SpeechRecognitionResult",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SpeechRecognitionResult"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SpeechRecognitionResult"
      },
      {
        "kind": "Property",
        "name": "isFinal",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "SpeechRecognitionAlternative"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<SpeechRecognitionAlternative>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SpeechRecognitionResult}) (new [] SpeechRecognitionResult)}"
  },
  "SpeechRecognitionResultList": {
    "kind": "Property",
    "name": "SpeechRecognitionResultList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SpeechRecognitionResultList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SpeechRecognitionResultList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "SpeechRecognitionResult"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<SpeechRecognitionResult>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SpeechRecognitionResultList}) (new [] SpeechRecognitionResultList)}"
  },
  "SpeechSynthesis": {
    "kind": "Property",
    "name": "SpeechSynthesis",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SpeechSynthesis"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SpeechSynthesis"
      },
      {
        "kind": "Property",
        "name": "onvoiceschanged",
        "isStatic": true,
        "returnType": "(or (list (function [this<SpeechSynthesis> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "paused",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "pending",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "speaking",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "cancel",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getVoices",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array SpeechSynthesisVoice)"
      },
      {
        "kind": "Method",
        "name": "pause",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resume",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "speak",
        "isStatic": false,
        "params": "[utterance<SpeechSynthesisUtterance>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SpeechSynthesis> ev<(get SpeechSynthesisEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SpeechSynthesis> ev<(get SpeechSynthesisEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SpeechSynthesis}) (new [] SpeechSynthesis)}"
  },
  "SpeechSynthesisErrorEvent": {
    "kind": "Property",
    "name": "SpeechSynthesisErrorEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<SpeechSynthesisErrorEventInit>]",
        "returnType": "SpeechSynthesisErrorEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SpeechSynthesisErrorEvent"
      },
      {
        "kind": "Property",
        "name": "error",
        "isStatic": true,
        "returnType": "SpeechSynthesisErrorCode"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SpeechSynthesisErrorEvent}) (new [type<string> eventInitDict<SpeechSynthesisErrorEventInit>] SpeechSynthesisErrorEvent)}"
  },
  "SpeechSynthesisEvent": {
    "kind": "Property",
    "name": "SpeechSynthesisEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<SpeechSynthesisEventInit>]",
        "returnType": "SpeechSynthesisEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SpeechSynthesisEvent"
      },
      {
        "kind": "Property",
        "name": "charIndex",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "charLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "elapsedTime",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "utterance",
        "isStatic": true,
        "returnType": "SpeechSynthesisUtterance"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SpeechSynthesisEvent}) (new [type<string> eventInitDict<SpeechSynthesisEventInit>] SpeechSynthesisEvent)}"
  },
  "SpeechSynthesisUtterance": {
    "kind": "Property",
    "name": "SpeechSynthesisUtterance",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional text<string>)]",
        "returnType": "SpeechSynthesisUtterance"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SpeechSynthesisUtterance"
      },
      {
        "kind": "Property",
        "name": "lang",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onboundary",
        "isStatic": true,
        "returnType": "(or (list (function [this<SpeechSynthesisUtterance> ev<SpeechSynthesisEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onend",
        "isStatic": true,
        "returnType": "(or (list (function [this<SpeechSynthesisUtterance> ev<SpeechSynthesisEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<SpeechSynthesisUtterance> ev<SpeechSynthesisErrorEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmark",
        "isStatic": true,
        "returnType": "(or (list (function [this<SpeechSynthesisUtterance> ev<SpeechSynthesisEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpause",
        "isStatic": true,
        "returnType": "(or (list (function [this<SpeechSynthesisUtterance> ev<SpeechSynthesisEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onresume",
        "isStatic": true,
        "returnType": "(or (list (function [this<SpeechSynthesisUtterance> ev<SpeechSynthesisEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onstart",
        "isStatic": true,
        "returnType": "(or (list (function [this<SpeechSynthesisUtterance> ev<SpeechSynthesisEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "pitch",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "rate",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "text",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "voice",
        "isStatic": true,
        "returnType": "(or SpeechSynthesisVoice null)"
      },
      {
        "kind": "Property",
        "name": "volume",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SpeechSynthesisUtterance> ev<(get SpeechSynthesisUtteranceEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SpeechSynthesisUtterance> ev<(get SpeechSynthesisUtteranceEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SpeechSynthesisUtterance}) (new [(optional text<string>)] SpeechSynthesisUtterance)}"
  },
  "SpeechSynthesisVoice": {
    "kind": "Property",
    "name": "SpeechSynthesisVoice",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SpeechSynthesisVoice"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SpeechSynthesisVoice"
      },
      {
        "kind": "Property",
        "name": "default",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "lang",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "localService",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "voiceURI",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SpeechSynthesisVoice}) (new [] SpeechSynthesisVoice)}"
  },
  "StaticRange": {
    "kind": "Property",
    "name": "StaticRange",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<StaticRangeInit>]",
        "returnType": "StaticRange"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "StaticRange"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype StaticRange}) (new [init<StaticRangeInit>] StaticRange)}"
  },
  "StereoPannerNode": {
    "kind": "Property",
    "name": "StereoPannerNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<StereoPannerOptions>)]",
        "returnType": "StereoPannerNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "StereoPannerNode"
      },
      {
        "kind": "Property",
        "name": "pan",
        "isStatic": true,
        "returnType": "AudioParam"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype StereoPannerNode}) (new [context<BaseAudioContext> (optional options<StereoPannerOptions>)] StereoPannerNode)}"
  },
  "Storage": {
    "kind": "Property",
    "name": "Storage",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Storage"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Storage"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "isStatic": false,
        "params": "[key<string>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "key",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "removeItem",
        "isStatic": false,
        "params": "[key<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setItem",
        "isStatic": false,
        "params": "[key<string> value<string>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Storage}) (new [] Storage)}"
  },
  "StorageEvent": {
    "kind": "Property",
    "name": "StorageEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<StorageEventInit>)]",
        "returnType": "StorageEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "StorageEvent"
      },
      {
        "kind": "Property",
        "name": "key",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "newValue",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "oldValue",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "storageArea",
        "isStatic": true,
        "returnType": "(or Storage null)"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "initStorageEvent",
        "isStatic": false,
        "params": "[type<string> (optional bubbles<boolean>) (optional cancelable<boolean>) (optional key<(or string null)>) (optional oldValue<(or string null)>) (optional newValue<(or string null)>) (optional url<(or string URL)>) (optional storageArea<(or Storage null)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype StorageEvent}) (new [type<string> (optional eventInitDict<StorageEventInit>)] StorageEvent)}"
  },
  "StorageManager": {
    "kind": "Property",
    "name": "StorageManager",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "StorageManager"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "StorageManager"
      },
      {
        "kind": "Method",
        "name": "estimate",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<StorageEstimate>"
      },
      {
        "kind": "Method",
        "name": "getDirectory",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<FileSystemDirectoryHandle>"
      },
      {
        "kind": "Method",
        "name": "persist",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "persisted",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "StorageManager"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "StorageManager"
      },
      {
        "kind": "Method",
        "name": "estimate",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<StorageEstimate>"
      },
      {
        "kind": "Method",
        "name": "getDirectory",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<FileSystemDirectoryHandle>"
      },
      {
        "kind": "Method",
        "name": "persisted",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<boolean>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype StorageManager}) (new [] StorageManager)}"
  },
  "StylePropertyMap": {
    "kind": "Property",
    "name": "StylePropertyMap",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "StylePropertyMap"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "StylePropertyMap"
      },
      {
        "kind": "Method",
        "name": "append",
        "isStatic": false,
        "params": "[property<string> (& rest<values<(array (list (or CSSStyleValue string)))>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[property<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[property<string> (& rest<values<(array (list (or CSSStyleValue string)))>>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype StylePropertyMap}) (new [] StylePropertyMap)}"
  },
  "StylePropertyMapReadOnly": {
    "kind": "Property",
    "name": "StylePropertyMapReadOnly",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "StylePropertyMapReadOnly"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "StylePropertyMapReadOnly"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[property<string>]",
        "returnType": "(or undefined CSSStyleValue)"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "isStatic": false,
        "params": "[property<string>]",
        "returnType": "(array CSSStyleValue)"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[property<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<(array CSSStyleValue)> key<string> parent<StylePropertyMapReadOnly>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "StylePropertyMapReadOnlyIterator<[string Iterable<CSSStyleValue>]>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "StylePropertyMapReadOnlyIterator<[string Iterable<CSSStyleValue>]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "StylePropertyMapReadOnlyIterator<string>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "StylePropertyMapReadOnlyIterator<Iterable<CSSStyleValue>>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "StylePropertyMapReadOnly"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "StylePropertyMapReadOnly"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[property<string>]",
        "returnType": "(or undefined CSSStyleValue)"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "isStatic": false,
        "params": "[property<string>]",
        "returnType": "(array CSSStyleValue)"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[property<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<(array CSSStyleValue)> key<string> parent<StylePropertyMapReadOnly>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "StylePropertyMapReadOnlyIterator<[string Iterable<CSSStyleValue>]>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "StylePropertyMapReadOnlyIterator<[string Iterable<CSSStyleValue>]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "StylePropertyMapReadOnlyIterator<string>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "StylePropertyMapReadOnlyIterator<Iterable<CSSStyleValue>>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype StylePropertyMapReadOnly}) (new [] StylePropertyMapReadOnly)}"
  },
  "StyleSheet": {
    "kind": "Property",
    "name": "StyleSheet",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "StyleSheet"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "StyleSheet"
      },
      {
        "kind": "Property",
        "name": "disabled",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "href",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "media",
        "isStatic": true,
        "returnType": "MediaList"
      },
      {
        "kind": "Property",
        "name": "ownerNode",
        "isStatic": true,
        "returnType": "(or Element ProcessingInstruction null)"
      },
      {
        "kind": "Property",
        "name": "parentStyleSheet",
        "isStatic": true,
        "returnType": "(or CSSStyleSheet null)"
      },
      {
        "kind": "Property",
        "name": "title",
        "isStatic": true,
        "returnType": "(or string null)"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype StyleSheet}) (new [] StyleSheet)}"
  },
  "StyleSheetList": {
    "kind": "Property",
    "name": "StyleSheetList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "StyleSheetList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "StyleSheetList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or CSSStyleSheet null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<CSSStyleSheet>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype StyleSheetList}) (new [] StyleSheetList)}"
  },
  "SubmitEvent": {
    "kind": "Property",
    "name": "SubmitEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<SubmitEventInit>)]",
        "returnType": "SubmitEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SubmitEvent"
      },
      {
        "kind": "Property",
        "name": "submitter",
        "isStatic": true,
        "returnType": "(or HTMLElement null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SubmitEvent}) (new [type<string> (optional eventInitDict<SubmitEventInit>)] SubmitEvent)}"
  },
  "SubtleCrypto": {
    "kind": "Property",
    "name": "SubtleCrypto",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SubtleCrypto"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SubtleCrypto"
      },
      {
        "kind": "Method",
        "name": "decrypt",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier RsaOaepParams AesCtrParams AesCbcParams AesGcmParams)> key<CryptoKey> data<BufferSource>]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "deriveBits",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier EcdhKeyDeriveParams HkdfParams Pbkdf2Params)> baseKey<CryptoKey> (optional length<(or number null)>)]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "deriveKey",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier EcdhKeyDeriveParams HkdfParams Pbkdf2Params)> baseKey<CryptoKey> derivedKeyType<(or AlgorithmIdentifier AesDerivedKeyParams HmacImportParams HkdfParams Pbkdf2Params)> extractable<boolean> keyUsages<(array KeyUsage)>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "digest",
        "isStatic": false,
        "params": "[algorithm<AlgorithmIdentifier> data<BufferSource>]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "encrypt",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier RsaOaepParams AesCtrParams AesCbcParams AesGcmParams)> key<CryptoKey> data<BufferSource>]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "exportKey",
        "isStatic": false,
        "params": "[format<\"jwk\"> key<CryptoKey>]",
        "returnType": "Promise<JsonWebKey>"
      },
      {
        "kind": "Method",
        "name": "exportKey",
        "isStatic": false,
        "params": "[format<Exclude<KeyFormat \"jwk\">> key<CryptoKey>]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "exportKey",
        "isStatic": false,
        "params": "[format<KeyFormat> key<CryptoKey>]",
        "returnType": "Promise<(or ArrayBuffer JsonWebKey)>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<\"Ed25519\"> extractable<boolean> keyUsages<ReadonlyArray<(or \"sign\" \"verify\")>>]",
        "returnType": "Promise<CryptoKeyPair>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<(or RsaHashedKeyGenParams EcKeyGenParams)> extractable<boolean> keyUsages<ReadonlyArray<KeyUsage>>]",
        "returnType": "Promise<CryptoKeyPair>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<(or AesKeyGenParams HmacKeyGenParams Pbkdf2Params)> extractable<boolean> keyUsages<ReadonlyArray<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<AlgorithmIdentifier> extractable<boolean> keyUsages<(array KeyUsage)>]",
        "returnType": "Promise<(or CryptoKeyPair CryptoKey)>"
      },
      {
        "kind": "Method",
        "name": "importKey",
        "isStatic": false,
        "params": "[format<\"jwk\"> keyData<JsonWebKey> algorithm<(or AlgorithmIdentifier RsaHashedImportParams EcKeyImportParams HmacImportParams AesKeyAlgorithm)> extractable<boolean> keyUsages<ReadonlyArray<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "importKey",
        "isStatic": false,
        "params": "[format<Exclude<KeyFormat \"jwk\">> keyData<BufferSource> algorithm<(or AlgorithmIdentifier RsaHashedImportParams EcKeyImportParams HmacImportParams AesKeyAlgorithm)> extractable<boolean> keyUsages<(array KeyUsage)>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "sign",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier RsaPssParams EcdsaParams)> key<CryptoKey> data<BufferSource>]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "unwrapKey",
        "isStatic": false,
        "params": "[format<KeyFormat> wrappedKey<BufferSource> unwrappingKey<CryptoKey> unwrapAlgorithm<(or AlgorithmIdentifier RsaOaepParams AesCtrParams AesCbcParams AesGcmParams)> unwrappedKeyAlgorithm<(or AlgorithmIdentifier RsaHashedImportParams EcKeyImportParams HmacImportParams AesKeyAlgorithm)> extractable<boolean> keyUsages<(array KeyUsage)>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "verify",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier RsaPssParams EcdsaParams)> key<CryptoKey> signature<BufferSource> data<BufferSource>]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "wrapKey",
        "isStatic": false,
        "params": "[format<KeyFormat> key<CryptoKey> wrappingKey<CryptoKey> wrapAlgorithm<(or AlgorithmIdentifier RsaOaepParams AesCtrParams AesCbcParams AesGcmParams)>]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "deriveKey",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier EcdhKeyDeriveParams HkdfParams Pbkdf2Params)> baseKey<CryptoKey> derivedKeyType<(or AlgorithmIdentifier AesDerivedKeyParams HmacImportParams HkdfParams Pbkdf2Params)> extractable<boolean> keyUsages<Iterable<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<\"Ed25519\"> extractable<boolean> keyUsages<ReadonlyArray<(or \"sign\" \"verify\")>>]",
        "returnType": "Promise<CryptoKeyPair>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<(or RsaHashedKeyGenParams EcKeyGenParams)> extractable<boolean> keyUsages<ReadonlyArray<KeyUsage>>]",
        "returnType": "Promise<CryptoKeyPair>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<(or AesKeyGenParams HmacKeyGenParams Pbkdf2Params)> extractable<boolean> keyUsages<ReadonlyArray<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<AlgorithmIdentifier> extractable<boolean> keyUsages<Iterable<KeyUsage>>]",
        "returnType": "Promise<(or CryptoKeyPair CryptoKey)>"
      },
      {
        "kind": "Method",
        "name": "importKey",
        "isStatic": false,
        "params": "[format<\"jwk\"> keyData<JsonWebKey> algorithm<(or AlgorithmIdentifier RsaHashedImportParams EcKeyImportParams HmacImportParams AesKeyAlgorithm)> extractable<boolean> keyUsages<ReadonlyArray<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "importKey",
        "isStatic": false,
        "params": "[format<Exclude<KeyFormat \"jwk\">> keyData<BufferSource> algorithm<(or AlgorithmIdentifier RsaHashedImportParams EcKeyImportParams HmacImportParams AesKeyAlgorithm)> extractable<boolean> keyUsages<Iterable<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "unwrapKey",
        "isStatic": false,
        "params": "[format<KeyFormat> wrappedKey<BufferSource> unwrappingKey<CryptoKey> unwrapAlgorithm<(or AlgorithmIdentifier RsaOaepParams AesCtrParams AesCbcParams AesGcmParams)> unwrappedKeyAlgorithm<(or AlgorithmIdentifier RsaHashedImportParams EcKeyImportParams HmacImportParams AesKeyAlgorithm)> extractable<boolean> keyUsages<Iterable<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SubtleCrypto"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SubtleCrypto"
      },
      {
        "kind": "Method",
        "name": "decrypt",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier RsaOaepParams AesCtrParams AesCbcParams AesGcmParams)> key<CryptoKey> data<BufferSource>]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "deriveBits",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier EcdhKeyDeriveParams HkdfParams Pbkdf2Params)> baseKey<CryptoKey> (optional length<(or number null)>)]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "deriveKey",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier EcdhKeyDeriveParams HkdfParams Pbkdf2Params)> baseKey<CryptoKey> derivedKeyType<(or AlgorithmIdentifier AesDerivedKeyParams HmacImportParams HkdfParams Pbkdf2Params)> extractable<boolean> keyUsages<(array KeyUsage)>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "digest",
        "isStatic": false,
        "params": "[algorithm<AlgorithmIdentifier> data<BufferSource>]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "encrypt",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier RsaOaepParams AesCtrParams AesCbcParams AesGcmParams)> key<CryptoKey> data<BufferSource>]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "exportKey",
        "isStatic": false,
        "params": "[format<\"jwk\"> key<CryptoKey>]",
        "returnType": "Promise<JsonWebKey>"
      },
      {
        "kind": "Method",
        "name": "exportKey",
        "isStatic": false,
        "params": "[format<Exclude<KeyFormat \"jwk\">> key<CryptoKey>]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "exportKey",
        "isStatic": false,
        "params": "[format<KeyFormat> key<CryptoKey>]",
        "returnType": "Promise<(or ArrayBuffer JsonWebKey)>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<\"Ed25519\"> extractable<boolean> keyUsages<ReadonlyArray<(or \"sign\" \"verify\")>>]",
        "returnType": "Promise<CryptoKeyPair>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<(or RsaHashedKeyGenParams EcKeyGenParams)> extractable<boolean> keyUsages<ReadonlyArray<KeyUsage>>]",
        "returnType": "Promise<CryptoKeyPair>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<(or AesKeyGenParams HmacKeyGenParams Pbkdf2Params)> extractable<boolean> keyUsages<ReadonlyArray<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<AlgorithmIdentifier> extractable<boolean> keyUsages<(array KeyUsage)>]",
        "returnType": "Promise<(or CryptoKeyPair CryptoKey)>"
      },
      {
        "kind": "Method",
        "name": "importKey",
        "isStatic": false,
        "params": "[format<\"jwk\"> keyData<JsonWebKey> algorithm<(or AlgorithmIdentifier RsaHashedImportParams EcKeyImportParams HmacImportParams AesKeyAlgorithm)> extractable<boolean> keyUsages<ReadonlyArray<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "importKey",
        "isStatic": false,
        "params": "[format<Exclude<KeyFormat \"jwk\">> keyData<BufferSource> algorithm<(or AlgorithmIdentifier RsaHashedImportParams EcKeyImportParams HmacImportParams AesKeyAlgorithm)> extractable<boolean> keyUsages<(array KeyUsage)>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "sign",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier RsaPssParams EcdsaParams)> key<CryptoKey> data<BufferSource>]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "unwrapKey",
        "isStatic": false,
        "params": "[format<KeyFormat> wrappedKey<BufferSource> unwrappingKey<CryptoKey> unwrapAlgorithm<(or AlgorithmIdentifier RsaOaepParams AesCtrParams AesCbcParams AesGcmParams)> unwrappedKeyAlgorithm<(or AlgorithmIdentifier RsaHashedImportParams EcKeyImportParams HmacImportParams AesKeyAlgorithm)> extractable<boolean> keyUsages<(array KeyUsage)>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "verify",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier RsaPssParams EcdsaParams)> key<CryptoKey> signature<BufferSource> data<BufferSource>]",
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "wrapKey",
        "isStatic": false,
        "params": "[format<KeyFormat> key<CryptoKey> wrappingKey<CryptoKey> wrapAlgorithm<(or AlgorithmIdentifier RsaOaepParams AesCtrParams AesCbcParams AesGcmParams)>]",
        "returnType": "Promise<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "deriveKey",
        "isStatic": false,
        "params": "[algorithm<(or AlgorithmIdentifier EcdhKeyDeriveParams HkdfParams Pbkdf2Params)> baseKey<CryptoKey> derivedKeyType<(or AlgorithmIdentifier AesDerivedKeyParams HmacImportParams HkdfParams Pbkdf2Params)> extractable<boolean> keyUsages<Iterable<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<\"Ed25519\"> extractable<boolean> keyUsages<ReadonlyArray<(or \"sign\" \"verify\")>>]",
        "returnType": "Promise<CryptoKeyPair>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<(or RsaHashedKeyGenParams EcKeyGenParams)> extractable<boolean> keyUsages<ReadonlyArray<KeyUsage>>]",
        "returnType": "Promise<CryptoKeyPair>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<(or AesKeyGenParams HmacKeyGenParams Pbkdf2Params)> extractable<boolean> keyUsages<ReadonlyArray<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "generateKey",
        "isStatic": false,
        "params": "[algorithm<AlgorithmIdentifier> extractable<boolean> keyUsages<Iterable<KeyUsage>>]",
        "returnType": "Promise<(or CryptoKeyPair CryptoKey)>"
      },
      {
        "kind": "Method",
        "name": "importKey",
        "isStatic": false,
        "params": "[format<\"jwk\"> keyData<JsonWebKey> algorithm<(or AlgorithmIdentifier RsaHashedImportParams EcKeyImportParams HmacImportParams AesKeyAlgorithm)> extractable<boolean> keyUsages<ReadonlyArray<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "importKey",
        "isStatic": false,
        "params": "[format<Exclude<KeyFormat \"jwk\">> keyData<BufferSource> algorithm<(or AlgorithmIdentifier RsaHashedImportParams EcKeyImportParams HmacImportParams AesKeyAlgorithm)> extractable<boolean> keyUsages<Iterable<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      },
      {
        "kind": "Method",
        "name": "unwrapKey",
        "isStatic": false,
        "params": "[format<KeyFormat> wrappedKey<BufferSource> unwrappingKey<CryptoKey> unwrapAlgorithm<(or AlgorithmIdentifier RsaOaepParams AesCtrParams AesCbcParams AesGcmParams)> unwrappedKeyAlgorithm<(or AlgorithmIdentifier RsaHashedImportParams EcKeyImportParams HmacImportParams AesKeyAlgorithm)> extractable<boolean> keyUsages<Iterable<KeyUsage>>]",
        "returnType": "Promise<CryptoKey>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SubtleCrypto}) (new [] SubtleCrypto)}"
  },
  "Text": {
    "kind": "Property",
    "name": "Text",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional data<string>)]",
        "returnType": "Text"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Text"
      },
      {
        "kind": "Property",
        "name": "wholeText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "splitText",
        "isStatic": false,
        "params": "[offset<number>]",
        "returnType": "Text"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Text}) (new [(optional data<string>)] Text)}"
  },
  "TextDecoder": {
    "kind": "Property",
    "name": "TextDecoder",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional label<string>) (optional options<TextDecoderOptions>)]",
        "returnType": "TextDecoder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextDecoder"
      },
      {
        "kind": "Method",
        "name": "decode",
        "isStatic": false,
        "params": "[(optional input<AllowSharedBufferSource>) (optional options<TextDecodeOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional label<string>) (optional options<TextDecoderOptions>)]",
        "returnType": "TextDecoder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextDecoder"
      },
      {
        "kind": "Method",
        "name": "decode",
        "isStatic": false,
        "params": "[(optional input<AllowSharedBufferSource>) (optional options<TextDecodeOptions>)]",
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TextDecoder}) (new [(optional label<string>) (optional options<TextDecoderOptions>)] TextDecoder)}"
  },
  "TextDecoderStream": {
    "kind": "Property",
    "name": "TextDecoderStream",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional label<string>) (optional options<TextDecoderOptions>)]",
        "returnType": "TextDecoderStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextDecoderStream"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream<string>"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream<BufferSource>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional label<string>) (optional options<TextDecoderOptions>)]",
        "returnType": "TextDecoderStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextDecoderStream"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream<string>"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream<BufferSource>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TextDecoderStream}) (new [(optional label<string>) (optional options<TextDecoderOptions>)] TextDecoderStream)}"
  },
  "TextEncoder": {
    "kind": "Property",
    "name": "TextEncoder",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TextEncoder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextEncoder"
      },
      {
        "kind": "Method",
        "name": "encode",
        "isStatic": false,
        "params": "[(optional input<string>)]",
        "returnType": "Uint8Array"
      },
      {
        "kind": "Method",
        "name": "encodeInto",
        "isStatic": false,
        "params": "[source<string> destination<Uint8Array>]",
        "returnType": "TextEncoderEncodeIntoResult"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TextEncoder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextEncoder"
      },
      {
        "kind": "Method",
        "name": "encode",
        "isStatic": false,
        "params": "[(optional input<string>)]",
        "returnType": "Uint8Array"
      },
      {
        "kind": "Method",
        "name": "encodeInto",
        "isStatic": false,
        "params": "[source<string> destination<Uint8Array>]",
        "returnType": "TextEncoderEncodeIntoResult"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TextEncoder}) (new [] TextEncoder)}"
  },
  "TextEncoderStream": {
    "kind": "Property",
    "name": "TextEncoderStream",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TextEncoderStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextEncoderStream"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream<Uint8Array>"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream<string>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TextEncoderStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextEncoderStream"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream<Uint8Array>"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream<string>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TextEncoderStream}) (new [] TextEncoderStream)}"
  },
  "TextEvent": {
    "kind": "Property",
    "name": "TextEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TextEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextEvent"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "initTextEvent",
        "isStatic": false,
        "params": "[type<string> (optional bubbles<boolean>) (optional cancelable<boolean>) (optional view<(or Window null)>) (optional data<string>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TextEvent}) (new [] TextEvent)}"
  },
  "TextMetrics": {
    "kind": "Property",
    "name": "TextMetrics",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TextMetrics"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextMetrics"
      },
      {
        "kind": "Property",
        "name": "actualBoundingBoxAscent",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "actualBoundingBoxDescent",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "actualBoundingBoxLeft",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "actualBoundingBoxRight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "alphabeticBaseline",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "emHeightAscent",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "emHeightDescent",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "fontBoundingBoxAscent",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "fontBoundingBoxDescent",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "hangingBaseline",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ideographicBaseline",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TextMetrics"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextMetrics"
      },
      {
        "kind": "Property",
        "name": "actualBoundingBoxAscent",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "actualBoundingBoxDescent",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "actualBoundingBoxLeft",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "actualBoundingBoxRight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "alphabeticBaseline",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "emHeightAscent",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "emHeightDescent",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "fontBoundingBoxAscent",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "fontBoundingBoxDescent",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "hangingBaseline",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ideographicBaseline",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TextMetrics}) (new [] TextMetrics)}"
  },
  "TextTrack": {
    "kind": "Property",
    "name": "TextTrack",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TextTrack"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextTrack"
      },
      {
        "kind": "Property",
        "name": "activeCues",
        "isStatic": true,
        "returnType": "(or TextTrackCueList null)"
      },
      {
        "kind": "Property",
        "name": "cues",
        "isStatic": true,
        "returnType": "(or TextTrackCueList null)"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "inBandMetadataTrackDispatchType",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "kind",
        "isStatic": true,
        "returnType": "TextTrackKind"
      },
      {
        "kind": "Property",
        "name": "label",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "language",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "mode",
        "isStatic": true,
        "returnType": "TextTrackMode"
      },
      {
        "kind": "Property",
        "name": "oncuechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<TextTrack> ev<Event>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "addCue",
        "isStatic": false,
        "params": "[cue<TextTrackCue>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeCue",
        "isStatic": false,
        "params": "[cue<TextTrackCue>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<TextTrack> ev<(get TextTrackEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<TextTrack> ev<(get TextTrackEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TextTrack}) (new [] TextTrack)}"
  },
  "TextTrackCue": {
    "kind": "Property",
    "name": "TextTrackCue",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TextTrackCue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextTrackCue"
      },
      {
        "kind": "Property",
        "name": "endTime",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onenter",
        "isStatic": true,
        "returnType": "(or (list (function [this<TextTrackCue> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onexit",
        "isStatic": true,
        "returnType": "(or (list (function [this<TextTrackCue> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "pauseOnExit",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "startTime",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "track",
        "isStatic": true,
        "returnType": "(or TextTrack null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<TextTrackCue> ev<(get TextTrackCueEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<TextTrackCue> ev<(get TextTrackCueEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TextTrackCue}) (new [] TextTrackCue)}"
  },
  "TextTrackCueList": {
    "kind": "Property",
    "name": "TextTrackCueList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TextTrackCueList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextTrackCueList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getCueById",
        "isStatic": false,
        "params": "[id<string>]",
        "returnType": "(or TextTrackCue null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<TextTrackCue>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TextTrackCueList}) (new [] TextTrackCueList)}"
  },
  "TextTrackList": {
    "kind": "Property",
    "name": "TextTrackList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TextTrackList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TextTrackList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "onaddtrack",
        "isStatic": true,
        "returnType": "(or (list (function [this<TextTrackList> ev<TrackEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<TextTrackList> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onremovetrack",
        "isStatic": true,
        "returnType": "(or (list (function [this<TextTrackList> ev<TrackEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "getTrackById",
        "isStatic": false,
        "params": "[id<string>]",
        "returnType": "(or TextTrack null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<TextTrackList> ev<(get TextTrackListEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<TextTrackList> ev<(get TextTrackListEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<TextTrack>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TextTrackList}) (new [] TextTrackList)}"
  },
  "TimeRanges": {
    "kind": "Property",
    "name": "TimeRanges",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TimeRanges"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TimeRanges"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "end",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "start",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TimeRanges}) (new [] TimeRanges)}"
  },
  "ToggleEvent": {
    "kind": "Property",
    "name": "ToggleEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<ToggleEventInit>)]",
        "returnType": "ToggleEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ToggleEvent"
      },
      {
        "kind": "Property",
        "name": "newState",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "oldState",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ToggleEvent}) (new [type<string> (optional eventInitDict<ToggleEventInit>)] ToggleEvent)}"
  },
  "Touch": {
    "kind": "Property",
    "name": "Touch",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[touchInitDict<TouchInit>]",
        "returnType": "Touch"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Touch"
      },
      {
        "kind": "Property",
        "name": "clientX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "clientY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "force",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "identifier",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "pageX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "pageY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "radiusX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "radiusY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "rotationAngle",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "screenX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "screenY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "target",
        "isStatic": true,
        "returnType": "EventTarget"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Touch}) (new [touchInitDict<TouchInit>] Touch)}"
  },
  "TouchEvent": {
    "kind": "Property",
    "name": "TouchEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<TouchEventInit>)]",
        "returnType": "TouchEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TouchEvent"
      },
      {
        "kind": "Property",
        "name": "altKey",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "changedTouches",
        "isStatic": true,
        "returnType": "TouchList"
      },
      {
        "kind": "Property",
        "name": "ctrlKey",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "metaKey",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "shiftKey",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "targetTouches",
        "isStatic": true,
        "returnType": "TouchList"
      },
      {
        "kind": "Property",
        "name": "touches",
        "isStatic": true,
        "returnType": "TouchList"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TouchEvent}) (new [type<string> (optional eventInitDict<TouchEventInit>)] TouchEvent)}"
  },
  "TouchList": {
    "kind": "Property",
    "name": "TouchList",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TouchList"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TouchList"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or Touch null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<Touch>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TouchList}) (new [] TouchList)}"
  },
  "TrackEvent": {
    "kind": "Property",
    "name": "TrackEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<TrackEventInit>)]",
        "returnType": "TrackEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TrackEvent"
      },
      {
        "kind": "Property",
        "name": "track",
        "isStatic": true,
        "returnType": "(or TextTrack null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TrackEvent}) (new [type<string> (optional eventInitDict<TrackEventInit>)] TrackEvent)}"
  },
  "TransformStream": {
    "kind": "Property",
    "name": "TransformStream",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional transformer<Transformer<I O>>) (optional writableStrategy<QueuingStrategy<I>>) (optional readableStrategy<QueuingStrategy<O>>)]",
        "returnType": "TransformStream<I O>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TransformStream"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream<O>"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream<I>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional transformer<Transformer<I O>>) (optional writableStrategy<QueuingStrategy<I>>) (optional readableStrategy<QueuingStrategy<O>>)]",
        "returnType": "TransformStream<I O>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TransformStream"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream<O>"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream<I>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TransformStream}) (new [(optional transformer<Transformer<I O>>) (optional writableStrategy<QueuingStrategy<I>>) (optional readableStrategy<QueuingStrategy<O>>)] TransformStream<I O>)}"
  },
  "TransformStreamDefaultController": {
    "kind": "Property",
    "name": "TransformStreamDefaultController",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TransformStreamDefaultController"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TransformStreamDefaultController"
      },
      {
        "kind": "Property",
        "name": "desiredSize",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Method",
        "name": "enqueue",
        "isStatic": false,
        "params": "[(optional chunk<O>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "error",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "terminate",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TransformStreamDefaultController"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TransformStreamDefaultController"
      },
      {
        "kind": "Property",
        "name": "desiredSize",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Method",
        "name": "enqueue",
        "isStatic": false,
        "params": "[(optional chunk<O>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "error",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "terminate",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TransformStreamDefaultController}) (new [] TransformStreamDefaultController)}"
  },
  "TransitionEvent": {
    "kind": "Property",
    "name": "TransitionEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional transitionEventInitDict<TransitionEventInit>)]",
        "returnType": "TransitionEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TransitionEvent"
      },
      {
        "kind": "Property",
        "name": "elapsedTime",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "propertyName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pseudoElement",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TransitionEvent}) (new [type<string> (optional transitionEventInitDict<TransitionEventInit>)] TransitionEvent)}"
  },
  "TreeWalker": {
    "kind": "Property",
    "name": "TreeWalker",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "TreeWalker"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "TreeWalker"
      },
      {
        "kind": "Property",
        "name": "currentNode",
        "isStatic": true,
        "returnType": "Node"
      },
      {
        "kind": "Property",
        "name": "filter",
        "isStatic": true,
        "returnType": "(or NodeFilter null)"
      },
      {
        "kind": "Property",
        "name": "root",
        "isStatic": true,
        "returnType": "Node"
      },
      {
        "kind": "Property",
        "name": "whatToShow",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "firstChild",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Node null)"
      },
      {
        "kind": "Method",
        "name": "lastChild",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Node null)"
      },
      {
        "kind": "Method",
        "name": "nextNode",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Node null)"
      },
      {
        "kind": "Method",
        "name": "nextSibling",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Node null)"
      },
      {
        "kind": "Method",
        "name": "parentNode",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Node null)"
      },
      {
        "kind": "Method",
        "name": "previousNode",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Node null)"
      },
      {
        "kind": "Method",
        "name": "previousSibling",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Node null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype TreeWalker}) (new [] TreeWalker)}"
  },
  "UIEvent": {
    "kind": "Property",
    "name": "UIEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<UIEventInit>)]",
        "returnType": "UIEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "UIEvent"
      },
      {
        "kind": "Property",
        "name": "detail",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "view",
        "isStatic": true,
        "returnType": "(or Window null)"
      },
      {
        "kind": "Property",
        "name": "which",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "initUIEvent",
        "isStatic": false,
        "params": "[typeArg<string> (optional bubblesArg<boolean>) (optional cancelableArg<boolean>) (optional viewArg<(or Window null)>) (optional detailArg<number>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype UIEvent}) (new [type<string> (optional eventInitDict<UIEventInit>)] UIEvent)}"
  },
  "URL": {
    "kind": "Property",
    "name": "URL",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[url<(or string URL)> (optional base<(or string URL)>)]",
        "returnType": "URL"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "URL"
      },
      {
        "kind": "Method",
        "name": "canParse",
        "isStatic": false,
        "params": "[url<(or string URL)> (optional base<(or string URL)>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "createObjectURL",
        "isStatic": false,
        "params": "[obj<(or Blob MediaSource)>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "parse",
        "isStatic": false,
        "params": "[url<(or string URL)> (optional base<(or string URL)>)]",
        "returnType": "(or URL null)"
      },
      {
        "kind": "Method",
        "name": "revokeObjectURL",
        "isStatic": false,
        "params": "[url<string>]",
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "hash",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "host",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "hostname",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "href",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "origin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "password",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pathname",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "port",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "protocol",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "search",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "searchParams",
        "isStatic": true,
        "returnType": "URLSearchParams"
      },
      {
        "kind": "Property",
        "name": "username",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[url<(or string URL)> (optional base<(or string URL)>)]",
        "returnType": "URL"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "URL"
      },
      {
        "kind": "Method",
        "name": "canParse",
        "isStatic": false,
        "params": "[url<(or string URL)> (optional base<(or string URL)>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "createObjectURL",
        "isStatic": false,
        "params": "[obj<Blob>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "parse",
        "isStatic": false,
        "params": "[url<(or string URL)> (optional base<(or string URL)>)]",
        "returnType": "(or URL null)"
      },
      {
        "kind": "Method",
        "name": "revokeObjectURL",
        "isStatic": false,
        "params": "[url<string>]",
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "hash",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "host",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "hostname",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "href",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "origin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "password",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pathname",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "port",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "protocol",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "search",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "searchParams",
        "isStatic": true,
        "returnType": "URLSearchParams"
      },
      {
        "kind": "Property",
        "name": "username",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype URL}) (new [url<(or string URL)> (optional base<(or string URL)>)] URL) (method [url<(or string URL)> (optional base<(or string URL)>)])<boolean> (method [obj<(or Blob MediaSource)>])<string> (method [url<(or string URL)> (optional base<(or string URL)>)])<(or URL null)> (method [url<string>])<void>}"
  },
  "URLSearchParams": {
    "kind": "Property",
    "name": "URLSearchParams",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional init<(or (array (array string)) Record<string string> string URLSearchParams)>)]",
        "returnType": "URLSearchParams"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "URLSearchParams"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "append",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[name<string> (optional value<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(array string)"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[name<string> (optional value<string>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<string> key<string> parent<URLSearchParams>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "URLSearchParamsIterator<[string string]>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "URLSearchParamsIterator<[string string]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "URLSearchParamsIterator<string>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "URLSearchParamsIterator<string>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional init<(or (array (array string)) Record<string string> string URLSearchParams)>)]",
        "returnType": "URLSearchParams"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "URLSearchParams"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "append",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[name<string> (optional value<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(array string)"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[name<string> (optional value<string>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<string> key<string> parent<URLSearchParams>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "URLSearchParamsIterator<[string string]>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "URLSearchParamsIterator<[string string]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "URLSearchParamsIterator<string>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "URLSearchParamsIterator<string>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype URLSearchParams}) (new [(optional init<(or (array (array string)) Record<string string> string URLSearchParams)>)] URLSearchParams)}"
  },
  "UserActivation": {
    "kind": "Property",
    "name": "UserActivation",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "UserActivation"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "UserActivation"
      },
      {
        "kind": "Property",
        "name": "hasBeenActive",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "isActive",
        "isStatic": true,
        "returnType": "boolean"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype UserActivation}) (new [] UserActivation)}"
  },
  "VTTCue": {
    "kind": "Property",
    "name": "VTTCue",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[startTime<number> endTime<number> text<string>]",
        "returnType": "VTTCue"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "VTTCue"
      },
      {
        "kind": "Property",
        "name": "align",
        "isStatic": true,
        "returnType": "AlignSetting"
      },
      {
        "kind": "Property",
        "name": "line",
        "isStatic": true,
        "returnType": "LineAndPositionSetting"
      },
      {
        "kind": "Property",
        "name": "lineAlign",
        "isStatic": true,
        "returnType": "LineAlignSetting"
      },
      {
        "kind": "Property",
        "name": "position",
        "isStatic": true,
        "returnType": "LineAndPositionSetting"
      },
      {
        "kind": "Property",
        "name": "positionAlign",
        "isStatic": true,
        "returnType": "PositionAlignSetting"
      },
      {
        "kind": "Property",
        "name": "region",
        "isStatic": true,
        "returnType": "(or VTTRegion null)"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "snapToLines",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "text",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "vertical",
        "isStatic": true,
        "returnType": "DirectionSetting"
      },
      {
        "kind": "Method",
        "name": "getCueAsHTML",
        "isStatic": false,
        "params": "[]",
        "returnType": "DocumentFragment"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<VTTCue> ev<(get TextTrackCueEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<VTTCue> ev<(get TextTrackCueEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype VTTCue}) (new [startTime<number> endTime<number> text<string>] VTTCue)}"
  },
  "VTTRegion": {
    "kind": "Property",
    "name": "VTTRegion",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "VTTRegion"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "VTTRegion"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "lines",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "regionAnchorX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "regionAnchorY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scroll",
        "isStatic": true,
        "returnType": "ScrollSetting"
      },
      {
        "kind": "Property",
        "name": "viewportAnchorX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "viewportAnchorY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype VTTRegion}) (new [] VTTRegion)}"
  },
  "ValidityState": {
    "kind": "Property",
    "name": "ValidityState",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ValidityState"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ValidityState"
      },
      {
        "kind": "Property",
        "name": "badInput",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "customError",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "patternMismatch",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "rangeOverflow",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "rangeUnderflow",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "stepMismatch",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "tooLong",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "tooShort",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "typeMismatch",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "valid",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "valueMissing",
        "isStatic": true,
        "returnType": "boolean"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ValidityState}) (new [] ValidityState)}"
  },
  "VideoColorSpace": {
    "kind": "Property",
    "name": "VideoColorSpace",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional init<VideoColorSpaceInit>)]",
        "returnType": "VideoColorSpace"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "VideoColorSpace"
      },
      {
        "kind": "Property",
        "name": "fullRange",
        "isStatic": true,
        "returnType": "(or boolean null)"
      },
      {
        "kind": "Property",
        "name": "matrix",
        "isStatic": true,
        "returnType": "(or VideoMatrixCoefficients null)"
      },
      {
        "kind": "Property",
        "name": "primaries",
        "isStatic": true,
        "returnType": "(or VideoColorPrimaries null)"
      },
      {
        "kind": "Property",
        "name": "transfer",
        "isStatic": true,
        "returnType": "(or VideoTransferCharacteristics null)"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "VideoColorSpaceInit"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional init<VideoColorSpaceInit>)]",
        "returnType": "VideoColorSpace"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "VideoColorSpace"
      },
      {
        "kind": "Property",
        "name": "fullRange",
        "isStatic": true,
        "returnType": "(or boolean null)"
      },
      {
        "kind": "Property",
        "name": "matrix",
        "isStatic": true,
        "returnType": "(or VideoMatrixCoefficients null)"
      },
      {
        "kind": "Property",
        "name": "primaries",
        "isStatic": true,
        "returnType": "(or VideoColorPrimaries null)"
      },
      {
        "kind": "Property",
        "name": "transfer",
        "isStatic": true,
        "returnType": "(or VideoTransferCharacteristics null)"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[]",
        "returnType": "VideoColorSpaceInit"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype VideoColorSpace}) (new [(optional init<VideoColorSpaceInit>)] VideoColorSpace)}"
  },
  "VideoDecoder": {
    "kind": "Property",
    "name": "VideoDecoder",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<VideoDecoderInit>]",
        "returnType": "VideoDecoder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "VideoDecoder"
      },
      {
        "kind": "Method",
        "name": "isConfigSupported",
        "isStatic": false,
        "params": "[config<VideoDecoderConfig>]",
        "returnType": "Promise<VideoDecoderSupport>"
      },
      {
        "kind": "Property",
        "name": "decodeQueueSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ondequeue",
        "isStatic": true,
        "returnType": "(or (list (function [this<VideoDecoder> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "CodecState"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "configure",
        "isStatic": false,
        "params": "[config<VideoDecoderConfig>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "decode",
        "isStatic": false,
        "params": "[chunk<EncodedVideoChunk>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "flush",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "reset",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<VideoDecoder> ev<(get VideoDecoderEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<VideoDecoder> ev<(get VideoDecoderEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<VideoDecoderInit>]",
        "returnType": "VideoDecoder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "VideoDecoder"
      },
      {
        "kind": "Method",
        "name": "isConfigSupported",
        "isStatic": false,
        "params": "[config<VideoDecoderConfig>]",
        "returnType": "Promise<VideoDecoderSupport>"
      },
      {
        "kind": "Property",
        "name": "decodeQueueSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ondequeue",
        "isStatic": true,
        "returnType": "(or (list (function [this<VideoDecoder> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "CodecState"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "configure",
        "isStatic": false,
        "params": "[config<VideoDecoderConfig>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "decode",
        "isStatic": false,
        "params": "[chunk<EncodedVideoChunk>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "flush",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "reset",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<VideoDecoder> ev<(get VideoDecoderEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<VideoDecoder> ev<(get VideoDecoderEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype VideoDecoder}) (new [init<VideoDecoderInit>] VideoDecoder) (method [config<VideoDecoderConfig>])<Promise<VideoDecoderSupport>>}"
  },
  "VideoEncoder": {
    "kind": "Property",
    "name": "VideoEncoder",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<VideoEncoderInit>]",
        "returnType": "VideoEncoder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "VideoEncoder"
      },
      {
        "kind": "Method",
        "name": "isConfigSupported",
        "isStatic": false,
        "params": "[config<VideoEncoderConfig>]",
        "returnType": "Promise<VideoEncoderSupport>"
      },
      {
        "kind": "Property",
        "name": "encodeQueueSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ondequeue",
        "isStatic": true,
        "returnType": "(or (list (function [this<VideoEncoder> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "CodecState"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "configure",
        "isStatic": false,
        "params": "[config<VideoEncoderConfig>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "encode",
        "isStatic": false,
        "params": "[frame<VideoFrame> (optional options<VideoEncoderEncodeOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "flush",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "reset",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<VideoEncoder> ev<(get VideoEncoderEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<VideoEncoder> ev<(get VideoEncoderEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<VideoEncoderInit>]",
        "returnType": "VideoEncoder"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "VideoEncoder"
      },
      {
        "kind": "Method",
        "name": "isConfigSupported",
        "isStatic": false,
        "params": "[config<VideoEncoderConfig>]",
        "returnType": "Promise<VideoEncoderSupport>"
      },
      {
        "kind": "Property",
        "name": "encodeQueueSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "ondequeue",
        "isStatic": true,
        "returnType": "(or (list (function [this<VideoEncoder> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "state",
        "isStatic": true,
        "returnType": "CodecState"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "configure",
        "isStatic": false,
        "params": "[config<VideoEncoderConfig>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "encode",
        "isStatic": false,
        "params": "[frame<VideoFrame> (optional options<VideoEncoderEncodeOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "flush",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "reset",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<VideoEncoder> ev<(get VideoEncoderEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<VideoEncoder> ev<(get VideoEncoderEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype VideoEncoder}) (new [init<VideoEncoderInit>] VideoEncoder) (method [config<VideoEncoderConfig>])<Promise<VideoEncoderSupport>>}"
  },
  "VideoFrame": {
    "kind": "Property",
    "name": "VideoFrame",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[image<CanvasImageSource> (optional init<VideoFrameInit>)]",
        "returnType": "VideoFrame"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[data<AllowSharedBufferSource> init<VideoFrameBufferInit>]",
        "returnType": "VideoFrame"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "VideoFrame"
      },
      {
        "kind": "Property",
        "name": "codedHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "codedRect",
        "isStatic": true,
        "returnType": "(or DOMRectReadOnly null)"
      },
      {
        "kind": "Property",
        "name": "codedWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "colorSpace",
        "isStatic": true,
        "returnType": "VideoColorSpace"
      },
      {
        "kind": "Property",
        "name": "displayHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "displayWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "format",
        "isStatic": true,
        "returnType": "(or VideoPixelFormat null)"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "visibleRect",
        "isStatic": true,
        "returnType": "(or DOMRectReadOnly null)"
      },
      {
        "kind": "Method",
        "name": "allocationSize",
        "isStatic": false,
        "params": "[(optional options<VideoFrameCopyToOptions>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "clone",
        "isStatic": false,
        "params": "[]",
        "returnType": "VideoFrame"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "copyTo",
        "isStatic": false,
        "params": "[destination<AllowSharedBufferSource> (optional options<VideoFrameCopyToOptions>)]",
        "returnType": "Promise<(array PlaneLayout)>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[image<CanvasImageSource> (optional init<VideoFrameInit>)]",
        "returnType": "VideoFrame"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[data<AllowSharedBufferSource> init<VideoFrameBufferInit>]",
        "returnType": "VideoFrame"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "VideoFrame"
      },
      {
        "kind": "Property",
        "name": "codedHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "codedRect",
        "isStatic": true,
        "returnType": "(or DOMRectReadOnly null)"
      },
      {
        "kind": "Property",
        "name": "codedWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "colorSpace",
        "isStatic": true,
        "returnType": "VideoColorSpace"
      },
      {
        "kind": "Property",
        "name": "displayHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "displayWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "duration",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "format",
        "isStatic": true,
        "returnType": "(or VideoPixelFormat null)"
      },
      {
        "kind": "Property",
        "name": "timestamp",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "visibleRect",
        "isStatic": true,
        "returnType": "(or DOMRectReadOnly null)"
      },
      {
        "kind": "Method",
        "name": "allocationSize",
        "isStatic": false,
        "params": "[(optional options<VideoFrameCopyToOptions>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "clone",
        "isStatic": false,
        "params": "[]",
        "returnType": "VideoFrame"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "copyTo",
        "isStatic": false,
        "params": "[destination<AllowSharedBufferSource> (optional options<VideoFrameCopyToOptions>)]",
        "returnType": "Promise<(array PlaneLayout)>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype VideoFrame}) (new [image<CanvasImageSource> (optional init<VideoFrameInit>)] VideoFrame) (new [data<AllowSharedBufferSource> init<VideoFrameBufferInit>] VideoFrame)}"
  },
  "VideoPlaybackQuality": {
    "kind": "Property",
    "name": "VideoPlaybackQuality",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "VideoPlaybackQuality"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "VideoPlaybackQuality"
      },
      {
        "kind": "Property",
        "name": "corruptedVideoFrames",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "creationTime",
        "isStatic": true,
        "returnType": "DOMHighResTimeStamp"
      },
      {
        "kind": "Property",
        "name": "droppedVideoFrames",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "totalVideoFrames",
        "isStatic": true,
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype VideoPlaybackQuality}) (new [] VideoPlaybackQuality)}"
  },
  "ViewTransition": {
    "kind": "Property",
    "name": "ViewTransition",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ViewTransition"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ViewTransition"
      },
      {
        "kind": "Property",
        "name": "finished",
        "isStatic": true,
        "returnType": "Promise<undefined>"
      },
      {
        "kind": "Property",
        "name": "ready",
        "isStatic": true,
        "returnType": "Promise<undefined>"
      },
      {
        "kind": "Property",
        "name": "updateCallbackDone",
        "isStatic": true,
        "returnType": "Promise<undefined>"
      },
      {
        "kind": "Method",
        "name": "skipTransition",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ViewTransition}) (new [] ViewTransition)}"
  },
  "VisualViewport": {
    "kind": "Property",
    "name": "VisualViewport",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "VisualViewport"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "VisualViewport"
      },
      {
        "kind": "Property",
        "name": "height",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "offsetLeft",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "offsetTop",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "onresize",
        "isStatic": true,
        "returnType": "(or (list (function [this<VisualViewport> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onscroll",
        "isStatic": true,
        "returnType": "(or (list (function [this<VisualViewport> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "pageLeft",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "pageTop",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scale",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "width",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<VisualViewport> ev<(get VisualViewportEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<VisualViewport> ev<(get VisualViewportEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype VisualViewport}) (new [] VisualViewport)}"
  },
  "WakeLock": {
    "kind": "Property",
    "name": "WakeLock",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WakeLock"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WakeLock"
      },
      {
        "kind": "Method",
        "name": "request",
        "isStatic": false,
        "params": "[(optional type<WakeLockType>)]",
        "returnType": "Promise<WakeLockSentinel>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WakeLock}) (new [] WakeLock)}"
  },
  "WakeLockSentinel": {
    "kind": "Property",
    "name": "WakeLockSentinel",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WakeLockSentinel"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WakeLockSentinel"
      },
      {
        "kind": "Property",
        "name": "onrelease",
        "isStatic": true,
        "returnType": "(or (list (function [this<WakeLockSentinel> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "released",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "WakeLockType"
      },
      {
        "kind": "Method",
        "name": "release",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<WakeLockSentinel> ev<(get WakeLockSentinelEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<WakeLockSentinel> ev<(get WakeLockSentinelEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WakeLockSentinel}) (new [] WakeLockSentinel)}"
  },
  "WaveShaperNode": {
    "kind": "Property",
    "name": "WaveShaperNode",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[context<BaseAudioContext> (optional options<WaveShaperOptions>)]",
        "returnType": "WaveShaperNode"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WaveShaperNode"
      },
      {
        "kind": "Property",
        "name": "curve",
        "isStatic": true,
        "returnType": "(or Float32Array null)"
      },
      {
        "kind": "Property",
        "name": "oversample",
        "isStatic": true,
        "returnType": "OverSampleType"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WaveShaperNode}) (new [context<BaseAudioContext> (optional options<WaveShaperOptions>)] WaveShaperNode)}"
  },
  "WebGL2RenderingContext": {
    "kind": "Property",
    "name": "WebGL2RenderingContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGL2RenderingContext"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGL2RenderingContext"
      },
      {
        "kind": "Property",
        "name": "READ_BUFFER",
        "isStatic": false,
        "returnType": "0x0C02"
      },
      {
        "kind": "Property",
        "name": "UNPACK_ROW_LENGTH",
        "isStatic": false,
        "returnType": "0x0CF2"
      },
      {
        "kind": "Property",
        "name": "UNPACK_SKIP_ROWS",
        "isStatic": false,
        "returnType": "0x0CF3"
      },
      {
        "kind": "Property",
        "name": "UNPACK_SKIP_PIXELS",
        "isStatic": false,
        "returnType": "0x0CF4"
      },
      {
        "kind": "Property",
        "name": "PACK_ROW_LENGTH",
        "isStatic": false,
        "returnType": "0x0D02"
      },
      {
        "kind": "Property",
        "name": "PACK_SKIP_ROWS",
        "isStatic": false,
        "returnType": "0x0D03"
      },
      {
        "kind": "Property",
        "name": "PACK_SKIP_PIXELS",
        "isStatic": false,
        "returnType": "0x0D04"
      },
      {
        "kind": "Property",
        "name": "COLOR",
        "isStatic": false,
        "returnType": "0x1800"
      },
      {
        "kind": "Property",
        "name": "DEPTH",
        "isStatic": false,
        "returnType": "0x1801"
      },
      {
        "kind": "Property",
        "name": "STENCIL",
        "isStatic": false,
        "returnType": "0x1802"
      },
      {
        "kind": "Property",
        "name": "RED",
        "isStatic": false,
        "returnType": "0x1903"
      },
      {
        "kind": "Property",
        "name": "RGB8",
        "isStatic": false,
        "returnType": "0x8051"
      },
      {
        "kind": "Property",
        "name": "RGB10_A2",
        "isStatic": false,
        "returnType": "0x8059"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BINDING_3D",
        "isStatic": false,
        "returnType": "0x806A"
      },
      {
        "kind": "Property",
        "name": "UNPACK_SKIP_IMAGES",
        "isStatic": false,
        "returnType": "0x806D"
      },
      {
        "kind": "Property",
        "name": "UNPACK_IMAGE_HEIGHT",
        "isStatic": false,
        "returnType": "0x806E"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_3D",
        "isStatic": false,
        "returnType": "0x806F"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_WRAP_R",
        "isStatic": false,
        "returnType": "0x8072"
      },
      {
        "kind": "Property",
        "name": "MAX_3D_TEXTURE_SIZE",
        "isStatic": false,
        "returnType": "0x8073"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_2_10_10_10_REV",
        "isStatic": false,
        "returnType": "0x8368"
      },
      {
        "kind": "Property",
        "name": "MAX_ELEMENTS_VERTICES",
        "isStatic": false,
        "returnType": "0x80E8"
      },
      {
        "kind": "Property",
        "name": "MAX_ELEMENTS_INDICES",
        "isStatic": false,
        "returnType": "0x80E9"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MIN_LOD",
        "isStatic": false,
        "returnType": "0x813A"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MAX_LOD",
        "isStatic": false,
        "returnType": "0x813B"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BASE_LEVEL",
        "isStatic": false,
        "returnType": "0x813C"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MAX_LEVEL",
        "isStatic": false,
        "returnType": "0x813D"
      },
      {
        "kind": "Property",
        "name": "MIN",
        "isStatic": false,
        "returnType": "0x8007"
      },
      {
        "kind": "Property",
        "name": "MAX",
        "isStatic": false,
        "returnType": "0x8008"
      },
      {
        "kind": "Property",
        "name": "DEPTH_COMPONENT24",
        "isStatic": false,
        "returnType": "0x81A6"
      },
      {
        "kind": "Property",
        "name": "MAX_TEXTURE_LOD_BIAS",
        "isStatic": false,
        "returnType": "0x84FD"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_COMPARE_MODE",
        "isStatic": false,
        "returnType": "0x884C"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_COMPARE_FUNC",
        "isStatic": false,
        "returnType": "0x884D"
      },
      {
        "kind": "Property",
        "name": "CURRENT_QUERY",
        "isStatic": false,
        "returnType": "0x8865"
      },
      {
        "kind": "Property",
        "name": "QUERY_RESULT",
        "isStatic": false,
        "returnType": "0x8866"
      },
      {
        "kind": "Property",
        "name": "QUERY_RESULT_AVAILABLE",
        "isStatic": false,
        "returnType": "0x8867"
      },
      {
        "kind": "Property",
        "name": "STREAM_READ",
        "isStatic": false,
        "returnType": "0x88E1"
      },
      {
        "kind": "Property",
        "name": "STREAM_COPY",
        "isStatic": false,
        "returnType": "0x88E2"
      },
      {
        "kind": "Property",
        "name": "STATIC_READ",
        "isStatic": false,
        "returnType": "0x88E5"
      },
      {
        "kind": "Property",
        "name": "STATIC_COPY",
        "isStatic": false,
        "returnType": "0x88E6"
      },
      {
        "kind": "Property",
        "name": "DYNAMIC_READ",
        "isStatic": false,
        "returnType": "0x88E9"
      },
      {
        "kind": "Property",
        "name": "DYNAMIC_COPY",
        "isStatic": false,
        "returnType": "0x88EA"
      },
      {
        "kind": "Property",
        "name": "MAX_DRAW_BUFFERS",
        "isStatic": false,
        "returnType": "0x8824"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER0",
        "isStatic": false,
        "returnType": "0x8825"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER1",
        "isStatic": false,
        "returnType": "0x8826"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER2",
        "isStatic": false,
        "returnType": "0x8827"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER3",
        "isStatic": false,
        "returnType": "0x8828"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER4",
        "isStatic": false,
        "returnType": "0x8829"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER5",
        "isStatic": false,
        "returnType": "0x882A"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER6",
        "isStatic": false,
        "returnType": "0x882B"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER7",
        "isStatic": false,
        "returnType": "0x882C"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER8",
        "isStatic": false,
        "returnType": "0x882D"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER9",
        "isStatic": false,
        "returnType": "0x882E"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER10",
        "isStatic": false,
        "returnType": "0x882F"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER11",
        "isStatic": false,
        "returnType": "0x8830"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER12",
        "isStatic": false,
        "returnType": "0x8831"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER13",
        "isStatic": false,
        "returnType": "0x8832"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER14",
        "isStatic": false,
        "returnType": "0x8833"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER15",
        "isStatic": false,
        "returnType": "0x8834"
      },
      {
        "kind": "Property",
        "name": "MAX_FRAGMENT_UNIFORM_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8B49"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_UNIFORM_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8B4A"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_3D",
        "isStatic": false,
        "returnType": "0x8B5F"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_2D_SHADOW",
        "isStatic": false,
        "returnType": "0x8B62"
      },
      {
        "kind": "Property",
        "name": "FRAGMENT_SHADER_DERIVATIVE_HINT",
        "isStatic": false,
        "returnType": "0x8B8B"
      },
      {
        "kind": "Property",
        "name": "PIXEL_PACK_BUFFER",
        "isStatic": false,
        "returnType": "0x88EB"
      },
      {
        "kind": "Property",
        "name": "PIXEL_UNPACK_BUFFER",
        "isStatic": false,
        "returnType": "0x88EC"
      },
      {
        "kind": "Property",
        "name": "PIXEL_PACK_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x88ED"
      },
      {
        "kind": "Property",
        "name": "PIXEL_UNPACK_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x88EF"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT2x3",
        "isStatic": false,
        "returnType": "0x8B65"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT2x4",
        "isStatic": false,
        "returnType": "0x8B66"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT3x2",
        "isStatic": false,
        "returnType": "0x8B67"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT3x4",
        "isStatic": false,
        "returnType": "0x8B68"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT4x2",
        "isStatic": false,
        "returnType": "0x8B69"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT4x3",
        "isStatic": false,
        "returnType": "0x8B6A"
      },
      {
        "kind": "Property",
        "name": "SRGB",
        "isStatic": false,
        "returnType": "0x8C40"
      },
      {
        "kind": "Property",
        "name": "SRGB8",
        "isStatic": false,
        "returnType": "0x8C41"
      },
      {
        "kind": "Property",
        "name": "SRGB8_ALPHA8",
        "isStatic": false,
        "returnType": "0x8C43"
      },
      {
        "kind": "Property",
        "name": "COMPARE_REF_TO_TEXTURE",
        "isStatic": false,
        "returnType": "0x884E"
      },
      {
        "kind": "Property",
        "name": "RGBA32F",
        "isStatic": false,
        "returnType": "0x8814"
      },
      {
        "kind": "Property",
        "name": "RGB32F",
        "isStatic": false,
        "returnType": "0x8815"
      },
      {
        "kind": "Property",
        "name": "RGBA16F",
        "isStatic": false,
        "returnType": "0x881A"
      },
      {
        "kind": "Property",
        "name": "RGB16F",
        "isStatic": false,
        "returnType": "0x881B"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_INTEGER",
        "isStatic": false,
        "returnType": "0x88FD"
      },
      {
        "kind": "Property",
        "name": "MAX_ARRAY_TEXTURE_LAYERS",
        "isStatic": false,
        "returnType": "0x88FF"
      },
      {
        "kind": "Property",
        "name": "MIN_PROGRAM_TEXEL_OFFSET",
        "isStatic": false,
        "returnType": "0x8904"
      },
      {
        "kind": "Property",
        "name": "MAX_PROGRAM_TEXEL_OFFSET",
        "isStatic": false,
        "returnType": "0x8905"
      },
      {
        "kind": "Property",
        "name": "MAX_VARYING_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8B4B"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_2D_ARRAY",
        "isStatic": false,
        "returnType": "0x8C1A"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BINDING_2D_ARRAY",
        "isStatic": false,
        "returnType": "0x8C1D"
      },
      {
        "kind": "Property",
        "name": "R11F_G11F_B10F",
        "isStatic": false,
        "returnType": "0x8C3A"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_10F_11F_11F_REV",
        "isStatic": false,
        "returnType": "0x8C3B"
      },
      {
        "kind": "Property",
        "name": "RGB9_E5",
        "isStatic": false,
        "returnType": "0x8C3D"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_5_9_9_9_REV",
        "isStatic": false,
        "returnType": "0x8C3E"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_BUFFER_MODE",
        "isStatic": false,
        "returnType": "0x8C7F"
      },
      {
        "kind": "Property",
        "name": "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8C80"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_VARYINGS",
        "isStatic": false,
        "returnType": "0x8C83"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_BUFFER_START",
        "isStatic": false,
        "returnType": "0x8C84"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_BUFFER_SIZE",
        "isStatic": false,
        "returnType": "0x8C85"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",
        "isStatic": false,
        "returnType": "0x8C88"
      },
      {
        "kind": "Property",
        "name": "RASTERIZER_DISCARD",
        "isStatic": false,
        "returnType": "0x8C89"
      },
      {
        "kind": "Property",
        "name": "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8C8A"
      },
      {
        "kind": "Property",
        "name": "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",
        "isStatic": false,
        "returnType": "0x8C8B"
      },
      {
        "kind": "Property",
        "name": "INTERLEAVED_ATTRIBS",
        "isStatic": false,
        "returnType": "0x8C8C"
      },
      {
        "kind": "Property",
        "name": "SEPARATE_ATTRIBS",
        "isStatic": false,
        "returnType": "0x8C8D"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_BUFFER",
        "isStatic": false,
        "returnType": "0x8C8E"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8C8F"
      },
      {
        "kind": "Property",
        "name": "RGBA32UI",
        "isStatic": false,
        "returnType": "0x8D70"
      },
      {
        "kind": "Property",
        "name": "RGB32UI",
        "isStatic": false,
        "returnType": "0x8D71"
      },
      {
        "kind": "Property",
        "name": "RGBA16UI",
        "isStatic": false,
        "returnType": "0x8D76"
      },
      {
        "kind": "Property",
        "name": "RGB16UI",
        "isStatic": false,
        "returnType": "0x8D77"
      },
      {
        "kind": "Property",
        "name": "RGBA8UI",
        "isStatic": false,
        "returnType": "0x8D7C"
      },
      {
        "kind": "Property",
        "name": "RGB8UI",
        "isStatic": false,
        "returnType": "0x8D7D"
      },
      {
        "kind": "Property",
        "name": "RGBA32I",
        "isStatic": false,
        "returnType": "0x8D82"
      },
      {
        "kind": "Property",
        "name": "RGB32I",
        "isStatic": false,
        "returnType": "0x8D83"
      },
      {
        "kind": "Property",
        "name": "RGBA16I",
        "isStatic": false,
        "returnType": "0x8D88"
      },
      {
        "kind": "Property",
        "name": "RGB16I",
        "isStatic": false,
        "returnType": "0x8D89"
      },
      {
        "kind": "Property",
        "name": "RGBA8I",
        "isStatic": false,
        "returnType": "0x8D8E"
      },
      {
        "kind": "Property",
        "name": "RGB8I",
        "isStatic": false,
        "returnType": "0x8D8F"
      },
      {
        "kind": "Property",
        "name": "RED_INTEGER",
        "isStatic": false,
        "returnType": "0x8D94"
      },
      {
        "kind": "Property",
        "name": "RGB_INTEGER",
        "isStatic": false,
        "returnType": "0x8D98"
      },
      {
        "kind": "Property",
        "name": "RGBA_INTEGER",
        "isStatic": false,
        "returnType": "0x8D99"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_2D_ARRAY",
        "isStatic": false,
        "returnType": "0x8DC1"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_2D_ARRAY_SHADOW",
        "isStatic": false,
        "returnType": "0x8DC4"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_CUBE_SHADOW",
        "isStatic": false,
        "returnType": "0x8DC5"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_VEC2",
        "isStatic": false,
        "returnType": "0x8DC6"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_VEC3",
        "isStatic": false,
        "returnType": "0x8DC7"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_VEC4",
        "isStatic": false,
        "returnType": "0x8DC8"
      },
      {
        "kind": "Property",
        "name": "INT_SAMPLER_2D",
        "isStatic": false,
        "returnType": "0x8DCA"
      },
      {
        "kind": "Property",
        "name": "INT_SAMPLER_3D",
        "isStatic": false,
        "returnType": "0x8DCB"
      },
      {
        "kind": "Property",
        "name": "INT_SAMPLER_CUBE",
        "isStatic": false,
        "returnType": "0x8DCC"
      },
      {
        "kind": "Property",
        "name": "INT_SAMPLER_2D_ARRAY",
        "isStatic": false,
        "returnType": "0x8DCF"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_SAMPLER_2D",
        "isStatic": false,
        "returnType": "0x8DD2"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_SAMPLER_3D",
        "isStatic": false,
        "returnType": "0x8DD3"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_SAMPLER_CUBE",
        "isStatic": false,
        "returnType": "0x8DD4"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_SAMPLER_2D_ARRAY",
        "isStatic": false,
        "returnType": "0x8DD7"
      },
      {
        "kind": "Property",
        "name": "DEPTH_COMPONENT32F",
        "isStatic": false,
        "returnType": "0x8CAC"
      },
      {
        "kind": "Property",
        "name": "DEPTH32F_STENCIL8",
        "isStatic": false,
        "returnType": "0x8CAD"
      },
      {
        "kind": "Property",
        "name": "FLOAT_32_UNSIGNED_INT_24_8_REV",
        "isStatic": false,
        "returnType": "0x8DAD"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",
        "isStatic": false,
        "returnType": "0x8210"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",
        "isStatic": false,
        "returnType": "0x8211"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_RED_SIZE",
        "isStatic": false,
        "returnType": "0x8212"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",
        "isStatic": false,
        "returnType": "0x8213"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",
        "isStatic": false,
        "returnType": "0x8214"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",
        "isStatic": false,
        "returnType": "0x8215"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",
        "isStatic": false,
        "returnType": "0x8216"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",
        "isStatic": false,
        "returnType": "0x8217"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_DEFAULT",
        "isStatic": false,
        "returnType": "0x8218"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_24_8",
        "isStatic": false,
        "returnType": "0x84FA"
      },
      {
        "kind": "Property",
        "name": "DEPTH24_STENCIL8",
        "isStatic": false,
        "returnType": "0x88F0"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_NORMALIZED",
        "isStatic": false,
        "returnType": "0x8C17"
      },
      {
        "kind": "Property",
        "name": "DRAW_FRAMEBUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8CA6"
      },
      {
        "kind": "Property",
        "name": "READ_FRAMEBUFFER",
        "isStatic": false,
        "returnType": "0x8CA8"
      },
      {
        "kind": "Property",
        "name": "DRAW_FRAMEBUFFER",
        "isStatic": false,
        "returnType": "0x8CA9"
      },
      {
        "kind": "Property",
        "name": "READ_FRAMEBUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8CAA"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_SAMPLES",
        "isStatic": false,
        "returnType": "0x8CAB"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",
        "isStatic": false,
        "returnType": "0x8CD4"
      },
      {
        "kind": "Property",
        "name": "MAX_COLOR_ATTACHMENTS",
        "isStatic": false,
        "returnType": "0x8CDF"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT1",
        "isStatic": false,
        "returnType": "0x8CE1"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT2",
        "isStatic": false,
        "returnType": "0x8CE2"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT3",
        "isStatic": false,
        "returnType": "0x8CE3"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT4",
        "isStatic": false,
        "returnType": "0x8CE4"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT5",
        "isStatic": false,
        "returnType": "0x8CE5"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT6",
        "isStatic": false,
        "returnType": "0x8CE6"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT7",
        "isStatic": false,
        "returnType": "0x8CE7"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT8",
        "isStatic": false,
        "returnType": "0x8CE8"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT9",
        "isStatic": false,
        "returnType": "0x8CE9"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT10",
        "isStatic": false,
        "returnType": "0x8CEA"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT11",
        "isStatic": false,
        "returnType": "0x8CEB"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT12",
        "isStatic": false,
        "returnType": "0x8CEC"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT13",
        "isStatic": false,
        "returnType": "0x8CED"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT14",
        "isStatic": false,
        "returnType": "0x8CEE"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT15",
        "isStatic": false,
        "returnType": "0x8CEF"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",
        "isStatic": false,
        "returnType": "0x8D56"
      },
      {
        "kind": "Property",
        "name": "MAX_SAMPLES",
        "isStatic": false,
        "returnType": "0x8D57"
      },
      {
        "kind": "Property",
        "name": "HALF_FLOAT",
        "isStatic": false,
        "returnType": "0x140B"
      },
      {
        "kind": "Property",
        "name": "RG",
        "isStatic": false,
        "returnType": "0x8227"
      },
      {
        "kind": "Property",
        "name": "RG_INTEGER",
        "isStatic": false,
        "returnType": "0x8228"
      },
      {
        "kind": "Property",
        "name": "R8",
        "isStatic": false,
        "returnType": "0x8229"
      },
      {
        "kind": "Property",
        "name": "RG8",
        "isStatic": false,
        "returnType": "0x822B"
      },
      {
        "kind": "Property",
        "name": "R16F",
        "isStatic": false,
        "returnType": "0x822D"
      },
      {
        "kind": "Property",
        "name": "R32F",
        "isStatic": false,
        "returnType": "0x822E"
      },
      {
        "kind": "Property",
        "name": "RG16F",
        "isStatic": false,
        "returnType": "0x822F"
      },
      {
        "kind": "Property",
        "name": "RG32F",
        "isStatic": false,
        "returnType": "0x8230"
      },
      {
        "kind": "Property",
        "name": "R8I",
        "isStatic": false,
        "returnType": "0x8231"
      },
      {
        "kind": "Property",
        "name": "R8UI",
        "isStatic": false,
        "returnType": "0x8232"
      },
      {
        "kind": "Property",
        "name": "R16I",
        "isStatic": false,
        "returnType": "0x8233"
      },
      {
        "kind": "Property",
        "name": "R16UI",
        "isStatic": false,
        "returnType": "0x8234"
      },
      {
        "kind": "Property",
        "name": "R32I",
        "isStatic": false,
        "returnType": "0x8235"
      },
      {
        "kind": "Property",
        "name": "R32UI",
        "isStatic": false,
        "returnType": "0x8236"
      },
      {
        "kind": "Property",
        "name": "RG8I",
        "isStatic": false,
        "returnType": "0x8237"
      },
      {
        "kind": "Property",
        "name": "RG8UI",
        "isStatic": false,
        "returnType": "0x8238"
      },
      {
        "kind": "Property",
        "name": "RG16I",
        "isStatic": false,
        "returnType": "0x8239"
      },
      {
        "kind": "Property",
        "name": "RG16UI",
        "isStatic": false,
        "returnType": "0x823A"
      },
      {
        "kind": "Property",
        "name": "RG32I",
        "isStatic": false,
        "returnType": "0x823B"
      },
      {
        "kind": "Property",
        "name": "RG32UI",
        "isStatic": false,
        "returnType": "0x823C"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ARRAY_BINDING",
        "isStatic": false,
        "returnType": "0x85B5"
      },
      {
        "kind": "Property",
        "name": "R8_SNORM",
        "isStatic": false,
        "returnType": "0x8F94"
      },
      {
        "kind": "Property",
        "name": "RG8_SNORM",
        "isStatic": false,
        "returnType": "0x8F95"
      },
      {
        "kind": "Property",
        "name": "RGB8_SNORM",
        "isStatic": false,
        "returnType": "0x8F96"
      },
      {
        "kind": "Property",
        "name": "RGBA8_SNORM",
        "isStatic": false,
        "returnType": "0x8F97"
      },
      {
        "kind": "Property",
        "name": "SIGNED_NORMALIZED",
        "isStatic": false,
        "returnType": "0x8F9C"
      },
      {
        "kind": "Property",
        "name": "COPY_READ_BUFFER",
        "isStatic": false,
        "returnType": "0x8F36"
      },
      {
        "kind": "Property",
        "name": "COPY_WRITE_BUFFER",
        "isStatic": false,
        "returnType": "0x8F37"
      },
      {
        "kind": "Property",
        "name": "COPY_READ_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8F36"
      },
      {
        "kind": "Property",
        "name": "COPY_WRITE_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8F37"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BUFFER",
        "isStatic": false,
        "returnType": "0x8A11"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8A28"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BUFFER_START",
        "isStatic": false,
        "returnType": "0x8A29"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BUFFER_SIZE",
        "isStatic": false,
        "returnType": "0x8A2A"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_UNIFORM_BLOCKS",
        "isStatic": false,
        "returnType": "0x8A2B"
      },
      {
        "kind": "Property",
        "name": "MAX_FRAGMENT_UNIFORM_BLOCKS",
        "isStatic": false,
        "returnType": "0x8A2D"
      },
      {
        "kind": "Property",
        "name": "MAX_COMBINED_UNIFORM_BLOCKS",
        "isStatic": false,
        "returnType": "0x8A2E"
      },
      {
        "kind": "Property",
        "name": "MAX_UNIFORM_BUFFER_BINDINGS",
        "isStatic": false,
        "returnType": "0x8A2F"
      },
      {
        "kind": "Property",
        "name": "MAX_UNIFORM_BLOCK_SIZE",
        "isStatic": false,
        "returnType": "0x8A30"
      },
      {
        "kind": "Property",
        "name": "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8A31"
      },
      {
        "kind": "Property",
        "name": "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8A33"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BUFFER_OFFSET_ALIGNMENT",
        "isStatic": false,
        "returnType": "0x8A34"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_UNIFORM_BLOCKS",
        "isStatic": false,
        "returnType": "0x8A36"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_TYPE",
        "isStatic": false,
        "returnType": "0x8A37"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_SIZE",
        "isStatic": false,
        "returnType": "0x8A38"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_INDEX",
        "isStatic": false,
        "returnType": "0x8A3A"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_OFFSET",
        "isStatic": false,
        "returnType": "0x8A3B"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_ARRAY_STRIDE",
        "isStatic": false,
        "returnType": "0x8A3C"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_MATRIX_STRIDE",
        "isStatic": false,
        "returnType": "0x8A3D"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_IS_ROW_MAJOR",
        "isStatic": false,
        "returnType": "0x8A3E"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_BINDING",
        "isStatic": false,
        "returnType": "0x8A3F"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_DATA_SIZE",
        "isStatic": false,
        "returnType": "0x8A40"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_ACTIVE_UNIFORMS",
        "isStatic": false,
        "returnType": "0x8A42"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",
        "isStatic": false,
        "returnType": "0x8A43"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",
        "isStatic": false,
        "returnType": "0x8A44"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",
        "isStatic": false,
        "returnType": "0x8A46"
      },
      {
        "kind": "Property",
        "name": "INVALID_INDEX",
        "isStatic": false,
        "returnType": "0xFFFFFFFF"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_OUTPUT_COMPONENTS",
        "isStatic": false,
        "returnType": "0x9122"
      },
      {
        "kind": "Property",
        "name": "MAX_FRAGMENT_INPUT_COMPONENTS",
        "isStatic": false,
        "returnType": "0x9125"
      },
      {
        "kind": "Property",
        "name": "MAX_SERVER_WAIT_TIMEOUT",
        "isStatic": false,
        "returnType": "0x9111"
      },
      {
        "kind": "Property",
        "name": "OBJECT_TYPE",
        "isStatic": false,
        "returnType": "0x9112"
      },
      {
        "kind": "Property",
        "name": "SYNC_CONDITION",
        "isStatic": false,
        "returnType": "0x9113"
      },
      {
        "kind": "Property",
        "name": "SYNC_STATUS",
        "isStatic": false,
        "returnType": "0x9114"
      },
      {
        "kind": "Property",
        "name": "SYNC_FLAGS",
        "isStatic": false,
        "returnType": "0x9115"
      },
      {
        "kind": "Property",
        "name": "SYNC_FENCE",
        "isStatic": false,
        "returnType": "0x9116"
      },
      {
        "kind": "Property",
        "name": "SYNC_GPU_COMMANDS_COMPLETE",
        "isStatic": false,
        "returnType": "0x9117"
      },
      {
        "kind": "Property",
        "name": "UNSIGNALED",
        "isStatic": false,
        "returnType": "0x9118"
      },
      {
        "kind": "Property",
        "name": "SIGNALED",
        "isStatic": false,
        "returnType": "0x9119"
      },
      {
        "kind": "Property",
        "name": "ALREADY_SIGNALED",
        "isStatic": false,
        "returnType": "0x911A"
      },
      {
        "kind": "Property",
        "name": "TIMEOUT_EXPIRED",
        "isStatic": false,
        "returnType": "0x911B"
      },
      {
        "kind": "Property",
        "name": "CONDITION_SATISFIED",
        "isStatic": false,
        "returnType": "0x911C"
      },
      {
        "kind": "Property",
        "name": "WAIT_FAILED",
        "isStatic": false,
        "returnType": "0x911D"
      },
      {
        "kind": "Property",
        "name": "SYNC_FLUSH_COMMANDS_BIT",
        "isStatic": false,
        "returnType": "0x00000001"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_DIVISOR",
        "isStatic": false,
        "returnType": "0x88FE"
      },
      {
        "kind": "Property",
        "name": "ANY_SAMPLES_PASSED",
        "isStatic": false,
        "returnType": "0x8C2F"
      },
      {
        "kind": "Property",
        "name": "ANY_SAMPLES_PASSED_CONSERVATIVE",
        "isStatic": false,
        "returnType": "0x8D6A"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_BINDING",
        "isStatic": false,
        "returnType": "0x8919"
      },
      {
        "kind": "Property",
        "name": "RGB10_A2UI",
        "isStatic": false,
        "returnType": "0x906F"
      },
      {
        "kind": "Property",
        "name": "INT_2_10_10_10_REV",
        "isStatic": false,
        "returnType": "0x8D9F"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK",
        "isStatic": false,
        "returnType": "0x8E22"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_PAUSED",
        "isStatic": false,
        "returnType": "0x8E23"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_ACTIVE",
        "isStatic": false,
        "returnType": "0x8E24"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_BINDING",
        "isStatic": false,
        "returnType": "0x8E25"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_IMMUTABLE_FORMAT",
        "isStatic": false,
        "returnType": "0x912F"
      },
      {
        "kind": "Property",
        "name": "MAX_ELEMENT_INDEX",
        "isStatic": false,
        "returnType": "0x8D6B"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_IMMUTABLE_LEVELS",
        "isStatic": false,
        "returnType": "0x82DF"
      },
      {
        "kind": "Property",
        "name": "TIMEOUT_IGNORED",
        "isStatic": false,
        "returnType": "-1"
      },
      {
        "kind": "Property",
        "name": "MAX_CLIENT_WAIT_TIMEOUT_WEBGL",
        "isStatic": false,
        "returnType": "0x9247"
      },
      {
        "kind": "Property",
        "name": "DEPTH_BUFFER_BIT",
        "isStatic": false,
        "returnType": "0x00000100"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BUFFER_BIT",
        "isStatic": false,
        "returnType": "0x00000400"
      },
      {
        "kind": "Property",
        "name": "COLOR_BUFFER_BIT",
        "isStatic": false,
        "returnType": "0x00004000"
      },
      {
        "kind": "Property",
        "name": "POINTS",
        "isStatic": false,
        "returnType": "0x0000"
      },
      {
        "kind": "Property",
        "name": "LINES",
        "isStatic": false,
        "returnType": "0x0001"
      },
      {
        "kind": "Property",
        "name": "LINE_LOOP",
        "isStatic": false,
        "returnType": "0x0002"
      },
      {
        "kind": "Property",
        "name": "LINE_STRIP",
        "isStatic": false,
        "returnType": "0x0003"
      },
      {
        "kind": "Property",
        "name": "TRIANGLES",
        "isStatic": false,
        "returnType": "0x0004"
      },
      {
        "kind": "Property",
        "name": "TRIANGLE_STRIP",
        "isStatic": false,
        "returnType": "0x0005"
      },
      {
        "kind": "Property",
        "name": "TRIANGLE_FAN",
        "isStatic": false,
        "returnType": "0x0006"
      },
      {
        "kind": "Property",
        "name": "ZERO",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "ONE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SRC_COLOR",
        "isStatic": false,
        "returnType": "0x0300"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_SRC_COLOR",
        "isStatic": false,
        "returnType": "0x0301"
      },
      {
        "kind": "Property",
        "name": "SRC_ALPHA",
        "isStatic": false,
        "returnType": "0x0302"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_SRC_ALPHA",
        "isStatic": false,
        "returnType": "0x0303"
      },
      {
        "kind": "Property",
        "name": "DST_ALPHA",
        "isStatic": false,
        "returnType": "0x0304"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_DST_ALPHA",
        "isStatic": false,
        "returnType": "0x0305"
      },
      {
        "kind": "Property",
        "name": "DST_COLOR",
        "isStatic": false,
        "returnType": "0x0306"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_DST_COLOR",
        "isStatic": false,
        "returnType": "0x0307"
      },
      {
        "kind": "Property",
        "name": "SRC_ALPHA_SATURATE",
        "isStatic": false,
        "returnType": "0x0308"
      },
      {
        "kind": "Property",
        "name": "FUNC_ADD",
        "isStatic": false,
        "returnType": "0x8006"
      },
      {
        "kind": "Property",
        "name": "BLEND_EQUATION",
        "isStatic": false,
        "returnType": "0x8009"
      },
      {
        "kind": "Property",
        "name": "BLEND_EQUATION_RGB",
        "isStatic": false,
        "returnType": "0x8009"
      },
      {
        "kind": "Property",
        "name": "BLEND_EQUATION_ALPHA",
        "isStatic": false,
        "returnType": "0x883D"
      },
      {
        "kind": "Property",
        "name": "FUNC_SUBTRACT",
        "isStatic": false,
        "returnType": "0x800A"
      },
      {
        "kind": "Property",
        "name": "FUNC_REVERSE_SUBTRACT",
        "isStatic": false,
        "returnType": "0x800B"
      },
      {
        "kind": "Property",
        "name": "BLEND_DST_RGB",
        "isStatic": false,
        "returnType": "0x80C8"
      },
      {
        "kind": "Property",
        "name": "BLEND_SRC_RGB",
        "isStatic": false,
        "returnType": "0x80C9"
      },
      {
        "kind": "Property",
        "name": "BLEND_DST_ALPHA",
        "isStatic": false,
        "returnType": "0x80CA"
      },
      {
        "kind": "Property",
        "name": "BLEND_SRC_ALPHA",
        "isStatic": false,
        "returnType": "0x80CB"
      },
      {
        "kind": "Property",
        "name": "CONSTANT_COLOR",
        "isStatic": false,
        "returnType": "0x8001"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_CONSTANT_COLOR",
        "isStatic": false,
        "returnType": "0x8002"
      },
      {
        "kind": "Property",
        "name": "CONSTANT_ALPHA",
        "isStatic": false,
        "returnType": "0x8003"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_CONSTANT_ALPHA",
        "isStatic": false,
        "returnType": "0x8004"
      },
      {
        "kind": "Property",
        "name": "BLEND_COLOR",
        "isStatic": false,
        "returnType": "0x8005"
      },
      {
        "kind": "Property",
        "name": "ARRAY_BUFFER",
        "isStatic": false,
        "returnType": "0x8892"
      },
      {
        "kind": "Property",
        "name": "ELEMENT_ARRAY_BUFFER",
        "isStatic": false,
        "returnType": "0x8893"
      },
      {
        "kind": "Property",
        "name": "ARRAY_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8894"
      },
      {
        "kind": "Property",
        "name": "ELEMENT_ARRAY_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8895"
      },
      {
        "kind": "Property",
        "name": "STREAM_DRAW",
        "isStatic": false,
        "returnType": "0x88E0"
      },
      {
        "kind": "Property",
        "name": "STATIC_DRAW",
        "isStatic": false,
        "returnType": "0x88E4"
      },
      {
        "kind": "Property",
        "name": "DYNAMIC_DRAW",
        "isStatic": false,
        "returnType": "0x88E8"
      },
      {
        "kind": "Property",
        "name": "BUFFER_SIZE",
        "isStatic": false,
        "returnType": "0x8764"
      },
      {
        "kind": "Property",
        "name": "BUFFER_USAGE",
        "isStatic": false,
        "returnType": "0x8765"
      },
      {
        "kind": "Property",
        "name": "CURRENT_VERTEX_ATTRIB",
        "isStatic": false,
        "returnType": "0x8626"
      },
      {
        "kind": "Property",
        "name": "FRONT",
        "isStatic": false,
        "returnType": "0x0404"
      },
      {
        "kind": "Property",
        "name": "BACK",
        "isStatic": false,
        "returnType": "0x0405"
      },
      {
        "kind": "Property",
        "name": "FRONT_AND_BACK",
        "isStatic": false,
        "returnType": "0x0408"
      },
      {
        "kind": "Property",
        "name": "CULL_FACE",
        "isStatic": false,
        "returnType": "0x0B44"
      },
      {
        "kind": "Property",
        "name": "BLEND",
        "isStatic": false,
        "returnType": "0x0BE2"
      },
      {
        "kind": "Property",
        "name": "DITHER",
        "isStatic": false,
        "returnType": "0x0BD0"
      },
      {
        "kind": "Property",
        "name": "STENCIL_TEST",
        "isStatic": false,
        "returnType": "0x0B90"
      },
      {
        "kind": "Property",
        "name": "DEPTH_TEST",
        "isStatic": false,
        "returnType": "0x0B71"
      },
      {
        "kind": "Property",
        "name": "SCISSOR_TEST",
        "isStatic": false,
        "returnType": "0x0C11"
      },
      {
        "kind": "Property",
        "name": "POLYGON_OFFSET_FILL",
        "isStatic": false,
        "returnType": "0x8037"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_ALPHA_TO_COVERAGE",
        "isStatic": false,
        "returnType": "0x809E"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_COVERAGE",
        "isStatic": false,
        "returnType": "0x80A0"
      },
      {
        "kind": "Property",
        "name": "NO_ERROR",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "INVALID_ENUM",
        "isStatic": false,
        "returnType": "0x0500"
      },
      {
        "kind": "Property",
        "name": "INVALID_VALUE",
        "isStatic": false,
        "returnType": "0x0501"
      },
      {
        "kind": "Property",
        "name": "INVALID_OPERATION",
        "isStatic": false,
        "returnType": "0x0502"
      },
      {
        "kind": "Property",
        "name": "OUT_OF_MEMORY",
        "isStatic": false,
        "returnType": "0x0505"
      },
      {
        "kind": "Property",
        "name": "CW",
        "isStatic": false,
        "returnType": "0x0900"
      },
      {
        "kind": "Property",
        "name": "CCW",
        "isStatic": false,
        "returnType": "0x0901"
      },
      {
        "kind": "Property",
        "name": "LINE_WIDTH",
        "isStatic": false,
        "returnType": "0x0B21"
      },
      {
        "kind": "Property",
        "name": "ALIASED_POINT_SIZE_RANGE",
        "isStatic": false,
        "returnType": "0x846D"
      },
      {
        "kind": "Property",
        "name": "ALIASED_LINE_WIDTH_RANGE",
        "isStatic": false,
        "returnType": "0x846E"
      },
      {
        "kind": "Property",
        "name": "CULL_FACE_MODE",
        "isStatic": false,
        "returnType": "0x0B45"
      },
      {
        "kind": "Property",
        "name": "FRONT_FACE",
        "isStatic": false,
        "returnType": "0x0B46"
      },
      {
        "kind": "Property",
        "name": "DEPTH_RANGE",
        "isStatic": false,
        "returnType": "0x0B70"
      },
      {
        "kind": "Property",
        "name": "DEPTH_WRITEMASK",
        "isStatic": false,
        "returnType": "0x0B72"
      },
      {
        "kind": "Property",
        "name": "DEPTH_CLEAR_VALUE",
        "isStatic": false,
        "returnType": "0x0B73"
      },
      {
        "kind": "Property",
        "name": "DEPTH_FUNC",
        "isStatic": false,
        "returnType": "0x0B74"
      },
      {
        "kind": "Property",
        "name": "STENCIL_CLEAR_VALUE",
        "isStatic": false,
        "returnType": "0x0B91"
      },
      {
        "kind": "Property",
        "name": "STENCIL_FUNC",
        "isStatic": false,
        "returnType": "0x0B92"
      },
      {
        "kind": "Property",
        "name": "STENCIL_FAIL",
        "isStatic": false,
        "returnType": "0x0B94"
      },
      {
        "kind": "Property",
        "name": "STENCIL_PASS_DEPTH_FAIL",
        "isStatic": false,
        "returnType": "0x0B95"
      },
      {
        "kind": "Property",
        "name": "STENCIL_PASS_DEPTH_PASS",
        "isStatic": false,
        "returnType": "0x0B96"
      },
      {
        "kind": "Property",
        "name": "STENCIL_REF",
        "isStatic": false,
        "returnType": "0x0B97"
      },
      {
        "kind": "Property",
        "name": "STENCIL_VALUE_MASK",
        "isStatic": false,
        "returnType": "0x0B93"
      },
      {
        "kind": "Property",
        "name": "STENCIL_WRITEMASK",
        "isStatic": false,
        "returnType": "0x0B98"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_FUNC",
        "isStatic": false,
        "returnType": "0x8800"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_FAIL",
        "isStatic": false,
        "returnType": "0x8801"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_PASS_DEPTH_FAIL",
        "isStatic": false,
        "returnType": "0x8802"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_PASS_DEPTH_PASS",
        "isStatic": false,
        "returnType": "0x8803"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_REF",
        "isStatic": false,
        "returnType": "0x8CA3"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_VALUE_MASK",
        "isStatic": false,
        "returnType": "0x8CA4"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_WRITEMASK",
        "isStatic": false,
        "returnType": "0x8CA5"
      },
      {
        "kind": "Property",
        "name": "VIEWPORT",
        "isStatic": false,
        "returnType": "0x0BA2"
      },
      {
        "kind": "Property",
        "name": "SCISSOR_BOX",
        "isStatic": false,
        "returnType": "0x0C10"
      },
      {
        "kind": "Property",
        "name": "COLOR_CLEAR_VALUE",
        "isStatic": false,
        "returnType": "0x0C22"
      },
      {
        "kind": "Property",
        "name": "COLOR_WRITEMASK",
        "isStatic": false,
        "returnType": "0x0C23"
      },
      {
        "kind": "Property",
        "name": "UNPACK_ALIGNMENT",
        "isStatic": false,
        "returnType": "0x0CF5"
      },
      {
        "kind": "Property",
        "name": "PACK_ALIGNMENT",
        "isStatic": false,
        "returnType": "0x0D05"
      },
      {
        "kind": "Property",
        "name": "MAX_TEXTURE_SIZE",
        "isStatic": false,
        "returnType": "0x0D33"
      },
      {
        "kind": "Property",
        "name": "MAX_VIEWPORT_DIMS",
        "isStatic": false,
        "returnType": "0x0D3A"
      },
      {
        "kind": "Property",
        "name": "SUBPIXEL_BITS",
        "isStatic": false,
        "returnType": "0x0D50"
      },
      {
        "kind": "Property",
        "name": "RED_BITS",
        "isStatic": false,
        "returnType": "0x0D52"
      },
      {
        "kind": "Property",
        "name": "GREEN_BITS",
        "isStatic": false,
        "returnType": "0x0D53"
      },
      {
        "kind": "Property",
        "name": "BLUE_BITS",
        "isStatic": false,
        "returnType": "0x0D54"
      },
      {
        "kind": "Property",
        "name": "ALPHA_BITS",
        "isStatic": false,
        "returnType": "0x0D55"
      },
      {
        "kind": "Property",
        "name": "DEPTH_BITS",
        "isStatic": false,
        "returnType": "0x0D56"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BITS",
        "isStatic": false,
        "returnType": "0x0D57"
      },
      {
        "kind": "Property",
        "name": "POLYGON_OFFSET_UNITS",
        "isStatic": false,
        "returnType": "0x2A00"
      },
      {
        "kind": "Property",
        "name": "POLYGON_OFFSET_FACTOR",
        "isStatic": false,
        "returnType": "0x8038"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BINDING_2D",
        "isStatic": false,
        "returnType": "0x8069"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_BUFFERS",
        "isStatic": false,
        "returnType": "0x80A8"
      },
      {
        "kind": "Property",
        "name": "SAMPLES",
        "isStatic": false,
        "returnType": "0x80A9"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_COVERAGE_VALUE",
        "isStatic": false,
        "returnType": "0x80AA"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_COVERAGE_INVERT",
        "isStatic": false,
        "returnType": "0x80AB"
      },
      {
        "kind": "Property",
        "name": "COMPRESSED_TEXTURE_FORMATS",
        "isStatic": false,
        "returnType": "0x86A3"
      },
      {
        "kind": "Property",
        "name": "DONT_CARE",
        "isStatic": false,
        "returnType": "0x1100"
      },
      {
        "kind": "Property",
        "name": "FASTEST",
        "isStatic": false,
        "returnType": "0x1101"
      },
      {
        "kind": "Property",
        "name": "NICEST",
        "isStatic": false,
        "returnType": "0x1102"
      },
      {
        "kind": "Property",
        "name": "GENERATE_MIPMAP_HINT",
        "isStatic": false,
        "returnType": "0x8192"
      },
      {
        "kind": "Property",
        "name": "BYTE",
        "isStatic": false,
        "returnType": "0x1400"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_BYTE",
        "isStatic": false,
        "returnType": "0x1401"
      },
      {
        "kind": "Property",
        "name": "SHORT",
        "isStatic": false,
        "returnType": "0x1402"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT",
        "isStatic": false,
        "returnType": "0x1403"
      },
      {
        "kind": "Property",
        "name": "INT",
        "isStatic": false,
        "returnType": "0x1404"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT",
        "isStatic": false,
        "returnType": "0x1405"
      },
      {
        "kind": "Property",
        "name": "FLOAT",
        "isStatic": false,
        "returnType": "0x1406"
      },
      {
        "kind": "Property",
        "name": "DEPTH_COMPONENT",
        "isStatic": false,
        "returnType": "0x1902"
      },
      {
        "kind": "Property",
        "name": "ALPHA",
        "isStatic": false,
        "returnType": "0x1906"
      },
      {
        "kind": "Property",
        "name": "RGB",
        "isStatic": false,
        "returnType": "0x1907"
      },
      {
        "kind": "Property",
        "name": "RGBA",
        "isStatic": false,
        "returnType": "0x1908"
      },
      {
        "kind": "Property",
        "name": "LUMINANCE",
        "isStatic": false,
        "returnType": "0x1909"
      },
      {
        "kind": "Property",
        "name": "LUMINANCE_ALPHA",
        "isStatic": false,
        "returnType": "0x190A"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT_4_4_4_4",
        "isStatic": false,
        "returnType": "0x8033"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT_5_5_5_1",
        "isStatic": false,
        "returnType": "0x8034"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT_5_6_5",
        "isStatic": false,
        "returnType": "0x8363"
      },
      {
        "kind": "Property",
        "name": "FRAGMENT_SHADER",
        "isStatic": false,
        "returnType": "0x8B30"
      },
      {
        "kind": "Property",
        "name": "VERTEX_SHADER",
        "isStatic": false,
        "returnType": "0x8B31"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_ATTRIBS",
        "isStatic": false,
        "returnType": "0x8869"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_UNIFORM_VECTORS",
        "isStatic": false,
        "returnType": "0x8DFB"
      },
      {
        "kind": "Property",
        "name": "MAX_VARYING_VECTORS",
        "isStatic": false,
        "returnType": "0x8DFC"
      },
      {
        "kind": "Property",
        "name": "MAX_COMBINED_TEXTURE_IMAGE_UNITS",
        "isStatic": false,
        "returnType": "0x8B4D"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_TEXTURE_IMAGE_UNITS",
        "isStatic": false,
        "returnType": "0x8B4C"
      },
      {
        "kind": "Property",
        "name": "MAX_TEXTURE_IMAGE_UNITS",
        "isStatic": false,
        "returnType": "0x8872"
      },
      {
        "kind": "Property",
        "name": "MAX_FRAGMENT_UNIFORM_VECTORS",
        "isStatic": false,
        "returnType": "0x8DFD"
      },
      {
        "kind": "Property",
        "name": "SHADER_TYPE",
        "isStatic": false,
        "returnType": "0x8B4F"
      },
      {
        "kind": "Property",
        "name": "DELETE_STATUS",
        "isStatic": false,
        "returnType": "0x8B80"
      },
      {
        "kind": "Property",
        "name": "LINK_STATUS",
        "isStatic": false,
        "returnType": "0x8B82"
      },
      {
        "kind": "Property",
        "name": "VALIDATE_STATUS",
        "isStatic": false,
        "returnType": "0x8B83"
      },
      {
        "kind": "Property",
        "name": "ATTACHED_SHADERS",
        "isStatic": false,
        "returnType": "0x8B85"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_UNIFORMS",
        "isStatic": false,
        "returnType": "0x8B86"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_ATTRIBUTES",
        "isStatic": false,
        "returnType": "0x8B89"
      },
      {
        "kind": "Property",
        "name": "SHADING_LANGUAGE_VERSION",
        "isStatic": false,
        "returnType": "0x8B8C"
      },
      {
        "kind": "Property",
        "name": "CURRENT_PROGRAM",
        "isStatic": false,
        "returnType": "0x8B8D"
      },
      {
        "kind": "Property",
        "name": "NEVER",
        "isStatic": false,
        "returnType": "0x0200"
      },
      {
        "kind": "Property",
        "name": "LESS",
        "isStatic": false,
        "returnType": "0x0201"
      },
      {
        "kind": "Property",
        "name": "EQUAL",
        "isStatic": false,
        "returnType": "0x0202"
      },
      {
        "kind": "Property",
        "name": "LEQUAL",
        "isStatic": false,
        "returnType": "0x0203"
      },
      {
        "kind": "Property",
        "name": "GREATER",
        "isStatic": false,
        "returnType": "0x0204"
      },
      {
        "kind": "Property",
        "name": "NOTEQUAL",
        "isStatic": false,
        "returnType": "0x0205"
      },
      {
        "kind": "Property",
        "name": "GEQUAL",
        "isStatic": false,
        "returnType": "0x0206"
      },
      {
        "kind": "Property",
        "name": "ALWAYS",
        "isStatic": false,
        "returnType": "0x0207"
      },
      {
        "kind": "Property",
        "name": "KEEP",
        "isStatic": false,
        "returnType": "0x1E00"
      },
      {
        "kind": "Property",
        "name": "REPLACE",
        "isStatic": false,
        "returnType": "0x1E01"
      },
      {
        "kind": "Property",
        "name": "INCR",
        "isStatic": false,
        "returnType": "0x1E02"
      },
      {
        "kind": "Property",
        "name": "DECR",
        "isStatic": false,
        "returnType": "0x1E03"
      },
      {
        "kind": "Property",
        "name": "INVERT",
        "isStatic": false,
        "returnType": "0x150A"
      },
      {
        "kind": "Property",
        "name": "INCR_WRAP",
        "isStatic": false,
        "returnType": "0x8507"
      },
      {
        "kind": "Property",
        "name": "DECR_WRAP",
        "isStatic": false,
        "returnType": "0x8508"
      },
      {
        "kind": "Property",
        "name": "VENDOR",
        "isStatic": false,
        "returnType": "0x1F00"
      },
      {
        "kind": "Property",
        "name": "RENDERER",
        "isStatic": false,
        "returnType": "0x1F01"
      },
      {
        "kind": "Property",
        "name": "VERSION",
        "isStatic": false,
        "returnType": "0x1F02"
      },
      {
        "kind": "Property",
        "name": "NEAREST",
        "isStatic": false,
        "returnType": "0x2600"
      },
      {
        "kind": "Property",
        "name": "LINEAR",
        "isStatic": false,
        "returnType": "0x2601"
      },
      {
        "kind": "Property",
        "name": "NEAREST_MIPMAP_NEAREST",
        "isStatic": false,
        "returnType": "0x2700"
      },
      {
        "kind": "Property",
        "name": "LINEAR_MIPMAP_NEAREST",
        "isStatic": false,
        "returnType": "0x2701"
      },
      {
        "kind": "Property",
        "name": "NEAREST_MIPMAP_LINEAR",
        "isStatic": false,
        "returnType": "0x2702"
      },
      {
        "kind": "Property",
        "name": "LINEAR_MIPMAP_LINEAR",
        "isStatic": false,
        "returnType": "0x2703"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MAG_FILTER",
        "isStatic": false,
        "returnType": "0x2800"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MIN_FILTER",
        "isStatic": false,
        "returnType": "0x2801"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_WRAP_S",
        "isStatic": false,
        "returnType": "0x2802"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_WRAP_T",
        "isStatic": false,
        "returnType": "0x2803"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_2D",
        "isStatic": false,
        "returnType": "0x0DE1"
      },
      {
        "kind": "Property",
        "name": "TEXTURE",
        "isStatic": false,
        "returnType": "0x1702"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP",
        "isStatic": false,
        "returnType": "0x8513"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BINDING_CUBE_MAP",
        "isStatic": false,
        "returnType": "0x8514"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_POSITIVE_X",
        "isStatic": false,
        "returnType": "0x8515"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_X",
        "isStatic": false,
        "returnType": "0x8516"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_POSITIVE_Y",
        "isStatic": false,
        "returnType": "0x8517"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_Y",
        "isStatic": false,
        "returnType": "0x8518"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_POSITIVE_Z",
        "isStatic": false,
        "returnType": "0x8519"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_Z",
        "isStatic": false,
        "returnType": "0x851A"
      },
      {
        "kind": "Property",
        "name": "MAX_CUBE_MAP_TEXTURE_SIZE",
        "isStatic": false,
        "returnType": "0x851C"
      },
      {
        "kind": "Property",
        "name": "TEXTURE0",
        "isStatic": false,
        "returnType": "0x84C0"
      },
      {
        "kind": "Property",
        "name": "TEXTURE1",
        "isStatic": false,
        "returnType": "0x84C1"
      },
      {
        "kind": "Property",
        "name": "TEXTURE2",
        "isStatic": false,
        "returnType": "0x84C2"
      },
      {
        "kind": "Property",
        "name": "TEXTURE3",
        "isStatic": false,
        "returnType": "0x84C3"
      },
      {
        "kind": "Property",
        "name": "TEXTURE4",
        "isStatic": false,
        "returnType": "0x84C4"
      },
      {
        "kind": "Property",
        "name": "TEXTURE5",
        "isStatic": false,
        "returnType": "0x84C5"
      },
      {
        "kind": "Property",
        "name": "TEXTURE6",
        "isStatic": false,
        "returnType": "0x84C6"
      },
      {
        "kind": "Property",
        "name": "TEXTURE7",
        "isStatic": false,
        "returnType": "0x84C7"
      },
      {
        "kind": "Property",
        "name": "TEXTURE8",
        "isStatic": false,
        "returnType": "0x84C8"
      },
      {
        "kind": "Property",
        "name": "TEXTURE9",
        "isStatic": false,
        "returnType": "0x84C9"
      },
      {
        "kind": "Property",
        "name": "TEXTURE10",
        "isStatic": false,
        "returnType": "0x84CA"
      },
      {
        "kind": "Property",
        "name": "TEXTURE11",
        "isStatic": false,
        "returnType": "0x84CB"
      },
      {
        "kind": "Property",
        "name": "TEXTURE12",
        "isStatic": false,
        "returnType": "0x84CC"
      },
      {
        "kind": "Property",
        "name": "TEXTURE13",
        "isStatic": false,
        "returnType": "0x84CD"
      },
      {
        "kind": "Property",
        "name": "TEXTURE14",
        "isStatic": false,
        "returnType": "0x84CE"
      },
      {
        "kind": "Property",
        "name": "TEXTURE15",
        "isStatic": false,
        "returnType": "0x84CF"
      },
      {
        "kind": "Property",
        "name": "TEXTURE16",
        "isStatic": false,
        "returnType": "0x84D0"
      },
      {
        "kind": "Property",
        "name": "TEXTURE17",
        "isStatic": false,
        "returnType": "0x84D1"
      },
      {
        "kind": "Property",
        "name": "TEXTURE18",
        "isStatic": false,
        "returnType": "0x84D2"
      },
      {
        "kind": "Property",
        "name": "TEXTURE19",
        "isStatic": false,
        "returnType": "0x84D3"
      },
      {
        "kind": "Property",
        "name": "TEXTURE20",
        "isStatic": false,
        "returnType": "0x84D4"
      },
      {
        "kind": "Property",
        "name": "TEXTURE21",
        "isStatic": false,
        "returnType": "0x84D5"
      },
      {
        "kind": "Property",
        "name": "TEXTURE22",
        "isStatic": false,
        "returnType": "0x84D6"
      },
      {
        "kind": "Property",
        "name": "TEXTURE23",
        "isStatic": false,
        "returnType": "0x84D7"
      },
      {
        "kind": "Property",
        "name": "TEXTURE24",
        "isStatic": false,
        "returnType": "0x84D8"
      },
      {
        "kind": "Property",
        "name": "TEXTURE25",
        "isStatic": false,
        "returnType": "0x84D9"
      },
      {
        "kind": "Property",
        "name": "TEXTURE26",
        "isStatic": false,
        "returnType": "0x84DA"
      },
      {
        "kind": "Property",
        "name": "TEXTURE27",
        "isStatic": false,
        "returnType": "0x84DB"
      },
      {
        "kind": "Property",
        "name": "TEXTURE28",
        "isStatic": false,
        "returnType": "0x84DC"
      },
      {
        "kind": "Property",
        "name": "TEXTURE29",
        "isStatic": false,
        "returnType": "0x84DD"
      },
      {
        "kind": "Property",
        "name": "TEXTURE30",
        "isStatic": false,
        "returnType": "0x84DE"
      },
      {
        "kind": "Property",
        "name": "TEXTURE31",
        "isStatic": false,
        "returnType": "0x84DF"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_TEXTURE",
        "isStatic": false,
        "returnType": "0x84E0"
      },
      {
        "kind": "Property",
        "name": "REPEAT",
        "isStatic": false,
        "returnType": "0x2901"
      },
      {
        "kind": "Property",
        "name": "CLAMP_TO_EDGE",
        "isStatic": false,
        "returnType": "0x812F"
      },
      {
        "kind": "Property",
        "name": "MIRRORED_REPEAT",
        "isStatic": false,
        "returnType": "0x8370"
      },
      {
        "kind": "Property",
        "name": "FLOAT_VEC2",
        "isStatic": false,
        "returnType": "0x8B50"
      },
      {
        "kind": "Property",
        "name": "FLOAT_VEC3",
        "isStatic": false,
        "returnType": "0x8B51"
      },
      {
        "kind": "Property",
        "name": "FLOAT_VEC4",
        "isStatic": false,
        "returnType": "0x8B52"
      },
      {
        "kind": "Property",
        "name": "INT_VEC2",
        "isStatic": false,
        "returnType": "0x8B53"
      },
      {
        "kind": "Property",
        "name": "INT_VEC3",
        "isStatic": false,
        "returnType": "0x8B54"
      },
      {
        "kind": "Property",
        "name": "INT_VEC4",
        "isStatic": false,
        "returnType": "0x8B55"
      },
      {
        "kind": "Property",
        "name": "BOOL",
        "isStatic": false,
        "returnType": "0x8B56"
      },
      {
        "kind": "Property",
        "name": "BOOL_VEC2",
        "isStatic": false,
        "returnType": "0x8B57"
      },
      {
        "kind": "Property",
        "name": "BOOL_VEC3",
        "isStatic": false,
        "returnType": "0x8B58"
      },
      {
        "kind": "Property",
        "name": "BOOL_VEC4",
        "isStatic": false,
        "returnType": "0x8B59"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT2",
        "isStatic": false,
        "returnType": "0x8B5A"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT3",
        "isStatic": false,
        "returnType": "0x8B5B"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT4",
        "isStatic": false,
        "returnType": "0x8B5C"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_2D",
        "isStatic": false,
        "returnType": "0x8B5E"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_CUBE",
        "isStatic": false,
        "returnType": "0x8B60"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_ENABLED",
        "isStatic": false,
        "returnType": "0x8622"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_SIZE",
        "isStatic": false,
        "returnType": "0x8623"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_STRIDE",
        "isStatic": false,
        "returnType": "0x8624"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_TYPE",
        "isStatic": false,
        "returnType": "0x8625"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_NORMALIZED",
        "isStatic": false,
        "returnType": "0x886A"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_POINTER",
        "isStatic": false,
        "returnType": "0x8645"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x889F"
      },
      {
        "kind": "Property",
        "name": "IMPLEMENTATION_COLOR_READ_TYPE",
        "isStatic": false,
        "returnType": "0x8B9A"
      },
      {
        "kind": "Property",
        "name": "IMPLEMENTATION_COLOR_READ_FORMAT",
        "isStatic": false,
        "returnType": "0x8B9B"
      },
      {
        "kind": "Property",
        "name": "COMPILE_STATUS",
        "isStatic": false,
        "returnType": "0x8B81"
      },
      {
        "kind": "Property",
        "name": "LOW_FLOAT",
        "isStatic": false,
        "returnType": "0x8DF0"
      },
      {
        "kind": "Property",
        "name": "MEDIUM_FLOAT",
        "isStatic": false,
        "returnType": "0x8DF1"
      },
      {
        "kind": "Property",
        "name": "HIGH_FLOAT",
        "isStatic": false,
        "returnType": "0x8DF2"
      },
      {
        "kind": "Property",
        "name": "LOW_INT",
        "isStatic": false,
        "returnType": "0x8DF3"
      },
      {
        "kind": "Property",
        "name": "MEDIUM_INT",
        "isStatic": false,
        "returnType": "0x8DF4"
      },
      {
        "kind": "Property",
        "name": "HIGH_INT",
        "isStatic": false,
        "returnType": "0x8DF5"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER",
        "isStatic": false,
        "returnType": "0x8D40"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER",
        "isStatic": false,
        "returnType": "0x8D41"
      },
      {
        "kind": "Property",
        "name": "RGBA4",
        "isStatic": false,
        "returnType": "0x8056"
      },
      {
        "kind": "Property",
        "name": "RGB5_A1",
        "isStatic": false,
        "returnType": "0x8057"
      },
      {
        "kind": "Property",
        "name": "RGBA8",
        "isStatic": false,
        "returnType": "0x8058"
      },
      {
        "kind": "Property",
        "name": "RGB565",
        "isStatic": false,
        "returnType": "0x8D62"
      },
      {
        "kind": "Property",
        "name": "DEPTH_COMPONENT16",
        "isStatic": false,
        "returnType": "0x81A5"
      },
      {
        "kind": "Property",
        "name": "STENCIL_INDEX8",
        "isStatic": false,
        "returnType": "0x8D48"
      },
      {
        "kind": "Property",
        "name": "DEPTH_STENCIL",
        "isStatic": false,
        "returnType": "0x84F9"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_WIDTH",
        "isStatic": false,
        "returnType": "0x8D42"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_HEIGHT",
        "isStatic": false,
        "returnType": "0x8D43"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_INTERNAL_FORMAT",
        "isStatic": false,
        "returnType": "0x8D44"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_RED_SIZE",
        "isStatic": false,
        "returnType": "0x8D50"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_GREEN_SIZE",
        "isStatic": false,
        "returnType": "0x8D51"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_BLUE_SIZE",
        "isStatic": false,
        "returnType": "0x8D52"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_ALPHA_SIZE",
        "isStatic": false,
        "returnType": "0x8D53"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_DEPTH_SIZE",
        "isStatic": false,
        "returnType": "0x8D54"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_STENCIL_SIZE",
        "isStatic": false,
        "returnType": "0x8D55"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
        "isStatic": false,
        "returnType": "0x8CD0"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
        "isStatic": false,
        "returnType": "0x8CD1"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
        "isStatic": false,
        "returnType": "0x8CD2"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",
        "isStatic": false,
        "returnType": "0x8CD3"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT0",
        "isStatic": false,
        "returnType": "0x8CE0"
      },
      {
        "kind": "Property",
        "name": "DEPTH_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8D00"
      },
      {
        "kind": "Property",
        "name": "STENCIL_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8D20"
      },
      {
        "kind": "Property",
        "name": "DEPTH_STENCIL_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x821A"
      },
      {
        "kind": "Property",
        "name": "NONE",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_COMPLETE",
        "isStatic": false,
        "returnType": "0x8CD5"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8CD6"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8CD7"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
        "isStatic": false,
        "returnType": "0x8CD9"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_UNSUPPORTED",
        "isStatic": false,
        "returnType": "0x8CDD"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8CA6"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8CA7"
      },
      {
        "kind": "Property",
        "name": "MAX_RENDERBUFFER_SIZE",
        "isStatic": false,
        "returnType": "0x84E8"
      },
      {
        "kind": "Property",
        "name": "INVALID_FRAMEBUFFER_OPERATION",
        "isStatic": false,
        "returnType": "0x0506"
      },
      {
        "kind": "Property",
        "name": "UNPACK_FLIP_Y_WEBGL",
        "isStatic": false,
        "returnType": "0x9240"
      },
      {
        "kind": "Property",
        "name": "UNPACK_PREMULTIPLY_ALPHA_WEBGL",
        "isStatic": false,
        "returnType": "0x9241"
      },
      {
        "kind": "Property",
        "name": "CONTEXT_LOST_WEBGL",
        "isStatic": false,
        "returnType": "0x9242"
      },
      {
        "kind": "Property",
        "name": "UNPACK_COLORSPACE_CONVERSION_WEBGL",
        "isStatic": false,
        "returnType": "0x9243"
      },
      {
        "kind": "Property",
        "name": "BROWSER_DEFAULT_WEBGL",
        "isStatic": false,
        "returnType": "0x9244"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGL2RenderingContext"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGL2RenderingContext"
      },
      {
        "kind": "Property",
        "name": "READ_BUFFER",
        "isStatic": false,
        "returnType": "0x0C02"
      },
      {
        "kind": "Property",
        "name": "UNPACK_ROW_LENGTH",
        "isStatic": false,
        "returnType": "0x0CF2"
      },
      {
        "kind": "Property",
        "name": "UNPACK_SKIP_ROWS",
        "isStatic": false,
        "returnType": "0x0CF3"
      },
      {
        "kind": "Property",
        "name": "UNPACK_SKIP_PIXELS",
        "isStatic": false,
        "returnType": "0x0CF4"
      },
      {
        "kind": "Property",
        "name": "PACK_ROW_LENGTH",
        "isStatic": false,
        "returnType": "0x0D02"
      },
      {
        "kind": "Property",
        "name": "PACK_SKIP_ROWS",
        "isStatic": false,
        "returnType": "0x0D03"
      },
      {
        "kind": "Property",
        "name": "PACK_SKIP_PIXELS",
        "isStatic": false,
        "returnType": "0x0D04"
      },
      {
        "kind": "Property",
        "name": "COLOR",
        "isStatic": false,
        "returnType": "0x1800"
      },
      {
        "kind": "Property",
        "name": "DEPTH",
        "isStatic": false,
        "returnType": "0x1801"
      },
      {
        "kind": "Property",
        "name": "STENCIL",
        "isStatic": false,
        "returnType": "0x1802"
      },
      {
        "kind": "Property",
        "name": "RED",
        "isStatic": false,
        "returnType": "0x1903"
      },
      {
        "kind": "Property",
        "name": "RGB8",
        "isStatic": false,
        "returnType": "0x8051"
      },
      {
        "kind": "Property",
        "name": "RGB10_A2",
        "isStatic": false,
        "returnType": "0x8059"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BINDING_3D",
        "isStatic": false,
        "returnType": "0x806A"
      },
      {
        "kind": "Property",
        "name": "UNPACK_SKIP_IMAGES",
        "isStatic": false,
        "returnType": "0x806D"
      },
      {
        "kind": "Property",
        "name": "UNPACK_IMAGE_HEIGHT",
        "isStatic": false,
        "returnType": "0x806E"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_3D",
        "isStatic": false,
        "returnType": "0x806F"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_WRAP_R",
        "isStatic": false,
        "returnType": "0x8072"
      },
      {
        "kind": "Property",
        "name": "MAX_3D_TEXTURE_SIZE",
        "isStatic": false,
        "returnType": "0x8073"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_2_10_10_10_REV",
        "isStatic": false,
        "returnType": "0x8368"
      },
      {
        "kind": "Property",
        "name": "MAX_ELEMENTS_VERTICES",
        "isStatic": false,
        "returnType": "0x80E8"
      },
      {
        "kind": "Property",
        "name": "MAX_ELEMENTS_INDICES",
        "isStatic": false,
        "returnType": "0x80E9"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MIN_LOD",
        "isStatic": false,
        "returnType": "0x813A"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MAX_LOD",
        "isStatic": false,
        "returnType": "0x813B"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BASE_LEVEL",
        "isStatic": false,
        "returnType": "0x813C"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MAX_LEVEL",
        "isStatic": false,
        "returnType": "0x813D"
      },
      {
        "kind": "Property",
        "name": "MIN",
        "isStatic": false,
        "returnType": "0x8007"
      },
      {
        "kind": "Property",
        "name": "MAX",
        "isStatic": false,
        "returnType": "0x8008"
      },
      {
        "kind": "Property",
        "name": "DEPTH_COMPONENT24",
        "isStatic": false,
        "returnType": "0x81A6"
      },
      {
        "kind": "Property",
        "name": "MAX_TEXTURE_LOD_BIAS",
        "isStatic": false,
        "returnType": "0x84FD"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_COMPARE_MODE",
        "isStatic": false,
        "returnType": "0x884C"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_COMPARE_FUNC",
        "isStatic": false,
        "returnType": "0x884D"
      },
      {
        "kind": "Property",
        "name": "CURRENT_QUERY",
        "isStatic": false,
        "returnType": "0x8865"
      },
      {
        "kind": "Property",
        "name": "QUERY_RESULT",
        "isStatic": false,
        "returnType": "0x8866"
      },
      {
        "kind": "Property",
        "name": "QUERY_RESULT_AVAILABLE",
        "isStatic": false,
        "returnType": "0x8867"
      },
      {
        "kind": "Property",
        "name": "STREAM_READ",
        "isStatic": false,
        "returnType": "0x88E1"
      },
      {
        "kind": "Property",
        "name": "STREAM_COPY",
        "isStatic": false,
        "returnType": "0x88E2"
      },
      {
        "kind": "Property",
        "name": "STATIC_READ",
        "isStatic": false,
        "returnType": "0x88E5"
      },
      {
        "kind": "Property",
        "name": "STATIC_COPY",
        "isStatic": false,
        "returnType": "0x88E6"
      },
      {
        "kind": "Property",
        "name": "DYNAMIC_READ",
        "isStatic": false,
        "returnType": "0x88E9"
      },
      {
        "kind": "Property",
        "name": "DYNAMIC_COPY",
        "isStatic": false,
        "returnType": "0x88EA"
      },
      {
        "kind": "Property",
        "name": "MAX_DRAW_BUFFERS",
        "isStatic": false,
        "returnType": "0x8824"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER0",
        "isStatic": false,
        "returnType": "0x8825"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER1",
        "isStatic": false,
        "returnType": "0x8826"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER2",
        "isStatic": false,
        "returnType": "0x8827"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER3",
        "isStatic": false,
        "returnType": "0x8828"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER4",
        "isStatic": false,
        "returnType": "0x8829"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER5",
        "isStatic": false,
        "returnType": "0x882A"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER6",
        "isStatic": false,
        "returnType": "0x882B"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER7",
        "isStatic": false,
        "returnType": "0x882C"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER8",
        "isStatic": false,
        "returnType": "0x882D"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER9",
        "isStatic": false,
        "returnType": "0x882E"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER10",
        "isStatic": false,
        "returnType": "0x882F"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER11",
        "isStatic": false,
        "returnType": "0x8830"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER12",
        "isStatic": false,
        "returnType": "0x8831"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER13",
        "isStatic": false,
        "returnType": "0x8832"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER14",
        "isStatic": false,
        "returnType": "0x8833"
      },
      {
        "kind": "Property",
        "name": "DRAW_BUFFER15",
        "isStatic": false,
        "returnType": "0x8834"
      },
      {
        "kind": "Property",
        "name": "MAX_FRAGMENT_UNIFORM_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8B49"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_UNIFORM_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8B4A"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_3D",
        "isStatic": false,
        "returnType": "0x8B5F"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_2D_SHADOW",
        "isStatic": false,
        "returnType": "0x8B62"
      },
      {
        "kind": "Property",
        "name": "FRAGMENT_SHADER_DERIVATIVE_HINT",
        "isStatic": false,
        "returnType": "0x8B8B"
      },
      {
        "kind": "Property",
        "name": "PIXEL_PACK_BUFFER",
        "isStatic": false,
        "returnType": "0x88EB"
      },
      {
        "kind": "Property",
        "name": "PIXEL_UNPACK_BUFFER",
        "isStatic": false,
        "returnType": "0x88EC"
      },
      {
        "kind": "Property",
        "name": "PIXEL_PACK_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x88ED"
      },
      {
        "kind": "Property",
        "name": "PIXEL_UNPACK_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x88EF"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT2x3",
        "isStatic": false,
        "returnType": "0x8B65"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT2x4",
        "isStatic": false,
        "returnType": "0x8B66"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT3x2",
        "isStatic": false,
        "returnType": "0x8B67"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT3x4",
        "isStatic": false,
        "returnType": "0x8B68"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT4x2",
        "isStatic": false,
        "returnType": "0x8B69"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT4x3",
        "isStatic": false,
        "returnType": "0x8B6A"
      },
      {
        "kind": "Property",
        "name": "SRGB",
        "isStatic": false,
        "returnType": "0x8C40"
      },
      {
        "kind": "Property",
        "name": "SRGB8",
        "isStatic": false,
        "returnType": "0x8C41"
      },
      {
        "kind": "Property",
        "name": "SRGB8_ALPHA8",
        "isStatic": false,
        "returnType": "0x8C43"
      },
      {
        "kind": "Property",
        "name": "COMPARE_REF_TO_TEXTURE",
        "isStatic": false,
        "returnType": "0x884E"
      },
      {
        "kind": "Property",
        "name": "RGBA32F",
        "isStatic": false,
        "returnType": "0x8814"
      },
      {
        "kind": "Property",
        "name": "RGB32F",
        "isStatic": false,
        "returnType": "0x8815"
      },
      {
        "kind": "Property",
        "name": "RGBA16F",
        "isStatic": false,
        "returnType": "0x881A"
      },
      {
        "kind": "Property",
        "name": "RGB16F",
        "isStatic": false,
        "returnType": "0x881B"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_INTEGER",
        "isStatic": false,
        "returnType": "0x88FD"
      },
      {
        "kind": "Property",
        "name": "MAX_ARRAY_TEXTURE_LAYERS",
        "isStatic": false,
        "returnType": "0x88FF"
      },
      {
        "kind": "Property",
        "name": "MIN_PROGRAM_TEXEL_OFFSET",
        "isStatic": false,
        "returnType": "0x8904"
      },
      {
        "kind": "Property",
        "name": "MAX_PROGRAM_TEXEL_OFFSET",
        "isStatic": false,
        "returnType": "0x8905"
      },
      {
        "kind": "Property",
        "name": "MAX_VARYING_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8B4B"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_2D_ARRAY",
        "isStatic": false,
        "returnType": "0x8C1A"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BINDING_2D_ARRAY",
        "isStatic": false,
        "returnType": "0x8C1D"
      },
      {
        "kind": "Property",
        "name": "R11F_G11F_B10F",
        "isStatic": false,
        "returnType": "0x8C3A"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_10F_11F_11F_REV",
        "isStatic": false,
        "returnType": "0x8C3B"
      },
      {
        "kind": "Property",
        "name": "RGB9_E5",
        "isStatic": false,
        "returnType": "0x8C3D"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_5_9_9_9_REV",
        "isStatic": false,
        "returnType": "0x8C3E"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_BUFFER_MODE",
        "isStatic": false,
        "returnType": "0x8C7F"
      },
      {
        "kind": "Property",
        "name": "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8C80"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_VARYINGS",
        "isStatic": false,
        "returnType": "0x8C83"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_BUFFER_START",
        "isStatic": false,
        "returnType": "0x8C84"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_BUFFER_SIZE",
        "isStatic": false,
        "returnType": "0x8C85"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",
        "isStatic": false,
        "returnType": "0x8C88"
      },
      {
        "kind": "Property",
        "name": "RASTERIZER_DISCARD",
        "isStatic": false,
        "returnType": "0x8C89"
      },
      {
        "kind": "Property",
        "name": "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8C8A"
      },
      {
        "kind": "Property",
        "name": "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",
        "isStatic": false,
        "returnType": "0x8C8B"
      },
      {
        "kind": "Property",
        "name": "INTERLEAVED_ATTRIBS",
        "isStatic": false,
        "returnType": "0x8C8C"
      },
      {
        "kind": "Property",
        "name": "SEPARATE_ATTRIBS",
        "isStatic": false,
        "returnType": "0x8C8D"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_BUFFER",
        "isStatic": false,
        "returnType": "0x8C8E"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8C8F"
      },
      {
        "kind": "Property",
        "name": "RGBA32UI",
        "isStatic": false,
        "returnType": "0x8D70"
      },
      {
        "kind": "Property",
        "name": "RGB32UI",
        "isStatic": false,
        "returnType": "0x8D71"
      },
      {
        "kind": "Property",
        "name": "RGBA16UI",
        "isStatic": false,
        "returnType": "0x8D76"
      },
      {
        "kind": "Property",
        "name": "RGB16UI",
        "isStatic": false,
        "returnType": "0x8D77"
      },
      {
        "kind": "Property",
        "name": "RGBA8UI",
        "isStatic": false,
        "returnType": "0x8D7C"
      },
      {
        "kind": "Property",
        "name": "RGB8UI",
        "isStatic": false,
        "returnType": "0x8D7D"
      },
      {
        "kind": "Property",
        "name": "RGBA32I",
        "isStatic": false,
        "returnType": "0x8D82"
      },
      {
        "kind": "Property",
        "name": "RGB32I",
        "isStatic": false,
        "returnType": "0x8D83"
      },
      {
        "kind": "Property",
        "name": "RGBA16I",
        "isStatic": false,
        "returnType": "0x8D88"
      },
      {
        "kind": "Property",
        "name": "RGB16I",
        "isStatic": false,
        "returnType": "0x8D89"
      },
      {
        "kind": "Property",
        "name": "RGBA8I",
        "isStatic": false,
        "returnType": "0x8D8E"
      },
      {
        "kind": "Property",
        "name": "RGB8I",
        "isStatic": false,
        "returnType": "0x8D8F"
      },
      {
        "kind": "Property",
        "name": "RED_INTEGER",
        "isStatic": false,
        "returnType": "0x8D94"
      },
      {
        "kind": "Property",
        "name": "RGB_INTEGER",
        "isStatic": false,
        "returnType": "0x8D98"
      },
      {
        "kind": "Property",
        "name": "RGBA_INTEGER",
        "isStatic": false,
        "returnType": "0x8D99"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_2D_ARRAY",
        "isStatic": false,
        "returnType": "0x8DC1"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_2D_ARRAY_SHADOW",
        "isStatic": false,
        "returnType": "0x8DC4"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_CUBE_SHADOW",
        "isStatic": false,
        "returnType": "0x8DC5"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_VEC2",
        "isStatic": false,
        "returnType": "0x8DC6"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_VEC3",
        "isStatic": false,
        "returnType": "0x8DC7"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_VEC4",
        "isStatic": false,
        "returnType": "0x8DC8"
      },
      {
        "kind": "Property",
        "name": "INT_SAMPLER_2D",
        "isStatic": false,
        "returnType": "0x8DCA"
      },
      {
        "kind": "Property",
        "name": "INT_SAMPLER_3D",
        "isStatic": false,
        "returnType": "0x8DCB"
      },
      {
        "kind": "Property",
        "name": "INT_SAMPLER_CUBE",
        "isStatic": false,
        "returnType": "0x8DCC"
      },
      {
        "kind": "Property",
        "name": "INT_SAMPLER_2D_ARRAY",
        "isStatic": false,
        "returnType": "0x8DCF"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_SAMPLER_2D",
        "isStatic": false,
        "returnType": "0x8DD2"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_SAMPLER_3D",
        "isStatic": false,
        "returnType": "0x8DD3"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_SAMPLER_CUBE",
        "isStatic": false,
        "returnType": "0x8DD4"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_SAMPLER_2D_ARRAY",
        "isStatic": false,
        "returnType": "0x8DD7"
      },
      {
        "kind": "Property",
        "name": "DEPTH_COMPONENT32F",
        "isStatic": false,
        "returnType": "0x8CAC"
      },
      {
        "kind": "Property",
        "name": "DEPTH32F_STENCIL8",
        "isStatic": false,
        "returnType": "0x8CAD"
      },
      {
        "kind": "Property",
        "name": "FLOAT_32_UNSIGNED_INT_24_8_REV",
        "isStatic": false,
        "returnType": "0x8DAD"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",
        "isStatic": false,
        "returnType": "0x8210"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",
        "isStatic": false,
        "returnType": "0x8211"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_RED_SIZE",
        "isStatic": false,
        "returnType": "0x8212"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",
        "isStatic": false,
        "returnType": "0x8213"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",
        "isStatic": false,
        "returnType": "0x8214"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",
        "isStatic": false,
        "returnType": "0x8215"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",
        "isStatic": false,
        "returnType": "0x8216"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",
        "isStatic": false,
        "returnType": "0x8217"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_DEFAULT",
        "isStatic": false,
        "returnType": "0x8218"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT_24_8",
        "isStatic": false,
        "returnType": "0x84FA"
      },
      {
        "kind": "Property",
        "name": "DEPTH24_STENCIL8",
        "isStatic": false,
        "returnType": "0x88F0"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_NORMALIZED",
        "isStatic": false,
        "returnType": "0x8C17"
      },
      {
        "kind": "Property",
        "name": "DRAW_FRAMEBUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8CA6"
      },
      {
        "kind": "Property",
        "name": "READ_FRAMEBUFFER",
        "isStatic": false,
        "returnType": "0x8CA8"
      },
      {
        "kind": "Property",
        "name": "DRAW_FRAMEBUFFER",
        "isStatic": false,
        "returnType": "0x8CA9"
      },
      {
        "kind": "Property",
        "name": "READ_FRAMEBUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8CAA"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_SAMPLES",
        "isStatic": false,
        "returnType": "0x8CAB"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",
        "isStatic": false,
        "returnType": "0x8CD4"
      },
      {
        "kind": "Property",
        "name": "MAX_COLOR_ATTACHMENTS",
        "isStatic": false,
        "returnType": "0x8CDF"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT1",
        "isStatic": false,
        "returnType": "0x8CE1"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT2",
        "isStatic": false,
        "returnType": "0x8CE2"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT3",
        "isStatic": false,
        "returnType": "0x8CE3"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT4",
        "isStatic": false,
        "returnType": "0x8CE4"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT5",
        "isStatic": false,
        "returnType": "0x8CE5"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT6",
        "isStatic": false,
        "returnType": "0x8CE6"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT7",
        "isStatic": false,
        "returnType": "0x8CE7"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT8",
        "isStatic": false,
        "returnType": "0x8CE8"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT9",
        "isStatic": false,
        "returnType": "0x8CE9"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT10",
        "isStatic": false,
        "returnType": "0x8CEA"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT11",
        "isStatic": false,
        "returnType": "0x8CEB"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT12",
        "isStatic": false,
        "returnType": "0x8CEC"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT13",
        "isStatic": false,
        "returnType": "0x8CED"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT14",
        "isStatic": false,
        "returnType": "0x8CEE"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT15",
        "isStatic": false,
        "returnType": "0x8CEF"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",
        "isStatic": false,
        "returnType": "0x8D56"
      },
      {
        "kind": "Property",
        "name": "MAX_SAMPLES",
        "isStatic": false,
        "returnType": "0x8D57"
      },
      {
        "kind": "Property",
        "name": "HALF_FLOAT",
        "isStatic": false,
        "returnType": "0x140B"
      },
      {
        "kind": "Property",
        "name": "RG",
        "isStatic": false,
        "returnType": "0x8227"
      },
      {
        "kind": "Property",
        "name": "RG_INTEGER",
        "isStatic": false,
        "returnType": "0x8228"
      },
      {
        "kind": "Property",
        "name": "R8",
        "isStatic": false,
        "returnType": "0x8229"
      },
      {
        "kind": "Property",
        "name": "RG8",
        "isStatic": false,
        "returnType": "0x822B"
      },
      {
        "kind": "Property",
        "name": "R16F",
        "isStatic": false,
        "returnType": "0x822D"
      },
      {
        "kind": "Property",
        "name": "R32F",
        "isStatic": false,
        "returnType": "0x822E"
      },
      {
        "kind": "Property",
        "name": "RG16F",
        "isStatic": false,
        "returnType": "0x822F"
      },
      {
        "kind": "Property",
        "name": "RG32F",
        "isStatic": false,
        "returnType": "0x8230"
      },
      {
        "kind": "Property",
        "name": "R8I",
        "isStatic": false,
        "returnType": "0x8231"
      },
      {
        "kind": "Property",
        "name": "R8UI",
        "isStatic": false,
        "returnType": "0x8232"
      },
      {
        "kind": "Property",
        "name": "R16I",
        "isStatic": false,
        "returnType": "0x8233"
      },
      {
        "kind": "Property",
        "name": "R16UI",
        "isStatic": false,
        "returnType": "0x8234"
      },
      {
        "kind": "Property",
        "name": "R32I",
        "isStatic": false,
        "returnType": "0x8235"
      },
      {
        "kind": "Property",
        "name": "R32UI",
        "isStatic": false,
        "returnType": "0x8236"
      },
      {
        "kind": "Property",
        "name": "RG8I",
        "isStatic": false,
        "returnType": "0x8237"
      },
      {
        "kind": "Property",
        "name": "RG8UI",
        "isStatic": false,
        "returnType": "0x8238"
      },
      {
        "kind": "Property",
        "name": "RG16I",
        "isStatic": false,
        "returnType": "0x8239"
      },
      {
        "kind": "Property",
        "name": "RG16UI",
        "isStatic": false,
        "returnType": "0x823A"
      },
      {
        "kind": "Property",
        "name": "RG32I",
        "isStatic": false,
        "returnType": "0x823B"
      },
      {
        "kind": "Property",
        "name": "RG32UI",
        "isStatic": false,
        "returnType": "0x823C"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ARRAY_BINDING",
        "isStatic": false,
        "returnType": "0x85B5"
      },
      {
        "kind": "Property",
        "name": "R8_SNORM",
        "isStatic": false,
        "returnType": "0x8F94"
      },
      {
        "kind": "Property",
        "name": "RG8_SNORM",
        "isStatic": false,
        "returnType": "0x8F95"
      },
      {
        "kind": "Property",
        "name": "RGB8_SNORM",
        "isStatic": false,
        "returnType": "0x8F96"
      },
      {
        "kind": "Property",
        "name": "RGBA8_SNORM",
        "isStatic": false,
        "returnType": "0x8F97"
      },
      {
        "kind": "Property",
        "name": "SIGNED_NORMALIZED",
        "isStatic": false,
        "returnType": "0x8F9C"
      },
      {
        "kind": "Property",
        "name": "COPY_READ_BUFFER",
        "isStatic": false,
        "returnType": "0x8F36"
      },
      {
        "kind": "Property",
        "name": "COPY_WRITE_BUFFER",
        "isStatic": false,
        "returnType": "0x8F37"
      },
      {
        "kind": "Property",
        "name": "COPY_READ_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8F36"
      },
      {
        "kind": "Property",
        "name": "COPY_WRITE_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8F37"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BUFFER",
        "isStatic": false,
        "returnType": "0x8A11"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8A28"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BUFFER_START",
        "isStatic": false,
        "returnType": "0x8A29"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BUFFER_SIZE",
        "isStatic": false,
        "returnType": "0x8A2A"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_UNIFORM_BLOCKS",
        "isStatic": false,
        "returnType": "0x8A2B"
      },
      {
        "kind": "Property",
        "name": "MAX_FRAGMENT_UNIFORM_BLOCKS",
        "isStatic": false,
        "returnType": "0x8A2D"
      },
      {
        "kind": "Property",
        "name": "MAX_COMBINED_UNIFORM_BLOCKS",
        "isStatic": false,
        "returnType": "0x8A2E"
      },
      {
        "kind": "Property",
        "name": "MAX_UNIFORM_BUFFER_BINDINGS",
        "isStatic": false,
        "returnType": "0x8A2F"
      },
      {
        "kind": "Property",
        "name": "MAX_UNIFORM_BLOCK_SIZE",
        "isStatic": false,
        "returnType": "0x8A30"
      },
      {
        "kind": "Property",
        "name": "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8A31"
      },
      {
        "kind": "Property",
        "name": "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",
        "isStatic": false,
        "returnType": "0x8A33"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BUFFER_OFFSET_ALIGNMENT",
        "isStatic": false,
        "returnType": "0x8A34"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_UNIFORM_BLOCKS",
        "isStatic": false,
        "returnType": "0x8A36"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_TYPE",
        "isStatic": false,
        "returnType": "0x8A37"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_SIZE",
        "isStatic": false,
        "returnType": "0x8A38"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_INDEX",
        "isStatic": false,
        "returnType": "0x8A3A"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_OFFSET",
        "isStatic": false,
        "returnType": "0x8A3B"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_ARRAY_STRIDE",
        "isStatic": false,
        "returnType": "0x8A3C"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_MATRIX_STRIDE",
        "isStatic": false,
        "returnType": "0x8A3D"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_IS_ROW_MAJOR",
        "isStatic": false,
        "returnType": "0x8A3E"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_BINDING",
        "isStatic": false,
        "returnType": "0x8A3F"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_DATA_SIZE",
        "isStatic": false,
        "returnType": "0x8A40"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_ACTIVE_UNIFORMS",
        "isStatic": false,
        "returnType": "0x8A42"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",
        "isStatic": false,
        "returnType": "0x8A43"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",
        "isStatic": false,
        "returnType": "0x8A44"
      },
      {
        "kind": "Property",
        "name": "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",
        "isStatic": false,
        "returnType": "0x8A46"
      },
      {
        "kind": "Property",
        "name": "INVALID_INDEX",
        "isStatic": false,
        "returnType": "0xFFFFFFFF"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_OUTPUT_COMPONENTS",
        "isStatic": false,
        "returnType": "0x9122"
      },
      {
        "kind": "Property",
        "name": "MAX_FRAGMENT_INPUT_COMPONENTS",
        "isStatic": false,
        "returnType": "0x9125"
      },
      {
        "kind": "Property",
        "name": "MAX_SERVER_WAIT_TIMEOUT",
        "isStatic": false,
        "returnType": "0x9111"
      },
      {
        "kind": "Property",
        "name": "OBJECT_TYPE",
        "isStatic": false,
        "returnType": "0x9112"
      },
      {
        "kind": "Property",
        "name": "SYNC_CONDITION",
        "isStatic": false,
        "returnType": "0x9113"
      },
      {
        "kind": "Property",
        "name": "SYNC_STATUS",
        "isStatic": false,
        "returnType": "0x9114"
      },
      {
        "kind": "Property",
        "name": "SYNC_FLAGS",
        "isStatic": false,
        "returnType": "0x9115"
      },
      {
        "kind": "Property",
        "name": "SYNC_FENCE",
        "isStatic": false,
        "returnType": "0x9116"
      },
      {
        "kind": "Property",
        "name": "SYNC_GPU_COMMANDS_COMPLETE",
        "isStatic": false,
        "returnType": "0x9117"
      },
      {
        "kind": "Property",
        "name": "UNSIGNALED",
        "isStatic": false,
        "returnType": "0x9118"
      },
      {
        "kind": "Property",
        "name": "SIGNALED",
        "isStatic": false,
        "returnType": "0x9119"
      },
      {
        "kind": "Property",
        "name": "ALREADY_SIGNALED",
        "isStatic": false,
        "returnType": "0x911A"
      },
      {
        "kind": "Property",
        "name": "TIMEOUT_EXPIRED",
        "isStatic": false,
        "returnType": "0x911B"
      },
      {
        "kind": "Property",
        "name": "CONDITION_SATISFIED",
        "isStatic": false,
        "returnType": "0x911C"
      },
      {
        "kind": "Property",
        "name": "WAIT_FAILED",
        "isStatic": false,
        "returnType": "0x911D"
      },
      {
        "kind": "Property",
        "name": "SYNC_FLUSH_COMMANDS_BIT",
        "isStatic": false,
        "returnType": "0x00000001"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_DIVISOR",
        "isStatic": false,
        "returnType": "0x88FE"
      },
      {
        "kind": "Property",
        "name": "ANY_SAMPLES_PASSED",
        "isStatic": false,
        "returnType": "0x8C2F"
      },
      {
        "kind": "Property",
        "name": "ANY_SAMPLES_PASSED_CONSERVATIVE",
        "isStatic": false,
        "returnType": "0x8D6A"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_BINDING",
        "isStatic": false,
        "returnType": "0x8919"
      },
      {
        "kind": "Property",
        "name": "RGB10_A2UI",
        "isStatic": false,
        "returnType": "0x906F"
      },
      {
        "kind": "Property",
        "name": "INT_2_10_10_10_REV",
        "isStatic": false,
        "returnType": "0x8D9F"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK",
        "isStatic": false,
        "returnType": "0x8E22"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_PAUSED",
        "isStatic": false,
        "returnType": "0x8E23"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_ACTIVE",
        "isStatic": false,
        "returnType": "0x8E24"
      },
      {
        "kind": "Property",
        "name": "TRANSFORM_FEEDBACK_BINDING",
        "isStatic": false,
        "returnType": "0x8E25"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_IMMUTABLE_FORMAT",
        "isStatic": false,
        "returnType": "0x912F"
      },
      {
        "kind": "Property",
        "name": "MAX_ELEMENT_INDEX",
        "isStatic": false,
        "returnType": "0x8D6B"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_IMMUTABLE_LEVELS",
        "isStatic": false,
        "returnType": "0x82DF"
      },
      {
        "kind": "Property",
        "name": "TIMEOUT_IGNORED",
        "isStatic": false,
        "returnType": "-1"
      },
      {
        "kind": "Property",
        "name": "MAX_CLIENT_WAIT_TIMEOUT_WEBGL",
        "isStatic": false,
        "returnType": "0x9247"
      },
      {
        "kind": "Property",
        "name": "DEPTH_BUFFER_BIT",
        "isStatic": false,
        "returnType": "0x00000100"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BUFFER_BIT",
        "isStatic": false,
        "returnType": "0x00000400"
      },
      {
        "kind": "Property",
        "name": "COLOR_BUFFER_BIT",
        "isStatic": false,
        "returnType": "0x00004000"
      },
      {
        "kind": "Property",
        "name": "POINTS",
        "isStatic": false,
        "returnType": "0x0000"
      },
      {
        "kind": "Property",
        "name": "LINES",
        "isStatic": false,
        "returnType": "0x0001"
      },
      {
        "kind": "Property",
        "name": "LINE_LOOP",
        "isStatic": false,
        "returnType": "0x0002"
      },
      {
        "kind": "Property",
        "name": "LINE_STRIP",
        "isStatic": false,
        "returnType": "0x0003"
      },
      {
        "kind": "Property",
        "name": "TRIANGLES",
        "isStatic": false,
        "returnType": "0x0004"
      },
      {
        "kind": "Property",
        "name": "TRIANGLE_STRIP",
        "isStatic": false,
        "returnType": "0x0005"
      },
      {
        "kind": "Property",
        "name": "TRIANGLE_FAN",
        "isStatic": false,
        "returnType": "0x0006"
      },
      {
        "kind": "Property",
        "name": "ZERO",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "ONE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SRC_COLOR",
        "isStatic": false,
        "returnType": "0x0300"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_SRC_COLOR",
        "isStatic": false,
        "returnType": "0x0301"
      },
      {
        "kind": "Property",
        "name": "SRC_ALPHA",
        "isStatic": false,
        "returnType": "0x0302"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_SRC_ALPHA",
        "isStatic": false,
        "returnType": "0x0303"
      },
      {
        "kind": "Property",
        "name": "DST_ALPHA",
        "isStatic": false,
        "returnType": "0x0304"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_DST_ALPHA",
        "isStatic": false,
        "returnType": "0x0305"
      },
      {
        "kind": "Property",
        "name": "DST_COLOR",
        "isStatic": false,
        "returnType": "0x0306"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_DST_COLOR",
        "isStatic": false,
        "returnType": "0x0307"
      },
      {
        "kind": "Property",
        "name": "SRC_ALPHA_SATURATE",
        "isStatic": false,
        "returnType": "0x0308"
      },
      {
        "kind": "Property",
        "name": "FUNC_ADD",
        "isStatic": false,
        "returnType": "0x8006"
      },
      {
        "kind": "Property",
        "name": "BLEND_EQUATION",
        "isStatic": false,
        "returnType": "0x8009"
      },
      {
        "kind": "Property",
        "name": "BLEND_EQUATION_RGB",
        "isStatic": false,
        "returnType": "0x8009"
      },
      {
        "kind": "Property",
        "name": "BLEND_EQUATION_ALPHA",
        "isStatic": false,
        "returnType": "0x883D"
      },
      {
        "kind": "Property",
        "name": "FUNC_SUBTRACT",
        "isStatic": false,
        "returnType": "0x800A"
      },
      {
        "kind": "Property",
        "name": "FUNC_REVERSE_SUBTRACT",
        "isStatic": false,
        "returnType": "0x800B"
      },
      {
        "kind": "Property",
        "name": "BLEND_DST_RGB",
        "isStatic": false,
        "returnType": "0x80C8"
      },
      {
        "kind": "Property",
        "name": "BLEND_SRC_RGB",
        "isStatic": false,
        "returnType": "0x80C9"
      },
      {
        "kind": "Property",
        "name": "BLEND_DST_ALPHA",
        "isStatic": false,
        "returnType": "0x80CA"
      },
      {
        "kind": "Property",
        "name": "BLEND_SRC_ALPHA",
        "isStatic": false,
        "returnType": "0x80CB"
      },
      {
        "kind": "Property",
        "name": "CONSTANT_COLOR",
        "isStatic": false,
        "returnType": "0x8001"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_CONSTANT_COLOR",
        "isStatic": false,
        "returnType": "0x8002"
      },
      {
        "kind": "Property",
        "name": "CONSTANT_ALPHA",
        "isStatic": false,
        "returnType": "0x8003"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_CONSTANT_ALPHA",
        "isStatic": false,
        "returnType": "0x8004"
      },
      {
        "kind": "Property",
        "name": "BLEND_COLOR",
        "isStatic": false,
        "returnType": "0x8005"
      },
      {
        "kind": "Property",
        "name": "ARRAY_BUFFER",
        "isStatic": false,
        "returnType": "0x8892"
      },
      {
        "kind": "Property",
        "name": "ELEMENT_ARRAY_BUFFER",
        "isStatic": false,
        "returnType": "0x8893"
      },
      {
        "kind": "Property",
        "name": "ARRAY_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8894"
      },
      {
        "kind": "Property",
        "name": "ELEMENT_ARRAY_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8895"
      },
      {
        "kind": "Property",
        "name": "STREAM_DRAW",
        "isStatic": false,
        "returnType": "0x88E0"
      },
      {
        "kind": "Property",
        "name": "STATIC_DRAW",
        "isStatic": false,
        "returnType": "0x88E4"
      },
      {
        "kind": "Property",
        "name": "DYNAMIC_DRAW",
        "isStatic": false,
        "returnType": "0x88E8"
      },
      {
        "kind": "Property",
        "name": "BUFFER_SIZE",
        "isStatic": false,
        "returnType": "0x8764"
      },
      {
        "kind": "Property",
        "name": "BUFFER_USAGE",
        "isStatic": false,
        "returnType": "0x8765"
      },
      {
        "kind": "Property",
        "name": "CURRENT_VERTEX_ATTRIB",
        "isStatic": false,
        "returnType": "0x8626"
      },
      {
        "kind": "Property",
        "name": "FRONT",
        "isStatic": false,
        "returnType": "0x0404"
      },
      {
        "kind": "Property",
        "name": "BACK",
        "isStatic": false,
        "returnType": "0x0405"
      },
      {
        "kind": "Property",
        "name": "FRONT_AND_BACK",
        "isStatic": false,
        "returnType": "0x0408"
      },
      {
        "kind": "Property",
        "name": "CULL_FACE",
        "isStatic": false,
        "returnType": "0x0B44"
      },
      {
        "kind": "Property",
        "name": "BLEND",
        "isStatic": false,
        "returnType": "0x0BE2"
      },
      {
        "kind": "Property",
        "name": "DITHER",
        "isStatic": false,
        "returnType": "0x0BD0"
      },
      {
        "kind": "Property",
        "name": "STENCIL_TEST",
        "isStatic": false,
        "returnType": "0x0B90"
      },
      {
        "kind": "Property",
        "name": "DEPTH_TEST",
        "isStatic": false,
        "returnType": "0x0B71"
      },
      {
        "kind": "Property",
        "name": "SCISSOR_TEST",
        "isStatic": false,
        "returnType": "0x0C11"
      },
      {
        "kind": "Property",
        "name": "POLYGON_OFFSET_FILL",
        "isStatic": false,
        "returnType": "0x8037"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_ALPHA_TO_COVERAGE",
        "isStatic": false,
        "returnType": "0x809E"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_COVERAGE",
        "isStatic": false,
        "returnType": "0x80A0"
      },
      {
        "kind": "Property",
        "name": "NO_ERROR",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "INVALID_ENUM",
        "isStatic": false,
        "returnType": "0x0500"
      },
      {
        "kind": "Property",
        "name": "INVALID_VALUE",
        "isStatic": false,
        "returnType": "0x0501"
      },
      {
        "kind": "Property",
        "name": "INVALID_OPERATION",
        "isStatic": false,
        "returnType": "0x0502"
      },
      {
        "kind": "Property",
        "name": "OUT_OF_MEMORY",
        "isStatic": false,
        "returnType": "0x0505"
      },
      {
        "kind": "Property",
        "name": "CW",
        "isStatic": false,
        "returnType": "0x0900"
      },
      {
        "kind": "Property",
        "name": "CCW",
        "isStatic": false,
        "returnType": "0x0901"
      },
      {
        "kind": "Property",
        "name": "LINE_WIDTH",
        "isStatic": false,
        "returnType": "0x0B21"
      },
      {
        "kind": "Property",
        "name": "ALIASED_POINT_SIZE_RANGE",
        "isStatic": false,
        "returnType": "0x846D"
      },
      {
        "kind": "Property",
        "name": "ALIASED_LINE_WIDTH_RANGE",
        "isStatic": false,
        "returnType": "0x846E"
      },
      {
        "kind": "Property",
        "name": "CULL_FACE_MODE",
        "isStatic": false,
        "returnType": "0x0B45"
      },
      {
        "kind": "Property",
        "name": "FRONT_FACE",
        "isStatic": false,
        "returnType": "0x0B46"
      },
      {
        "kind": "Property",
        "name": "DEPTH_RANGE",
        "isStatic": false,
        "returnType": "0x0B70"
      },
      {
        "kind": "Property",
        "name": "DEPTH_WRITEMASK",
        "isStatic": false,
        "returnType": "0x0B72"
      },
      {
        "kind": "Property",
        "name": "DEPTH_CLEAR_VALUE",
        "isStatic": false,
        "returnType": "0x0B73"
      },
      {
        "kind": "Property",
        "name": "DEPTH_FUNC",
        "isStatic": false,
        "returnType": "0x0B74"
      },
      {
        "kind": "Property",
        "name": "STENCIL_CLEAR_VALUE",
        "isStatic": false,
        "returnType": "0x0B91"
      },
      {
        "kind": "Property",
        "name": "STENCIL_FUNC",
        "isStatic": false,
        "returnType": "0x0B92"
      },
      {
        "kind": "Property",
        "name": "STENCIL_FAIL",
        "isStatic": false,
        "returnType": "0x0B94"
      },
      {
        "kind": "Property",
        "name": "STENCIL_PASS_DEPTH_FAIL",
        "isStatic": false,
        "returnType": "0x0B95"
      },
      {
        "kind": "Property",
        "name": "STENCIL_PASS_DEPTH_PASS",
        "isStatic": false,
        "returnType": "0x0B96"
      },
      {
        "kind": "Property",
        "name": "STENCIL_REF",
        "isStatic": false,
        "returnType": "0x0B97"
      },
      {
        "kind": "Property",
        "name": "STENCIL_VALUE_MASK",
        "isStatic": false,
        "returnType": "0x0B93"
      },
      {
        "kind": "Property",
        "name": "STENCIL_WRITEMASK",
        "isStatic": false,
        "returnType": "0x0B98"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_FUNC",
        "isStatic": false,
        "returnType": "0x8800"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_FAIL",
        "isStatic": false,
        "returnType": "0x8801"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_PASS_DEPTH_FAIL",
        "isStatic": false,
        "returnType": "0x8802"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_PASS_DEPTH_PASS",
        "isStatic": false,
        "returnType": "0x8803"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_REF",
        "isStatic": false,
        "returnType": "0x8CA3"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_VALUE_MASK",
        "isStatic": false,
        "returnType": "0x8CA4"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_WRITEMASK",
        "isStatic": false,
        "returnType": "0x8CA5"
      },
      {
        "kind": "Property",
        "name": "VIEWPORT",
        "isStatic": false,
        "returnType": "0x0BA2"
      },
      {
        "kind": "Property",
        "name": "SCISSOR_BOX",
        "isStatic": false,
        "returnType": "0x0C10"
      },
      {
        "kind": "Property",
        "name": "COLOR_CLEAR_VALUE",
        "isStatic": false,
        "returnType": "0x0C22"
      },
      {
        "kind": "Property",
        "name": "COLOR_WRITEMASK",
        "isStatic": false,
        "returnType": "0x0C23"
      },
      {
        "kind": "Property",
        "name": "UNPACK_ALIGNMENT",
        "isStatic": false,
        "returnType": "0x0CF5"
      },
      {
        "kind": "Property",
        "name": "PACK_ALIGNMENT",
        "isStatic": false,
        "returnType": "0x0D05"
      },
      {
        "kind": "Property",
        "name": "MAX_TEXTURE_SIZE",
        "isStatic": false,
        "returnType": "0x0D33"
      },
      {
        "kind": "Property",
        "name": "MAX_VIEWPORT_DIMS",
        "isStatic": false,
        "returnType": "0x0D3A"
      },
      {
        "kind": "Property",
        "name": "SUBPIXEL_BITS",
        "isStatic": false,
        "returnType": "0x0D50"
      },
      {
        "kind": "Property",
        "name": "RED_BITS",
        "isStatic": false,
        "returnType": "0x0D52"
      },
      {
        "kind": "Property",
        "name": "GREEN_BITS",
        "isStatic": false,
        "returnType": "0x0D53"
      },
      {
        "kind": "Property",
        "name": "BLUE_BITS",
        "isStatic": false,
        "returnType": "0x0D54"
      },
      {
        "kind": "Property",
        "name": "ALPHA_BITS",
        "isStatic": false,
        "returnType": "0x0D55"
      },
      {
        "kind": "Property",
        "name": "DEPTH_BITS",
        "isStatic": false,
        "returnType": "0x0D56"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BITS",
        "isStatic": false,
        "returnType": "0x0D57"
      },
      {
        "kind": "Property",
        "name": "POLYGON_OFFSET_UNITS",
        "isStatic": false,
        "returnType": "0x2A00"
      },
      {
        "kind": "Property",
        "name": "POLYGON_OFFSET_FACTOR",
        "isStatic": false,
        "returnType": "0x8038"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BINDING_2D",
        "isStatic": false,
        "returnType": "0x8069"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_BUFFERS",
        "isStatic": false,
        "returnType": "0x80A8"
      },
      {
        "kind": "Property",
        "name": "SAMPLES",
        "isStatic": false,
        "returnType": "0x80A9"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_COVERAGE_VALUE",
        "isStatic": false,
        "returnType": "0x80AA"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_COVERAGE_INVERT",
        "isStatic": false,
        "returnType": "0x80AB"
      },
      {
        "kind": "Property",
        "name": "COMPRESSED_TEXTURE_FORMATS",
        "isStatic": false,
        "returnType": "0x86A3"
      },
      {
        "kind": "Property",
        "name": "DONT_CARE",
        "isStatic": false,
        "returnType": "0x1100"
      },
      {
        "kind": "Property",
        "name": "FASTEST",
        "isStatic": false,
        "returnType": "0x1101"
      },
      {
        "kind": "Property",
        "name": "NICEST",
        "isStatic": false,
        "returnType": "0x1102"
      },
      {
        "kind": "Property",
        "name": "GENERATE_MIPMAP_HINT",
        "isStatic": false,
        "returnType": "0x8192"
      },
      {
        "kind": "Property",
        "name": "BYTE",
        "isStatic": false,
        "returnType": "0x1400"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_BYTE",
        "isStatic": false,
        "returnType": "0x1401"
      },
      {
        "kind": "Property",
        "name": "SHORT",
        "isStatic": false,
        "returnType": "0x1402"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT",
        "isStatic": false,
        "returnType": "0x1403"
      },
      {
        "kind": "Property",
        "name": "INT",
        "isStatic": false,
        "returnType": "0x1404"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT",
        "isStatic": false,
        "returnType": "0x1405"
      },
      {
        "kind": "Property",
        "name": "FLOAT",
        "isStatic": false,
        "returnType": "0x1406"
      },
      {
        "kind": "Property",
        "name": "DEPTH_COMPONENT",
        "isStatic": false,
        "returnType": "0x1902"
      },
      {
        "kind": "Property",
        "name": "ALPHA",
        "isStatic": false,
        "returnType": "0x1906"
      },
      {
        "kind": "Property",
        "name": "RGB",
        "isStatic": false,
        "returnType": "0x1907"
      },
      {
        "kind": "Property",
        "name": "RGBA",
        "isStatic": false,
        "returnType": "0x1908"
      },
      {
        "kind": "Property",
        "name": "LUMINANCE",
        "isStatic": false,
        "returnType": "0x1909"
      },
      {
        "kind": "Property",
        "name": "LUMINANCE_ALPHA",
        "isStatic": false,
        "returnType": "0x190A"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT_4_4_4_4",
        "isStatic": false,
        "returnType": "0x8033"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT_5_5_5_1",
        "isStatic": false,
        "returnType": "0x8034"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT_5_6_5",
        "isStatic": false,
        "returnType": "0x8363"
      },
      {
        "kind": "Property",
        "name": "FRAGMENT_SHADER",
        "isStatic": false,
        "returnType": "0x8B30"
      },
      {
        "kind": "Property",
        "name": "VERTEX_SHADER",
        "isStatic": false,
        "returnType": "0x8B31"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_ATTRIBS",
        "isStatic": false,
        "returnType": "0x8869"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_UNIFORM_VECTORS",
        "isStatic": false,
        "returnType": "0x8DFB"
      },
      {
        "kind": "Property",
        "name": "MAX_VARYING_VECTORS",
        "isStatic": false,
        "returnType": "0x8DFC"
      },
      {
        "kind": "Property",
        "name": "MAX_COMBINED_TEXTURE_IMAGE_UNITS",
        "isStatic": false,
        "returnType": "0x8B4D"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_TEXTURE_IMAGE_UNITS",
        "isStatic": false,
        "returnType": "0x8B4C"
      },
      {
        "kind": "Property",
        "name": "MAX_TEXTURE_IMAGE_UNITS",
        "isStatic": false,
        "returnType": "0x8872"
      },
      {
        "kind": "Property",
        "name": "MAX_FRAGMENT_UNIFORM_VECTORS",
        "isStatic": false,
        "returnType": "0x8DFD"
      },
      {
        "kind": "Property",
        "name": "SHADER_TYPE",
        "isStatic": false,
        "returnType": "0x8B4F"
      },
      {
        "kind": "Property",
        "name": "DELETE_STATUS",
        "isStatic": false,
        "returnType": "0x8B80"
      },
      {
        "kind": "Property",
        "name": "LINK_STATUS",
        "isStatic": false,
        "returnType": "0x8B82"
      },
      {
        "kind": "Property",
        "name": "VALIDATE_STATUS",
        "isStatic": false,
        "returnType": "0x8B83"
      },
      {
        "kind": "Property",
        "name": "ATTACHED_SHADERS",
        "isStatic": false,
        "returnType": "0x8B85"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_UNIFORMS",
        "isStatic": false,
        "returnType": "0x8B86"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_ATTRIBUTES",
        "isStatic": false,
        "returnType": "0x8B89"
      },
      {
        "kind": "Property",
        "name": "SHADING_LANGUAGE_VERSION",
        "isStatic": false,
        "returnType": "0x8B8C"
      },
      {
        "kind": "Property",
        "name": "CURRENT_PROGRAM",
        "isStatic": false,
        "returnType": "0x8B8D"
      },
      {
        "kind": "Property",
        "name": "NEVER",
        "isStatic": false,
        "returnType": "0x0200"
      },
      {
        "kind": "Property",
        "name": "LESS",
        "isStatic": false,
        "returnType": "0x0201"
      },
      {
        "kind": "Property",
        "name": "EQUAL",
        "isStatic": false,
        "returnType": "0x0202"
      },
      {
        "kind": "Property",
        "name": "LEQUAL",
        "isStatic": false,
        "returnType": "0x0203"
      },
      {
        "kind": "Property",
        "name": "GREATER",
        "isStatic": false,
        "returnType": "0x0204"
      },
      {
        "kind": "Property",
        "name": "NOTEQUAL",
        "isStatic": false,
        "returnType": "0x0205"
      },
      {
        "kind": "Property",
        "name": "GEQUAL",
        "isStatic": false,
        "returnType": "0x0206"
      },
      {
        "kind": "Property",
        "name": "ALWAYS",
        "isStatic": false,
        "returnType": "0x0207"
      },
      {
        "kind": "Property",
        "name": "KEEP",
        "isStatic": false,
        "returnType": "0x1E00"
      },
      {
        "kind": "Property",
        "name": "REPLACE",
        "isStatic": false,
        "returnType": "0x1E01"
      },
      {
        "kind": "Property",
        "name": "INCR",
        "isStatic": false,
        "returnType": "0x1E02"
      },
      {
        "kind": "Property",
        "name": "DECR",
        "isStatic": false,
        "returnType": "0x1E03"
      },
      {
        "kind": "Property",
        "name": "INVERT",
        "isStatic": false,
        "returnType": "0x150A"
      },
      {
        "kind": "Property",
        "name": "INCR_WRAP",
        "isStatic": false,
        "returnType": "0x8507"
      },
      {
        "kind": "Property",
        "name": "DECR_WRAP",
        "isStatic": false,
        "returnType": "0x8508"
      },
      {
        "kind": "Property",
        "name": "VENDOR",
        "isStatic": false,
        "returnType": "0x1F00"
      },
      {
        "kind": "Property",
        "name": "RENDERER",
        "isStatic": false,
        "returnType": "0x1F01"
      },
      {
        "kind": "Property",
        "name": "VERSION",
        "isStatic": false,
        "returnType": "0x1F02"
      },
      {
        "kind": "Property",
        "name": "NEAREST",
        "isStatic": false,
        "returnType": "0x2600"
      },
      {
        "kind": "Property",
        "name": "LINEAR",
        "isStatic": false,
        "returnType": "0x2601"
      },
      {
        "kind": "Property",
        "name": "NEAREST_MIPMAP_NEAREST",
        "isStatic": false,
        "returnType": "0x2700"
      },
      {
        "kind": "Property",
        "name": "LINEAR_MIPMAP_NEAREST",
        "isStatic": false,
        "returnType": "0x2701"
      },
      {
        "kind": "Property",
        "name": "NEAREST_MIPMAP_LINEAR",
        "isStatic": false,
        "returnType": "0x2702"
      },
      {
        "kind": "Property",
        "name": "LINEAR_MIPMAP_LINEAR",
        "isStatic": false,
        "returnType": "0x2703"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MAG_FILTER",
        "isStatic": false,
        "returnType": "0x2800"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MIN_FILTER",
        "isStatic": false,
        "returnType": "0x2801"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_WRAP_S",
        "isStatic": false,
        "returnType": "0x2802"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_WRAP_T",
        "isStatic": false,
        "returnType": "0x2803"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_2D",
        "isStatic": false,
        "returnType": "0x0DE1"
      },
      {
        "kind": "Property",
        "name": "TEXTURE",
        "isStatic": false,
        "returnType": "0x1702"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP",
        "isStatic": false,
        "returnType": "0x8513"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BINDING_CUBE_MAP",
        "isStatic": false,
        "returnType": "0x8514"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_POSITIVE_X",
        "isStatic": false,
        "returnType": "0x8515"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_X",
        "isStatic": false,
        "returnType": "0x8516"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_POSITIVE_Y",
        "isStatic": false,
        "returnType": "0x8517"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_Y",
        "isStatic": false,
        "returnType": "0x8518"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_POSITIVE_Z",
        "isStatic": false,
        "returnType": "0x8519"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_Z",
        "isStatic": false,
        "returnType": "0x851A"
      },
      {
        "kind": "Property",
        "name": "MAX_CUBE_MAP_TEXTURE_SIZE",
        "isStatic": false,
        "returnType": "0x851C"
      },
      {
        "kind": "Property",
        "name": "TEXTURE0",
        "isStatic": false,
        "returnType": "0x84C0"
      },
      {
        "kind": "Property",
        "name": "TEXTURE1",
        "isStatic": false,
        "returnType": "0x84C1"
      },
      {
        "kind": "Property",
        "name": "TEXTURE2",
        "isStatic": false,
        "returnType": "0x84C2"
      },
      {
        "kind": "Property",
        "name": "TEXTURE3",
        "isStatic": false,
        "returnType": "0x84C3"
      },
      {
        "kind": "Property",
        "name": "TEXTURE4",
        "isStatic": false,
        "returnType": "0x84C4"
      },
      {
        "kind": "Property",
        "name": "TEXTURE5",
        "isStatic": false,
        "returnType": "0x84C5"
      },
      {
        "kind": "Property",
        "name": "TEXTURE6",
        "isStatic": false,
        "returnType": "0x84C6"
      },
      {
        "kind": "Property",
        "name": "TEXTURE7",
        "isStatic": false,
        "returnType": "0x84C7"
      },
      {
        "kind": "Property",
        "name": "TEXTURE8",
        "isStatic": false,
        "returnType": "0x84C8"
      },
      {
        "kind": "Property",
        "name": "TEXTURE9",
        "isStatic": false,
        "returnType": "0x84C9"
      },
      {
        "kind": "Property",
        "name": "TEXTURE10",
        "isStatic": false,
        "returnType": "0x84CA"
      },
      {
        "kind": "Property",
        "name": "TEXTURE11",
        "isStatic": false,
        "returnType": "0x84CB"
      },
      {
        "kind": "Property",
        "name": "TEXTURE12",
        "isStatic": false,
        "returnType": "0x84CC"
      },
      {
        "kind": "Property",
        "name": "TEXTURE13",
        "isStatic": false,
        "returnType": "0x84CD"
      },
      {
        "kind": "Property",
        "name": "TEXTURE14",
        "isStatic": false,
        "returnType": "0x84CE"
      },
      {
        "kind": "Property",
        "name": "TEXTURE15",
        "isStatic": false,
        "returnType": "0x84CF"
      },
      {
        "kind": "Property",
        "name": "TEXTURE16",
        "isStatic": false,
        "returnType": "0x84D0"
      },
      {
        "kind": "Property",
        "name": "TEXTURE17",
        "isStatic": false,
        "returnType": "0x84D1"
      },
      {
        "kind": "Property",
        "name": "TEXTURE18",
        "isStatic": false,
        "returnType": "0x84D2"
      },
      {
        "kind": "Property",
        "name": "TEXTURE19",
        "isStatic": false,
        "returnType": "0x84D3"
      },
      {
        "kind": "Property",
        "name": "TEXTURE20",
        "isStatic": false,
        "returnType": "0x84D4"
      },
      {
        "kind": "Property",
        "name": "TEXTURE21",
        "isStatic": false,
        "returnType": "0x84D5"
      },
      {
        "kind": "Property",
        "name": "TEXTURE22",
        "isStatic": false,
        "returnType": "0x84D6"
      },
      {
        "kind": "Property",
        "name": "TEXTURE23",
        "isStatic": false,
        "returnType": "0x84D7"
      },
      {
        "kind": "Property",
        "name": "TEXTURE24",
        "isStatic": false,
        "returnType": "0x84D8"
      },
      {
        "kind": "Property",
        "name": "TEXTURE25",
        "isStatic": false,
        "returnType": "0x84D9"
      },
      {
        "kind": "Property",
        "name": "TEXTURE26",
        "isStatic": false,
        "returnType": "0x84DA"
      },
      {
        "kind": "Property",
        "name": "TEXTURE27",
        "isStatic": false,
        "returnType": "0x84DB"
      },
      {
        "kind": "Property",
        "name": "TEXTURE28",
        "isStatic": false,
        "returnType": "0x84DC"
      },
      {
        "kind": "Property",
        "name": "TEXTURE29",
        "isStatic": false,
        "returnType": "0x84DD"
      },
      {
        "kind": "Property",
        "name": "TEXTURE30",
        "isStatic": false,
        "returnType": "0x84DE"
      },
      {
        "kind": "Property",
        "name": "TEXTURE31",
        "isStatic": false,
        "returnType": "0x84DF"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_TEXTURE",
        "isStatic": false,
        "returnType": "0x84E0"
      },
      {
        "kind": "Property",
        "name": "REPEAT",
        "isStatic": false,
        "returnType": "0x2901"
      },
      {
        "kind": "Property",
        "name": "CLAMP_TO_EDGE",
        "isStatic": false,
        "returnType": "0x812F"
      },
      {
        "kind": "Property",
        "name": "MIRRORED_REPEAT",
        "isStatic": false,
        "returnType": "0x8370"
      },
      {
        "kind": "Property",
        "name": "FLOAT_VEC2",
        "isStatic": false,
        "returnType": "0x8B50"
      },
      {
        "kind": "Property",
        "name": "FLOAT_VEC3",
        "isStatic": false,
        "returnType": "0x8B51"
      },
      {
        "kind": "Property",
        "name": "FLOAT_VEC4",
        "isStatic": false,
        "returnType": "0x8B52"
      },
      {
        "kind": "Property",
        "name": "INT_VEC2",
        "isStatic": false,
        "returnType": "0x8B53"
      },
      {
        "kind": "Property",
        "name": "INT_VEC3",
        "isStatic": false,
        "returnType": "0x8B54"
      },
      {
        "kind": "Property",
        "name": "INT_VEC4",
        "isStatic": false,
        "returnType": "0x8B55"
      },
      {
        "kind": "Property",
        "name": "BOOL",
        "isStatic": false,
        "returnType": "0x8B56"
      },
      {
        "kind": "Property",
        "name": "BOOL_VEC2",
        "isStatic": false,
        "returnType": "0x8B57"
      },
      {
        "kind": "Property",
        "name": "BOOL_VEC3",
        "isStatic": false,
        "returnType": "0x8B58"
      },
      {
        "kind": "Property",
        "name": "BOOL_VEC4",
        "isStatic": false,
        "returnType": "0x8B59"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT2",
        "isStatic": false,
        "returnType": "0x8B5A"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT3",
        "isStatic": false,
        "returnType": "0x8B5B"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT4",
        "isStatic": false,
        "returnType": "0x8B5C"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_2D",
        "isStatic": false,
        "returnType": "0x8B5E"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_CUBE",
        "isStatic": false,
        "returnType": "0x8B60"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_ENABLED",
        "isStatic": false,
        "returnType": "0x8622"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_SIZE",
        "isStatic": false,
        "returnType": "0x8623"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_STRIDE",
        "isStatic": false,
        "returnType": "0x8624"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_TYPE",
        "isStatic": false,
        "returnType": "0x8625"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_NORMALIZED",
        "isStatic": false,
        "returnType": "0x886A"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_POINTER",
        "isStatic": false,
        "returnType": "0x8645"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x889F"
      },
      {
        "kind": "Property",
        "name": "IMPLEMENTATION_COLOR_READ_TYPE",
        "isStatic": false,
        "returnType": "0x8B9A"
      },
      {
        "kind": "Property",
        "name": "IMPLEMENTATION_COLOR_READ_FORMAT",
        "isStatic": false,
        "returnType": "0x8B9B"
      },
      {
        "kind": "Property",
        "name": "COMPILE_STATUS",
        "isStatic": false,
        "returnType": "0x8B81"
      },
      {
        "kind": "Property",
        "name": "LOW_FLOAT",
        "isStatic": false,
        "returnType": "0x8DF0"
      },
      {
        "kind": "Property",
        "name": "MEDIUM_FLOAT",
        "isStatic": false,
        "returnType": "0x8DF1"
      },
      {
        "kind": "Property",
        "name": "HIGH_FLOAT",
        "isStatic": false,
        "returnType": "0x8DF2"
      },
      {
        "kind": "Property",
        "name": "LOW_INT",
        "isStatic": false,
        "returnType": "0x8DF3"
      },
      {
        "kind": "Property",
        "name": "MEDIUM_INT",
        "isStatic": false,
        "returnType": "0x8DF4"
      },
      {
        "kind": "Property",
        "name": "HIGH_INT",
        "isStatic": false,
        "returnType": "0x8DF5"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER",
        "isStatic": false,
        "returnType": "0x8D40"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER",
        "isStatic": false,
        "returnType": "0x8D41"
      },
      {
        "kind": "Property",
        "name": "RGBA4",
        "isStatic": false,
        "returnType": "0x8056"
      },
      {
        "kind": "Property",
        "name": "RGB5_A1",
        "isStatic": false,
        "returnType": "0x8057"
      },
      {
        "kind": "Property",
        "name": "RGBA8",
        "isStatic": false,
        "returnType": "0x8058"
      },
      {
        "kind": "Property",
        "name": "RGB565",
        "isStatic": false,
        "returnType": "0x8D62"
      },
      {
        "kind": "Property",
        "name": "DEPTH_COMPONENT16",
        "isStatic": false,
        "returnType": "0x81A5"
      },
      {
        "kind": "Property",
        "name": "STENCIL_INDEX8",
        "isStatic": false,
        "returnType": "0x8D48"
      },
      {
        "kind": "Property",
        "name": "DEPTH_STENCIL",
        "isStatic": false,
        "returnType": "0x84F9"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_WIDTH",
        "isStatic": false,
        "returnType": "0x8D42"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_HEIGHT",
        "isStatic": false,
        "returnType": "0x8D43"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_INTERNAL_FORMAT",
        "isStatic": false,
        "returnType": "0x8D44"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_RED_SIZE",
        "isStatic": false,
        "returnType": "0x8D50"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_GREEN_SIZE",
        "isStatic": false,
        "returnType": "0x8D51"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_BLUE_SIZE",
        "isStatic": false,
        "returnType": "0x8D52"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_ALPHA_SIZE",
        "isStatic": false,
        "returnType": "0x8D53"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_DEPTH_SIZE",
        "isStatic": false,
        "returnType": "0x8D54"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_STENCIL_SIZE",
        "isStatic": false,
        "returnType": "0x8D55"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
        "isStatic": false,
        "returnType": "0x8CD0"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
        "isStatic": false,
        "returnType": "0x8CD1"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
        "isStatic": false,
        "returnType": "0x8CD2"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",
        "isStatic": false,
        "returnType": "0x8CD3"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT0",
        "isStatic": false,
        "returnType": "0x8CE0"
      },
      {
        "kind": "Property",
        "name": "DEPTH_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8D00"
      },
      {
        "kind": "Property",
        "name": "STENCIL_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8D20"
      },
      {
        "kind": "Property",
        "name": "DEPTH_STENCIL_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x821A"
      },
      {
        "kind": "Property",
        "name": "NONE",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_COMPLETE",
        "isStatic": false,
        "returnType": "0x8CD5"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8CD6"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8CD7"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
        "isStatic": false,
        "returnType": "0x8CD9"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_UNSUPPORTED",
        "isStatic": false,
        "returnType": "0x8CDD"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8CA6"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8CA7"
      },
      {
        "kind": "Property",
        "name": "MAX_RENDERBUFFER_SIZE",
        "isStatic": false,
        "returnType": "0x84E8"
      },
      {
        "kind": "Property",
        "name": "INVALID_FRAMEBUFFER_OPERATION",
        "isStatic": false,
        "returnType": "0x0506"
      },
      {
        "kind": "Property",
        "name": "UNPACK_FLIP_Y_WEBGL",
        "isStatic": false,
        "returnType": "0x9240"
      },
      {
        "kind": "Property",
        "name": "UNPACK_PREMULTIPLY_ALPHA_WEBGL",
        "isStatic": false,
        "returnType": "0x9241"
      },
      {
        "kind": "Property",
        "name": "CONTEXT_LOST_WEBGL",
        "isStatic": false,
        "returnType": "0x9242"
      },
      {
        "kind": "Property",
        "name": "UNPACK_COLORSPACE_CONVERSION_WEBGL",
        "isStatic": false,
        "returnType": "0x9243"
      },
      {
        "kind": "Property",
        "name": "BROWSER_DEFAULT_WEBGL",
        "isStatic": false,
        "returnType": "0x9244"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGL2RenderingContext}) (new [] WebGL2RenderingContext) (property {:READ_BUFFER 0x0C02}) (property {:UNPACK_ROW_LENGTH 0x0CF2}) (property {:UNPACK_SKIP_ROWS 0x0CF3}) (property {:UNPACK_SKIP_PIXELS 0x0CF4}) (property {:PACK_ROW_LENGTH 0x0D02}) (property {:PACK_SKIP_ROWS 0x0D03}) (property {:PACK_SKIP_PIXELS 0x0D04}) (property {:COLOR 0x1800}) (property {:DEPTH 0x1801}) (property {:STENCIL 0x1802}) (property {:RED 0x1903}) (property {:RGB8 0x8051}) (property {:RGB10_A2 0x8059}) (property {:TEXTURE_BINDING_3D 0x806A}) (property {:UNPACK_SKIP_IMAGES 0x806D}) (property {:UNPACK_IMAGE_HEIGHT 0x806E}) (property {:TEXTURE_3D 0x806F}) (property {:TEXTURE_WRAP_R 0x8072}) (property {:MAX_3D_TEXTURE_SIZE 0x8073}) (property {:UNSIGNED_INT_2_10_10_10_REV 0x8368}) (property {:MAX_ELEMENTS_VERTICES 0x80E8}) (property {:MAX_ELEMENTS_INDICES 0x80E9}) (property {:TEXTURE_MIN_LOD 0x813A}) (property {:TEXTURE_MAX_LOD 0x813B}) (property {:TEXTURE_BASE_LEVEL 0x813C}) (property {:TEXTURE_MAX_LEVEL 0x813D}) (property {:MIN 0x8007}) (property {:MAX 0x8008}) (property {:DEPTH_COMPONENT24 0x81A6}) (property {:MAX_TEXTURE_LOD_BIAS 0x84FD}) (property {:TEXTURE_COMPARE_MODE 0x884C}) (property {:TEXTURE_COMPARE_FUNC 0x884D}) (property {:CURRENT_QUERY 0x8865}) (property {:QUERY_RESULT 0x8866}) (property {:QUERY_RESULT_AVAILABLE 0x8867}) (property {:STREAM_READ 0x88E1}) (property {:STREAM_COPY 0x88E2}) (property {:STATIC_READ 0x88E5}) (property {:STATIC_COPY 0x88E6}) (property {:DYNAMIC_READ 0x88E9}) (property {:DYNAMIC_COPY 0x88EA}) (property {:MAX_DRAW_BUFFERS 0x8824}) (property {:DRAW_BUFFER0 0x8825}) (property {:DRAW_BUFFER1 0x8826}) (property {:DRAW_BUFFER2 0x8827}) (property {:DRAW_BUFFER3 0x8828}) (property {:DRAW_BUFFER4 0x8829}) (property {:DRAW_BUFFER5 0x882A}) (property {:DRAW_BUFFER6 0x882B}) (property {:DRAW_BUFFER7 0x882C}) (property {:DRAW_BUFFER8 0x882D}) (property {:DRAW_BUFFER9 0x882E}) (property {:DRAW_BUFFER10 0x882F}) (property {:DRAW_BUFFER11 0x8830}) (property {:DRAW_BUFFER12 0x8831}) (property {:DRAW_BUFFER13 0x8832}) (property {:DRAW_BUFFER14 0x8833}) (property {:DRAW_BUFFER15 0x8834}) (property {:MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49}) (property {:MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A}) (property {:SAMPLER_3D 0x8B5F}) (property {:SAMPLER_2D_SHADOW 0x8B62}) (property {:FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B}) (property {:PIXEL_PACK_BUFFER 0x88EB}) (property {:PIXEL_UNPACK_BUFFER 0x88EC}) (property {:PIXEL_PACK_BUFFER_BINDING 0x88ED}) (property {:PIXEL_UNPACK_BUFFER_BINDING 0x88EF}) (property {:FLOAT_MAT2x3 0x8B65}) (property {:FLOAT_MAT2x4 0x8B66}) (property {:FLOAT_MAT3x2 0x8B67}) (property {:FLOAT_MAT3x4 0x8B68}) (property {:FLOAT_MAT4x2 0x8B69}) (property {:FLOAT_MAT4x3 0x8B6A}) (property {:SRGB 0x8C40}) (property {:SRGB8 0x8C41}) (property {:SRGB8_ALPHA8 0x8C43}) (property {:COMPARE_REF_TO_TEXTURE 0x884E}) (property {:RGBA32F 0x8814}) (property {:RGB32F 0x8815}) (property {:RGBA16F 0x881A}) (property {:RGB16F 0x881B}) (property {:VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD}) (property {:MAX_ARRAY_TEXTURE_LAYERS 0x88FF}) (property {:MIN_PROGRAM_TEXEL_OFFSET 0x8904}) (property {:MAX_PROGRAM_TEXEL_OFFSET 0x8905}) (property {:MAX_VARYING_COMPONENTS 0x8B4B}) (property {:TEXTURE_2D_ARRAY 0x8C1A}) (property {:TEXTURE_BINDING_2D_ARRAY 0x8C1D}) (property {:R11F_G11F_B10F 0x8C3A}) (property {:UNSIGNED_INT_10F_11F_11F_REV 0x8C3B}) (property {:RGB9_E5 0x8C3D}) (property {:UNSIGNED_INT_5_9_9_9_REV 0x8C3E}) (property {:TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F}) (property {:MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80}) (property {:TRANSFORM_FEEDBACK_VARYINGS 0x8C83}) (property {:TRANSFORM_FEEDBACK_BUFFER_START 0x8C84}) (property {:TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85}) (property {:TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88}) (property {:RASTERIZER_DISCARD 0x8C89}) (property {:MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A}) (property {:MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B}) (property {:INTERLEAVED_ATTRIBS 0x8C8C}) (property {:SEPARATE_ATTRIBS 0x8C8D}) (property {:TRANSFORM_FEEDBACK_BUFFER 0x8C8E}) (property {:TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F}) (property {:RGBA32UI 0x8D70}) (property {:RGB32UI 0x8D71}) (property {:RGBA16UI 0x8D76}) (property {:RGB16UI 0x8D77}) (property {:RGBA8UI 0x8D7C}) (property {:RGB8UI 0x8D7D}) (property {:RGBA32I 0x8D82}) (property {:RGB32I 0x8D83}) (property {:RGBA16I 0x8D88}) (property {:RGB16I 0x8D89}) (property {:RGBA8I 0x8D8E}) (property {:RGB8I 0x8D8F}) (property {:RED_INTEGER 0x8D94}) (property {:RGB_INTEGER 0x8D98}) (property {:RGBA_INTEGER 0x8D99}) (property {:SAMPLER_2D_ARRAY 0x8DC1}) (property {:SAMPLER_2D_ARRAY_SHADOW 0x8DC4}) (property {:SAMPLER_CUBE_SHADOW 0x8DC5}) (property {:UNSIGNED_INT_VEC2 0x8DC6}) (property {:UNSIGNED_INT_VEC3 0x8DC7}) (property {:UNSIGNED_INT_VEC4 0x8DC8}) (property {:INT_SAMPLER_2D 0x8DCA}) (property {:INT_SAMPLER_3D 0x8DCB}) (property {:INT_SAMPLER_CUBE 0x8DCC}) (property {:INT_SAMPLER_2D_ARRAY 0x8DCF}) (property {:UNSIGNED_INT_SAMPLER_2D 0x8DD2}) (property {:UNSIGNED_INT_SAMPLER_3D 0x8DD3}) (property {:UNSIGNED_INT_SAMPLER_CUBE 0x8DD4}) (property {:UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7}) (property {:DEPTH_COMPONENT32F 0x8CAC}) (property {:DEPTH32F_STENCIL8 0x8CAD}) (property {:FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD}) (property {:FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210}) (property {:FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211}) (property {:FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212}) (property {:FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213}) (property {:FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214}) (property {:FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215}) (property {:FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216}) (property {:FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217}) (property {:FRAMEBUFFER_DEFAULT 0x8218}) (property {:UNSIGNED_INT_24_8 0x84FA}) (property {:DEPTH24_STENCIL8 0x88F0}) (property {:UNSIGNED_NORMALIZED 0x8C17}) (property {:DRAW_FRAMEBUFFER_BINDING 0x8CA6}) (property {:READ_FRAMEBUFFER 0x8CA8}) (property {:DRAW_FRAMEBUFFER 0x8CA9}) (property {:READ_FRAMEBUFFER_BINDING 0x8CAA}) (property {:RENDERBUFFER_SAMPLES 0x8CAB}) (property {:FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4}) (property {:MAX_COLOR_ATTACHMENTS 0x8CDF}) (property {:COLOR_ATTACHMENT1 0x8CE1}) (property {:COLOR_ATTACHMENT2 0x8CE2}) (property {:COLOR_ATTACHMENT3 0x8CE3}) (property {:COLOR_ATTACHMENT4 0x8CE4}) (property {:COLOR_ATTACHMENT5 0x8CE5}) (property {:COLOR_ATTACHMENT6 0x8CE6}) (property {:COLOR_ATTACHMENT7 0x8CE7}) (property {:COLOR_ATTACHMENT8 0x8CE8}) (property {:COLOR_ATTACHMENT9 0x8CE9}) (property {:COLOR_ATTACHMENT10 0x8CEA}) (property {:COLOR_ATTACHMENT11 0x8CEB}) (property {:COLOR_ATTACHMENT12 0x8CEC}) (property {:COLOR_ATTACHMENT13 0x8CED}) (property {:COLOR_ATTACHMENT14 0x8CEE}) (property {:COLOR_ATTACHMENT15 0x8CEF}) (property {:FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56}) (property {:MAX_SAMPLES 0x8D57}) (property {:HALF_FLOAT 0x140B}) (property {:RG 0x8227}) (property {:RG_INTEGER 0x8228}) (property {:R8 0x8229}) (property {:RG8 0x822B}) (property {:R16F 0x822D}) (property {:R32F 0x822E}) (property {:RG16F 0x822F}) (property {:RG32F 0x8230}) (property {:R8I 0x8231}) (property {:R8UI 0x8232}) (property {:R16I 0x8233}) (property {:R16UI 0x8234}) (property {:R32I 0x8235}) (property {:R32UI 0x8236}) (property {:RG8I 0x8237}) (property {:RG8UI 0x8238}) (property {:RG16I 0x8239}) (property {:RG16UI 0x823A}) (property {:RG32I 0x823B}) (property {:RG32UI 0x823C}) (property {:VERTEX_ARRAY_BINDING 0x85B5}) (property {:R8_SNORM 0x8F94}) (property {:RG8_SNORM 0x8F95}) (property {:RGB8_SNORM 0x8F96}) (property {:RGBA8_SNORM 0x8F97}) (property {:SIGNED_NORMALIZED 0x8F9C}) (property {:COPY_READ_BUFFER 0x8F36}) (property {:COPY_WRITE_BUFFER 0x8F37}) (property {:COPY_READ_BUFFER_BINDING 0x8F36}) (property {:COPY_WRITE_BUFFER_BINDING 0x8F37}) (property {:UNIFORM_BUFFER 0x8A11}) (property {:UNIFORM_BUFFER_BINDING 0x8A28}) (property {:UNIFORM_BUFFER_START 0x8A29}) (property {:UNIFORM_BUFFER_SIZE 0x8A2A}) (property {:MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B}) (property {:MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D}) (property {:MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E}) (property {:MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F}) (property {:MAX_UNIFORM_BLOCK_SIZE 0x8A30}) (property {:MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31}) (property {:MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33}) (property {:UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34}) (property {:ACTIVE_UNIFORM_BLOCKS 0x8A36}) (property {:UNIFORM_TYPE 0x8A37}) (property {:UNIFORM_SIZE 0x8A38}) (property {:UNIFORM_BLOCK_INDEX 0x8A3A}) (property {:UNIFORM_OFFSET 0x8A3B}) (property {:UNIFORM_ARRAY_STRIDE 0x8A3C}) (property {:UNIFORM_MATRIX_STRIDE 0x8A3D}) (property {:UNIFORM_IS_ROW_MAJOR 0x8A3E}) (property {:UNIFORM_BLOCK_BINDING 0x8A3F}) (property {:UNIFORM_BLOCK_DATA_SIZE 0x8A40}) (property {:UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42}) (property {:UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43}) (property {:UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44}) (property {:UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46}) (property {:INVALID_INDEX 0xFFFFFFFF}) (property {:MAX_VERTEX_OUTPUT_COMPONENTS 0x9122}) (property {:MAX_FRAGMENT_INPUT_COMPONENTS 0x9125}) (property {:MAX_SERVER_WAIT_TIMEOUT 0x9111}) (property {:OBJECT_TYPE 0x9112}) (property {:SYNC_CONDITION 0x9113}) (property {:SYNC_STATUS 0x9114}) (property {:SYNC_FLAGS 0x9115}) (property {:SYNC_FENCE 0x9116}) (property {:SYNC_GPU_COMMANDS_COMPLETE 0x9117}) (property {:UNSIGNALED 0x9118}) (property {:SIGNALED 0x9119}) (property {:ALREADY_SIGNALED 0x911A}) (property {:TIMEOUT_EXPIRED 0x911B}) (property {:CONDITION_SATISFIED 0x911C}) (property {:WAIT_FAILED 0x911D}) (property {:SYNC_FLUSH_COMMANDS_BIT 0x00000001}) (property {:VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE}) (property {:ANY_SAMPLES_PASSED 0x8C2F}) (property {:ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A}) (property {:SAMPLER_BINDING 0x8919}) (property {:RGB10_A2UI 0x906F}) (property {:INT_2_10_10_10_REV 0x8D9F}) (property {:TRANSFORM_FEEDBACK 0x8E22}) (property {:TRANSFORM_FEEDBACK_PAUSED 0x8E23}) (property {:TRANSFORM_FEEDBACK_ACTIVE 0x8E24}) (property {:TRANSFORM_FEEDBACK_BINDING 0x8E25}) (property {:TEXTURE_IMMUTABLE_FORMAT 0x912F}) (property {:MAX_ELEMENT_INDEX 0x8D6B}) (property {:TEXTURE_IMMUTABLE_LEVELS 0x82DF}) (property {:TIMEOUT_IGNORED -1}) (property {:MAX_CLIENT_WAIT_TIMEOUT_WEBGL 0x9247}) (property {:DEPTH_BUFFER_BIT 0x00000100}) (property {:STENCIL_BUFFER_BIT 0x00000400}) (property {:COLOR_BUFFER_BIT 0x00004000}) (property {:POINTS 0x0000}) (property {:LINES 0x0001}) (property {:LINE_LOOP 0x0002}) (property {:LINE_STRIP 0x0003}) (property {:TRIANGLES 0x0004}) (property {:TRIANGLE_STRIP 0x0005}) (property {:TRIANGLE_FAN 0x0006}) (property {:ZERO 0}) (property {:ONE 1}) (property {:SRC_COLOR 0x0300}) (property {:ONE_MINUS_SRC_COLOR 0x0301}) (property {:SRC_ALPHA 0x0302}) (property {:ONE_MINUS_SRC_ALPHA 0x0303}) (property {:DST_ALPHA 0x0304}) (property {:ONE_MINUS_DST_ALPHA 0x0305}) (property {:DST_COLOR 0x0306}) (property {:ONE_MINUS_DST_COLOR 0x0307}) (property {:SRC_ALPHA_SATURATE 0x0308}) (property {:FUNC_ADD 0x8006}) (property {:BLEND_EQUATION 0x8009}) (property {:BLEND_EQUATION_RGB 0x8009}) (property {:BLEND_EQUATION_ALPHA 0x883D}) (property {:FUNC_SUBTRACT 0x800A}) (property {:FUNC_REVERSE_SUBTRACT 0x800B}) (property {:BLEND_DST_RGB 0x80C8}) (property {:BLEND_SRC_RGB 0x80C9}) (property {:BLEND_DST_ALPHA 0x80CA}) (property {:BLEND_SRC_ALPHA 0x80CB}) (property {:CONSTANT_COLOR 0x8001}) (property {:ONE_MINUS_CONSTANT_COLOR 0x8002}) (property {:CONSTANT_ALPHA 0x8003}) (property {:ONE_MINUS_CONSTANT_ALPHA 0x8004}) (property {:BLEND_COLOR 0x8005}) (property {:ARRAY_BUFFER 0x8892}) (property {:ELEMENT_ARRAY_BUFFER 0x8893}) (property {:ARRAY_BUFFER_BINDING 0x8894}) (property {:ELEMENT_ARRAY_BUFFER_BINDING 0x8895}) (property {:STREAM_DRAW 0x88E0}) (property {:STATIC_DRAW 0x88E4}) (property {:DYNAMIC_DRAW 0x88E8}) (property {:BUFFER_SIZE 0x8764}) (property {:BUFFER_USAGE 0x8765}) (property {:CURRENT_VERTEX_ATTRIB 0x8626}) (property {:FRONT 0x0404}) (property {:BACK 0x0405}) (property {:FRONT_AND_BACK 0x0408}) (property {:CULL_FACE 0x0B44}) (property {:BLEND 0x0BE2}) (property {:DITHER 0x0BD0}) (property {:STENCIL_TEST 0x0B90}) (property {:DEPTH_TEST 0x0B71}) (property {:SCISSOR_TEST 0x0C11}) (property {:POLYGON_OFFSET_FILL 0x8037}) (property {:SAMPLE_ALPHA_TO_COVERAGE 0x809E}) (property {:SAMPLE_COVERAGE 0x80A0}) (property {:NO_ERROR 0}) (property {:INVALID_ENUM 0x0500}) (property {:INVALID_VALUE 0x0501}) (property {:INVALID_OPERATION 0x0502}) (property {:OUT_OF_MEMORY 0x0505}) (property {:CW 0x0900}) (property {:CCW 0x0901}) (property {:LINE_WIDTH 0x0B21}) (property {:ALIASED_POINT_SIZE_RANGE 0x846D}) (property {:ALIASED_LINE_WIDTH_RANGE 0x846E}) (property {:CULL_FACE_MODE 0x0B45}) (property {:FRONT_FACE 0x0B46}) (property {:DEPTH_RANGE 0x0B70}) (property {:DEPTH_WRITEMASK 0x0B72}) (property {:DEPTH_CLEAR_VALUE 0x0B73}) (property {:DEPTH_FUNC 0x0B74}) (property {:STENCIL_CLEAR_VALUE 0x0B91}) (property {:STENCIL_FUNC 0x0B92}) (property {:STENCIL_FAIL 0x0B94}) (property {:STENCIL_PASS_DEPTH_FAIL 0x0B95}) (property {:STENCIL_PASS_DEPTH_PASS 0x0B96}) (property {:STENCIL_REF 0x0B97}) (property {:STENCIL_VALUE_MASK 0x0B93}) (property {:STENCIL_WRITEMASK 0x0B98}) (property {:STENCIL_BACK_FUNC 0x8800}) (property {:STENCIL_BACK_FAIL 0x8801}) (property {:STENCIL_BACK_PASS_DEPTH_FAIL 0x8802}) (property {:STENCIL_BACK_PASS_DEPTH_PASS 0x8803}) (property {:STENCIL_BACK_REF 0x8CA3}) (property {:STENCIL_BACK_VALUE_MASK 0x8CA4}) (property {:STENCIL_BACK_WRITEMASK 0x8CA5}) (property {:VIEWPORT 0x0BA2}) (property {:SCISSOR_BOX 0x0C10}) (property {:COLOR_CLEAR_VALUE 0x0C22}) (property {:COLOR_WRITEMASK 0x0C23}) (property {:UNPACK_ALIGNMENT 0x0CF5}) (property {:PACK_ALIGNMENT 0x0D05}) (property {:MAX_TEXTURE_SIZE 0x0D33}) (property {:MAX_VIEWPORT_DIMS 0x0D3A}) (property {:SUBPIXEL_BITS 0x0D50}) (property {:RED_BITS 0x0D52}) (property {:GREEN_BITS 0x0D53}) (property {:BLUE_BITS 0x0D54}) (property {:ALPHA_BITS 0x0D55}) (property {:DEPTH_BITS 0x0D56}) (property {:STENCIL_BITS 0x0D57}) (property {:POLYGON_OFFSET_UNITS 0x2A00}) (property {:POLYGON_OFFSET_FACTOR 0x8038}) (property {:TEXTURE_BINDING_2D 0x8069}) (property {:SAMPLE_BUFFERS 0x80A8}) (property {:SAMPLES 0x80A9}) (property {:SAMPLE_COVERAGE_VALUE 0x80AA}) (property {:SAMPLE_COVERAGE_INVERT 0x80AB}) (property {:COMPRESSED_TEXTURE_FORMATS 0x86A3}) (property {:DONT_CARE 0x1100}) (property {:FASTEST 0x1101}) (property {:NICEST 0x1102}) (property {:GENERATE_MIPMAP_HINT 0x8192}) (property {:BYTE 0x1400}) (property {:UNSIGNED_BYTE 0x1401}) (property {:SHORT 0x1402}) (property {:UNSIGNED_SHORT 0x1403}) (property {:INT 0x1404}) (property {:UNSIGNED_INT 0x1405}) (property {:FLOAT 0x1406}) (property {:DEPTH_COMPONENT 0x1902}) (property {:ALPHA 0x1906}) (property {:RGB 0x1907}) (property {:RGBA 0x1908}) (property {:LUMINANCE 0x1909}) (property {:LUMINANCE_ALPHA 0x190A}) (property {:UNSIGNED_SHORT_4_4_4_4 0x8033}) (property {:UNSIGNED_SHORT_5_5_5_1 0x8034}) (property {:UNSIGNED_SHORT_5_6_5 0x8363}) (property {:FRAGMENT_SHADER 0x8B30}) (property {:VERTEX_SHADER 0x8B31}) (property {:MAX_VERTEX_ATTRIBS 0x8869}) (property {:MAX_VERTEX_UNIFORM_VECTORS 0x8DFB}) (property {:MAX_VARYING_VECTORS 0x8DFC}) (property {:MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D}) (property {:MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C}) (property {:MAX_TEXTURE_IMAGE_UNITS 0x8872}) (property {:MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD}) (property {:SHADER_TYPE 0x8B4F}) (property {:DELETE_STATUS 0x8B80}) (property {:LINK_STATUS 0x8B82}) (property {:VALIDATE_STATUS 0x8B83}) (property {:ATTACHED_SHADERS 0x8B85}) (property {:ACTIVE_UNIFORMS 0x8B86}) (property {:ACTIVE_ATTRIBUTES 0x8B89}) (property {:SHADING_LANGUAGE_VERSION 0x8B8C}) (property {:CURRENT_PROGRAM 0x8B8D}) (property {:NEVER 0x0200}) (property {:LESS 0x0201}) (property {:EQUAL 0x0202}) (property {:LEQUAL 0x0203}) (property {:GREATER 0x0204}) (property {:NOTEQUAL 0x0205}) (property {:GEQUAL 0x0206}) (property {:ALWAYS 0x0207}) (property {:KEEP 0x1E00}) (property {:REPLACE 0x1E01}) (property {:INCR 0x1E02}) (property {:DECR 0x1E03}) (property {:INVERT 0x150A}) (property {:INCR_WRAP 0x8507}) (property {:DECR_WRAP 0x8508}) (property {:VENDOR 0x1F00}) (property {:RENDERER 0x1F01}) (property {:VERSION 0x1F02}) (property {:NEAREST 0x2600}) (property {:LINEAR 0x2601}) (property {:NEAREST_MIPMAP_NEAREST 0x2700}) (property {:LINEAR_MIPMAP_NEAREST 0x2701}) (property {:NEAREST_MIPMAP_LINEAR 0x2702}) (property {:LINEAR_MIPMAP_LINEAR 0x2703}) (property {:TEXTURE_MAG_FILTER 0x2800}) (property {:TEXTURE_MIN_FILTER 0x2801}) (property {:TEXTURE_WRAP_S 0x2802}) (property {:TEXTURE_WRAP_T 0x2803}) (property {:TEXTURE_2D 0x0DE1}) (property {:TEXTURE 0x1702}) (property {:TEXTURE_CUBE_MAP 0x8513}) (property {:TEXTURE_BINDING_CUBE_MAP 0x8514}) (property {:TEXTURE_CUBE_MAP_POSITIVE_X 0x8515}) (property {:TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516}) (property {:TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517}) (property {:TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518}) (property {:TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519}) (property {:TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A}) (property {:MAX_CUBE_MAP_TEXTURE_SIZE 0x851C}) (property {:TEXTURE0 0x84C0}) (property {:TEXTURE1 0x84C1}) (property {:TEXTURE2 0x84C2}) (property {:TEXTURE3 0x84C3}) (property {:TEXTURE4 0x84C4}) (property {:TEXTURE5 0x84C5}) (property {:TEXTURE6 0x84C6}) (property {:TEXTURE7 0x84C7}) (property {:TEXTURE8 0x84C8}) (property {:TEXTURE9 0x84C9}) (property {:TEXTURE10 0x84CA}) (property {:TEXTURE11 0x84CB}) (property {:TEXTURE12 0x84CC}) (property {:TEXTURE13 0x84CD}) (property {:TEXTURE14 0x84CE}) (property {:TEXTURE15 0x84CF}) (property {:TEXTURE16 0x84D0}) (property {:TEXTURE17 0x84D1}) (property {:TEXTURE18 0x84D2}) (property {:TEXTURE19 0x84D3}) (property {:TEXTURE20 0x84D4}) (property {:TEXTURE21 0x84D5}) (property {:TEXTURE22 0x84D6}) (property {:TEXTURE23 0x84D7}) (property {:TEXTURE24 0x84D8}) (property {:TEXTURE25 0x84D9}) (property {:TEXTURE26 0x84DA}) (property {:TEXTURE27 0x84DB}) (property {:TEXTURE28 0x84DC}) (property {:TEXTURE29 0x84DD}) (property {:TEXTURE30 0x84DE}) (property {:TEXTURE31 0x84DF}) (property {:ACTIVE_TEXTURE 0x84E0}) (property {:REPEAT 0x2901}) (property {:CLAMP_TO_EDGE 0x812F}) (property {:MIRRORED_REPEAT 0x8370}) (property {:FLOAT_VEC2 0x8B50}) (property {:FLOAT_VEC3 0x8B51}) (property {:FLOAT_VEC4 0x8B52}) (property {:INT_VEC2 0x8B53}) (property {:INT_VEC3 0x8B54}) (property {:INT_VEC4 0x8B55}) (property {:BOOL 0x8B56}) (property {:BOOL_VEC2 0x8B57}) (property {:BOOL_VEC3 0x8B58}) (property {:BOOL_VEC4 0x8B59}) (property {:FLOAT_MAT2 0x8B5A}) (property {:FLOAT_MAT3 0x8B5B}) (property {:FLOAT_MAT4 0x8B5C}) (property {:SAMPLER_2D 0x8B5E}) (property {:SAMPLER_CUBE 0x8B60}) (property {:VERTEX_ATTRIB_ARRAY_ENABLED 0x8622}) (property {:VERTEX_ATTRIB_ARRAY_SIZE 0x8623}) (property {:VERTEX_ATTRIB_ARRAY_STRIDE 0x8624}) (property {:VERTEX_ATTRIB_ARRAY_TYPE 0x8625}) (property {:VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A}) (property {:VERTEX_ATTRIB_ARRAY_POINTER 0x8645}) (property {:VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F}) (property {:IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A}) (property {:IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B}) (property {:COMPILE_STATUS 0x8B81}) (property {:LOW_FLOAT 0x8DF0}) (property {:MEDIUM_FLOAT 0x8DF1}) (property {:HIGH_FLOAT 0x8DF2}) (property {:LOW_INT 0x8DF3}) (property {:MEDIUM_INT 0x8DF4}) (property {:HIGH_INT 0x8DF5}) (property {:FRAMEBUFFER 0x8D40}) (property {:RENDERBUFFER 0x8D41}) (property {:RGBA4 0x8056}) (property {:RGB5_A1 0x8057}) (property {:RGBA8 0x8058}) (property {:RGB565 0x8D62}) (property {:DEPTH_COMPONENT16 0x81A5}) (property {:STENCIL_INDEX8 0x8D48}) (property {:DEPTH_STENCIL 0x84F9}) (property {:RENDERBUFFER_WIDTH 0x8D42}) (property {:RENDERBUFFER_HEIGHT 0x8D43}) (property {:RENDERBUFFER_INTERNAL_FORMAT 0x8D44}) (property {:RENDERBUFFER_RED_SIZE 0x8D50}) (property {:RENDERBUFFER_GREEN_SIZE 0x8D51}) (property {:RENDERBUFFER_BLUE_SIZE 0x8D52}) (property {:RENDERBUFFER_ALPHA_SIZE 0x8D53}) (property {:RENDERBUFFER_DEPTH_SIZE 0x8D54}) (property {:RENDERBUFFER_STENCIL_SIZE 0x8D55}) (property {:FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0}) (property {:FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1}) (property {:FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2}) (property {:FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3}) (property {:COLOR_ATTACHMENT0 0x8CE0}) (property {:DEPTH_ATTACHMENT 0x8D00}) (property {:STENCIL_ATTACHMENT 0x8D20}) (property {:DEPTH_STENCIL_ATTACHMENT 0x821A}) (property {:NONE 0}) (property {:FRAMEBUFFER_COMPLETE 0x8CD5}) (property {:FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6}) (property {:FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7}) (property {:FRAMEBUFFER_INCOMPLETE_DIMENSIONS 0x8CD9}) (property {:FRAMEBUFFER_UNSUPPORTED 0x8CDD}) (property {:FRAMEBUFFER_BINDING 0x8CA6}) (property {:RENDERBUFFER_BINDING 0x8CA7}) (property {:MAX_RENDERBUFFER_SIZE 0x84E8}) (property {:INVALID_FRAMEBUFFER_OPERATION 0x0506}) (property {:UNPACK_FLIP_Y_WEBGL 0x9240}) (property {:UNPACK_PREMULTIPLY_ALPHA_WEBGL 0x9241}) (property {:CONTEXT_LOST_WEBGL 0x9242}) (property {:UNPACK_COLORSPACE_CONVERSION_WEBGL 0x9243}) (property {:BROWSER_DEFAULT_WEBGL 0x9244})}"
  },
  "WebGLActiveInfo": {
    "kind": "Property",
    "name": "WebGLActiveInfo",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLActiveInfo"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLActiveInfo"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "GLint"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "GLenum"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLActiveInfo"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLActiveInfo"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "GLint"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "GLenum"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLActiveInfo}) (new [] WebGLActiveInfo)}"
  },
  "WebGLBuffer": {
    "kind": "Property",
    "name": "WebGLBuffer",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLBuffer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLBuffer"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLBuffer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLBuffer"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLBuffer}) (new [] WebGLBuffer)}"
  },
  "WebGLContextEvent": {
    "kind": "Property",
    "name": "WebGLContextEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInit<WebGLContextEventInit>)]",
        "returnType": "WebGLContextEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLContextEvent"
      },
      {
        "kind": "Property",
        "name": "statusMessage",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInit<WebGLContextEventInit>)]",
        "returnType": "WebGLContextEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLContextEvent"
      },
      {
        "kind": "Property",
        "name": "statusMessage",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLContextEvent}) (new [type<string> (optional eventInit<WebGLContextEventInit>)] WebGLContextEvent)}"
  },
  "WebGLFramebuffer": {
    "kind": "Property",
    "name": "WebGLFramebuffer",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLFramebuffer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLFramebuffer"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLFramebuffer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLFramebuffer"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLFramebuffer}) (new [] WebGLFramebuffer)}"
  },
  "WebGLProgram": {
    "kind": "Property",
    "name": "WebGLProgram",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLProgram"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLProgram"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLProgram"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLProgram"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLProgram}) (new [] WebGLProgram)}"
  },
  "WebGLQuery": {
    "kind": "Property",
    "name": "WebGLQuery",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLQuery"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLQuery"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLQuery"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLQuery"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLQuery}) (new [] WebGLQuery)}"
  },
  "WebGLRenderbuffer": {
    "kind": "Property",
    "name": "WebGLRenderbuffer",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLRenderbuffer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLRenderbuffer"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLRenderbuffer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLRenderbuffer"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLRenderbuffer}) (new [] WebGLRenderbuffer)}"
  },
  "WebGLRenderingContext": {
    "kind": "Property",
    "name": "WebGLRenderingContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLRenderingContext"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLRenderingContext"
      },
      {
        "kind": "Property",
        "name": "DEPTH_BUFFER_BIT",
        "isStatic": false,
        "returnType": "0x00000100"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BUFFER_BIT",
        "isStatic": false,
        "returnType": "0x00000400"
      },
      {
        "kind": "Property",
        "name": "COLOR_BUFFER_BIT",
        "isStatic": false,
        "returnType": "0x00004000"
      },
      {
        "kind": "Property",
        "name": "POINTS",
        "isStatic": false,
        "returnType": "0x0000"
      },
      {
        "kind": "Property",
        "name": "LINES",
        "isStatic": false,
        "returnType": "0x0001"
      },
      {
        "kind": "Property",
        "name": "LINE_LOOP",
        "isStatic": false,
        "returnType": "0x0002"
      },
      {
        "kind": "Property",
        "name": "LINE_STRIP",
        "isStatic": false,
        "returnType": "0x0003"
      },
      {
        "kind": "Property",
        "name": "TRIANGLES",
        "isStatic": false,
        "returnType": "0x0004"
      },
      {
        "kind": "Property",
        "name": "TRIANGLE_STRIP",
        "isStatic": false,
        "returnType": "0x0005"
      },
      {
        "kind": "Property",
        "name": "TRIANGLE_FAN",
        "isStatic": false,
        "returnType": "0x0006"
      },
      {
        "kind": "Property",
        "name": "ZERO",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "ONE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SRC_COLOR",
        "isStatic": false,
        "returnType": "0x0300"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_SRC_COLOR",
        "isStatic": false,
        "returnType": "0x0301"
      },
      {
        "kind": "Property",
        "name": "SRC_ALPHA",
        "isStatic": false,
        "returnType": "0x0302"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_SRC_ALPHA",
        "isStatic": false,
        "returnType": "0x0303"
      },
      {
        "kind": "Property",
        "name": "DST_ALPHA",
        "isStatic": false,
        "returnType": "0x0304"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_DST_ALPHA",
        "isStatic": false,
        "returnType": "0x0305"
      },
      {
        "kind": "Property",
        "name": "DST_COLOR",
        "isStatic": false,
        "returnType": "0x0306"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_DST_COLOR",
        "isStatic": false,
        "returnType": "0x0307"
      },
      {
        "kind": "Property",
        "name": "SRC_ALPHA_SATURATE",
        "isStatic": false,
        "returnType": "0x0308"
      },
      {
        "kind": "Property",
        "name": "FUNC_ADD",
        "isStatic": false,
        "returnType": "0x8006"
      },
      {
        "kind": "Property",
        "name": "BLEND_EQUATION",
        "isStatic": false,
        "returnType": "0x8009"
      },
      {
        "kind": "Property",
        "name": "BLEND_EQUATION_RGB",
        "isStatic": false,
        "returnType": "0x8009"
      },
      {
        "kind": "Property",
        "name": "BLEND_EQUATION_ALPHA",
        "isStatic": false,
        "returnType": "0x883D"
      },
      {
        "kind": "Property",
        "name": "FUNC_SUBTRACT",
        "isStatic": false,
        "returnType": "0x800A"
      },
      {
        "kind": "Property",
        "name": "FUNC_REVERSE_SUBTRACT",
        "isStatic": false,
        "returnType": "0x800B"
      },
      {
        "kind": "Property",
        "name": "BLEND_DST_RGB",
        "isStatic": false,
        "returnType": "0x80C8"
      },
      {
        "kind": "Property",
        "name": "BLEND_SRC_RGB",
        "isStatic": false,
        "returnType": "0x80C9"
      },
      {
        "kind": "Property",
        "name": "BLEND_DST_ALPHA",
        "isStatic": false,
        "returnType": "0x80CA"
      },
      {
        "kind": "Property",
        "name": "BLEND_SRC_ALPHA",
        "isStatic": false,
        "returnType": "0x80CB"
      },
      {
        "kind": "Property",
        "name": "CONSTANT_COLOR",
        "isStatic": false,
        "returnType": "0x8001"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_CONSTANT_COLOR",
        "isStatic": false,
        "returnType": "0x8002"
      },
      {
        "kind": "Property",
        "name": "CONSTANT_ALPHA",
        "isStatic": false,
        "returnType": "0x8003"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_CONSTANT_ALPHA",
        "isStatic": false,
        "returnType": "0x8004"
      },
      {
        "kind": "Property",
        "name": "BLEND_COLOR",
        "isStatic": false,
        "returnType": "0x8005"
      },
      {
        "kind": "Property",
        "name": "ARRAY_BUFFER",
        "isStatic": false,
        "returnType": "0x8892"
      },
      {
        "kind": "Property",
        "name": "ELEMENT_ARRAY_BUFFER",
        "isStatic": false,
        "returnType": "0x8893"
      },
      {
        "kind": "Property",
        "name": "ARRAY_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8894"
      },
      {
        "kind": "Property",
        "name": "ELEMENT_ARRAY_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8895"
      },
      {
        "kind": "Property",
        "name": "STREAM_DRAW",
        "isStatic": false,
        "returnType": "0x88E0"
      },
      {
        "kind": "Property",
        "name": "STATIC_DRAW",
        "isStatic": false,
        "returnType": "0x88E4"
      },
      {
        "kind": "Property",
        "name": "DYNAMIC_DRAW",
        "isStatic": false,
        "returnType": "0x88E8"
      },
      {
        "kind": "Property",
        "name": "BUFFER_SIZE",
        "isStatic": false,
        "returnType": "0x8764"
      },
      {
        "kind": "Property",
        "name": "BUFFER_USAGE",
        "isStatic": false,
        "returnType": "0x8765"
      },
      {
        "kind": "Property",
        "name": "CURRENT_VERTEX_ATTRIB",
        "isStatic": false,
        "returnType": "0x8626"
      },
      {
        "kind": "Property",
        "name": "FRONT",
        "isStatic": false,
        "returnType": "0x0404"
      },
      {
        "kind": "Property",
        "name": "BACK",
        "isStatic": false,
        "returnType": "0x0405"
      },
      {
        "kind": "Property",
        "name": "FRONT_AND_BACK",
        "isStatic": false,
        "returnType": "0x0408"
      },
      {
        "kind": "Property",
        "name": "CULL_FACE",
        "isStatic": false,
        "returnType": "0x0B44"
      },
      {
        "kind": "Property",
        "name": "BLEND",
        "isStatic": false,
        "returnType": "0x0BE2"
      },
      {
        "kind": "Property",
        "name": "DITHER",
        "isStatic": false,
        "returnType": "0x0BD0"
      },
      {
        "kind": "Property",
        "name": "STENCIL_TEST",
        "isStatic": false,
        "returnType": "0x0B90"
      },
      {
        "kind": "Property",
        "name": "DEPTH_TEST",
        "isStatic": false,
        "returnType": "0x0B71"
      },
      {
        "kind": "Property",
        "name": "SCISSOR_TEST",
        "isStatic": false,
        "returnType": "0x0C11"
      },
      {
        "kind": "Property",
        "name": "POLYGON_OFFSET_FILL",
        "isStatic": false,
        "returnType": "0x8037"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_ALPHA_TO_COVERAGE",
        "isStatic": false,
        "returnType": "0x809E"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_COVERAGE",
        "isStatic": false,
        "returnType": "0x80A0"
      },
      {
        "kind": "Property",
        "name": "NO_ERROR",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "INVALID_ENUM",
        "isStatic": false,
        "returnType": "0x0500"
      },
      {
        "kind": "Property",
        "name": "INVALID_VALUE",
        "isStatic": false,
        "returnType": "0x0501"
      },
      {
        "kind": "Property",
        "name": "INVALID_OPERATION",
        "isStatic": false,
        "returnType": "0x0502"
      },
      {
        "kind": "Property",
        "name": "OUT_OF_MEMORY",
        "isStatic": false,
        "returnType": "0x0505"
      },
      {
        "kind": "Property",
        "name": "CW",
        "isStatic": false,
        "returnType": "0x0900"
      },
      {
        "kind": "Property",
        "name": "CCW",
        "isStatic": false,
        "returnType": "0x0901"
      },
      {
        "kind": "Property",
        "name": "LINE_WIDTH",
        "isStatic": false,
        "returnType": "0x0B21"
      },
      {
        "kind": "Property",
        "name": "ALIASED_POINT_SIZE_RANGE",
        "isStatic": false,
        "returnType": "0x846D"
      },
      {
        "kind": "Property",
        "name": "ALIASED_LINE_WIDTH_RANGE",
        "isStatic": false,
        "returnType": "0x846E"
      },
      {
        "kind": "Property",
        "name": "CULL_FACE_MODE",
        "isStatic": false,
        "returnType": "0x0B45"
      },
      {
        "kind": "Property",
        "name": "FRONT_FACE",
        "isStatic": false,
        "returnType": "0x0B46"
      },
      {
        "kind": "Property",
        "name": "DEPTH_RANGE",
        "isStatic": false,
        "returnType": "0x0B70"
      },
      {
        "kind": "Property",
        "name": "DEPTH_WRITEMASK",
        "isStatic": false,
        "returnType": "0x0B72"
      },
      {
        "kind": "Property",
        "name": "DEPTH_CLEAR_VALUE",
        "isStatic": false,
        "returnType": "0x0B73"
      },
      {
        "kind": "Property",
        "name": "DEPTH_FUNC",
        "isStatic": false,
        "returnType": "0x0B74"
      },
      {
        "kind": "Property",
        "name": "STENCIL_CLEAR_VALUE",
        "isStatic": false,
        "returnType": "0x0B91"
      },
      {
        "kind": "Property",
        "name": "STENCIL_FUNC",
        "isStatic": false,
        "returnType": "0x0B92"
      },
      {
        "kind": "Property",
        "name": "STENCIL_FAIL",
        "isStatic": false,
        "returnType": "0x0B94"
      },
      {
        "kind": "Property",
        "name": "STENCIL_PASS_DEPTH_FAIL",
        "isStatic": false,
        "returnType": "0x0B95"
      },
      {
        "kind": "Property",
        "name": "STENCIL_PASS_DEPTH_PASS",
        "isStatic": false,
        "returnType": "0x0B96"
      },
      {
        "kind": "Property",
        "name": "STENCIL_REF",
        "isStatic": false,
        "returnType": "0x0B97"
      },
      {
        "kind": "Property",
        "name": "STENCIL_VALUE_MASK",
        "isStatic": false,
        "returnType": "0x0B93"
      },
      {
        "kind": "Property",
        "name": "STENCIL_WRITEMASK",
        "isStatic": false,
        "returnType": "0x0B98"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_FUNC",
        "isStatic": false,
        "returnType": "0x8800"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_FAIL",
        "isStatic": false,
        "returnType": "0x8801"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_PASS_DEPTH_FAIL",
        "isStatic": false,
        "returnType": "0x8802"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_PASS_DEPTH_PASS",
        "isStatic": false,
        "returnType": "0x8803"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_REF",
        "isStatic": false,
        "returnType": "0x8CA3"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_VALUE_MASK",
        "isStatic": false,
        "returnType": "0x8CA4"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_WRITEMASK",
        "isStatic": false,
        "returnType": "0x8CA5"
      },
      {
        "kind": "Property",
        "name": "VIEWPORT",
        "isStatic": false,
        "returnType": "0x0BA2"
      },
      {
        "kind": "Property",
        "name": "SCISSOR_BOX",
        "isStatic": false,
        "returnType": "0x0C10"
      },
      {
        "kind": "Property",
        "name": "COLOR_CLEAR_VALUE",
        "isStatic": false,
        "returnType": "0x0C22"
      },
      {
        "kind": "Property",
        "name": "COLOR_WRITEMASK",
        "isStatic": false,
        "returnType": "0x0C23"
      },
      {
        "kind": "Property",
        "name": "UNPACK_ALIGNMENT",
        "isStatic": false,
        "returnType": "0x0CF5"
      },
      {
        "kind": "Property",
        "name": "PACK_ALIGNMENT",
        "isStatic": false,
        "returnType": "0x0D05"
      },
      {
        "kind": "Property",
        "name": "MAX_TEXTURE_SIZE",
        "isStatic": false,
        "returnType": "0x0D33"
      },
      {
        "kind": "Property",
        "name": "MAX_VIEWPORT_DIMS",
        "isStatic": false,
        "returnType": "0x0D3A"
      },
      {
        "kind": "Property",
        "name": "SUBPIXEL_BITS",
        "isStatic": false,
        "returnType": "0x0D50"
      },
      {
        "kind": "Property",
        "name": "RED_BITS",
        "isStatic": false,
        "returnType": "0x0D52"
      },
      {
        "kind": "Property",
        "name": "GREEN_BITS",
        "isStatic": false,
        "returnType": "0x0D53"
      },
      {
        "kind": "Property",
        "name": "BLUE_BITS",
        "isStatic": false,
        "returnType": "0x0D54"
      },
      {
        "kind": "Property",
        "name": "ALPHA_BITS",
        "isStatic": false,
        "returnType": "0x0D55"
      },
      {
        "kind": "Property",
        "name": "DEPTH_BITS",
        "isStatic": false,
        "returnType": "0x0D56"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BITS",
        "isStatic": false,
        "returnType": "0x0D57"
      },
      {
        "kind": "Property",
        "name": "POLYGON_OFFSET_UNITS",
        "isStatic": false,
        "returnType": "0x2A00"
      },
      {
        "kind": "Property",
        "name": "POLYGON_OFFSET_FACTOR",
        "isStatic": false,
        "returnType": "0x8038"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BINDING_2D",
        "isStatic": false,
        "returnType": "0x8069"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_BUFFERS",
        "isStatic": false,
        "returnType": "0x80A8"
      },
      {
        "kind": "Property",
        "name": "SAMPLES",
        "isStatic": false,
        "returnType": "0x80A9"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_COVERAGE_VALUE",
        "isStatic": false,
        "returnType": "0x80AA"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_COVERAGE_INVERT",
        "isStatic": false,
        "returnType": "0x80AB"
      },
      {
        "kind": "Property",
        "name": "COMPRESSED_TEXTURE_FORMATS",
        "isStatic": false,
        "returnType": "0x86A3"
      },
      {
        "kind": "Property",
        "name": "DONT_CARE",
        "isStatic": false,
        "returnType": "0x1100"
      },
      {
        "kind": "Property",
        "name": "FASTEST",
        "isStatic": false,
        "returnType": "0x1101"
      },
      {
        "kind": "Property",
        "name": "NICEST",
        "isStatic": false,
        "returnType": "0x1102"
      },
      {
        "kind": "Property",
        "name": "GENERATE_MIPMAP_HINT",
        "isStatic": false,
        "returnType": "0x8192"
      },
      {
        "kind": "Property",
        "name": "BYTE",
        "isStatic": false,
        "returnType": "0x1400"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_BYTE",
        "isStatic": false,
        "returnType": "0x1401"
      },
      {
        "kind": "Property",
        "name": "SHORT",
        "isStatic": false,
        "returnType": "0x1402"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT",
        "isStatic": false,
        "returnType": "0x1403"
      },
      {
        "kind": "Property",
        "name": "INT",
        "isStatic": false,
        "returnType": "0x1404"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT",
        "isStatic": false,
        "returnType": "0x1405"
      },
      {
        "kind": "Property",
        "name": "FLOAT",
        "isStatic": false,
        "returnType": "0x1406"
      },
      {
        "kind": "Property",
        "name": "DEPTH_COMPONENT",
        "isStatic": false,
        "returnType": "0x1902"
      },
      {
        "kind": "Property",
        "name": "ALPHA",
        "isStatic": false,
        "returnType": "0x1906"
      },
      {
        "kind": "Property",
        "name": "RGB",
        "isStatic": false,
        "returnType": "0x1907"
      },
      {
        "kind": "Property",
        "name": "RGBA",
        "isStatic": false,
        "returnType": "0x1908"
      },
      {
        "kind": "Property",
        "name": "LUMINANCE",
        "isStatic": false,
        "returnType": "0x1909"
      },
      {
        "kind": "Property",
        "name": "LUMINANCE_ALPHA",
        "isStatic": false,
        "returnType": "0x190A"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT_4_4_4_4",
        "isStatic": false,
        "returnType": "0x8033"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT_5_5_5_1",
        "isStatic": false,
        "returnType": "0x8034"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT_5_6_5",
        "isStatic": false,
        "returnType": "0x8363"
      },
      {
        "kind": "Property",
        "name": "FRAGMENT_SHADER",
        "isStatic": false,
        "returnType": "0x8B30"
      },
      {
        "kind": "Property",
        "name": "VERTEX_SHADER",
        "isStatic": false,
        "returnType": "0x8B31"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_ATTRIBS",
        "isStatic": false,
        "returnType": "0x8869"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_UNIFORM_VECTORS",
        "isStatic": false,
        "returnType": "0x8DFB"
      },
      {
        "kind": "Property",
        "name": "MAX_VARYING_VECTORS",
        "isStatic": false,
        "returnType": "0x8DFC"
      },
      {
        "kind": "Property",
        "name": "MAX_COMBINED_TEXTURE_IMAGE_UNITS",
        "isStatic": false,
        "returnType": "0x8B4D"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_TEXTURE_IMAGE_UNITS",
        "isStatic": false,
        "returnType": "0x8B4C"
      },
      {
        "kind": "Property",
        "name": "MAX_TEXTURE_IMAGE_UNITS",
        "isStatic": false,
        "returnType": "0x8872"
      },
      {
        "kind": "Property",
        "name": "MAX_FRAGMENT_UNIFORM_VECTORS",
        "isStatic": false,
        "returnType": "0x8DFD"
      },
      {
        "kind": "Property",
        "name": "SHADER_TYPE",
        "isStatic": false,
        "returnType": "0x8B4F"
      },
      {
        "kind": "Property",
        "name": "DELETE_STATUS",
        "isStatic": false,
        "returnType": "0x8B80"
      },
      {
        "kind": "Property",
        "name": "LINK_STATUS",
        "isStatic": false,
        "returnType": "0x8B82"
      },
      {
        "kind": "Property",
        "name": "VALIDATE_STATUS",
        "isStatic": false,
        "returnType": "0x8B83"
      },
      {
        "kind": "Property",
        "name": "ATTACHED_SHADERS",
        "isStatic": false,
        "returnType": "0x8B85"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_UNIFORMS",
        "isStatic": false,
        "returnType": "0x8B86"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_ATTRIBUTES",
        "isStatic": false,
        "returnType": "0x8B89"
      },
      {
        "kind": "Property",
        "name": "SHADING_LANGUAGE_VERSION",
        "isStatic": false,
        "returnType": "0x8B8C"
      },
      {
        "kind": "Property",
        "name": "CURRENT_PROGRAM",
        "isStatic": false,
        "returnType": "0x8B8D"
      },
      {
        "kind": "Property",
        "name": "NEVER",
        "isStatic": false,
        "returnType": "0x0200"
      },
      {
        "kind": "Property",
        "name": "LESS",
        "isStatic": false,
        "returnType": "0x0201"
      },
      {
        "kind": "Property",
        "name": "EQUAL",
        "isStatic": false,
        "returnType": "0x0202"
      },
      {
        "kind": "Property",
        "name": "LEQUAL",
        "isStatic": false,
        "returnType": "0x0203"
      },
      {
        "kind": "Property",
        "name": "GREATER",
        "isStatic": false,
        "returnType": "0x0204"
      },
      {
        "kind": "Property",
        "name": "NOTEQUAL",
        "isStatic": false,
        "returnType": "0x0205"
      },
      {
        "kind": "Property",
        "name": "GEQUAL",
        "isStatic": false,
        "returnType": "0x0206"
      },
      {
        "kind": "Property",
        "name": "ALWAYS",
        "isStatic": false,
        "returnType": "0x0207"
      },
      {
        "kind": "Property",
        "name": "KEEP",
        "isStatic": false,
        "returnType": "0x1E00"
      },
      {
        "kind": "Property",
        "name": "REPLACE",
        "isStatic": false,
        "returnType": "0x1E01"
      },
      {
        "kind": "Property",
        "name": "INCR",
        "isStatic": false,
        "returnType": "0x1E02"
      },
      {
        "kind": "Property",
        "name": "DECR",
        "isStatic": false,
        "returnType": "0x1E03"
      },
      {
        "kind": "Property",
        "name": "INVERT",
        "isStatic": false,
        "returnType": "0x150A"
      },
      {
        "kind": "Property",
        "name": "INCR_WRAP",
        "isStatic": false,
        "returnType": "0x8507"
      },
      {
        "kind": "Property",
        "name": "DECR_WRAP",
        "isStatic": false,
        "returnType": "0x8508"
      },
      {
        "kind": "Property",
        "name": "VENDOR",
        "isStatic": false,
        "returnType": "0x1F00"
      },
      {
        "kind": "Property",
        "name": "RENDERER",
        "isStatic": false,
        "returnType": "0x1F01"
      },
      {
        "kind": "Property",
        "name": "VERSION",
        "isStatic": false,
        "returnType": "0x1F02"
      },
      {
        "kind": "Property",
        "name": "NEAREST",
        "isStatic": false,
        "returnType": "0x2600"
      },
      {
        "kind": "Property",
        "name": "LINEAR",
        "isStatic": false,
        "returnType": "0x2601"
      },
      {
        "kind": "Property",
        "name": "NEAREST_MIPMAP_NEAREST",
        "isStatic": false,
        "returnType": "0x2700"
      },
      {
        "kind": "Property",
        "name": "LINEAR_MIPMAP_NEAREST",
        "isStatic": false,
        "returnType": "0x2701"
      },
      {
        "kind": "Property",
        "name": "NEAREST_MIPMAP_LINEAR",
        "isStatic": false,
        "returnType": "0x2702"
      },
      {
        "kind": "Property",
        "name": "LINEAR_MIPMAP_LINEAR",
        "isStatic": false,
        "returnType": "0x2703"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MAG_FILTER",
        "isStatic": false,
        "returnType": "0x2800"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MIN_FILTER",
        "isStatic": false,
        "returnType": "0x2801"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_WRAP_S",
        "isStatic": false,
        "returnType": "0x2802"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_WRAP_T",
        "isStatic": false,
        "returnType": "0x2803"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_2D",
        "isStatic": false,
        "returnType": "0x0DE1"
      },
      {
        "kind": "Property",
        "name": "TEXTURE",
        "isStatic": false,
        "returnType": "0x1702"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP",
        "isStatic": false,
        "returnType": "0x8513"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BINDING_CUBE_MAP",
        "isStatic": false,
        "returnType": "0x8514"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_POSITIVE_X",
        "isStatic": false,
        "returnType": "0x8515"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_X",
        "isStatic": false,
        "returnType": "0x8516"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_POSITIVE_Y",
        "isStatic": false,
        "returnType": "0x8517"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_Y",
        "isStatic": false,
        "returnType": "0x8518"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_POSITIVE_Z",
        "isStatic": false,
        "returnType": "0x8519"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_Z",
        "isStatic": false,
        "returnType": "0x851A"
      },
      {
        "kind": "Property",
        "name": "MAX_CUBE_MAP_TEXTURE_SIZE",
        "isStatic": false,
        "returnType": "0x851C"
      },
      {
        "kind": "Property",
        "name": "TEXTURE0",
        "isStatic": false,
        "returnType": "0x84C0"
      },
      {
        "kind": "Property",
        "name": "TEXTURE1",
        "isStatic": false,
        "returnType": "0x84C1"
      },
      {
        "kind": "Property",
        "name": "TEXTURE2",
        "isStatic": false,
        "returnType": "0x84C2"
      },
      {
        "kind": "Property",
        "name": "TEXTURE3",
        "isStatic": false,
        "returnType": "0x84C3"
      },
      {
        "kind": "Property",
        "name": "TEXTURE4",
        "isStatic": false,
        "returnType": "0x84C4"
      },
      {
        "kind": "Property",
        "name": "TEXTURE5",
        "isStatic": false,
        "returnType": "0x84C5"
      },
      {
        "kind": "Property",
        "name": "TEXTURE6",
        "isStatic": false,
        "returnType": "0x84C6"
      },
      {
        "kind": "Property",
        "name": "TEXTURE7",
        "isStatic": false,
        "returnType": "0x84C7"
      },
      {
        "kind": "Property",
        "name": "TEXTURE8",
        "isStatic": false,
        "returnType": "0x84C8"
      },
      {
        "kind": "Property",
        "name": "TEXTURE9",
        "isStatic": false,
        "returnType": "0x84C9"
      },
      {
        "kind": "Property",
        "name": "TEXTURE10",
        "isStatic": false,
        "returnType": "0x84CA"
      },
      {
        "kind": "Property",
        "name": "TEXTURE11",
        "isStatic": false,
        "returnType": "0x84CB"
      },
      {
        "kind": "Property",
        "name": "TEXTURE12",
        "isStatic": false,
        "returnType": "0x84CC"
      },
      {
        "kind": "Property",
        "name": "TEXTURE13",
        "isStatic": false,
        "returnType": "0x84CD"
      },
      {
        "kind": "Property",
        "name": "TEXTURE14",
        "isStatic": false,
        "returnType": "0x84CE"
      },
      {
        "kind": "Property",
        "name": "TEXTURE15",
        "isStatic": false,
        "returnType": "0x84CF"
      },
      {
        "kind": "Property",
        "name": "TEXTURE16",
        "isStatic": false,
        "returnType": "0x84D0"
      },
      {
        "kind": "Property",
        "name": "TEXTURE17",
        "isStatic": false,
        "returnType": "0x84D1"
      },
      {
        "kind": "Property",
        "name": "TEXTURE18",
        "isStatic": false,
        "returnType": "0x84D2"
      },
      {
        "kind": "Property",
        "name": "TEXTURE19",
        "isStatic": false,
        "returnType": "0x84D3"
      },
      {
        "kind": "Property",
        "name": "TEXTURE20",
        "isStatic": false,
        "returnType": "0x84D4"
      },
      {
        "kind": "Property",
        "name": "TEXTURE21",
        "isStatic": false,
        "returnType": "0x84D5"
      },
      {
        "kind": "Property",
        "name": "TEXTURE22",
        "isStatic": false,
        "returnType": "0x84D6"
      },
      {
        "kind": "Property",
        "name": "TEXTURE23",
        "isStatic": false,
        "returnType": "0x84D7"
      },
      {
        "kind": "Property",
        "name": "TEXTURE24",
        "isStatic": false,
        "returnType": "0x84D8"
      },
      {
        "kind": "Property",
        "name": "TEXTURE25",
        "isStatic": false,
        "returnType": "0x84D9"
      },
      {
        "kind": "Property",
        "name": "TEXTURE26",
        "isStatic": false,
        "returnType": "0x84DA"
      },
      {
        "kind": "Property",
        "name": "TEXTURE27",
        "isStatic": false,
        "returnType": "0x84DB"
      },
      {
        "kind": "Property",
        "name": "TEXTURE28",
        "isStatic": false,
        "returnType": "0x84DC"
      },
      {
        "kind": "Property",
        "name": "TEXTURE29",
        "isStatic": false,
        "returnType": "0x84DD"
      },
      {
        "kind": "Property",
        "name": "TEXTURE30",
        "isStatic": false,
        "returnType": "0x84DE"
      },
      {
        "kind": "Property",
        "name": "TEXTURE31",
        "isStatic": false,
        "returnType": "0x84DF"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_TEXTURE",
        "isStatic": false,
        "returnType": "0x84E0"
      },
      {
        "kind": "Property",
        "name": "REPEAT",
        "isStatic": false,
        "returnType": "0x2901"
      },
      {
        "kind": "Property",
        "name": "CLAMP_TO_EDGE",
        "isStatic": false,
        "returnType": "0x812F"
      },
      {
        "kind": "Property",
        "name": "MIRRORED_REPEAT",
        "isStatic": false,
        "returnType": "0x8370"
      },
      {
        "kind": "Property",
        "name": "FLOAT_VEC2",
        "isStatic": false,
        "returnType": "0x8B50"
      },
      {
        "kind": "Property",
        "name": "FLOAT_VEC3",
        "isStatic": false,
        "returnType": "0x8B51"
      },
      {
        "kind": "Property",
        "name": "FLOAT_VEC4",
        "isStatic": false,
        "returnType": "0x8B52"
      },
      {
        "kind": "Property",
        "name": "INT_VEC2",
        "isStatic": false,
        "returnType": "0x8B53"
      },
      {
        "kind": "Property",
        "name": "INT_VEC3",
        "isStatic": false,
        "returnType": "0x8B54"
      },
      {
        "kind": "Property",
        "name": "INT_VEC4",
        "isStatic": false,
        "returnType": "0x8B55"
      },
      {
        "kind": "Property",
        "name": "BOOL",
        "isStatic": false,
        "returnType": "0x8B56"
      },
      {
        "kind": "Property",
        "name": "BOOL_VEC2",
        "isStatic": false,
        "returnType": "0x8B57"
      },
      {
        "kind": "Property",
        "name": "BOOL_VEC3",
        "isStatic": false,
        "returnType": "0x8B58"
      },
      {
        "kind": "Property",
        "name": "BOOL_VEC4",
        "isStatic": false,
        "returnType": "0x8B59"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT2",
        "isStatic": false,
        "returnType": "0x8B5A"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT3",
        "isStatic": false,
        "returnType": "0x8B5B"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT4",
        "isStatic": false,
        "returnType": "0x8B5C"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_2D",
        "isStatic": false,
        "returnType": "0x8B5E"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_CUBE",
        "isStatic": false,
        "returnType": "0x8B60"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_ENABLED",
        "isStatic": false,
        "returnType": "0x8622"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_SIZE",
        "isStatic": false,
        "returnType": "0x8623"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_STRIDE",
        "isStatic": false,
        "returnType": "0x8624"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_TYPE",
        "isStatic": false,
        "returnType": "0x8625"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_NORMALIZED",
        "isStatic": false,
        "returnType": "0x886A"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_POINTER",
        "isStatic": false,
        "returnType": "0x8645"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x889F"
      },
      {
        "kind": "Property",
        "name": "IMPLEMENTATION_COLOR_READ_TYPE",
        "isStatic": false,
        "returnType": "0x8B9A"
      },
      {
        "kind": "Property",
        "name": "IMPLEMENTATION_COLOR_READ_FORMAT",
        "isStatic": false,
        "returnType": "0x8B9B"
      },
      {
        "kind": "Property",
        "name": "COMPILE_STATUS",
        "isStatic": false,
        "returnType": "0x8B81"
      },
      {
        "kind": "Property",
        "name": "LOW_FLOAT",
        "isStatic": false,
        "returnType": "0x8DF0"
      },
      {
        "kind": "Property",
        "name": "MEDIUM_FLOAT",
        "isStatic": false,
        "returnType": "0x8DF1"
      },
      {
        "kind": "Property",
        "name": "HIGH_FLOAT",
        "isStatic": false,
        "returnType": "0x8DF2"
      },
      {
        "kind": "Property",
        "name": "LOW_INT",
        "isStatic": false,
        "returnType": "0x8DF3"
      },
      {
        "kind": "Property",
        "name": "MEDIUM_INT",
        "isStatic": false,
        "returnType": "0x8DF4"
      },
      {
        "kind": "Property",
        "name": "HIGH_INT",
        "isStatic": false,
        "returnType": "0x8DF5"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER",
        "isStatic": false,
        "returnType": "0x8D40"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER",
        "isStatic": false,
        "returnType": "0x8D41"
      },
      {
        "kind": "Property",
        "name": "RGBA4",
        "isStatic": false,
        "returnType": "0x8056"
      },
      {
        "kind": "Property",
        "name": "RGB5_A1",
        "isStatic": false,
        "returnType": "0x8057"
      },
      {
        "kind": "Property",
        "name": "RGBA8",
        "isStatic": false,
        "returnType": "0x8058"
      },
      {
        "kind": "Property",
        "name": "RGB565",
        "isStatic": false,
        "returnType": "0x8D62"
      },
      {
        "kind": "Property",
        "name": "DEPTH_COMPONENT16",
        "isStatic": false,
        "returnType": "0x81A5"
      },
      {
        "kind": "Property",
        "name": "STENCIL_INDEX8",
        "isStatic": false,
        "returnType": "0x8D48"
      },
      {
        "kind": "Property",
        "name": "DEPTH_STENCIL",
        "isStatic": false,
        "returnType": "0x84F9"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_WIDTH",
        "isStatic": false,
        "returnType": "0x8D42"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_HEIGHT",
        "isStatic": false,
        "returnType": "0x8D43"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_INTERNAL_FORMAT",
        "isStatic": false,
        "returnType": "0x8D44"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_RED_SIZE",
        "isStatic": false,
        "returnType": "0x8D50"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_GREEN_SIZE",
        "isStatic": false,
        "returnType": "0x8D51"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_BLUE_SIZE",
        "isStatic": false,
        "returnType": "0x8D52"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_ALPHA_SIZE",
        "isStatic": false,
        "returnType": "0x8D53"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_DEPTH_SIZE",
        "isStatic": false,
        "returnType": "0x8D54"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_STENCIL_SIZE",
        "isStatic": false,
        "returnType": "0x8D55"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
        "isStatic": false,
        "returnType": "0x8CD0"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
        "isStatic": false,
        "returnType": "0x8CD1"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
        "isStatic": false,
        "returnType": "0x8CD2"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",
        "isStatic": false,
        "returnType": "0x8CD3"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT0",
        "isStatic": false,
        "returnType": "0x8CE0"
      },
      {
        "kind": "Property",
        "name": "DEPTH_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8D00"
      },
      {
        "kind": "Property",
        "name": "STENCIL_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8D20"
      },
      {
        "kind": "Property",
        "name": "DEPTH_STENCIL_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x821A"
      },
      {
        "kind": "Property",
        "name": "NONE",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_COMPLETE",
        "isStatic": false,
        "returnType": "0x8CD5"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8CD6"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8CD7"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
        "isStatic": false,
        "returnType": "0x8CD9"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_UNSUPPORTED",
        "isStatic": false,
        "returnType": "0x8CDD"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8CA6"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8CA7"
      },
      {
        "kind": "Property",
        "name": "MAX_RENDERBUFFER_SIZE",
        "isStatic": false,
        "returnType": "0x84E8"
      },
      {
        "kind": "Property",
        "name": "INVALID_FRAMEBUFFER_OPERATION",
        "isStatic": false,
        "returnType": "0x0506"
      },
      {
        "kind": "Property",
        "name": "UNPACK_FLIP_Y_WEBGL",
        "isStatic": false,
        "returnType": "0x9240"
      },
      {
        "kind": "Property",
        "name": "UNPACK_PREMULTIPLY_ALPHA_WEBGL",
        "isStatic": false,
        "returnType": "0x9241"
      },
      {
        "kind": "Property",
        "name": "CONTEXT_LOST_WEBGL",
        "isStatic": false,
        "returnType": "0x9242"
      },
      {
        "kind": "Property",
        "name": "UNPACK_COLORSPACE_CONVERSION_WEBGL",
        "isStatic": false,
        "returnType": "0x9243"
      },
      {
        "kind": "Property",
        "name": "BROWSER_DEFAULT_WEBGL",
        "isStatic": false,
        "returnType": "0x9244"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLRenderingContext"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLRenderingContext"
      },
      {
        "kind": "Property",
        "name": "DEPTH_BUFFER_BIT",
        "isStatic": false,
        "returnType": "0x00000100"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BUFFER_BIT",
        "isStatic": false,
        "returnType": "0x00000400"
      },
      {
        "kind": "Property",
        "name": "COLOR_BUFFER_BIT",
        "isStatic": false,
        "returnType": "0x00004000"
      },
      {
        "kind": "Property",
        "name": "POINTS",
        "isStatic": false,
        "returnType": "0x0000"
      },
      {
        "kind": "Property",
        "name": "LINES",
        "isStatic": false,
        "returnType": "0x0001"
      },
      {
        "kind": "Property",
        "name": "LINE_LOOP",
        "isStatic": false,
        "returnType": "0x0002"
      },
      {
        "kind": "Property",
        "name": "LINE_STRIP",
        "isStatic": false,
        "returnType": "0x0003"
      },
      {
        "kind": "Property",
        "name": "TRIANGLES",
        "isStatic": false,
        "returnType": "0x0004"
      },
      {
        "kind": "Property",
        "name": "TRIANGLE_STRIP",
        "isStatic": false,
        "returnType": "0x0005"
      },
      {
        "kind": "Property",
        "name": "TRIANGLE_FAN",
        "isStatic": false,
        "returnType": "0x0006"
      },
      {
        "kind": "Property",
        "name": "ZERO",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "ONE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "SRC_COLOR",
        "isStatic": false,
        "returnType": "0x0300"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_SRC_COLOR",
        "isStatic": false,
        "returnType": "0x0301"
      },
      {
        "kind": "Property",
        "name": "SRC_ALPHA",
        "isStatic": false,
        "returnType": "0x0302"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_SRC_ALPHA",
        "isStatic": false,
        "returnType": "0x0303"
      },
      {
        "kind": "Property",
        "name": "DST_ALPHA",
        "isStatic": false,
        "returnType": "0x0304"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_DST_ALPHA",
        "isStatic": false,
        "returnType": "0x0305"
      },
      {
        "kind": "Property",
        "name": "DST_COLOR",
        "isStatic": false,
        "returnType": "0x0306"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_DST_COLOR",
        "isStatic": false,
        "returnType": "0x0307"
      },
      {
        "kind": "Property",
        "name": "SRC_ALPHA_SATURATE",
        "isStatic": false,
        "returnType": "0x0308"
      },
      {
        "kind": "Property",
        "name": "FUNC_ADD",
        "isStatic": false,
        "returnType": "0x8006"
      },
      {
        "kind": "Property",
        "name": "BLEND_EQUATION",
        "isStatic": false,
        "returnType": "0x8009"
      },
      {
        "kind": "Property",
        "name": "BLEND_EQUATION_RGB",
        "isStatic": false,
        "returnType": "0x8009"
      },
      {
        "kind": "Property",
        "name": "BLEND_EQUATION_ALPHA",
        "isStatic": false,
        "returnType": "0x883D"
      },
      {
        "kind": "Property",
        "name": "FUNC_SUBTRACT",
        "isStatic": false,
        "returnType": "0x800A"
      },
      {
        "kind": "Property",
        "name": "FUNC_REVERSE_SUBTRACT",
        "isStatic": false,
        "returnType": "0x800B"
      },
      {
        "kind": "Property",
        "name": "BLEND_DST_RGB",
        "isStatic": false,
        "returnType": "0x80C8"
      },
      {
        "kind": "Property",
        "name": "BLEND_SRC_RGB",
        "isStatic": false,
        "returnType": "0x80C9"
      },
      {
        "kind": "Property",
        "name": "BLEND_DST_ALPHA",
        "isStatic": false,
        "returnType": "0x80CA"
      },
      {
        "kind": "Property",
        "name": "BLEND_SRC_ALPHA",
        "isStatic": false,
        "returnType": "0x80CB"
      },
      {
        "kind": "Property",
        "name": "CONSTANT_COLOR",
        "isStatic": false,
        "returnType": "0x8001"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_CONSTANT_COLOR",
        "isStatic": false,
        "returnType": "0x8002"
      },
      {
        "kind": "Property",
        "name": "CONSTANT_ALPHA",
        "isStatic": false,
        "returnType": "0x8003"
      },
      {
        "kind": "Property",
        "name": "ONE_MINUS_CONSTANT_ALPHA",
        "isStatic": false,
        "returnType": "0x8004"
      },
      {
        "kind": "Property",
        "name": "BLEND_COLOR",
        "isStatic": false,
        "returnType": "0x8005"
      },
      {
        "kind": "Property",
        "name": "ARRAY_BUFFER",
        "isStatic": false,
        "returnType": "0x8892"
      },
      {
        "kind": "Property",
        "name": "ELEMENT_ARRAY_BUFFER",
        "isStatic": false,
        "returnType": "0x8893"
      },
      {
        "kind": "Property",
        "name": "ARRAY_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8894"
      },
      {
        "kind": "Property",
        "name": "ELEMENT_ARRAY_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8895"
      },
      {
        "kind": "Property",
        "name": "STREAM_DRAW",
        "isStatic": false,
        "returnType": "0x88E0"
      },
      {
        "kind": "Property",
        "name": "STATIC_DRAW",
        "isStatic": false,
        "returnType": "0x88E4"
      },
      {
        "kind": "Property",
        "name": "DYNAMIC_DRAW",
        "isStatic": false,
        "returnType": "0x88E8"
      },
      {
        "kind": "Property",
        "name": "BUFFER_SIZE",
        "isStatic": false,
        "returnType": "0x8764"
      },
      {
        "kind": "Property",
        "name": "BUFFER_USAGE",
        "isStatic": false,
        "returnType": "0x8765"
      },
      {
        "kind": "Property",
        "name": "CURRENT_VERTEX_ATTRIB",
        "isStatic": false,
        "returnType": "0x8626"
      },
      {
        "kind": "Property",
        "name": "FRONT",
        "isStatic": false,
        "returnType": "0x0404"
      },
      {
        "kind": "Property",
        "name": "BACK",
        "isStatic": false,
        "returnType": "0x0405"
      },
      {
        "kind": "Property",
        "name": "FRONT_AND_BACK",
        "isStatic": false,
        "returnType": "0x0408"
      },
      {
        "kind": "Property",
        "name": "CULL_FACE",
        "isStatic": false,
        "returnType": "0x0B44"
      },
      {
        "kind": "Property",
        "name": "BLEND",
        "isStatic": false,
        "returnType": "0x0BE2"
      },
      {
        "kind": "Property",
        "name": "DITHER",
        "isStatic": false,
        "returnType": "0x0BD0"
      },
      {
        "kind": "Property",
        "name": "STENCIL_TEST",
        "isStatic": false,
        "returnType": "0x0B90"
      },
      {
        "kind": "Property",
        "name": "DEPTH_TEST",
        "isStatic": false,
        "returnType": "0x0B71"
      },
      {
        "kind": "Property",
        "name": "SCISSOR_TEST",
        "isStatic": false,
        "returnType": "0x0C11"
      },
      {
        "kind": "Property",
        "name": "POLYGON_OFFSET_FILL",
        "isStatic": false,
        "returnType": "0x8037"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_ALPHA_TO_COVERAGE",
        "isStatic": false,
        "returnType": "0x809E"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_COVERAGE",
        "isStatic": false,
        "returnType": "0x80A0"
      },
      {
        "kind": "Property",
        "name": "NO_ERROR",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "INVALID_ENUM",
        "isStatic": false,
        "returnType": "0x0500"
      },
      {
        "kind": "Property",
        "name": "INVALID_VALUE",
        "isStatic": false,
        "returnType": "0x0501"
      },
      {
        "kind": "Property",
        "name": "INVALID_OPERATION",
        "isStatic": false,
        "returnType": "0x0502"
      },
      {
        "kind": "Property",
        "name": "OUT_OF_MEMORY",
        "isStatic": false,
        "returnType": "0x0505"
      },
      {
        "kind": "Property",
        "name": "CW",
        "isStatic": false,
        "returnType": "0x0900"
      },
      {
        "kind": "Property",
        "name": "CCW",
        "isStatic": false,
        "returnType": "0x0901"
      },
      {
        "kind": "Property",
        "name": "LINE_WIDTH",
        "isStatic": false,
        "returnType": "0x0B21"
      },
      {
        "kind": "Property",
        "name": "ALIASED_POINT_SIZE_RANGE",
        "isStatic": false,
        "returnType": "0x846D"
      },
      {
        "kind": "Property",
        "name": "ALIASED_LINE_WIDTH_RANGE",
        "isStatic": false,
        "returnType": "0x846E"
      },
      {
        "kind": "Property",
        "name": "CULL_FACE_MODE",
        "isStatic": false,
        "returnType": "0x0B45"
      },
      {
        "kind": "Property",
        "name": "FRONT_FACE",
        "isStatic": false,
        "returnType": "0x0B46"
      },
      {
        "kind": "Property",
        "name": "DEPTH_RANGE",
        "isStatic": false,
        "returnType": "0x0B70"
      },
      {
        "kind": "Property",
        "name": "DEPTH_WRITEMASK",
        "isStatic": false,
        "returnType": "0x0B72"
      },
      {
        "kind": "Property",
        "name": "DEPTH_CLEAR_VALUE",
        "isStatic": false,
        "returnType": "0x0B73"
      },
      {
        "kind": "Property",
        "name": "DEPTH_FUNC",
        "isStatic": false,
        "returnType": "0x0B74"
      },
      {
        "kind": "Property",
        "name": "STENCIL_CLEAR_VALUE",
        "isStatic": false,
        "returnType": "0x0B91"
      },
      {
        "kind": "Property",
        "name": "STENCIL_FUNC",
        "isStatic": false,
        "returnType": "0x0B92"
      },
      {
        "kind": "Property",
        "name": "STENCIL_FAIL",
        "isStatic": false,
        "returnType": "0x0B94"
      },
      {
        "kind": "Property",
        "name": "STENCIL_PASS_DEPTH_FAIL",
        "isStatic": false,
        "returnType": "0x0B95"
      },
      {
        "kind": "Property",
        "name": "STENCIL_PASS_DEPTH_PASS",
        "isStatic": false,
        "returnType": "0x0B96"
      },
      {
        "kind": "Property",
        "name": "STENCIL_REF",
        "isStatic": false,
        "returnType": "0x0B97"
      },
      {
        "kind": "Property",
        "name": "STENCIL_VALUE_MASK",
        "isStatic": false,
        "returnType": "0x0B93"
      },
      {
        "kind": "Property",
        "name": "STENCIL_WRITEMASK",
        "isStatic": false,
        "returnType": "0x0B98"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_FUNC",
        "isStatic": false,
        "returnType": "0x8800"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_FAIL",
        "isStatic": false,
        "returnType": "0x8801"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_PASS_DEPTH_FAIL",
        "isStatic": false,
        "returnType": "0x8802"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_PASS_DEPTH_PASS",
        "isStatic": false,
        "returnType": "0x8803"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_REF",
        "isStatic": false,
        "returnType": "0x8CA3"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_VALUE_MASK",
        "isStatic": false,
        "returnType": "0x8CA4"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BACK_WRITEMASK",
        "isStatic": false,
        "returnType": "0x8CA5"
      },
      {
        "kind": "Property",
        "name": "VIEWPORT",
        "isStatic": false,
        "returnType": "0x0BA2"
      },
      {
        "kind": "Property",
        "name": "SCISSOR_BOX",
        "isStatic": false,
        "returnType": "0x0C10"
      },
      {
        "kind": "Property",
        "name": "COLOR_CLEAR_VALUE",
        "isStatic": false,
        "returnType": "0x0C22"
      },
      {
        "kind": "Property",
        "name": "COLOR_WRITEMASK",
        "isStatic": false,
        "returnType": "0x0C23"
      },
      {
        "kind": "Property",
        "name": "UNPACK_ALIGNMENT",
        "isStatic": false,
        "returnType": "0x0CF5"
      },
      {
        "kind": "Property",
        "name": "PACK_ALIGNMENT",
        "isStatic": false,
        "returnType": "0x0D05"
      },
      {
        "kind": "Property",
        "name": "MAX_TEXTURE_SIZE",
        "isStatic": false,
        "returnType": "0x0D33"
      },
      {
        "kind": "Property",
        "name": "MAX_VIEWPORT_DIMS",
        "isStatic": false,
        "returnType": "0x0D3A"
      },
      {
        "kind": "Property",
        "name": "SUBPIXEL_BITS",
        "isStatic": false,
        "returnType": "0x0D50"
      },
      {
        "kind": "Property",
        "name": "RED_BITS",
        "isStatic": false,
        "returnType": "0x0D52"
      },
      {
        "kind": "Property",
        "name": "GREEN_BITS",
        "isStatic": false,
        "returnType": "0x0D53"
      },
      {
        "kind": "Property",
        "name": "BLUE_BITS",
        "isStatic": false,
        "returnType": "0x0D54"
      },
      {
        "kind": "Property",
        "name": "ALPHA_BITS",
        "isStatic": false,
        "returnType": "0x0D55"
      },
      {
        "kind": "Property",
        "name": "DEPTH_BITS",
        "isStatic": false,
        "returnType": "0x0D56"
      },
      {
        "kind": "Property",
        "name": "STENCIL_BITS",
        "isStatic": false,
        "returnType": "0x0D57"
      },
      {
        "kind": "Property",
        "name": "POLYGON_OFFSET_UNITS",
        "isStatic": false,
        "returnType": "0x2A00"
      },
      {
        "kind": "Property",
        "name": "POLYGON_OFFSET_FACTOR",
        "isStatic": false,
        "returnType": "0x8038"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BINDING_2D",
        "isStatic": false,
        "returnType": "0x8069"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_BUFFERS",
        "isStatic": false,
        "returnType": "0x80A8"
      },
      {
        "kind": "Property",
        "name": "SAMPLES",
        "isStatic": false,
        "returnType": "0x80A9"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_COVERAGE_VALUE",
        "isStatic": false,
        "returnType": "0x80AA"
      },
      {
        "kind": "Property",
        "name": "SAMPLE_COVERAGE_INVERT",
        "isStatic": false,
        "returnType": "0x80AB"
      },
      {
        "kind": "Property",
        "name": "COMPRESSED_TEXTURE_FORMATS",
        "isStatic": false,
        "returnType": "0x86A3"
      },
      {
        "kind": "Property",
        "name": "DONT_CARE",
        "isStatic": false,
        "returnType": "0x1100"
      },
      {
        "kind": "Property",
        "name": "FASTEST",
        "isStatic": false,
        "returnType": "0x1101"
      },
      {
        "kind": "Property",
        "name": "NICEST",
        "isStatic": false,
        "returnType": "0x1102"
      },
      {
        "kind": "Property",
        "name": "GENERATE_MIPMAP_HINT",
        "isStatic": false,
        "returnType": "0x8192"
      },
      {
        "kind": "Property",
        "name": "BYTE",
        "isStatic": false,
        "returnType": "0x1400"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_BYTE",
        "isStatic": false,
        "returnType": "0x1401"
      },
      {
        "kind": "Property",
        "name": "SHORT",
        "isStatic": false,
        "returnType": "0x1402"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT",
        "isStatic": false,
        "returnType": "0x1403"
      },
      {
        "kind": "Property",
        "name": "INT",
        "isStatic": false,
        "returnType": "0x1404"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_INT",
        "isStatic": false,
        "returnType": "0x1405"
      },
      {
        "kind": "Property",
        "name": "FLOAT",
        "isStatic": false,
        "returnType": "0x1406"
      },
      {
        "kind": "Property",
        "name": "DEPTH_COMPONENT",
        "isStatic": false,
        "returnType": "0x1902"
      },
      {
        "kind": "Property",
        "name": "ALPHA",
        "isStatic": false,
        "returnType": "0x1906"
      },
      {
        "kind": "Property",
        "name": "RGB",
        "isStatic": false,
        "returnType": "0x1907"
      },
      {
        "kind": "Property",
        "name": "RGBA",
        "isStatic": false,
        "returnType": "0x1908"
      },
      {
        "kind": "Property",
        "name": "LUMINANCE",
        "isStatic": false,
        "returnType": "0x1909"
      },
      {
        "kind": "Property",
        "name": "LUMINANCE_ALPHA",
        "isStatic": false,
        "returnType": "0x190A"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT_4_4_4_4",
        "isStatic": false,
        "returnType": "0x8033"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT_5_5_5_1",
        "isStatic": false,
        "returnType": "0x8034"
      },
      {
        "kind": "Property",
        "name": "UNSIGNED_SHORT_5_6_5",
        "isStatic": false,
        "returnType": "0x8363"
      },
      {
        "kind": "Property",
        "name": "FRAGMENT_SHADER",
        "isStatic": false,
        "returnType": "0x8B30"
      },
      {
        "kind": "Property",
        "name": "VERTEX_SHADER",
        "isStatic": false,
        "returnType": "0x8B31"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_ATTRIBS",
        "isStatic": false,
        "returnType": "0x8869"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_UNIFORM_VECTORS",
        "isStatic": false,
        "returnType": "0x8DFB"
      },
      {
        "kind": "Property",
        "name": "MAX_VARYING_VECTORS",
        "isStatic": false,
        "returnType": "0x8DFC"
      },
      {
        "kind": "Property",
        "name": "MAX_COMBINED_TEXTURE_IMAGE_UNITS",
        "isStatic": false,
        "returnType": "0x8B4D"
      },
      {
        "kind": "Property",
        "name": "MAX_VERTEX_TEXTURE_IMAGE_UNITS",
        "isStatic": false,
        "returnType": "0x8B4C"
      },
      {
        "kind": "Property",
        "name": "MAX_TEXTURE_IMAGE_UNITS",
        "isStatic": false,
        "returnType": "0x8872"
      },
      {
        "kind": "Property",
        "name": "MAX_FRAGMENT_UNIFORM_VECTORS",
        "isStatic": false,
        "returnType": "0x8DFD"
      },
      {
        "kind": "Property",
        "name": "SHADER_TYPE",
        "isStatic": false,
        "returnType": "0x8B4F"
      },
      {
        "kind": "Property",
        "name": "DELETE_STATUS",
        "isStatic": false,
        "returnType": "0x8B80"
      },
      {
        "kind": "Property",
        "name": "LINK_STATUS",
        "isStatic": false,
        "returnType": "0x8B82"
      },
      {
        "kind": "Property",
        "name": "VALIDATE_STATUS",
        "isStatic": false,
        "returnType": "0x8B83"
      },
      {
        "kind": "Property",
        "name": "ATTACHED_SHADERS",
        "isStatic": false,
        "returnType": "0x8B85"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_UNIFORMS",
        "isStatic": false,
        "returnType": "0x8B86"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_ATTRIBUTES",
        "isStatic": false,
        "returnType": "0x8B89"
      },
      {
        "kind": "Property",
        "name": "SHADING_LANGUAGE_VERSION",
        "isStatic": false,
        "returnType": "0x8B8C"
      },
      {
        "kind": "Property",
        "name": "CURRENT_PROGRAM",
        "isStatic": false,
        "returnType": "0x8B8D"
      },
      {
        "kind": "Property",
        "name": "NEVER",
        "isStatic": false,
        "returnType": "0x0200"
      },
      {
        "kind": "Property",
        "name": "LESS",
        "isStatic": false,
        "returnType": "0x0201"
      },
      {
        "kind": "Property",
        "name": "EQUAL",
        "isStatic": false,
        "returnType": "0x0202"
      },
      {
        "kind": "Property",
        "name": "LEQUAL",
        "isStatic": false,
        "returnType": "0x0203"
      },
      {
        "kind": "Property",
        "name": "GREATER",
        "isStatic": false,
        "returnType": "0x0204"
      },
      {
        "kind": "Property",
        "name": "NOTEQUAL",
        "isStatic": false,
        "returnType": "0x0205"
      },
      {
        "kind": "Property",
        "name": "GEQUAL",
        "isStatic": false,
        "returnType": "0x0206"
      },
      {
        "kind": "Property",
        "name": "ALWAYS",
        "isStatic": false,
        "returnType": "0x0207"
      },
      {
        "kind": "Property",
        "name": "KEEP",
        "isStatic": false,
        "returnType": "0x1E00"
      },
      {
        "kind": "Property",
        "name": "REPLACE",
        "isStatic": false,
        "returnType": "0x1E01"
      },
      {
        "kind": "Property",
        "name": "INCR",
        "isStatic": false,
        "returnType": "0x1E02"
      },
      {
        "kind": "Property",
        "name": "DECR",
        "isStatic": false,
        "returnType": "0x1E03"
      },
      {
        "kind": "Property",
        "name": "INVERT",
        "isStatic": false,
        "returnType": "0x150A"
      },
      {
        "kind": "Property",
        "name": "INCR_WRAP",
        "isStatic": false,
        "returnType": "0x8507"
      },
      {
        "kind": "Property",
        "name": "DECR_WRAP",
        "isStatic": false,
        "returnType": "0x8508"
      },
      {
        "kind": "Property",
        "name": "VENDOR",
        "isStatic": false,
        "returnType": "0x1F00"
      },
      {
        "kind": "Property",
        "name": "RENDERER",
        "isStatic": false,
        "returnType": "0x1F01"
      },
      {
        "kind": "Property",
        "name": "VERSION",
        "isStatic": false,
        "returnType": "0x1F02"
      },
      {
        "kind": "Property",
        "name": "NEAREST",
        "isStatic": false,
        "returnType": "0x2600"
      },
      {
        "kind": "Property",
        "name": "LINEAR",
        "isStatic": false,
        "returnType": "0x2601"
      },
      {
        "kind": "Property",
        "name": "NEAREST_MIPMAP_NEAREST",
        "isStatic": false,
        "returnType": "0x2700"
      },
      {
        "kind": "Property",
        "name": "LINEAR_MIPMAP_NEAREST",
        "isStatic": false,
        "returnType": "0x2701"
      },
      {
        "kind": "Property",
        "name": "NEAREST_MIPMAP_LINEAR",
        "isStatic": false,
        "returnType": "0x2702"
      },
      {
        "kind": "Property",
        "name": "LINEAR_MIPMAP_LINEAR",
        "isStatic": false,
        "returnType": "0x2703"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MAG_FILTER",
        "isStatic": false,
        "returnType": "0x2800"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_MIN_FILTER",
        "isStatic": false,
        "returnType": "0x2801"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_WRAP_S",
        "isStatic": false,
        "returnType": "0x2802"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_WRAP_T",
        "isStatic": false,
        "returnType": "0x2803"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_2D",
        "isStatic": false,
        "returnType": "0x0DE1"
      },
      {
        "kind": "Property",
        "name": "TEXTURE",
        "isStatic": false,
        "returnType": "0x1702"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP",
        "isStatic": false,
        "returnType": "0x8513"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_BINDING_CUBE_MAP",
        "isStatic": false,
        "returnType": "0x8514"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_POSITIVE_X",
        "isStatic": false,
        "returnType": "0x8515"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_X",
        "isStatic": false,
        "returnType": "0x8516"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_POSITIVE_Y",
        "isStatic": false,
        "returnType": "0x8517"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_Y",
        "isStatic": false,
        "returnType": "0x8518"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_POSITIVE_Z",
        "isStatic": false,
        "returnType": "0x8519"
      },
      {
        "kind": "Property",
        "name": "TEXTURE_CUBE_MAP_NEGATIVE_Z",
        "isStatic": false,
        "returnType": "0x851A"
      },
      {
        "kind": "Property",
        "name": "MAX_CUBE_MAP_TEXTURE_SIZE",
        "isStatic": false,
        "returnType": "0x851C"
      },
      {
        "kind": "Property",
        "name": "TEXTURE0",
        "isStatic": false,
        "returnType": "0x84C0"
      },
      {
        "kind": "Property",
        "name": "TEXTURE1",
        "isStatic": false,
        "returnType": "0x84C1"
      },
      {
        "kind": "Property",
        "name": "TEXTURE2",
        "isStatic": false,
        "returnType": "0x84C2"
      },
      {
        "kind": "Property",
        "name": "TEXTURE3",
        "isStatic": false,
        "returnType": "0x84C3"
      },
      {
        "kind": "Property",
        "name": "TEXTURE4",
        "isStatic": false,
        "returnType": "0x84C4"
      },
      {
        "kind": "Property",
        "name": "TEXTURE5",
        "isStatic": false,
        "returnType": "0x84C5"
      },
      {
        "kind": "Property",
        "name": "TEXTURE6",
        "isStatic": false,
        "returnType": "0x84C6"
      },
      {
        "kind": "Property",
        "name": "TEXTURE7",
        "isStatic": false,
        "returnType": "0x84C7"
      },
      {
        "kind": "Property",
        "name": "TEXTURE8",
        "isStatic": false,
        "returnType": "0x84C8"
      },
      {
        "kind": "Property",
        "name": "TEXTURE9",
        "isStatic": false,
        "returnType": "0x84C9"
      },
      {
        "kind": "Property",
        "name": "TEXTURE10",
        "isStatic": false,
        "returnType": "0x84CA"
      },
      {
        "kind": "Property",
        "name": "TEXTURE11",
        "isStatic": false,
        "returnType": "0x84CB"
      },
      {
        "kind": "Property",
        "name": "TEXTURE12",
        "isStatic": false,
        "returnType": "0x84CC"
      },
      {
        "kind": "Property",
        "name": "TEXTURE13",
        "isStatic": false,
        "returnType": "0x84CD"
      },
      {
        "kind": "Property",
        "name": "TEXTURE14",
        "isStatic": false,
        "returnType": "0x84CE"
      },
      {
        "kind": "Property",
        "name": "TEXTURE15",
        "isStatic": false,
        "returnType": "0x84CF"
      },
      {
        "kind": "Property",
        "name": "TEXTURE16",
        "isStatic": false,
        "returnType": "0x84D0"
      },
      {
        "kind": "Property",
        "name": "TEXTURE17",
        "isStatic": false,
        "returnType": "0x84D1"
      },
      {
        "kind": "Property",
        "name": "TEXTURE18",
        "isStatic": false,
        "returnType": "0x84D2"
      },
      {
        "kind": "Property",
        "name": "TEXTURE19",
        "isStatic": false,
        "returnType": "0x84D3"
      },
      {
        "kind": "Property",
        "name": "TEXTURE20",
        "isStatic": false,
        "returnType": "0x84D4"
      },
      {
        "kind": "Property",
        "name": "TEXTURE21",
        "isStatic": false,
        "returnType": "0x84D5"
      },
      {
        "kind": "Property",
        "name": "TEXTURE22",
        "isStatic": false,
        "returnType": "0x84D6"
      },
      {
        "kind": "Property",
        "name": "TEXTURE23",
        "isStatic": false,
        "returnType": "0x84D7"
      },
      {
        "kind": "Property",
        "name": "TEXTURE24",
        "isStatic": false,
        "returnType": "0x84D8"
      },
      {
        "kind": "Property",
        "name": "TEXTURE25",
        "isStatic": false,
        "returnType": "0x84D9"
      },
      {
        "kind": "Property",
        "name": "TEXTURE26",
        "isStatic": false,
        "returnType": "0x84DA"
      },
      {
        "kind": "Property",
        "name": "TEXTURE27",
        "isStatic": false,
        "returnType": "0x84DB"
      },
      {
        "kind": "Property",
        "name": "TEXTURE28",
        "isStatic": false,
        "returnType": "0x84DC"
      },
      {
        "kind": "Property",
        "name": "TEXTURE29",
        "isStatic": false,
        "returnType": "0x84DD"
      },
      {
        "kind": "Property",
        "name": "TEXTURE30",
        "isStatic": false,
        "returnType": "0x84DE"
      },
      {
        "kind": "Property",
        "name": "TEXTURE31",
        "isStatic": false,
        "returnType": "0x84DF"
      },
      {
        "kind": "Property",
        "name": "ACTIVE_TEXTURE",
        "isStatic": false,
        "returnType": "0x84E0"
      },
      {
        "kind": "Property",
        "name": "REPEAT",
        "isStatic": false,
        "returnType": "0x2901"
      },
      {
        "kind": "Property",
        "name": "CLAMP_TO_EDGE",
        "isStatic": false,
        "returnType": "0x812F"
      },
      {
        "kind": "Property",
        "name": "MIRRORED_REPEAT",
        "isStatic": false,
        "returnType": "0x8370"
      },
      {
        "kind": "Property",
        "name": "FLOAT_VEC2",
        "isStatic": false,
        "returnType": "0x8B50"
      },
      {
        "kind": "Property",
        "name": "FLOAT_VEC3",
        "isStatic": false,
        "returnType": "0x8B51"
      },
      {
        "kind": "Property",
        "name": "FLOAT_VEC4",
        "isStatic": false,
        "returnType": "0x8B52"
      },
      {
        "kind": "Property",
        "name": "INT_VEC2",
        "isStatic": false,
        "returnType": "0x8B53"
      },
      {
        "kind": "Property",
        "name": "INT_VEC3",
        "isStatic": false,
        "returnType": "0x8B54"
      },
      {
        "kind": "Property",
        "name": "INT_VEC4",
        "isStatic": false,
        "returnType": "0x8B55"
      },
      {
        "kind": "Property",
        "name": "BOOL",
        "isStatic": false,
        "returnType": "0x8B56"
      },
      {
        "kind": "Property",
        "name": "BOOL_VEC2",
        "isStatic": false,
        "returnType": "0x8B57"
      },
      {
        "kind": "Property",
        "name": "BOOL_VEC3",
        "isStatic": false,
        "returnType": "0x8B58"
      },
      {
        "kind": "Property",
        "name": "BOOL_VEC4",
        "isStatic": false,
        "returnType": "0x8B59"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT2",
        "isStatic": false,
        "returnType": "0x8B5A"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT3",
        "isStatic": false,
        "returnType": "0x8B5B"
      },
      {
        "kind": "Property",
        "name": "FLOAT_MAT4",
        "isStatic": false,
        "returnType": "0x8B5C"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_2D",
        "isStatic": false,
        "returnType": "0x8B5E"
      },
      {
        "kind": "Property",
        "name": "SAMPLER_CUBE",
        "isStatic": false,
        "returnType": "0x8B60"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_ENABLED",
        "isStatic": false,
        "returnType": "0x8622"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_SIZE",
        "isStatic": false,
        "returnType": "0x8623"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_STRIDE",
        "isStatic": false,
        "returnType": "0x8624"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_TYPE",
        "isStatic": false,
        "returnType": "0x8625"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_NORMALIZED",
        "isStatic": false,
        "returnType": "0x886A"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_POINTER",
        "isStatic": false,
        "returnType": "0x8645"
      },
      {
        "kind": "Property",
        "name": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x889F"
      },
      {
        "kind": "Property",
        "name": "IMPLEMENTATION_COLOR_READ_TYPE",
        "isStatic": false,
        "returnType": "0x8B9A"
      },
      {
        "kind": "Property",
        "name": "IMPLEMENTATION_COLOR_READ_FORMAT",
        "isStatic": false,
        "returnType": "0x8B9B"
      },
      {
        "kind": "Property",
        "name": "COMPILE_STATUS",
        "isStatic": false,
        "returnType": "0x8B81"
      },
      {
        "kind": "Property",
        "name": "LOW_FLOAT",
        "isStatic": false,
        "returnType": "0x8DF0"
      },
      {
        "kind": "Property",
        "name": "MEDIUM_FLOAT",
        "isStatic": false,
        "returnType": "0x8DF1"
      },
      {
        "kind": "Property",
        "name": "HIGH_FLOAT",
        "isStatic": false,
        "returnType": "0x8DF2"
      },
      {
        "kind": "Property",
        "name": "LOW_INT",
        "isStatic": false,
        "returnType": "0x8DF3"
      },
      {
        "kind": "Property",
        "name": "MEDIUM_INT",
        "isStatic": false,
        "returnType": "0x8DF4"
      },
      {
        "kind": "Property",
        "name": "HIGH_INT",
        "isStatic": false,
        "returnType": "0x8DF5"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER",
        "isStatic": false,
        "returnType": "0x8D40"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER",
        "isStatic": false,
        "returnType": "0x8D41"
      },
      {
        "kind": "Property",
        "name": "RGBA4",
        "isStatic": false,
        "returnType": "0x8056"
      },
      {
        "kind": "Property",
        "name": "RGB5_A1",
        "isStatic": false,
        "returnType": "0x8057"
      },
      {
        "kind": "Property",
        "name": "RGBA8",
        "isStatic": false,
        "returnType": "0x8058"
      },
      {
        "kind": "Property",
        "name": "RGB565",
        "isStatic": false,
        "returnType": "0x8D62"
      },
      {
        "kind": "Property",
        "name": "DEPTH_COMPONENT16",
        "isStatic": false,
        "returnType": "0x81A5"
      },
      {
        "kind": "Property",
        "name": "STENCIL_INDEX8",
        "isStatic": false,
        "returnType": "0x8D48"
      },
      {
        "kind": "Property",
        "name": "DEPTH_STENCIL",
        "isStatic": false,
        "returnType": "0x84F9"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_WIDTH",
        "isStatic": false,
        "returnType": "0x8D42"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_HEIGHT",
        "isStatic": false,
        "returnType": "0x8D43"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_INTERNAL_FORMAT",
        "isStatic": false,
        "returnType": "0x8D44"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_RED_SIZE",
        "isStatic": false,
        "returnType": "0x8D50"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_GREEN_SIZE",
        "isStatic": false,
        "returnType": "0x8D51"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_BLUE_SIZE",
        "isStatic": false,
        "returnType": "0x8D52"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_ALPHA_SIZE",
        "isStatic": false,
        "returnType": "0x8D53"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_DEPTH_SIZE",
        "isStatic": false,
        "returnType": "0x8D54"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_STENCIL_SIZE",
        "isStatic": false,
        "returnType": "0x8D55"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
        "isStatic": false,
        "returnType": "0x8CD0"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
        "isStatic": false,
        "returnType": "0x8CD1"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
        "isStatic": false,
        "returnType": "0x8CD2"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",
        "isStatic": false,
        "returnType": "0x8CD3"
      },
      {
        "kind": "Property",
        "name": "COLOR_ATTACHMENT0",
        "isStatic": false,
        "returnType": "0x8CE0"
      },
      {
        "kind": "Property",
        "name": "DEPTH_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8D00"
      },
      {
        "kind": "Property",
        "name": "STENCIL_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8D20"
      },
      {
        "kind": "Property",
        "name": "DEPTH_STENCIL_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x821A"
      },
      {
        "kind": "Property",
        "name": "NONE",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_COMPLETE",
        "isStatic": false,
        "returnType": "0x8CD5"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8CD6"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
        "isStatic": false,
        "returnType": "0x8CD7"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
        "isStatic": false,
        "returnType": "0x8CD9"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_UNSUPPORTED",
        "isStatic": false,
        "returnType": "0x8CDD"
      },
      {
        "kind": "Property",
        "name": "FRAMEBUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8CA6"
      },
      {
        "kind": "Property",
        "name": "RENDERBUFFER_BINDING",
        "isStatic": false,
        "returnType": "0x8CA7"
      },
      {
        "kind": "Property",
        "name": "MAX_RENDERBUFFER_SIZE",
        "isStatic": false,
        "returnType": "0x84E8"
      },
      {
        "kind": "Property",
        "name": "INVALID_FRAMEBUFFER_OPERATION",
        "isStatic": false,
        "returnType": "0x0506"
      },
      {
        "kind": "Property",
        "name": "UNPACK_FLIP_Y_WEBGL",
        "isStatic": false,
        "returnType": "0x9240"
      },
      {
        "kind": "Property",
        "name": "UNPACK_PREMULTIPLY_ALPHA_WEBGL",
        "isStatic": false,
        "returnType": "0x9241"
      },
      {
        "kind": "Property",
        "name": "CONTEXT_LOST_WEBGL",
        "isStatic": false,
        "returnType": "0x9242"
      },
      {
        "kind": "Property",
        "name": "UNPACK_COLORSPACE_CONVERSION_WEBGL",
        "isStatic": false,
        "returnType": "0x9243"
      },
      {
        "kind": "Property",
        "name": "BROWSER_DEFAULT_WEBGL",
        "isStatic": false,
        "returnType": "0x9244"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLRenderingContext}) (new [] WebGLRenderingContext) (property {:DEPTH_BUFFER_BIT 0x00000100}) (property {:STENCIL_BUFFER_BIT 0x00000400}) (property {:COLOR_BUFFER_BIT 0x00004000}) (property {:POINTS 0x0000}) (property {:LINES 0x0001}) (property {:LINE_LOOP 0x0002}) (property {:LINE_STRIP 0x0003}) (property {:TRIANGLES 0x0004}) (property {:TRIANGLE_STRIP 0x0005}) (property {:TRIANGLE_FAN 0x0006}) (property {:ZERO 0}) (property {:ONE 1}) (property {:SRC_COLOR 0x0300}) (property {:ONE_MINUS_SRC_COLOR 0x0301}) (property {:SRC_ALPHA 0x0302}) (property {:ONE_MINUS_SRC_ALPHA 0x0303}) (property {:DST_ALPHA 0x0304}) (property {:ONE_MINUS_DST_ALPHA 0x0305}) (property {:DST_COLOR 0x0306}) (property {:ONE_MINUS_DST_COLOR 0x0307}) (property {:SRC_ALPHA_SATURATE 0x0308}) (property {:FUNC_ADD 0x8006}) (property {:BLEND_EQUATION 0x8009}) (property {:BLEND_EQUATION_RGB 0x8009}) (property {:BLEND_EQUATION_ALPHA 0x883D}) (property {:FUNC_SUBTRACT 0x800A}) (property {:FUNC_REVERSE_SUBTRACT 0x800B}) (property {:BLEND_DST_RGB 0x80C8}) (property {:BLEND_SRC_RGB 0x80C9}) (property {:BLEND_DST_ALPHA 0x80CA}) (property {:BLEND_SRC_ALPHA 0x80CB}) (property {:CONSTANT_COLOR 0x8001}) (property {:ONE_MINUS_CONSTANT_COLOR 0x8002}) (property {:CONSTANT_ALPHA 0x8003}) (property {:ONE_MINUS_CONSTANT_ALPHA 0x8004}) (property {:BLEND_COLOR 0x8005}) (property {:ARRAY_BUFFER 0x8892}) (property {:ELEMENT_ARRAY_BUFFER 0x8893}) (property {:ARRAY_BUFFER_BINDING 0x8894}) (property {:ELEMENT_ARRAY_BUFFER_BINDING 0x8895}) (property {:STREAM_DRAW 0x88E0}) (property {:STATIC_DRAW 0x88E4}) (property {:DYNAMIC_DRAW 0x88E8}) (property {:BUFFER_SIZE 0x8764}) (property {:BUFFER_USAGE 0x8765}) (property {:CURRENT_VERTEX_ATTRIB 0x8626}) (property {:FRONT 0x0404}) (property {:BACK 0x0405}) (property {:FRONT_AND_BACK 0x0408}) (property {:CULL_FACE 0x0B44}) (property {:BLEND 0x0BE2}) (property {:DITHER 0x0BD0}) (property {:STENCIL_TEST 0x0B90}) (property {:DEPTH_TEST 0x0B71}) (property {:SCISSOR_TEST 0x0C11}) (property {:POLYGON_OFFSET_FILL 0x8037}) (property {:SAMPLE_ALPHA_TO_COVERAGE 0x809E}) (property {:SAMPLE_COVERAGE 0x80A0}) (property {:NO_ERROR 0}) (property {:INVALID_ENUM 0x0500}) (property {:INVALID_VALUE 0x0501}) (property {:INVALID_OPERATION 0x0502}) (property {:OUT_OF_MEMORY 0x0505}) (property {:CW 0x0900}) (property {:CCW 0x0901}) (property {:LINE_WIDTH 0x0B21}) (property {:ALIASED_POINT_SIZE_RANGE 0x846D}) (property {:ALIASED_LINE_WIDTH_RANGE 0x846E}) (property {:CULL_FACE_MODE 0x0B45}) (property {:FRONT_FACE 0x0B46}) (property {:DEPTH_RANGE 0x0B70}) (property {:DEPTH_WRITEMASK 0x0B72}) (property {:DEPTH_CLEAR_VALUE 0x0B73}) (property {:DEPTH_FUNC 0x0B74}) (property {:STENCIL_CLEAR_VALUE 0x0B91}) (property {:STENCIL_FUNC 0x0B92}) (property {:STENCIL_FAIL 0x0B94}) (property {:STENCIL_PASS_DEPTH_FAIL 0x0B95}) (property {:STENCIL_PASS_DEPTH_PASS 0x0B96}) (property {:STENCIL_REF 0x0B97}) (property {:STENCIL_VALUE_MASK 0x0B93}) (property {:STENCIL_WRITEMASK 0x0B98}) (property {:STENCIL_BACK_FUNC 0x8800}) (property {:STENCIL_BACK_FAIL 0x8801}) (property {:STENCIL_BACK_PASS_DEPTH_FAIL 0x8802}) (property {:STENCIL_BACK_PASS_DEPTH_PASS 0x8803}) (property {:STENCIL_BACK_REF 0x8CA3}) (property {:STENCIL_BACK_VALUE_MASK 0x8CA4}) (property {:STENCIL_BACK_WRITEMASK 0x8CA5}) (property {:VIEWPORT 0x0BA2}) (property {:SCISSOR_BOX 0x0C10}) (property {:COLOR_CLEAR_VALUE 0x0C22}) (property {:COLOR_WRITEMASK 0x0C23}) (property {:UNPACK_ALIGNMENT 0x0CF5}) (property {:PACK_ALIGNMENT 0x0D05}) (property {:MAX_TEXTURE_SIZE 0x0D33}) (property {:MAX_VIEWPORT_DIMS 0x0D3A}) (property {:SUBPIXEL_BITS 0x0D50}) (property {:RED_BITS 0x0D52}) (property {:GREEN_BITS 0x0D53}) (property {:BLUE_BITS 0x0D54}) (property {:ALPHA_BITS 0x0D55}) (property {:DEPTH_BITS 0x0D56}) (property {:STENCIL_BITS 0x0D57}) (property {:POLYGON_OFFSET_UNITS 0x2A00}) (property {:POLYGON_OFFSET_FACTOR 0x8038}) (property {:TEXTURE_BINDING_2D 0x8069}) (property {:SAMPLE_BUFFERS 0x80A8}) (property {:SAMPLES 0x80A9}) (property {:SAMPLE_COVERAGE_VALUE 0x80AA}) (property {:SAMPLE_COVERAGE_INVERT 0x80AB}) (property {:COMPRESSED_TEXTURE_FORMATS 0x86A3}) (property {:DONT_CARE 0x1100}) (property {:FASTEST 0x1101}) (property {:NICEST 0x1102}) (property {:GENERATE_MIPMAP_HINT 0x8192}) (property {:BYTE 0x1400}) (property {:UNSIGNED_BYTE 0x1401}) (property {:SHORT 0x1402}) (property {:UNSIGNED_SHORT 0x1403}) (property {:INT 0x1404}) (property {:UNSIGNED_INT 0x1405}) (property {:FLOAT 0x1406}) (property {:DEPTH_COMPONENT 0x1902}) (property {:ALPHA 0x1906}) (property {:RGB 0x1907}) (property {:RGBA 0x1908}) (property {:LUMINANCE 0x1909}) (property {:LUMINANCE_ALPHA 0x190A}) (property {:UNSIGNED_SHORT_4_4_4_4 0x8033}) (property {:UNSIGNED_SHORT_5_5_5_1 0x8034}) (property {:UNSIGNED_SHORT_5_6_5 0x8363}) (property {:FRAGMENT_SHADER 0x8B30}) (property {:VERTEX_SHADER 0x8B31}) (property {:MAX_VERTEX_ATTRIBS 0x8869}) (property {:MAX_VERTEX_UNIFORM_VECTORS 0x8DFB}) (property {:MAX_VARYING_VECTORS 0x8DFC}) (property {:MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D}) (property {:MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C}) (property {:MAX_TEXTURE_IMAGE_UNITS 0x8872}) (property {:MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD}) (property {:SHADER_TYPE 0x8B4F}) (property {:DELETE_STATUS 0x8B80}) (property {:LINK_STATUS 0x8B82}) (property {:VALIDATE_STATUS 0x8B83}) (property {:ATTACHED_SHADERS 0x8B85}) (property {:ACTIVE_UNIFORMS 0x8B86}) (property {:ACTIVE_ATTRIBUTES 0x8B89}) (property {:SHADING_LANGUAGE_VERSION 0x8B8C}) (property {:CURRENT_PROGRAM 0x8B8D}) (property {:NEVER 0x0200}) (property {:LESS 0x0201}) (property {:EQUAL 0x0202}) (property {:LEQUAL 0x0203}) (property {:GREATER 0x0204}) (property {:NOTEQUAL 0x0205}) (property {:GEQUAL 0x0206}) (property {:ALWAYS 0x0207}) (property {:KEEP 0x1E00}) (property {:REPLACE 0x1E01}) (property {:INCR 0x1E02}) (property {:DECR 0x1E03}) (property {:INVERT 0x150A}) (property {:INCR_WRAP 0x8507}) (property {:DECR_WRAP 0x8508}) (property {:VENDOR 0x1F00}) (property {:RENDERER 0x1F01}) (property {:VERSION 0x1F02}) (property {:NEAREST 0x2600}) (property {:LINEAR 0x2601}) (property {:NEAREST_MIPMAP_NEAREST 0x2700}) (property {:LINEAR_MIPMAP_NEAREST 0x2701}) (property {:NEAREST_MIPMAP_LINEAR 0x2702}) (property {:LINEAR_MIPMAP_LINEAR 0x2703}) (property {:TEXTURE_MAG_FILTER 0x2800}) (property {:TEXTURE_MIN_FILTER 0x2801}) (property {:TEXTURE_WRAP_S 0x2802}) (property {:TEXTURE_WRAP_T 0x2803}) (property {:TEXTURE_2D 0x0DE1}) (property {:TEXTURE 0x1702}) (property {:TEXTURE_CUBE_MAP 0x8513}) (property {:TEXTURE_BINDING_CUBE_MAP 0x8514}) (property {:TEXTURE_CUBE_MAP_POSITIVE_X 0x8515}) (property {:TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516}) (property {:TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517}) (property {:TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518}) (property {:TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519}) (property {:TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A}) (property {:MAX_CUBE_MAP_TEXTURE_SIZE 0x851C}) (property {:TEXTURE0 0x84C0}) (property {:TEXTURE1 0x84C1}) (property {:TEXTURE2 0x84C2}) (property {:TEXTURE3 0x84C3}) (property {:TEXTURE4 0x84C4}) (property {:TEXTURE5 0x84C5}) (property {:TEXTURE6 0x84C6}) (property {:TEXTURE7 0x84C7}) (property {:TEXTURE8 0x84C8}) (property {:TEXTURE9 0x84C9}) (property {:TEXTURE10 0x84CA}) (property {:TEXTURE11 0x84CB}) (property {:TEXTURE12 0x84CC}) (property {:TEXTURE13 0x84CD}) (property {:TEXTURE14 0x84CE}) (property {:TEXTURE15 0x84CF}) (property {:TEXTURE16 0x84D0}) (property {:TEXTURE17 0x84D1}) (property {:TEXTURE18 0x84D2}) (property {:TEXTURE19 0x84D3}) (property {:TEXTURE20 0x84D4}) (property {:TEXTURE21 0x84D5}) (property {:TEXTURE22 0x84D6}) (property {:TEXTURE23 0x84D7}) (property {:TEXTURE24 0x84D8}) (property {:TEXTURE25 0x84D9}) (property {:TEXTURE26 0x84DA}) (property {:TEXTURE27 0x84DB}) (property {:TEXTURE28 0x84DC}) (property {:TEXTURE29 0x84DD}) (property {:TEXTURE30 0x84DE}) (property {:TEXTURE31 0x84DF}) (property {:ACTIVE_TEXTURE 0x84E0}) (property {:REPEAT 0x2901}) (property {:CLAMP_TO_EDGE 0x812F}) (property {:MIRRORED_REPEAT 0x8370}) (property {:FLOAT_VEC2 0x8B50}) (property {:FLOAT_VEC3 0x8B51}) (property {:FLOAT_VEC4 0x8B52}) (property {:INT_VEC2 0x8B53}) (property {:INT_VEC3 0x8B54}) (property {:INT_VEC4 0x8B55}) (property {:BOOL 0x8B56}) (property {:BOOL_VEC2 0x8B57}) (property {:BOOL_VEC3 0x8B58}) (property {:BOOL_VEC4 0x8B59}) (property {:FLOAT_MAT2 0x8B5A}) (property {:FLOAT_MAT3 0x8B5B}) (property {:FLOAT_MAT4 0x8B5C}) (property {:SAMPLER_2D 0x8B5E}) (property {:SAMPLER_CUBE 0x8B60}) (property {:VERTEX_ATTRIB_ARRAY_ENABLED 0x8622}) (property {:VERTEX_ATTRIB_ARRAY_SIZE 0x8623}) (property {:VERTEX_ATTRIB_ARRAY_STRIDE 0x8624}) (property {:VERTEX_ATTRIB_ARRAY_TYPE 0x8625}) (property {:VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A}) (property {:VERTEX_ATTRIB_ARRAY_POINTER 0x8645}) (property {:VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F}) (property {:IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A}) (property {:IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B}) (property {:COMPILE_STATUS 0x8B81}) (property {:LOW_FLOAT 0x8DF0}) (property {:MEDIUM_FLOAT 0x8DF1}) (property {:HIGH_FLOAT 0x8DF2}) (property {:LOW_INT 0x8DF3}) (property {:MEDIUM_INT 0x8DF4}) (property {:HIGH_INT 0x8DF5}) (property {:FRAMEBUFFER 0x8D40}) (property {:RENDERBUFFER 0x8D41}) (property {:RGBA4 0x8056}) (property {:RGB5_A1 0x8057}) (property {:RGBA8 0x8058}) (property {:RGB565 0x8D62}) (property {:DEPTH_COMPONENT16 0x81A5}) (property {:STENCIL_INDEX8 0x8D48}) (property {:DEPTH_STENCIL 0x84F9}) (property {:RENDERBUFFER_WIDTH 0x8D42}) (property {:RENDERBUFFER_HEIGHT 0x8D43}) (property {:RENDERBUFFER_INTERNAL_FORMAT 0x8D44}) (property {:RENDERBUFFER_RED_SIZE 0x8D50}) (property {:RENDERBUFFER_GREEN_SIZE 0x8D51}) (property {:RENDERBUFFER_BLUE_SIZE 0x8D52}) (property {:RENDERBUFFER_ALPHA_SIZE 0x8D53}) (property {:RENDERBUFFER_DEPTH_SIZE 0x8D54}) (property {:RENDERBUFFER_STENCIL_SIZE 0x8D55}) (property {:FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0}) (property {:FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1}) (property {:FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2}) (property {:FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3}) (property {:COLOR_ATTACHMENT0 0x8CE0}) (property {:DEPTH_ATTACHMENT 0x8D00}) (property {:STENCIL_ATTACHMENT 0x8D20}) (property {:DEPTH_STENCIL_ATTACHMENT 0x821A}) (property {:NONE 0}) (property {:FRAMEBUFFER_COMPLETE 0x8CD5}) (property {:FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6}) (property {:FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7}) (property {:FRAMEBUFFER_INCOMPLETE_DIMENSIONS 0x8CD9}) (property {:FRAMEBUFFER_UNSUPPORTED 0x8CDD}) (property {:FRAMEBUFFER_BINDING 0x8CA6}) (property {:RENDERBUFFER_BINDING 0x8CA7}) (property {:MAX_RENDERBUFFER_SIZE 0x84E8}) (property {:INVALID_FRAMEBUFFER_OPERATION 0x0506}) (property {:UNPACK_FLIP_Y_WEBGL 0x9240}) (property {:UNPACK_PREMULTIPLY_ALPHA_WEBGL 0x9241}) (property {:CONTEXT_LOST_WEBGL 0x9242}) (property {:UNPACK_COLORSPACE_CONVERSION_WEBGL 0x9243}) (property {:BROWSER_DEFAULT_WEBGL 0x9244})}"
  },
  "WebGLSampler": {
    "kind": "Property",
    "name": "WebGLSampler",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLSampler"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLSampler"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLSampler"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLSampler"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLSampler}) (new [] WebGLSampler)}"
  },
  "WebGLShader": {
    "kind": "Property",
    "name": "WebGLShader",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLShader"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLShader"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLShader"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLShader"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLShader}) (new [] WebGLShader)}"
  },
  "WebGLShaderPrecisionFormat": {
    "kind": "Property",
    "name": "WebGLShaderPrecisionFormat",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLShaderPrecisionFormat"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLShaderPrecisionFormat"
      },
      {
        "kind": "Property",
        "name": "precision",
        "isStatic": true,
        "returnType": "GLint"
      },
      {
        "kind": "Property",
        "name": "rangeMax",
        "isStatic": true,
        "returnType": "GLint"
      },
      {
        "kind": "Property",
        "name": "rangeMin",
        "isStatic": true,
        "returnType": "GLint"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLShaderPrecisionFormat"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLShaderPrecisionFormat"
      },
      {
        "kind": "Property",
        "name": "precision",
        "isStatic": true,
        "returnType": "GLint"
      },
      {
        "kind": "Property",
        "name": "rangeMax",
        "isStatic": true,
        "returnType": "GLint"
      },
      {
        "kind": "Property",
        "name": "rangeMin",
        "isStatic": true,
        "returnType": "GLint"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLShaderPrecisionFormat}) (new [] WebGLShaderPrecisionFormat)}"
  },
  "WebGLSync": {
    "kind": "Property",
    "name": "WebGLSync",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLSync"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLSync"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLSync"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLSync"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLSync}) (new [] WebGLSync)}"
  },
  "WebGLTexture": {
    "kind": "Property",
    "name": "WebGLTexture",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLTexture"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLTexture"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLTexture"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLTexture"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLTexture}) (new [] WebGLTexture)}"
  },
  "WebGLTransformFeedback": {
    "kind": "Property",
    "name": "WebGLTransformFeedback",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLTransformFeedback"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLTransformFeedback"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLTransformFeedback"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLTransformFeedback"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLTransformFeedback}) (new [] WebGLTransformFeedback)}"
  },
  "WebGLUniformLocation": {
    "kind": "Property",
    "name": "WebGLUniformLocation",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLUniformLocation"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLUniformLocation"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLUniformLocation"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLUniformLocation"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLUniformLocation}) (new [] WebGLUniformLocation)}"
  },
  "WebGLVertexArrayObject": {
    "kind": "Property",
    "name": "WebGLVertexArrayObject",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLVertexArrayObject"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLVertexArrayObject"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebGLVertexArrayObject"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebGLVertexArrayObject"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebGLVertexArrayObject}) (new [] WebGLVertexArrayObject)}"
  },
  "WebSocket": {
    "kind": "Property",
    "name": "WebSocket",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[url<(or string URL)> (optional protocols<(or string (array string))>)]",
        "returnType": "WebSocket"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebSocket"
      },
      {
        "kind": "Property",
        "name": "CONNECTING",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "OPEN",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "CLOSING",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "CLOSED",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "binaryType",
        "isStatic": true,
        "returnType": "BinaryType"
      },
      {
        "kind": "Property",
        "name": "bufferedAmount",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "extensions",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onclose",
        "isStatic": true,
        "returnType": "(or (list (function [this<WebSocket> ev<CloseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<WebSocket> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<WebSocket> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onopen",
        "isStatic": true,
        "returnType": "(or (list (function [this<WebSocket> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "protocol",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "CONNECTING",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "OPEN",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "CLOSING",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "CLOSED",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[(optional code<number>) (optional reason<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "send",
        "isStatic": false,
        "params": "[data<(or string ArrayBufferLike Blob ArrayBufferView)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<WebSocket> ev<(get WebSocketEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<WebSocket> ev<(get WebSocketEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[url<(or string URL)> (optional protocols<(or string (array string))>)]",
        "returnType": "WebSocket"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebSocket"
      },
      {
        "kind": "Property",
        "name": "CONNECTING",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "OPEN",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "CLOSING",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "CLOSED",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "binaryType",
        "isStatic": true,
        "returnType": "BinaryType"
      },
      {
        "kind": "Property",
        "name": "bufferedAmount",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "extensions",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onclose",
        "isStatic": true,
        "returnType": "(or (list (function [this<WebSocket> ev<CloseEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<WebSocket> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<WebSocket> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onopen",
        "isStatic": true,
        "returnType": "(or (list (function [this<WebSocket> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "protocol",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "CONNECTING",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "OPEN",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "CLOSING",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "CLOSED",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[(optional code<number>) (optional reason<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "send",
        "isStatic": false,
        "params": "[data<(or string ArrayBufferLike Blob ArrayBufferView)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<WebSocket> ev<(get WebSocketEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<WebSocket> ev<(get WebSocketEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebSocket}) (new [url<(or string URL)> (optional protocols<(or string (array string))>)] WebSocket) (property {:CONNECTING 0}) (property {:OPEN 1}) (property {:CLOSING 2}) (property {:CLOSED 3})}"
  },
  "WebTransport": {
    "kind": "Property",
    "name": "WebTransport",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[url<(or string URL)> (optional options<WebTransportOptions>)]",
        "returnType": "WebTransport"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebTransport"
      },
      {
        "kind": "Property",
        "name": "closed",
        "isStatic": true,
        "returnType": "Promise<WebTransportCloseInfo>"
      },
      {
        "kind": "Property",
        "name": "datagrams",
        "isStatic": true,
        "returnType": "WebTransportDatagramDuplexStream"
      },
      {
        "kind": "Property",
        "name": "incomingBidirectionalStreams",
        "isStatic": true,
        "returnType": "ReadableStream"
      },
      {
        "kind": "Property",
        "name": "incomingUnidirectionalStreams",
        "isStatic": true,
        "returnType": "ReadableStream"
      },
      {
        "kind": "Property",
        "name": "ready",
        "isStatic": true,
        "returnType": "Promise<undefined>"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[(optional closeInfo<WebTransportCloseInfo>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createBidirectionalStream",
        "isStatic": false,
        "params": "[(optional options<WebTransportSendStreamOptions>)]",
        "returnType": "Promise<WebTransportBidirectionalStream>"
      },
      {
        "kind": "Method",
        "name": "createUnidirectionalStream",
        "isStatic": false,
        "params": "[(optional options<WebTransportSendStreamOptions>)]",
        "returnType": "Promise<WritableStream>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[url<(or string URL)> (optional options<WebTransportOptions>)]",
        "returnType": "WebTransport"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebTransport"
      },
      {
        "kind": "Property",
        "name": "closed",
        "isStatic": true,
        "returnType": "Promise<WebTransportCloseInfo>"
      },
      {
        "kind": "Property",
        "name": "datagrams",
        "isStatic": true,
        "returnType": "WebTransportDatagramDuplexStream"
      },
      {
        "kind": "Property",
        "name": "incomingBidirectionalStreams",
        "isStatic": true,
        "returnType": "ReadableStream"
      },
      {
        "kind": "Property",
        "name": "incomingUnidirectionalStreams",
        "isStatic": true,
        "returnType": "ReadableStream"
      },
      {
        "kind": "Property",
        "name": "ready",
        "isStatic": true,
        "returnType": "Promise<undefined>"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[(optional closeInfo<WebTransportCloseInfo>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createBidirectionalStream",
        "isStatic": false,
        "params": "[(optional options<WebTransportSendStreamOptions>)]",
        "returnType": "Promise<WebTransportBidirectionalStream>"
      },
      {
        "kind": "Method",
        "name": "createUnidirectionalStream",
        "isStatic": false,
        "params": "[(optional options<WebTransportSendStreamOptions>)]",
        "returnType": "Promise<WritableStream>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebTransport}) (new [url<(or string URL)> (optional options<WebTransportOptions>)] WebTransport)}"
  },
  "WebTransportBidirectionalStream": {
    "kind": "Property",
    "name": "WebTransportBidirectionalStream",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebTransportBidirectionalStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebTransportBidirectionalStream"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebTransportBidirectionalStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebTransportBidirectionalStream"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebTransportBidirectionalStream}) (new [] WebTransportBidirectionalStream)}"
  },
  "WebTransportDatagramDuplexStream": {
    "kind": "Property",
    "name": "WebTransportDatagramDuplexStream",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebTransportDatagramDuplexStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebTransportDatagramDuplexStream"
      },
      {
        "kind": "Property",
        "name": "incomingHighWaterMark",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "incomingMaxAge",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "maxDatagramSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "outgoingHighWaterMark",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "outgoingMaxAge",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WebTransportDatagramDuplexStream"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebTransportDatagramDuplexStream"
      },
      {
        "kind": "Property",
        "name": "incomingHighWaterMark",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "incomingMaxAge",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "maxDatagramSize",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "outgoingHighWaterMark",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "outgoingMaxAge",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebTransportDatagramDuplexStream}) (new [] WebTransportDatagramDuplexStream)}"
  },
  "WebTransportError": {
    "kind": "Property",
    "name": "WebTransportError",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>) (optional options<WebTransportErrorOptions>)]",
        "returnType": "WebTransportError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebTransportError"
      },
      {
        "kind": "Property",
        "name": "source",
        "isStatic": true,
        "returnType": "WebTransportErrorSource"
      },
      {
        "kind": "Property",
        "name": "streamErrorCode",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>) (optional options<WebTransportErrorOptions>)]",
        "returnType": "WebTransportError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WebTransportError"
      },
      {
        "kind": "Property",
        "name": "source",
        "isStatic": true,
        "returnType": "WebTransportErrorSource"
      },
      {
        "kind": "Property",
        "name": "streamErrorCode",
        "isStatic": true,
        "returnType": "(or number null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WebTransportError}) (new [(optional message<string>) (optional options<WebTransportErrorOptions>)] WebTransportError)}"
  },
  "WheelEvent": {
    "kind": "Property",
    "name": "WheelEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<WheelEventInit>)]",
        "returnType": "WheelEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WheelEvent"
      },
      {
        "kind": "Property",
        "name": "DOM_DELTA_PIXEL",
        "isStatic": false,
        "returnType": "0x00"
      },
      {
        "kind": "Property",
        "name": "DOM_DELTA_LINE",
        "isStatic": false,
        "returnType": "0x01"
      },
      {
        "kind": "Property",
        "name": "DOM_DELTA_PAGE",
        "isStatic": false,
        "returnType": "0x02"
      },
      {
        "kind": "Property",
        "name": "deltaMode",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "deltaX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "deltaY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "deltaZ",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "DOM_DELTA_PIXEL",
        "isStatic": true,
        "returnType": "0x00"
      },
      {
        "kind": "Property",
        "name": "DOM_DELTA_LINE",
        "isStatic": true,
        "returnType": "0x01"
      },
      {
        "kind": "Property",
        "name": "DOM_DELTA_PAGE",
        "isStatic": true,
        "returnType": "0x02"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WheelEvent}) (new [type<string> (optional eventInitDict<WheelEventInit>)] WheelEvent) (property {:DOM_DELTA_PIXEL 0x00}) (property {:DOM_DELTA_LINE 0x01}) (property {:DOM_DELTA_PAGE 0x02})}"
  },
  "Window": {
    "kind": "Property",
    "name": "Window",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Window"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Window"
      },
      {
        "kind": "Property",
        "name": "clientInformation",
        "isStatic": true,
        "returnType": "Navigator"
      },
      {
        "kind": "Property",
        "name": "closed",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "customElements",
        "isStatic": true,
        "returnType": "CustomElementRegistry"
      },
      {
        "kind": "Property",
        "name": "devicePixelRatio",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "document",
        "isStatic": true,
        "returnType": "Document"
      },
      {
        "kind": "Property",
        "name": "event",
        "isStatic": true,
        "returnType": "(or Event undefined)"
      },
      {
        "kind": "Property",
        "name": "external",
        "isStatic": true,
        "returnType": "External"
      },
      {
        "kind": "Property",
        "name": "frameElement",
        "isStatic": true,
        "returnType": "(or Element null)"
      },
      {
        "kind": "Property",
        "name": "frames",
        "isStatic": true,
        "returnType": "WindowProxy"
      },
      {
        "kind": "Property",
        "name": "history",
        "isStatic": true,
        "returnType": "History"
      },
      {
        "kind": "Property",
        "name": "innerHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "innerWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "locationbar",
        "isStatic": true,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "menubar",
        "isStatic": true,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "navigator",
        "isStatic": true,
        "returnType": "Navigator"
      },
      {
        "kind": "Property",
        "name": "ondevicemotion",
        "isStatic": true,
        "returnType": "(or (list (function [this<Window> ev<DeviceMotionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondeviceorientation",
        "isStatic": true,
        "returnType": "(or (list (function [this<Window> ev<DeviceOrientationEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ondeviceorientationabsolute",
        "isStatic": true,
        "returnType": "(or (list (function [this<Window> ev<DeviceOrientationEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onorientationchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<Window> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "opener",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "orientation",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "outerHeight",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "outerWidth",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "pageXOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "pageYOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "parent",
        "isStatic": true,
        "returnType": "WindowProxy"
      },
      {
        "kind": "Property",
        "name": "personalbar",
        "isStatic": true,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "screen",
        "isStatic": true,
        "returnType": "Screen"
      },
      {
        "kind": "Property",
        "name": "screenLeft",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "screenTop",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "screenX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "screenY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scrollX",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scrollY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "scrollbars",
        "isStatic": true,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "self",
        "isStatic": true,
        "returnType": "(intersect Window (typeof globalThis))"
      },
      {
        "kind": "Property",
        "name": "speechSynthesis",
        "isStatic": true,
        "returnType": "SpeechSynthesis"
      },
      {
        "kind": "Property",
        "name": "status",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "statusbar",
        "isStatic": true,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "toolbar",
        "isStatic": true,
        "returnType": "BarProp"
      },
      {
        "kind": "Property",
        "name": "top",
        "isStatic": true,
        "returnType": "(or WindowProxy null)"
      },
      {
        "kind": "Property",
        "name": "visualViewport",
        "isStatic": true,
        "returnType": "(or VisualViewport null)"
      },
      {
        "kind": "Property",
        "name": "window",
        "isStatic": true,
        "returnType": "(intersect Window (typeof globalThis))"
      },
      {
        "kind": "Method",
        "name": "alert",
        "isStatic": false,
        "params": "[(optional message<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "blur",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "cancelIdleCallback",
        "isStatic": false,
        "params": "[handle<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "captureEvents",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "confirm",
        "isStatic": false,
        "params": "[(optional message<string>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "focus",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getComputedStyle",
        "isStatic": false,
        "params": "[elt<Element> (optional pseudoElt<(or string null)>)]",
        "returnType": "CSSStyleDeclaration"
      },
      {
        "kind": "Method",
        "name": "getSelection",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Selection null)"
      },
      {
        "kind": "Method",
        "name": "matchMedia",
        "isStatic": false,
        "params": "[query<string>]",
        "returnType": "MediaQueryList"
      },
      {
        "kind": "Method",
        "name": "moveBy",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "moveTo",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[(optional url<(or string URL)>) (optional target<string>) (optional features<string>)]",
        "returnType": "(or WindowProxy null)"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> targetOrigin<string> (optional transfer<(array Transferable)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> (optional options<WindowPostMessageOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "print",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "prompt",
        "isStatic": false,
        "params": "[(optional message<string>) (optional _default<string>)]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "releaseEvents",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "requestIdleCallback",
        "isStatic": false,
        "params": "[callback<IdleRequestCallback> (optional options<IdleRequestOptions>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "resizeBy",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resizeTo",
        "isStatic": false,
        "params": "[width<number> height<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scroll",
        "isStatic": false,
        "params": "[(optional options<ScrollToOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scroll",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollBy",
        "isStatic": false,
        "params": "[(optional options<ScrollToOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollBy",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollTo",
        "isStatic": false,
        "params": "[(optional options<ScrollToOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollTo",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stop",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Window> ev<(get WindowEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Window> ev<(get WindowEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Window}) (new [] Window)}"
  },
  "Worker": {
    "kind": "Property",
    "name": "Worker",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[scriptURL<(or string URL)> (optional options<WorkerOptions>)]",
        "returnType": "Worker"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Worker"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<Worker> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessageerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<Worker> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> transfer<(array Transferable)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> (optional options<StructuredSerializeOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "terminate",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Worker> ev<(get WorkerEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Worker> ev<(get WorkerEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[scriptURL<(or string URL)> (optional options<WorkerOptions>)]",
        "returnType": "Worker"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Worker"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<Worker> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessageerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<Worker> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> transfer<(array Transferable)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> (optional options<StructuredSerializeOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "terminate",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Worker> ev<(get WorkerEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<Worker> ev<(get WorkerEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Worker}) (new [scriptURL<(or string URL)> (optional options<WorkerOptions>)] Worker)}"
  },
  "Worklet": {
    "kind": "Property",
    "name": "Worklet",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Worklet"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Worklet"
      },
      {
        "kind": "Method",
        "name": "addModule",
        "isStatic": false,
        "params": "[moduleURL<(or string URL)> (optional options<WorkletOptions>)]",
        "returnType": "Promise<void>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Worklet}) (new [] Worklet)}"
  },
  "WritableStream": {
    "kind": "Property",
    "name": "WritableStream",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional underlyingSink<UnderlyingSink<W>>) (optional strategy<QueuingStrategy<W>>)]",
        "returnType": "WritableStream<W>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WritableStream"
      },
      {
        "kind": "Property",
        "name": "locked",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "getWriter",
        "isStatic": false,
        "params": "[]",
        "returnType": "WritableStreamDefaultWriter<W>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional underlyingSink<UnderlyingSink<W>>) (optional strategy<QueuingStrategy<W>>)]",
        "returnType": "WritableStream<W>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WritableStream"
      },
      {
        "kind": "Property",
        "name": "locked",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "getWriter",
        "isStatic": false,
        "params": "[]",
        "returnType": "WritableStreamDefaultWriter<W>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WritableStream}) (new [(optional underlyingSink<UnderlyingSink<W>>) (optional strategy<QueuingStrategy<W>>)] WritableStream<W>)}"
  },
  "WritableStreamDefaultController": {
    "kind": "Property",
    "name": "WritableStreamDefaultController",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WritableStreamDefaultController"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WritableStreamDefaultController"
      },
      {
        "kind": "Property",
        "name": "signal",
        "isStatic": true,
        "returnType": "AbortSignal"
      },
      {
        "kind": "Method",
        "name": "error",
        "isStatic": false,
        "params": "[(optional e<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WritableStreamDefaultController"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WritableStreamDefaultController"
      },
      {
        "kind": "Property",
        "name": "signal",
        "isStatic": true,
        "returnType": "AbortSignal"
      },
      {
        "kind": "Method",
        "name": "error",
        "isStatic": false,
        "params": "[(optional e<any>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WritableStreamDefaultController}) (new [] WritableStreamDefaultController)}"
  },
  "WritableStreamDefaultWriter": {
    "kind": "Property",
    "name": "WritableStreamDefaultWriter",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[stream<WritableStream<W>>]",
        "returnType": "WritableStreamDefaultWriter<W>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WritableStreamDefaultWriter"
      },
      {
        "kind": "Property",
        "name": "closed",
        "isStatic": true,
        "returnType": "Promise<undefined>"
      },
      {
        "kind": "Property",
        "name": "desiredSize",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "ready",
        "isStatic": true,
        "returnType": "Promise<undefined>"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "releaseLock",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "write",
        "isStatic": false,
        "params": "[(optional chunk<W>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[stream<WritableStream<W>>]",
        "returnType": "WritableStreamDefaultWriter<W>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WritableStreamDefaultWriter"
      },
      {
        "kind": "Property",
        "name": "closed",
        "isStatic": true,
        "returnType": "Promise<undefined>"
      },
      {
        "kind": "Property",
        "name": "desiredSize",
        "isStatic": true,
        "returnType": "(or number null)"
      },
      {
        "kind": "Property",
        "name": "ready",
        "isStatic": true,
        "returnType": "Promise<undefined>"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "releaseLock",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "write",
        "isStatic": false,
        "params": "[(optional chunk<W>)]",
        "returnType": "Promise<void>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WritableStreamDefaultWriter}) (new [stream<WritableStream<W>>] WritableStreamDefaultWriter<W>)}"
  },
  "XMLDocument": {
    "kind": "Property",
    "name": "XMLDocument",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "XMLDocument"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "XMLDocument"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLDocument> ev<(get DocumentEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLDocument> ev<(get DocumentEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype XMLDocument}) (new [] XMLDocument)}"
  },
  "XMLHttpRequest": {
    "kind": "Property",
    "name": "XMLHttpRequest",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "XMLHttpRequest"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "XMLHttpRequest"
      },
      {
        "kind": "Property",
        "name": "UNSENT",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "OPENED",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "HEADERS_RECEIVED",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "LOADING",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "DONE",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "onreadystatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "response",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "responseText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "responseType",
        "isStatic": true,
        "returnType": "XMLHttpRequestResponseType"
      },
      {
        "kind": "Property",
        "name": "responseURL",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "responseXML",
        "isStatic": true,
        "returnType": "(or Document null)"
      },
      {
        "kind": "Property",
        "name": "status",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "statusText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "timeout",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "upload",
        "isStatic": true,
        "returnType": "XMLHttpRequestUpload"
      },
      {
        "kind": "Property",
        "name": "withCredentials",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "UNSENT",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "OPENED",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "HEADERS_RECEIVED",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "LOADING",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "DONE",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getAllResponseHeaders",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getResponseHeader",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[method<string> url<(or string URL)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[method<string> url<(or string URL)> async<boolean> (optional username<(or string null)>) (optional password<(or string null)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "overrideMimeType",
        "isStatic": false,
        "params": "[mime<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "send",
        "isStatic": false,
        "params": "[(optional body<(or Document XMLHttpRequestBodyInit null)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setRequestHeader",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLHttpRequest> ev<(get XMLHttpRequestEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLHttpRequest> ev<(get XMLHttpRequestEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "XMLHttpRequest"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "XMLHttpRequest"
      },
      {
        "kind": "Property",
        "name": "UNSENT",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "OPENED",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "HEADERS_RECEIVED",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "LOADING",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "DONE",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "onreadystatechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "readyState",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "response",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "responseText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "responseType",
        "isStatic": true,
        "returnType": "XMLHttpRequestResponseType"
      },
      {
        "kind": "Property",
        "name": "responseURL",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "status",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "statusText",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "timeout",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "upload",
        "isStatic": true,
        "returnType": "XMLHttpRequestUpload"
      },
      {
        "kind": "Property",
        "name": "withCredentials",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "UNSENT",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "OPENED",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "HEADERS_RECEIVED",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "LOADING",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "DONE",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Method",
        "name": "abort",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getAllResponseHeaders",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getResponseHeader",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "(or string null)"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[method<string> url<(or string URL)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "open",
        "isStatic": false,
        "params": "[method<string> url<(or string URL)> async<boolean> (optional username<(or string null)>) (optional password<(or string null)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "overrideMimeType",
        "isStatic": false,
        "params": "[mime<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "send",
        "isStatic": false,
        "params": "[(optional body<(or XMLHttpRequestBodyInit null)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setRequestHeader",
        "isStatic": false,
        "params": "[name<string> value<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLHttpRequest> ev<(get XMLHttpRequestEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLHttpRequest> ev<(get XMLHttpRequestEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype XMLHttpRequest}) (new [] XMLHttpRequest) (property {:UNSENT 0}) (property {:OPENED 1}) (property {:HEADERS_RECEIVED 2}) (property {:LOADING 3}) (property {:DONE 4})}"
  },
  "XMLHttpRequestEventTarget": {
    "kind": "Property",
    "name": "XMLHttpRequestEventTarget",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "XMLHttpRequestEventTarget"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "XMLHttpRequestEventTarget"
      },
      {
        "kind": "Property",
        "name": "onabort",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onload",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadend",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadstart",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onprogress",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ontimeout",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLHttpRequestEventTarget> ev<(get XMLHttpRequestEventTargetEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLHttpRequestEventTarget> ev<(get XMLHttpRequestEventTargetEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "XMLHttpRequestEventTarget"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "XMLHttpRequestEventTarget"
      },
      {
        "kind": "Property",
        "name": "onabort",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onload",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadend",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onloadstart",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onprogress",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ontimeout",
        "isStatic": true,
        "returnType": "(or (list (function [this<XMLHttpRequest> ev<ProgressEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLHttpRequestEventTarget> ev<(get XMLHttpRequestEventTargetEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLHttpRequestEventTarget> ev<(get XMLHttpRequestEventTargetEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype XMLHttpRequestEventTarget}) (new [] XMLHttpRequestEventTarget)}"
  },
  "XMLHttpRequestUpload": {
    "kind": "Property",
    "name": "XMLHttpRequestUpload",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "XMLHttpRequestUpload"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "XMLHttpRequestUpload"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLHttpRequestUpload> ev<(get XMLHttpRequestEventTargetEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLHttpRequestUpload> ev<(get XMLHttpRequestEventTargetEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "XMLHttpRequestUpload"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "XMLHttpRequestUpload"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLHttpRequestUpload> ev<(get XMLHttpRequestEventTargetEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<XMLHttpRequestUpload> ev<(get XMLHttpRequestEventTargetEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype XMLHttpRequestUpload}) (new [] XMLHttpRequestUpload)}"
  },
  "XMLSerializer": {
    "kind": "Property",
    "name": "XMLSerializer",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "XMLSerializer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "XMLSerializer"
      },
      {
        "kind": "Method",
        "name": "serializeToString",
        "isStatic": false,
        "params": "[root<Node>]",
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype XMLSerializer}) (new [] XMLSerializer)}"
  },
  "XPathEvaluator": {
    "kind": "Property",
    "name": "XPathEvaluator",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "XPathEvaluator"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "XPathEvaluator"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype XPathEvaluator}) (new [] XPathEvaluator)}"
  },
  "XPathExpression": {
    "kind": "Property",
    "name": "XPathExpression",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "XPathExpression"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "XPathExpression"
      },
      {
        "kind": "Method",
        "name": "evaluate",
        "isStatic": false,
        "params": "[contextNode<Node> (optional type<number>) (optional result<(or XPathResult null)>)]",
        "returnType": "XPathResult"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype XPathExpression}) (new [] XPathExpression)}"
  },
  "XPathResult": {
    "kind": "Property",
    "name": "XPathResult",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "XPathResult"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "XPathResult"
      },
      {
        "kind": "Property",
        "name": "ANY_TYPE",
        "isStatic": false,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "NUMBER_TYPE",
        "isStatic": false,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "STRING_TYPE",
        "isStatic": false,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "BOOLEAN_TYPE",
        "isStatic": false,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "UNORDERED_NODE_ITERATOR_TYPE",
        "isStatic": false,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "ORDERED_NODE_ITERATOR_TYPE",
        "isStatic": false,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "UNORDERED_NODE_SNAPSHOT_TYPE",
        "isStatic": false,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "ORDERED_NODE_SNAPSHOT_TYPE",
        "isStatic": false,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "ANY_UNORDERED_NODE_TYPE",
        "isStatic": false,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "FIRST_ORDERED_NODE_TYPE",
        "isStatic": false,
        "returnType": "9"
      },
      {
        "kind": "Property",
        "name": "booleanValue",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "invalidIteratorState",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "numberValue",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "resultType",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "singleNodeValue",
        "isStatic": true,
        "returnType": "(or Node null)"
      },
      {
        "kind": "Property",
        "name": "snapshotLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "stringValue",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ANY_TYPE",
        "isStatic": true,
        "returnType": "0"
      },
      {
        "kind": "Property",
        "name": "NUMBER_TYPE",
        "isStatic": true,
        "returnType": "1"
      },
      {
        "kind": "Property",
        "name": "STRING_TYPE",
        "isStatic": true,
        "returnType": "2"
      },
      {
        "kind": "Property",
        "name": "BOOLEAN_TYPE",
        "isStatic": true,
        "returnType": "3"
      },
      {
        "kind": "Property",
        "name": "UNORDERED_NODE_ITERATOR_TYPE",
        "isStatic": true,
        "returnType": "4"
      },
      {
        "kind": "Property",
        "name": "ORDERED_NODE_ITERATOR_TYPE",
        "isStatic": true,
        "returnType": "5"
      },
      {
        "kind": "Property",
        "name": "UNORDERED_NODE_SNAPSHOT_TYPE",
        "isStatic": true,
        "returnType": "6"
      },
      {
        "kind": "Property",
        "name": "ORDERED_NODE_SNAPSHOT_TYPE",
        "isStatic": true,
        "returnType": "7"
      },
      {
        "kind": "Property",
        "name": "ANY_UNORDERED_NODE_TYPE",
        "isStatic": true,
        "returnType": "8"
      },
      {
        "kind": "Property",
        "name": "FIRST_ORDERED_NODE_TYPE",
        "isStatic": true,
        "returnType": "9"
      },
      {
        "kind": "Method",
        "name": "iterateNext",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or Node null)"
      },
      {
        "kind": "Method",
        "name": "snapshotItem",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or Node null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype XPathResult}) (new [] XPathResult) (property {:ANY_TYPE 0}) (property {:NUMBER_TYPE 1}) (property {:STRING_TYPE 2}) (property {:BOOLEAN_TYPE 3}) (property {:UNORDERED_NODE_ITERATOR_TYPE 4}) (property {:ORDERED_NODE_ITERATOR_TYPE 5}) (property {:UNORDERED_NODE_SNAPSHOT_TYPE 6}) (property {:ORDERED_NODE_SNAPSHOT_TYPE 7}) (property {:ANY_UNORDERED_NODE_TYPE 8}) (property {:FIRST_ORDERED_NODE_TYPE 9})}"
  },
  "XSLTProcessor": {
    "kind": "Property",
    "name": "XSLTProcessor",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "XSLTProcessor"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "XSLTProcessor"
      },
      {
        "kind": "Method",
        "name": "clearParameters",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getParameter",
        "isStatic": false,
        "params": "[namespaceURI<(or string null)> localName<string>]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "importStylesheet",
        "isStatic": false,
        "params": "[style<Node>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeParameter",
        "isStatic": false,
        "params": "[namespaceURI<(or string null)> localName<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reset",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setParameter",
        "isStatic": false,
        "params": "[namespaceURI<(or string null)> localName<string> value<any>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "transformToDocument",
        "isStatic": false,
        "params": "[source<Node>]",
        "returnType": "Document"
      },
      {
        "kind": "Method",
        "name": "transformToFragment",
        "isStatic": false,
        "params": "[source<Node> output<Document>]",
        "returnType": "DocumentFragment"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype XSLTProcessor}) (new [] XSLTProcessor)}"
  },
  "Audio": {
    "kind": "Property",
    "name": "Audio",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional src<string>)]",
        "returnType": "HTMLAudioElement"
      }
    ],
    "isStatic": false,
    "returnType": "{(new [(optional src<string>)] HTMLAudioElement)}"
  },
  "Image": {
    "kind": "Property",
    "name": "Image",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional width<number>) (optional height<number>)]",
        "returnType": "HTMLImageElement"
      }
    ],
    "isStatic": false,
    "returnType": "{(new [(optional width<number>) (optional height<number>)] HTMLImageElement)}"
  },
  "Option": {
    "kind": "Property",
    "name": "Option",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional text<string>) (optional value<string>) (optional defaultSelected<boolean>) (optional selected<boolean>)]",
        "returnType": "HTMLOptionElement"
      }
    ],
    "isStatic": false,
    "returnType": "{(new [(optional text<string>) (optional value<string>) (optional defaultSelected<boolean>) (optional selected<boolean>)] HTMLOptionElement)}"
  },
  "console": {
    "kind": "GlobalObject",
    "name": "console",
    "members": [
      {
        "kind": "Method",
        "name": "assert",
        "isStatic": false,
        "params": "[(optional condition<boolean>) (& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "count",
        "isStatic": false,
        "params": "[(optional label<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "countReset",
        "isStatic": false,
        "params": "[(optional label<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "debug",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dir",
        "isStatic": false,
        "params": "[(optional item<any>) (optional options<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dirxml",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "error",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "group",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "groupCollapsed",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "groupEnd",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "info",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "log",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "table",
        "isStatic": false,
        "params": "[(optional tabularData<any>) (optional properties<(array string)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "time",
        "isStatic": false,
        "params": "[(optional label<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "timeEnd",
        "isStatic": false,
        "params": "[(optional label<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "timeLog",
        "isStatic": false,
        "params": "[(optional label<string>) (& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "timeStamp",
        "isStatic": false,
        "params": "[(optional label<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "trace",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "warn",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "assert",
        "isStatic": false,
        "params": "[(optional condition<boolean>) (& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "count",
        "isStatic": false,
        "params": "[(optional label<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "countReset",
        "isStatic": false,
        "params": "[(optional label<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "debug",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dir",
        "isStatic": false,
        "params": "[(optional item<any>) (optional options<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dirxml",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "error",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "group",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "groupCollapsed",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "groupEnd",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "info",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "log",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "table",
        "isStatic": false,
        "params": "[(optional tabularData<any>) (optional properties<(array string)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "time",
        "isStatic": false,
        "params": "[(optional label<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "timeEnd",
        "isStatic": false,
        "params": "[(optional label<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "timeLog",
        "isStatic": false,
        "params": "[(optional label<string>) (& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "timeStamp",
        "isStatic": false,
        "params": "[(optional label<string>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "trace",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "warn",
        "isStatic": false,
        "params": "[(& rest<data<(array any)>>)]",
        "returnType": "void"
      }
    ]
  },
  "CSS": {
    "kind": "GlobalObject",
    "name": "CSS",
    "members": [
      {
        "kind": "Property",
        "name": "highlights",
        "isStatic": true,
        "returnType": "HighlightRegistry"
      },
      {
        "kind": "Method",
        "name": "Hz",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "Q",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "cap",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "ch",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "cm",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "cqb",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "cqh",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "cqi",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "cqmax",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "cqmin",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "cqw",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "deg",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "dpcm",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "dpi",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "dppx",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "dvb",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "dvh",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "dvi",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "dvmax",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "dvmin",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "dvw",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "em",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "escape",
        "isStatic": true,
        "params": "[ident<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "ex",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "fr",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "grad",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "ic",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "kHz",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "lh",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "lvb",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "lvh",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "lvi",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "lvmax",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "lvmin",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "lvw",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "mm",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "ms",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "number",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "pc",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "percent",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "pt",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "px",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "rad",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "rcap",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "rch",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "registerProperty",
        "isStatic": true,
        "params": "[definition<PropertyDefinition>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "rem",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "rex",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "ric",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "rlh",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "s",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "supports",
        "isStatic": true,
        "params": "[property<string> value<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "supports",
        "isStatic": true,
        "params": "[conditionText<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "svb",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "svh",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "svi",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "svmax",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "svmin",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "svw",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "turn",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "vb",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "vh",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "vi",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "vmax",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "vmin",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      },
      {
        "kind": "Method",
        "name": "vw",
        "isStatic": true,
        "params": "[value<number>]",
        "returnType": "CSSUnitValue"
      }
    ],
    "namespace": "CSS"
  },
  "WebAssembly": {
    "kind": "GlobalObject",
    "name": "WebAssembly",
    "members": [
      {
        "kind": "Property",
        "name": "CompileError",
        "isStatic": true,
        "returnType": "{(property {:prototype CompileError}) (new [(optional message<string>)] CompileError) (call [(optional message<string>)] CompileError)}"
      },
      {
        "kind": "Property",
        "name": "Global",
        "isStatic": true,
        "returnType": "{(property {:prototype Global}) (new [descriptor<GlobalDescriptor<T>> (optional v<(get ValueTypeMap T)>)] Global<T>)}"
      },
      {
        "kind": "Property",
        "name": "Instance",
        "isStatic": true,
        "returnType": "{(property {:prototype Instance}) (new [module<Module> (optional importObject<Imports>)] Instance)}"
      },
      {
        "kind": "Property",
        "name": "LinkError",
        "isStatic": true,
        "returnType": "{(property {:prototype LinkError}) (new [(optional message<string>)] LinkError) (call [(optional message<string>)] LinkError)}"
      },
      {
        "kind": "Property",
        "name": "Memory",
        "isStatic": true,
        "returnType": "{(property {:prototype Memory}) (new [descriptor<MemoryDescriptor>] Memory)}"
      },
      {
        "kind": "Property",
        "name": "Module",
        "isStatic": true,
        "returnType": "{(property {:prototype Module}) (new [bytes<BufferSource>] Module) (method [moduleObject<Module> sectionName<string>])<(array ArrayBuffer)> (method [moduleObject<Module>])<(array ModuleExportDescriptor)> (method [moduleObject<Module>])<(array ModuleImportDescriptor)>}"
      },
      {
        "kind": "Property",
        "name": "RuntimeError",
        "isStatic": true,
        "returnType": "{(property {:prototype RuntimeError}) (new [(optional message<string>)] RuntimeError) (call [(optional message<string>)] RuntimeError)}"
      },
      {
        "kind": "Property",
        "name": "Table",
        "isStatic": true,
        "returnType": "{(property {:prototype Table}) (new [descriptor<TableDescriptor> (optional value<any>)] Table)}"
      },
      {
        "kind": "Method",
        "name": "compile",
        "isStatic": true,
        "params": "[bytes<BufferSource>]",
        "returnType": "Promise<Module>"
      },
      {
        "kind": "Method",
        "name": "compileStreaming",
        "isStatic": true,
        "params": "[source<(or Response PromiseLike<Response>)>]",
        "returnType": "Promise<Module>"
      },
      {
        "kind": "Method",
        "name": "instantiate",
        "isStatic": true,
        "params": "[bytes<BufferSource> (optional importObject<Imports>)]",
        "returnType": "Promise<WebAssemblyInstantiatedSource>"
      },
      {
        "kind": "Method",
        "name": "instantiate",
        "isStatic": true,
        "params": "[moduleObject<Module> (optional importObject<Imports>)]",
        "returnType": "Promise<Instance>"
      },
      {
        "kind": "Method",
        "name": "instantiateStreaming",
        "isStatic": true,
        "params": "[source<(or Response PromiseLike<Response>)> (optional importObject<Imports>)]",
        "returnType": "Promise<WebAssemblyInstantiatedSource>"
      },
      {
        "kind": "Method",
        "name": "validate",
        "isStatic": true,
        "params": "[bytes<BufferSource>]",
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "CompileError",
        "isStatic": true,
        "returnType": "{(property {:prototype CompileError}) (new [(optional message<string>)] CompileError) (call [(optional message<string>)] CompileError)}"
      },
      {
        "kind": "Property",
        "name": "Global",
        "isStatic": true,
        "returnType": "{(property {:prototype Global}) (new [descriptor<GlobalDescriptor<T>> (optional v<(get ValueTypeMap T)>)] Global<T>)}"
      },
      {
        "kind": "Property",
        "name": "Instance",
        "isStatic": true,
        "returnType": "{(property {:prototype Instance}) (new [module<Module> (optional importObject<Imports>)] Instance)}"
      },
      {
        "kind": "Property",
        "name": "LinkError",
        "isStatic": true,
        "returnType": "{(property {:prototype LinkError}) (new [(optional message<string>)] LinkError) (call [(optional message<string>)] LinkError)}"
      },
      {
        "kind": "Property",
        "name": "Memory",
        "isStatic": true,
        "returnType": "{(property {:prototype Memory}) (new [descriptor<MemoryDescriptor>] Memory)}"
      },
      {
        "kind": "Property",
        "name": "Module",
        "isStatic": true,
        "returnType": "{(property {:prototype Module}) (new [bytes<BufferSource>] Module) (method [moduleObject<Module> sectionName<string>])<(array ArrayBuffer)> (method [moduleObject<Module>])<(array ModuleExportDescriptor)> (method [moduleObject<Module>])<(array ModuleImportDescriptor)>}"
      },
      {
        "kind": "Property",
        "name": "RuntimeError",
        "isStatic": true,
        "returnType": "{(property {:prototype RuntimeError}) (new [(optional message<string>)] RuntimeError) (call [(optional message<string>)] RuntimeError)}"
      },
      {
        "kind": "Property",
        "name": "Table",
        "isStatic": true,
        "returnType": "{(property {:prototype Table}) (new [descriptor<TableDescriptor> (optional value<any>)] Table)}"
      },
      {
        "kind": "Method",
        "name": "compile",
        "isStatic": true,
        "params": "[bytes<BufferSource>]",
        "returnType": "Promise<Module>"
      },
      {
        "kind": "Method",
        "name": "compileStreaming",
        "isStatic": true,
        "params": "[source<(or Response PromiseLike<Response>)>]",
        "returnType": "Promise<Module>"
      },
      {
        "kind": "Method",
        "name": "instantiate",
        "isStatic": true,
        "params": "[bytes<BufferSource> (optional importObject<Imports>)]",
        "returnType": "Promise<WebAssemblyInstantiatedSource>"
      },
      {
        "kind": "Method",
        "name": "instantiate",
        "isStatic": true,
        "params": "[moduleObject<Module> (optional importObject<Imports>)]",
        "returnType": "Promise<Instance>"
      },
      {
        "kind": "Method",
        "name": "instantiateStreaming",
        "isStatic": true,
        "params": "[source<(or Response PromiseLike<Response>)> (optional importObject<Imports>)]",
        "returnType": "Promise<WebAssemblyInstantiatedSource>"
      },
      {
        "kind": "Method",
        "name": "validate",
        "isStatic": true,
        "params": "[bytes<BufferSource>]",
        "returnType": "boolean"
      }
    ],
    "namespace": "WebAssembly"
  },
  "CompileError": {
    "kind": "GlobalObject",
    "name": "CompileError",
    "inheritanceSources": [
      "Error"
    ]
  },
  "Global": {
    "kind": "GlobalObject",
    "name": "Global",
    "members": [
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "(get ValueTypeMap T)"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "(get ValueTypeMap T)"
      },
      {
        "kind": "Property",
        "name": "value",
        "isStatic": true,
        "returnType": "(get ValueTypeMap T)"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "(get ValueTypeMap T)"
      }
    ]
  },
  "Instance": {
    "kind": "GlobalObject",
    "name": "Instance",
    "members": [
      {
        "kind": "Property",
        "name": "exports",
        "isStatic": true,
        "returnType": "Exports"
      },
      {
        "kind": "Property",
        "name": "exports",
        "isStatic": true,
        "returnType": "Exports"
      }
    ]
  },
  "LinkError": {
    "kind": "GlobalObject",
    "name": "LinkError",
    "inheritanceSources": [
      "Error"
    ]
  },
  "Memory": {
    "kind": "GlobalObject",
    "name": "Memory",
    "members": [
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Method",
        "name": "grow",
        "isStatic": false,
        "params": "[delta<number>]",
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Method",
        "name": "grow",
        "isStatic": false,
        "params": "[delta<number>]",
        "returnType": "number"
      }
    ]
  },
  "Module": {
    "kind": "GlobalObject",
    "name": "Module"
  },
  "RuntimeError": {
    "kind": "GlobalObject",
    "name": "RuntimeError",
    "inheritanceSources": [
      "Error"
    ]
  },
  "Table": {
    "kind": "GlobalObject",
    "name": "Table",
    "members": [
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "grow",
        "isStatic": false,
        "params": "[delta<number> (optional value<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[index<number> (optional value<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "grow",
        "isStatic": false,
        "params": "[delta<number> (optional value<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[index<number> (optional value<any>)]",
        "returnType": "void"
      }
    ]
  },
  "Map": {
    "kind": "GlobalObject",
    "name": "Map",
    "members": [
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[key<K>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<V> key<K> map<Map<K V>>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[key<K>]",
        "returnType": "(or V undefined)"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[key<K>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[key<K> value<V>]",
        "returnType": "(this)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Map<any any>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional entries<(or (readonly (readonly [K, V])[] (array (list (readonly [K, V] [K V])))) null)>)]",
        "returnType": "Map<K V>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Map<any any>"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "MapIterator<[K V]>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "MapIterator<[K V]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "MapIterator<K>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "MapIterator<V>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Map<any any>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional iterable<(or Iterable<(readonly [K, V] [K V])> null)>)]",
        "returnType": "Map<K V>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "[Symbol.species]",
        "isStatic": true,
        "returnType": "MapConstructor"
      },
      {
        "kind": "Method",
        "name": "groupBy",
        "isStatic": false,
        "params": "[items<Iterable<T>> keySelector<(function [item<T> index<number>])<K>>]",
        "returnType": "Map<K (array T)>"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "WeakMap": {
    "kind": "GlobalObject",
    "name": "WeakMap",
    "members": [
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[key<K>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[key<K>]",
        "returnType": "(or V undefined)"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[key<K>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[key<K> value<V>]",
        "returnType": "(this)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional entries<(or (readonly (readonly [K, V])[] (array (list (readonly [K, V] [K V])))) null)>)]",
        "returnType": "WeakMap<K V>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "WeakMap<WeakKey any>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[iterable<Iterable<(readonly [K, V] [K V])>>]",
        "returnType": "WeakMap<K V>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "Set": {
    "kind": "GlobalObject",
    "name": "Set",
    "members": [
      {
        "kind": "Property",
        "name": "size",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[value<T>]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "clear",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[value<T>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<T> value2<T> set<Set<T>>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[value<T>]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional values<(or (readonly T[] (array T)) null)>)]",
        "returnType": "Set<T>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Set<any>"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "SetIterator<T>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "SetIterator<[T T]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "SetIterator<T>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "SetIterator<T>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional iterable<(or Iterable<T> null)>)]",
        "returnType": "Set<T>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "[Symbol.species]",
        "isStatic": true,
        "returnType": "SetConstructor"
      },
      {
        "kind": "Method",
        "name": "union",
        "isStatic": false,
        "params": "[other<ReadonlySetLike<U>>]",
        "returnType": "Set<(or T U)>"
      },
      {
        "kind": "Method",
        "name": "intersection",
        "isStatic": false,
        "params": "[other<ReadonlySetLike<U>>]",
        "returnType": "Set<(intersect T U)>"
      },
      {
        "kind": "Method",
        "name": "difference",
        "isStatic": false,
        "params": "[other<ReadonlySetLike<U>>]",
        "returnType": "Set<T>"
      },
      {
        "kind": "Method",
        "name": "symmetricDifference",
        "isStatic": false,
        "params": "[other<ReadonlySetLike<U>>]",
        "returnType": "Set<(or T U)>"
      },
      {
        "kind": "Method",
        "name": "isSubsetOf",
        "isStatic": false,
        "params": "[other<ReadonlySetLike<unknown>>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isSupersetOf",
        "isStatic": false,
        "params": "[other<ReadonlySetLike<unknown>>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isDisjointFrom",
        "isStatic": false,
        "params": "[other<ReadonlySetLike<unknown>>]",
        "returnType": "boolean"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "WeakSet": {
    "kind": "GlobalObject",
    "name": "WeakSet",
    "members": [
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[value<T>]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "delete",
        "isStatic": false,
        "params": "[value<T>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": false,
        "params": "[value<T>]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional values<(or (readonly T[] (array T)) null)>)]",
        "returnType": "WeakSet<T>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "WeakSet<WeakKey>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[iterable<Iterable<T>>]",
        "returnType": "WeakSet<T>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "string"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "Array": {
    "kind": "GlobalObject",
    "name": "Array",
    "members": [
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<T> index<number> obj<(array T)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<T> index<number> obj<(array T)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or T undefined)"
      },
      {
        "kind": "Method",
        "name": "findIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<T> index<number> obj<(array T)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "fill",
        "isStatic": false,
        "params": "[value<T> (optional start<number>) (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "copyWithin",
        "isStatic": false,
        "params": "[target<number> start<number> (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<(intersect Intl.NumberFormatOptions Intl.DateTimeFormatOptions)>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<T>>]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<T>> mapfn<(function [v<T> k<number>])<U>> (optional thisArg<any>)]",
        "returnType": "(array U)"
      },
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[(& rest<items<(array T)>>)]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<T>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number T]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<T>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[iterable<(or Iterable<T> ArrayLike<T>)>]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[iterable<(or Iterable<T> ArrayLike<T>)> mapfn<(function [v<T> k<number>])<U>> (optional thisArg<any>)]",
        "returnType": "(array U)"
      },
      {
        "kind": "Property",
        "name": "[Symbol.unscopables]",
        "isStatic": true,
        "returnType": "(optional {:{:name K :constraint keyof any[] :type (keyof any[] (array any))} boolean})"
      },
      {
        "kind": "Property",
        "name": "[Symbol.species]",
        "isStatic": true,
        "returnType": "ArrayConstructor"
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchElement<T> (optional fromIndex<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "flatMap",
        "isStatic": false,
        "params": "[callback<(function [this<This> value<T> index<number> array<(array T)>])<(or U ReadonlyArray<U>)>> (optional thisArg<This>)]",
        "returnType": "(array U)"
      },
      {
        "kind": "Method",
        "name": "flat",
        "isStatic": false,
        "params": "[this<A> (optional depth<D>)]",
        "returnType": "(array FlatArray<A D>)"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or T undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<T> index<number> array<(array T)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<T> index<number> array<(array T)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or T undefined)"
      },
      {
        "kind": "Method",
        "name": "findLastIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<T> index<number> array<(array T)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toReversed",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "toSorted",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<T> b<T>])<number>>)]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "toSpliced",
        "isStatic": false,
        "params": "[start<number> deleteCount<number> (& rest<items<(array T)>>)]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "toSpliced",
        "isStatic": false,
        "params": "[start<number> (optional deleteCount<number>)]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "with",
        "isStatic": false,
        "params": "[index<number> value<T>]",
        "returnType": "(array T)"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "pop",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or T undefined)"
      },
      {
        "kind": "Method",
        "name": "push",
        "isStatic": false,
        "params": "[(& rest<items<(array T)>>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "concat",
        "isStatic": false,
        "params": "[(& rest<items<(array ConcatArray<T>)>>)]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "concat",
        "isStatic": false,
        "params": "[(& rest<items<(array (list (or T ConcatArray<T>)))>>)]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "join",
        "isStatic": false,
        "params": "[(optional separator<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "shift",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or T undefined)"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<T> b<T>])<number>>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "splice",
        "isStatic": false,
        "params": "[start<number> (optional deleteCount<number>)]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "splice",
        "isStatic": false,
        "params": "[start<number> deleteCount<number> (& rest<items<(array T)>>)]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "unshift",
        "isStatic": false,
        "params": "[(& rest<items<(array T)>>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchElement<T> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchElement<T> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<T> index<number> array<(array T)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(predicate this (array S))"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<T> index<number> array<(array T)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "some",
        "isStatic": false,
        "params": "[predicate<(function [value<T> index<number> array<(array T)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<T> index<number> array<(array T)>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "map",
        "isStatic": false,
        "params": "[callbackfn<(function [value<T> index<number> array<(array T)>])<U>> (optional thisArg<any>)]",
        "returnType": "(array U)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<T> index<number> array<(array T)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(array S)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<T> index<number> array<(array T)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<T> currentValue<T> currentIndex<number> array<(array T)>])<T>>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<T> currentValue<T> currentIndex<number> array<(array T)>])<T>> initialValue<T>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<T> currentIndex<number> array<(array T)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<T> currentValue<T> currentIndex<number> array<(array T)>])<T>>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<T> currentValue<T> currentIndex<number> array<(array T)>])<T>> initialValue<T>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<T> currentIndex<number> array<(array T)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional arrayLength<number>)]",
        "returnType": "(array any)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[arrayLength<number>]",
        "returnType": "(array T)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(& rest<items<(array T)>>)]",
        "returnType": "(array T)"
      },
      {
        "kind": "Constructor",
        "params": "[(optional arrayLength<number>)]",
        "returnType": "(array any)"
      },
      {
        "kind": "Constructor",
        "params": "[arrayLength<number>]",
        "returnType": "(array T)"
      },
      {
        "kind": "Constructor",
        "params": "[(& rest<items<(array T)>>)]",
        "returnType": "(array T)"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "(array any)"
      },
      {
        "kind": "Method",
        "name": "isArray",
        "isStatic": false,
        "params": "[arg<any>]",
        "returnType": "(predicate arg (array any))"
      },
      {
        "kind": "Method",
        "name": "fromAsync",
        "isStatic": false,
        "params": "[iterableOrArrayLike<(or AsyncIterable<T> Iterable<(or T PromiseLike<T>)> ArrayLike<(or T PromiseLike<T>)>)>]",
        "returnType": "Promise<(array T)>"
      },
      {
        "kind": "Method",
        "name": "fromAsync",
        "isStatic": false,
        "params": "[iterableOrArrayLike<(or AsyncIterable<T> Iterable<T> ArrayLike<T>)> mapFn<(function [value<Awaited<T>> index<number>])<U>> (optional thisArg<any>)]",
        "returnType": "Promise<(array Awaited<U>)>"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "Date": {
    "kind": "GlobalObject",
    "name": "Date",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[value<(or number string Date)>]",
        "returnType": "Date"
      },
      {
        "kind": "Method",
        "name": "[Symbol.toPrimitive]",
        "isStatic": false,
        "params": "[hint<\"default\">]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.toPrimitive]",
        "isStatic": false,
        "params": "[hint<\"string\">]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.toPrimitive]",
        "isStatic": false,
        "params": "[hint<\"number\">]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "[Symbol.toPrimitive]",
        "isStatic": false,
        "params": "[hint<string>]",
        "returnType": "(or string number)"
      },
      {
        "kind": "Method",
        "name": "UTC",
        "isStatic": false,
        "params": "[year<number> (optional monthIndex<number>) (optional date<number>) (optional hours<number>) (optional minutes<number>) (optional seconds<number>) (optional ms<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[(optional locales<Intl.LocalesArgument>) (optional options<Intl.DateTimeFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleDateString",
        "isStatic": false,
        "params": "[(optional locales<Intl.LocalesArgument>) (optional options<Intl.DateTimeFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleTimeString",
        "isStatic": false,
        "params": "[(optional locales<Intl.LocalesArgument>) (optional options<Intl.DateTimeFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toDateString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toTimeString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleDateString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleTimeString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getTime",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getFullYear",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getUTCFullYear",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getMonth",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getUTCMonth",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getDate",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getUTCDate",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getDay",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getUTCDay",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getHours",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getUTCHours",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getMinutes",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getUTCMinutes",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getSeconds",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getUTCSeconds",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getMilliseconds",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getUTCMilliseconds",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getTimezoneOffset",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setTime",
        "isStatic": false,
        "params": "[time<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setMilliseconds",
        "isStatic": false,
        "params": "[ms<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setUTCMilliseconds",
        "isStatic": false,
        "params": "[ms<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setSeconds",
        "isStatic": false,
        "params": "[sec<number> (optional ms<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setUTCSeconds",
        "isStatic": false,
        "params": "[sec<number> (optional ms<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setMinutes",
        "isStatic": false,
        "params": "[min<number> (optional sec<number>) (optional ms<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setUTCMinutes",
        "isStatic": false,
        "params": "[min<number> (optional sec<number>) (optional ms<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setHours",
        "isStatic": false,
        "params": "[hours<number> (optional min<number>) (optional sec<number>) (optional ms<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setUTCHours",
        "isStatic": false,
        "params": "[hours<number> (optional min<number>) (optional sec<number>) (optional ms<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setDate",
        "isStatic": false,
        "params": "[date<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setUTCDate",
        "isStatic": false,
        "params": "[date<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setMonth",
        "isStatic": false,
        "params": "[month<number> (optional date<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setUTCMonth",
        "isStatic": false,
        "params": "[month<number> (optional date<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setFullYear",
        "isStatic": false,
        "params": "[year<number> (optional month<number>) (optional date<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setUTCFullYear",
        "isStatic": false,
        "params": "[year<number> (optional month<number>) (optional date<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toUTCString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toISOString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toJSON",
        "isStatic": false,
        "params": "[(optional key<any>)]",
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Date"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[value<(or number string)>]",
        "returnType": "Date"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[year<number> monthIndex<number> (optional date<number>) (optional hours<number>) (optional minutes<number>) (optional seconds<number>) (optional ms<number>)]",
        "returnType": "Date"
      },
      {
        "kind": "Constructor",
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Date"
      },
      {
        "kind": "Method",
        "name": "parse",
        "isStatic": false,
        "params": "[s<string>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "UTC",
        "isStatic": false,
        "params": "[year<number> monthIndex<number> (optional date<number>) (optional hours<number>) (optional minutes<number>) (optional seconds<number>) (optional ms<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "now",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[(optional locales<(or string (array string))>) (optional options<Intl.DateTimeFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleDateString",
        "isStatic": false,
        "params": "[(optional locales<(or string (array string))>) (optional options<Intl.DateTimeFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleTimeString",
        "isStatic": false,
        "params": "[(optional locales<(or string (array string))>) (optional options<Intl.DateTimeFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[vd<VarDate>]",
        "returnType": "Date"
      },
      {
        "kind": "Property",
        "name": "getVarDate",
        "isStatic": true,
        "returnType": "(function [])<VarDate>"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "Function": {
    "kind": "GlobalObject",
    "name": "Function",
    "members": [
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.hasInstance]",
        "isStatic": false,
        "params": "[value<any>]",
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "arguments",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "caller",
        "isStatic": true,
        "returnType": "Function"
      },
      {
        "kind": "Method",
        "name": "apply",
        "isStatic": false,
        "params": "[this<Function> thisArg<any> (optional argArray<any>)]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "call",
        "isStatic": false,
        "params": "[this<Function> thisArg<any> (& rest<argArray<(array any)>>)]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "bind",
        "isStatic": false,
        "params": "[this<Function> thisArg<any> (& rest<argArray<(array any)>>)]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(& rest<args<(array string)>>)]",
        "returnType": "Function"
      },
      {
        "kind": "Constructor",
        "params": "[(& rest<args<(array string)>>)]",
        "returnType": "Function"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Function"
      },
      {
        "kind": "Property",
        "name": "[Symbol.metadata]",
        "isStatic": true,
        "returnType": "(or DecoratorMetadata null)"
      }
    ],
    "inheritanceSources": [
      "Object"
    ]
  },
  "Math": {
    "kind": "GlobalObject",
    "name": "Math",
    "members": [
      {
        "kind": "Method",
        "name": "clz32",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "imul",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "sign",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "log10",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "log2",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "log1p",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "expm1",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "cosh",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "sinh",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "tanh",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "acosh",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "asinh",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "atanh",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "hypot",
        "isStatic": false,
        "params": "[(& rest<values<(array number)>>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "trunc",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "fround",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "cbrt",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "E",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "LN10",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "LN2",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "LOG2E",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "LOG10E",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "PI",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "SQRT1_2",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "SQRT2",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "abs",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "acos",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "asin",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "atan",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "atan2",
        "isStatic": false,
        "params": "[y<number> x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "ceil",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "cos",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "exp",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "floor",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "log",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "max",
        "isStatic": false,
        "params": "[(& rest<values<(array number)>>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "min",
        "isStatic": false,
        "params": "[(& rest<values<(array number)>>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "pow",
        "isStatic": false,
        "params": "[x<number> y<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "random",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "round",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "sin",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "sqrt",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "tan",
        "isStatic": false,
        "params": "[x<number>]",
        "returnType": "number"
      }
    ]
  },
  "Number": {
    "kind": "GlobalObject",
    "name": "Number",
    "members": [
      {
        "kind": "Property",
        "name": "EPSILON",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "MAX_SAFE_INTEGER",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "MIN_SAFE_INTEGER",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "isFinite",
        "isStatic": false,
        "params": "[number<unknown>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isInteger",
        "isStatic": false,
        "params": "[number<unknown>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isNaN",
        "isStatic": false,
        "params": "[number<unknown>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isSafeInteger",
        "isStatic": false,
        "params": "[number<unknown>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "parseFloat",
        "isStatic": false,
        "params": "[string<string>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "parseInt",
        "isStatic": false,
        "params": "[string<string> (optional radix<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[(optional locales<Intl.LocalesArgument>) (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[(optional radix<number>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toFixed",
        "isStatic": false,
        "params": "[(optional fractionDigits<number>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toExponential",
        "isStatic": false,
        "params": "[(optional fractionDigits<number>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toPrecision",
        "isStatic": false,
        "params": "[(optional precision<number>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional value<any>)]",
        "returnType": "Number"
      },
      {
        "kind": "Constructor",
        "params": "[(optional value<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Number"
      },
      {
        "kind": "Property",
        "name": "MAX_VALUE",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "MIN_VALUE",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "NaN",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "NEGATIVE_INFINITY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "POSITIVE_INFINITY",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[(optional locales<(or string (array string))>) (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "Object": {
    "kind": "GlobalObject",
    "name": "Object",
    "members": [
      {
        "kind": "Method",
        "name": "assign",
        "isStatic": false,
        "params": "[target<T> source<U>]",
        "returnType": "(intersect T U)"
      },
      {
        "kind": "Method",
        "name": "assign",
        "isStatic": false,
        "params": "[target<T> source1<U> source2<V>]",
        "returnType": "(intersect T U V)"
      },
      {
        "kind": "Method",
        "name": "assign",
        "isStatic": false,
        "params": "[target<T> source1<U> source2<V> source3<W>]",
        "returnType": "(intersect T U V W)"
      },
      {
        "kind": "Method",
        "name": "assign",
        "isStatic": false,
        "params": "[target<object> (& rest<sources<(array any)>>)]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "getOwnPropertySymbols",
        "isStatic": false,
        "params": "[o<any>]",
        "returnType": "(array symbol)"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[o<{}>]",
        "returnType": "(array string)"
      },
      {
        "kind": "Method",
        "name": "is",
        "isStatic": false,
        "params": "[value1<any> value2<any>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setPrototypeOf",
        "isStatic": false,
        "params": "[o<any> proto<(or object null)>]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[o<(or {{:key string :value T}} ArrayLike<T>)>]",
        "returnType": "(array T)"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[o<{}>]",
        "returnType": "(array any)"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[o<(or {{:key string :value T}} ArrayLike<T>)>]",
        "returnType": "(array [string T])"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[o<{}>]",
        "returnType": "(array [string any])"
      },
      {
        "kind": "Method",
        "name": "getOwnPropertyDescriptors",
        "isStatic": false,
        "params": "[o<T>]",
        "returnType": "(intersect {:{:name P :constraint keyof T :type (keyof T T)} TypedPropertyDescriptor<(get T P)>} {{:key string :value PropertyDescriptor}})"
      },
      {
        "kind": "Method",
        "name": "fromEntries",
        "isStatic": false,
        "params": "[entries<Iterable<(readonly [PropertyKey, T] [PropertyKey T])>>]",
        "returnType": "{{:key string :value T}}"
      },
      {
        "kind": "Method",
        "name": "fromEntries",
        "isStatic": false,
        "params": "[entries<Iterable<(readonly any[] (array any))>>]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "hasOwn",
        "isStatic": false,
        "params": "[o<object> v<PropertyKey>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "groupBy",
        "isStatic": false,
        "params": "[items<Iterable<T>> keySelector<(function [item<T> index<number>])<K>>]",
        "returnType": "Partial<Record<K (array T)>>"
      },
      {
        "kind": "Property",
        "name": "constructor",
        "isStatic": true,
        "returnType": "Function"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "Object"
      },
      {
        "kind": "Method",
        "name": "hasOwnProperty",
        "isStatic": false,
        "params": "[v<PropertyKey>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isPrototypeOf",
        "isStatic": false,
        "params": "[v<Object>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "propertyIsEnumerable",
        "isStatic": false,
        "params": "[v<PropertyKey>]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional value<any>)]",
        "returnType": "Object"
      },
      {
        "kind": "Constructor",
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "params": "[value<any>]",
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Object"
      },
      {
        "kind": "Method",
        "name": "getPrototypeOf",
        "isStatic": false,
        "params": "[o<any>]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "getOwnPropertyDescriptor",
        "isStatic": false,
        "params": "[o<any> p<PropertyKey>]",
        "returnType": "(or PropertyDescriptor undefined)"
      },
      {
        "kind": "Method",
        "name": "getOwnPropertyNames",
        "isStatic": false,
        "params": "[o<any>]",
        "returnType": "(array string)"
      },
      {
        "kind": "Method",
        "name": "create",
        "isStatic": false,
        "params": "[o<(or object null)>]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "create",
        "isStatic": false,
        "params": "[o<(or object null)> properties<(intersect PropertyDescriptorMap ThisType<any>)>]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "defineProperty",
        "isStatic": false,
        "params": "[o<T> p<PropertyKey> attributes<(intersect PropertyDescriptor ThisType<any>)>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "defineProperties",
        "isStatic": false,
        "params": "[o<T> properties<(intersect PropertyDescriptorMap ThisType<any>)>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "seal",
        "isStatic": false,
        "params": "[o<T>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "freeze",
        "isStatic": false,
        "params": "[f<T>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "freeze",
        "isStatic": false,
        "params": "[o<T>]",
        "returnType": "Readonly<T>"
      },
      {
        "kind": "Method",
        "name": "freeze",
        "isStatic": false,
        "params": "[o<T>]",
        "returnType": "Readonly<T>"
      },
      {
        "kind": "Method",
        "name": "preventExtensions",
        "isStatic": false,
        "params": "[o<T>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "isSealed",
        "isStatic": false,
        "params": "[o<any>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isFrozen",
        "isStatic": false,
        "params": "[o<any>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isExtensible",
        "isStatic": false,
        "params": "[o<any>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[o<object>]",
        "returnType": "(array string)"
      }
    ],
    "inheritanceSources": [
      "Function"
    ]
  },
  "RegExp": {
    "kind": "GlobalObject",
    "name": "RegExp",
    "members": [
      {
        "kind": "Property",
        "name": "flags",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "sticky",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "unicode",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[pattern<(or RegExp string)> (optional flags<string>)]",
        "returnType": "RegExp"
      },
      {
        "kind": "Constructor",
        "params": "[pattern<(or RegExp string)> (optional flags<string>)]",
        "returnType": "RegExp"
      },
      {
        "kind": "Method",
        "name": "[Symbol.match]",
        "isStatic": false,
        "params": "[string<string>]",
        "returnType": "(or RegExpMatchArray null)"
      },
      {
        "kind": "Method",
        "name": "[Symbol.replace]",
        "isStatic": false,
        "params": "[string<string> replaceValue<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.replace]",
        "isStatic": false,
        "params": "[string<string> replacer<(function [substring<string> (& rest<args<(array any)>>)])<string>>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.search]",
        "isStatic": false,
        "params": "[string<string>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "[Symbol.split]",
        "isStatic": false,
        "params": "[string<string> (optional limit<number>)]",
        "returnType": "(array string)"
      },
      {
        "kind": "Property",
        "name": "[Symbol.species]",
        "isStatic": true,
        "returnType": "RegExpConstructor"
      },
      {
        "kind": "Property",
        "name": "dotAll",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "[Symbol.matchAll]",
        "isStatic": false,
        "params": "[str<string>]",
        "returnType": "RegExpStringIterator<RegExpMatchArray>"
      },
      {
        "kind": "Property",
        "name": "hasIndices",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "unicodeSets",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "source",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "global",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "ignoreCase",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "multiline",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "lastIndex",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "exec",
        "isStatic": false,
        "params": "[string<string>]",
        "returnType": "(or RegExpExecArray null)"
      },
      {
        "kind": "Method",
        "name": "test",
        "isStatic": false,
        "params": "[string<string>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "compile",
        "isStatic": false,
        "params": "[pattern<string> (optional flags<string>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[pattern<(or RegExp string)>]",
        "returnType": "RegExp"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[pattern<string> (optional flags<string>)]",
        "returnType": "RegExp"
      },
      {
        "kind": "Constructor",
        "params": "[pattern<(or RegExp string)>]",
        "returnType": "RegExp"
      },
      {
        "kind": "Constructor",
        "params": "[pattern<string> (optional flags<string>)]",
        "returnType": "RegExp"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "String": {
    "kind": "GlobalObject",
    "name": "String",
    "members": [
      {
        "kind": "Method",
        "name": "codePointAt",
        "isStatic": false,
        "params": "[pos<number>]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchString<string> (optional position<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "endsWith",
        "isStatic": false,
        "params": "[searchString<string> (optional endPosition<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "normalize",
        "isStatic": false,
        "params": "[form<(or \"NFC\" \"NFD\" \"NFKC\" \"NFKD\")>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "normalize",
        "isStatic": false,
        "params": "[(optional form<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "repeat",
        "isStatic": false,
        "params": "[count<number>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "startsWith",
        "isStatic": false,
        "params": "[searchString<string> (optional position<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "anchor",
        "isStatic": false,
        "params": "[name<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "big",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "blink",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "bold",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "fixed",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "fontcolor",
        "isStatic": false,
        "params": "[color<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "fontsize",
        "isStatic": false,
        "params": "[size<number>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "fontsize",
        "isStatic": false,
        "params": "[size<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "italics",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "link",
        "isStatic": false,
        "params": "[url<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "small",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "strike",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "sub",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "sup",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "fromCodePoint",
        "isStatic": false,
        "params": "[(& rest<codePoints<(array number)>>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "raw",
        "isStatic": false,
        "params": "[template<{(property {:raw (or (readonly string[] (array string)) ArrayLike<string>)})}> (& rest<substitutions<(array any)>>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "StringIterator<string>"
      },
      {
        "kind": "Method",
        "name": "match",
        "isStatic": false,
        "params": "[matcher<{(method [string<string>])<(or RegExpMatchArray null)>}>]",
        "returnType": "(or RegExpMatchArray null)"
      },
      {
        "kind": "Method",
        "name": "replace",
        "isStatic": false,
        "params": "[searchValue<{(method [string<string> replaceValue<string>])<string>}> replaceValue<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "replace",
        "isStatic": false,
        "params": "[searchValue<{(method [string<string> replacer<(function [substring<string> (& rest<args<(array any)>>)])<string>>])<string>}> replacer<(function [substring<string> (& rest<args<(array any)>>)])<string>>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "search",
        "isStatic": false,
        "params": "[searcher<{(method [string<string>])<number>}>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "split",
        "isStatic": false,
        "params": "[splitter<{(method [string<string> (optional limit<number>)])<(array string)>}> (optional limit<number>)]",
        "returnType": "(array string)"
      },
      {
        "kind": "Method",
        "name": "padStart",
        "isStatic": false,
        "params": "[maxLength<number> (optional fillString<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "padEnd",
        "isStatic": false,
        "params": "[maxLength<number> (optional fillString<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "trimEnd",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "trimStart",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "trimLeft",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "trimRight",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "matchAll",
        "isStatic": false,
        "params": "[regexp<RegExp>]",
        "returnType": "RegExpStringIterator<RegExpExecArray>"
      },
      {
        "kind": "Method",
        "name": "toLocaleLowerCase",
        "isStatic": false,
        "params": "[(optional locales<Intl.LocalesArgument>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleUpperCase",
        "isStatic": false,
        "params": "[(optional locales<Intl.LocalesArgument>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "localeCompare",
        "isStatic": false,
        "params": "[that<string> (optional locales<Intl.LocalesArgument>) (optional options<Intl.CollatorOptions>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "replaceAll",
        "isStatic": false,
        "params": "[searchValue<(or string RegExp)> replaceValue<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "replaceAll",
        "isStatic": false,
        "params": "[searchValue<(or string RegExp)> replacer<(function [substring<string> (& rest<args<(array any)>>)])<string>>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or string undefined)"
      },
      {
        "kind": "Method",
        "name": "isWellFormed",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "toWellFormed",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "charAt",
        "isStatic": false,
        "params": "[pos<number>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "charCodeAt",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "concat",
        "isStatic": false,
        "params": "[(& rest<strings<(array string)>>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchString<string> (optional position<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchString<string> (optional position<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "localeCompare",
        "isStatic": false,
        "params": "[that<string>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "match",
        "isStatic": false,
        "params": "[regexp<(or string RegExp)>]",
        "returnType": "(or RegExpMatchArray null)"
      },
      {
        "kind": "Method",
        "name": "replace",
        "isStatic": false,
        "params": "[searchValue<(or string RegExp)> replaceValue<string>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "replace",
        "isStatic": false,
        "params": "[searchValue<(or string RegExp)> replacer<(function [substring<string> (& rest<args<(array any)>>)])<string>>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "search",
        "isStatic": false,
        "params": "[regexp<(or string RegExp)>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "split",
        "isStatic": false,
        "params": "[separator<(or string RegExp)> (optional limit<number>)]",
        "returnType": "(array string)"
      },
      {
        "kind": "Method",
        "name": "substring",
        "isStatic": false,
        "params": "[start<number> (optional end<number>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLowerCase",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleLowerCase",
        "isStatic": false,
        "params": "[(optional locales<(or string (array string))>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toUpperCase",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleUpperCase",
        "isStatic": false,
        "params": "[(optional locales<(or string (array string))>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "trim",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "substr",
        "isStatic": false,
        "params": "[from<number> (optional length<number>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional value<any>)]",
        "returnType": "String"
      },
      {
        "kind": "Constructor",
        "params": "[(optional value<any>)]",
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "String"
      },
      {
        "kind": "Method",
        "name": "fromCharCode",
        "isStatic": false,
        "params": "[(& rest<codes<(array number)>>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "localeCompare",
        "isStatic": false,
        "params": "[that<string> (optional locales<(or string (array string))>) (optional options<Intl.CollatorOptions>)]",
        "returnType": "number"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "Int8Array": {
    "kind": "GlobalObject",
    "name": "Int8Array",
    "members": [
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number number]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[elements<Iterable<number>>]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<number>>]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<T>> (optional mapfn<(function [v<T> k<number>])<number>>) (optional thisArg<any>)]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"Int8Array\""
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLastIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toReversed",
        "isStatic": false,
        "params": "[]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toSorted",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "with",
        "isStatic": false,
        "params": "[index<number> value<number>]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "TArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "byteOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "copyWithin",
        "isStatic": false,
        "params": "[target<number> start<number> (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "fill",
        "isStatic": false,
        "params": "[value<number> (optional start<number>) (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<any>> (optional thisArg<any>)]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "join",
        "isStatic": false,
        "params": "[(optional separator<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "map",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<number>> (optional thisArg<any>)]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[array<ArrayLike<number>> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "some",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "subarray",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "Int8Array<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[length<number>]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<ArrayLike<number>>]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[buffer<TArrayBuffer> (optional byteOffset<number>) (optional length<number>)]",
        "returnType": "Int8Array<TArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<(or ArrayLike<number> ArrayBuffer)>]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Int8Array<ArrayBufferLike>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[(& rest<items<(array number)>>)]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<number>>]",
        "returnType": "Int8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<T>> mapfn<(function [v<T> k<number>])<number>> (optional thisArg<any>)]",
        "returnType": "Int8Array<ArrayBuffer>"
      }
    ],
    "inheritanceSources": [
      "TypedArray",
      "Object",
      "Function"
    ]
  },
  "Uint8Array": {
    "kind": "GlobalObject",
    "name": "Uint8Array",
    "members": [
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number number]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[elements<Iterable<number>>]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<number>>]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<T>> (optional mapfn<(function [v<T> k<number>])<number>>) (optional thisArg<any>)]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"Uint8Array\""
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLastIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toReversed",
        "isStatic": false,
        "params": "[]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toSorted",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "with",
        "isStatic": false,
        "params": "[index<number> value<number>]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "TArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "byteOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "copyWithin",
        "isStatic": false,
        "params": "[target<number> start<number> (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "fill",
        "isStatic": false,
        "params": "[value<number> (optional start<number>) (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<any>> (optional thisArg<any>)]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "join",
        "isStatic": false,
        "params": "[(optional separator<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "map",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<number>> (optional thisArg<any>)]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[array<ArrayLike<number>> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "some",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "subarray",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "Uint8Array<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[length<number>]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<ArrayLike<number>>]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[buffer<TArrayBuffer> (optional byteOffset<number>) (optional length<number>)]",
        "returnType": "Uint8Array<TArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<(or ArrayLike<number> ArrayBuffer)>]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Uint8Array<ArrayBufferLike>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[(& rest<items<(array number)>>)]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<number>>]",
        "returnType": "Uint8Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<T>> mapfn<(function [v<T> k<number>])<number>> (optional thisArg<any>)]",
        "returnType": "Uint8Array<ArrayBuffer>"
      }
    ],
    "inheritanceSources": [
      "TypedArray",
      "Object",
      "Function"
    ]
  },
  "Uint8ClampedArray": {
    "kind": "GlobalObject",
    "name": "Uint8ClampedArray",
    "members": [
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number number]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[elements<Iterable<number>>]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<number>>]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<T>> (optional mapfn<(function [v<T> k<number>])<number>>) (optional thisArg<any>)]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"Uint8ClampedArray\""
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLastIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toReversed",
        "isStatic": false,
        "params": "[]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toSorted",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "with",
        "isStatic": false,
        "params": "[index<number> value<number>]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "TArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "byteOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "copyWithin",
        "isStatic": false,
        "params": "[target<number> start<number> (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "fill",
        "isStatic": false,
        "params": "[value<number> (optional start<number>) (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<any>> (optional thisArg<any>)]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "join",
        "isStatic": false,
        "params": "[(optional separator<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "map",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<number>> (optional thisArg<any>)]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[array<ArrayLike<number>> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "some",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "subarray",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "Uint8ClampedArray<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[length<number>]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<ArrayLike<number>>]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[buffer<TArrayBuffer> (optional byteOffset<number>) (optional length<number>)]",
        "returnType": "Uint8ClampedArray<TArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<(or ArrayLike<number> ArrayBuffer)>]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Uint8ClampedArray<ArrayBufferLike>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[(& rest<items<(array number)>>)]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<number>>]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<T>> mapfn<(function [v<T> k<number>])<number>> (optional thisArg<any>)]",
        "returnType": "Uint8ClampedArray<ArrayBuffer>"
      }
    ],
    "inheritanceSources": [
      "TypedArray",
      "Object",
      "Function"
    ]
  },
  "Int16Array": {
    "kind": "GlobalObject",
    "name": "Int16Array",
    "members": [
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number number]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[elements<Iterable<number>>]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<number>>]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<T>> (optional mapfn<(function [v<T> k<number>])<number>>) (optional thisArg<any>)]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"Int16Array\""
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLastIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toReversed",
        "isStatic": false,
        "params": "[]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toSorted",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "with",
        "isStatic": false,
        "params": "[index<number> value<number>]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "TArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "byteOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "copyWithin",
        "isStatic": false,
        "params": "[target<number> start<number> (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "fill",
        "isStatic": false,
        "params": "[value<number> (optional start<number>) (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<any>> (optional thisArg<any>)]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "join",
        "isStatic": false,
        "params": "[(optional separator<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "map",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<number>> (optional thisArg<any>)]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[array<ArrayLike<number>> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "some",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "subarray",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "Int16Array<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[length<number>]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<ArrayLike<number>>]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[buffer<TArrayBuffer> (optional byteOffset<number>) (optional length<number>)]",
        "returnType": "Int16Array<TArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<(or ArrayLike<number> ArrayBuffer)>]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Int16Array<ArrayBufferLike>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[(& rest<items<(array number)>>)]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<number>>]",
        "returnType": "Int16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<T>> mapfn<(function [v<T> k<number>])<number>> (optional thisArg<any>)]",
        "returnType": "Int16Array<ArrayBuffer>"
      }
    ],
    "inheritanceSources": [
      "TypedArray",
      "Object",
      "Function"
    ]
  },
  "Uint16Array": {
    "kind": "GlobalObject",
    "name": "Uint16Array",
    "members": [
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number number]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[elements<Iterable<number>>]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<number>>]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<T>> (optional mapfn<(function [v<T> k<number>])<number>>) (optional thisArg<any>)]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"Uint16Array\""
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLastIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toReversed",
        "isStatic": false,
        "params": "[]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toSorted",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "with",
        "isStatic": false,
        "params": "[index<number> value<number>]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "TArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "byteOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "copyWithin",
        "isStatic": false,
        "params": "[target<number> start<number> (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "fill",
        "isStatic": false,
        "params": "[value<number> (optional start<number>) (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<any>> (optional thisArg<any>)]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "join",
        "isStatic": false,
        "params": "[(optional separator<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "map",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<number>> (optional thisArg<any>)]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[array<ArrayLike<number>> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "some",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "subarray",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "Uint16Array<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[length<number>]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<ArrayLike<number>>]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[buffer<TArrayBuffer> (optional byteOffset<number>) (optional length<number>)]",
        "returnType": "Uint16Array<TArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<(or ArrayLike<number> ArrayBuffer)>]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Uint16Array<ArrayBufferLike>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[(& rest<items<(array number)>>)]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<number>>]",
        "returnType": "Uint16Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<T>> mapfn<(function [v<T> k<number>])<number>> (optional thisArg<any>)]",
        "returnType": "Uint16Array<ArrayBuffer>"
      }
    ],
    "inheritanceSources": [
      "TypedArray",
      "Object",
      "Function"
    ]
  },
  "Int32Array": {
    "kind": "GlobalObject",
    "name": "Int32Array",
    "members": [
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number number]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[elements<Iterable<number>>]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<number>>]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<T>> (optional mapfn<(function [v<T> k<number>])<number>>) (optional thisArg<any>)]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"Int32Array\""
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLastIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toReversed",
        "isStatic": false,
        "params": "[]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toSorted",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "with",
        "isStatic": false,
        "params": "[index<number> value<number>]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "TArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "byteOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "copyWithin",
        "isStatic": false,
        "params": "[target<number> start<number> (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "fill",
        "isStatic": false,
        "params": "[value<number> (optional start<number>) (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<any>> (optional thisArg<any>)]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "join",
        "isStatic": false,
        "params": "[(optional separator<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "map",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<number>> (optional thisArg<any>)]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[array<ArrayLike<number>> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "some",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "subarray",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "Int32Array<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[length<number>]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<ArrayLike<number>>]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[buffer<TArrayBuffer> (optional byteOffset<number>) (optional length<number>)]",
        "returnType": "Int32Array<TArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<(or ArrayLike<number> ArrayBuffer)>]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Int32Array<ArrayBufferLike>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[(& rest<items<(array number)>>)]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<number>>]",
        "returnType": "Int32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<T>> mapfn<(function [v<T> k<number>])<number>> (optional thisArg<any>)]",
        "returnType": "Int32Array<ArrayBuffer>"
      }
    ],
    "inheritanceSources": [
      "TypedArray",
      "Object",
      "Function"
    ]
  },
  "Uint32Array": {
    "kind": "GlobalObject",
    "name": "Uint32Array",
    "members": [
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number number]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[elements<Iterable<number>>]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<number>>]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<T>> (optional mapfn<(function [v<T> k<number>])<number>>) (optional thisArg<any>)]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"Uint32Array\""
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLastIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toReversed",
        "isStatic": false,
        "params": "[]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toSorted",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "with",
        "isStatic": false,
        "params": "[index<number> value<number>]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "TArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "byteOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "copyWithin",
        "isStatic": false,
        "params": "[target<number> start<number> (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "fill",
        "isStatic": false,
        "params": "[value<number> (optional start<number>) (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<any>> (optional thisArg<any>)]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "join",
        "isStatic": false,
        "params": "[(optional separator<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "map",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<number>> (optional thisArg<any>)]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[array<ArrayLike<number>> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "some",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "subarray",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "Uint32Array<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[length<number>]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<ArrayLike<number>>]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[buffer<TArrayBuffer> (optional byteOffset<number>) (optional length<number>)]",
        "returnType": "Uint32Array<TArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<(or ArrayLike<number> ArrayBuffer)>]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Uint32Array<ArrayBufferLike>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[(& rest<items<(array number)>>)]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<number>>]",
        "returnType": "Uint32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<T>> mapfn<(function [v<T> k<number>])<number>> (optional thisArg<any>)]",
        "returnType": "Uint32Array<ArrayBuffer>"
      }
    ],
    "inheritanceSources": [
      "TypedArray",
      "Object",
      "Function"
    ]
  },
  "Float32Array": {
    "kind": "GlobalObject",
    "name": "Float32Array",
    "members": [
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number number]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[elements<Iterable<number>>]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<number>>]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<T>> (optional mapfn<(function [v<T> k<number>])<number>>) (optional thisArg<any>)]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"Float32Array\""
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLastIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toReversed",
        "isStatic": false,
        "params": "[]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toSorted",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "with",
        "isStatic": false,
        "params": "[index<number> value<number>]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "TArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "byteOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "copyWithin",
        "isStatic": false,
        "params": "[target<number> start<number> (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "fill",
        "isStatic": false,
        "params": "[value<number> (optional start<number>) (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<any>> (optional thisArg<any>)]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "join",
        "isStatic": false,
        "params": "[(optional separator<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "map",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<number>> (optional thisArg<any>)]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[array<ArrayLike<number>> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "some",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "subarray",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "Float32Array<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[length<number>]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<ArrayLike<number>>]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[buffer<TArrayBuffer> (optional byteOffset<number>) (optional length<number>)]",
        "returnType": "Float32Array<TArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<(or ArrayLike<number> ArrayBuffer)>]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Float32Array<ArrayBufferLike>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[(& rest<items<(array number)>>)]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<number>>]",
        "returnType": "Float32Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<T>> mapfn<(function [v<T> k<number>])<number>> (optional thisArg<any>)]",
        "returnType": "Float32Array<ArrayBuffer>"
      }
    ],
    "inheritanceSources": [
      "TypedArray",
      "Object",
      "Function"
    ]
  },
  "Float64Array": {
    "kind": "GlobalObject",
    "name": "Float64Array",
    "members": [
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number number]>"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[elements<Iterable<number>>]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<number>>]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<Iterable<T>> (optional mapfn<(function [v<T> k<number>])<number>>) (optional thisArg<any>)]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"Float64Array\""
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findLastIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toReversed",
        "isStatic": false,
        "params": "[]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toSorted",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "with",
        "isStatic": false,
        "params": "[index<number> value<number>]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "TArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "byteOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "copyWithin",
        "isStatic": false,
        "params": "[target<number> start<number> (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "fill",
        "isStatic": false,
        "params": "[value<number> (optional start<number>) (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<any>> (optional thisArg<any>)]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "(or number undefined)"
      },
      {
        "kind": "Method",
        "name": "findIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> obj<(this)>])<boolean>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "join",
        "isStatic": false,
        "params": "[(optional separator<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchElement<number> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "map",
        "isStatic": false,
        "params": "[callbackfn<(function [value<number> index<number> array<(this)>])<number>> (optional thisArg<any>)]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<number> currentValue<number> currentIndex<number> array<(this)>])<number>> initialValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<number> currentIndex<number> array<(this)>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[array<ArrayLike<number>> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "some",
        "isStatic": false,
        "params": "[predicate<(function [value<number> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<number> b<number>])<number>>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "subarray",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "Float64Array<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[length<number>]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<ArrayLike<number>>]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[buffer<TArrayBuffer> (optional byteOffset<number>) (optional length<number>)]",
        "returnType": "Float64Array<TArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<(or ArrayLike<number> ArrayBuffer)>]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Float64Array<ArrayBufferLike>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[(& rest<items<(array number)>>)]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<number>>]",
        "returnType": "Float64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<T>> mapfn<(function [v<T> k<number>])<number>> (optional thisArg<any>)]",
        "returnType": "Float64Array<ArrayBuffer>"
      }
    ],
    "inheritanceSources": [
      "TypedArray",
      "Object",
      "Function"
    ]
  },
  "Symbol": {
    "kind": "GlobalObject",
    "name": "Symbol",
    "members": [
      {
        "kind": "Property",
        "name": "iterator",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Constructor",
        "params": "[(optional description<(or string number)>)]",
        "returnType": "symbol"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Symbol"
      },
      {
        "kind": "Method",
        "name": "for",
        "isStatic": false,
        "params": "[key<string>]",
        "returnType": "symbol"
      },
      {
        "kind": "Method",
        "name": "keyFor",
        "isStatic": false,
        "params": "[sym<symbol>]",
        "returnType": "(or string undefined)"
      },
      {
        "kind": "Property",
        "name": "hasInstance",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Property",
        "name": "isConcatSpreadable",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Property",
        "name": "match",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Property",
        "name": "replace",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Property",
        "name": "search",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Property",
        "name": "species",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Property",
        "name": "split",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Property",
        "name": "toPrimitive",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Property",
        "name": "toStringTag",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Property",
        "name": "unscopables",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "[Symbol.toPrimitive]",
        "isStatic": false,
        "params": "[hint<string>]",
        "returnType": "symbol"
      },
      {
        "kind": "Property",
        "name": "description",
        "isStatic": true,
        "returnType": "(or string undefined)"
      },
      {
        "kind": "Property",
        "name": "matchAll",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "symbol"
      },
      {
        "kind": "Property",
        "name": "metadata",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Property",
        "name": "dispose",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      },
      {
        "kind": "Property",
        "name": "asyncDispose",
        "isStatic": true,
        "returnType": "(unique symbol symbol)"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "Iterator": {
    "kind": "GlobalObject",
    "name": "Iterator",
    "members": [
      {
        "kind": "Method",
        "name": "next",
        "isStatic": false,
        "params": "[(& rest<[value]<(or [] [TNext])>>)]",
        "returnType": "IteratorResult<T TReturn>"
      },
      {
        "kind": "Method",
        "name": "return",
        "isStatic": true,
        "params": "[(optional value<TReturn>)]",
        "returnType": "IteratorResult<T TReturn>"
      },
      {
        "kind": "Method",
        "name": "throw",
        "isStatic": true,
        "params": "[(optional e<any>)]",
        "returnType": "IteratorResult<T TReturn>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[value<(or Iterator<T unknown undefined> Iterable<T unknown undefined>)>]",
        "returnType": "IteratorObject<T undefined unknown>"
      },
      {
        "kind": "Method",
        "name": "next",
        "isStatic": false,
        "params": "[(optional value<TNext>)]",
        "returnType": "IteratorResult<T TResult>"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "Promise": {
    "kind": "GlobalObject",
    "name": "Promise",
    "members": [
      {
        "kind": "Method",
        "name": "all",
        "isStatic": false,
        "params": "[values<Iterable<(or T PromiseLike<T>)>>]",
        "returnType": "Promise<(array Awaited<T>)>"
      },
      {
        "kind": "Method",
        "name": "race",
        "isStatic": false,
        "params": "[values<Iterable<(or T PromiseLike<T>)>>]",
        "returnType": "Promise<Awaited<T>>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[executor<(function [resolve<(function [value<(or T PromiseLike<T>)>])<void>> reject<(function [(optional reason<any>)])<void>>])<void>>]",
        "returnType": "Promise<T>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Promise<any>"
      },
      {
        "kind": "Method",
        "name": "all",
        "isStatic": false,
        "params": "[values<T>]",
        "returnType": "Promise<{:{:name P :constraint keyof T :type (keyof T T)} Awaited<(get T P)>}>"
      },
      {
        "kind": "Method",
        "name": "race",
        "isStatic": false,
        "params": "[values<T>]",
        "returnType": "Promise<Awaited<(get T number)>>"
      },
      {
        "kind": "Method",
        "name": "reject",
        "isStatic": false,
        "params": "[(optional reason<any>)]",
        "returnType": "Promise<T>"
      },
      {
        "kind": "Method",
        "name": "resolve",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "resolve",
        "isStatic": false,
        "params": "[value<T>]",
        "returnType": "Promise<Awaited<T>>"
      },
      {
        "kind": "Method",
        "name": "resolve",
        "isStatic": false,
        "params": "[value<(or T PromiseLike<T>)>]",
        "returnType": "Promise<Awaited<T>>"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "[Symbol.species]",
        "isStatic": true,
        "returnType": "PromiseConstructor"
      },
      {
        "kind": "Method",
        "name": "finally",
        "isStatic": false,
        "params": "[(optional onfinally<(or (list (function [])<void>) undefined null)>)]",
        "returnType": "Promise<T>"
      },
      {
        "kind": "Method",
        "name": "allSettled",
        "isStatic": false,
        "params": "[values<T>]",
        "returnType": "Promise<{:{:name P :constraint keyof T :type (keyof T T)} PromiseSettledResult<Awaited<(get T P)>>}>"
      },
      {
        "kind": "Method",
        "name": "allSettled",
        "isStatic": false,
        "params": "[values<Iterable<(or T PromiseLike<T>)>>]",
        "returnType": "Promise<(array PromiseSettledResult<Awaited<T>>)>"
      },
      {
        "kind": "Method",
        "name": "any",
        "isStatic": false,
        "params": "[values<T>]",
        "returnType": "Promise<Awaited<(get T number)>>"
      },
      {
        "kind": "Method",
        "name": "any",
        "isStatic": false,
        "params": "[values<Iterable<(or T PromiseLike<T>)>>]",
        "returnType": "Promise<Awaited<T>>"
      },
      {
        "kind": "Method",
        "name": "withResolvers",
        "isStatic": false,
        "params": "[]",
        "returnType": "PromiseWithResolvers<T>"
      },
      {
        "kind": "Method",
        "name": "then",
        "isStatic": false,
        "params": "[(optional onfulfilled<(or (list (function [value<T>])<(or TResult1 PromiseLike<TResult1>)>) undefined null)>) (optional onrejected<(or (list (function [reason<any>])<(or TResult2 PromiseLike<TResult2>)>) undefined null)>)]",
        "returnType": "Promise<(or TResult1 TResult2)>"
      },
      {
        "kind": "Method",
        "name": "catch",
        "isStatic": false,
        "params": "[(optional onrejected<(or (list (function [reason<any>])<(or TResult PromiseLike<TResult>)>) undefined null)>)]",
        "returnType": "Promise<(or T TResult)>"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "Proxy": {
    "kind": "GlobalObject",
    "name": "Proxy",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[target<T> handler<ProxyHandler<T>>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "revocable",
        "isStatic": false,
        "params": "[target<T> handler<ProxyHandler<T>>]",
        "returnType": "{(property {:proxy T}) (property {:revoke (function [])<void>})}"
      }
    ]
  },
  "Reflect": {
    "kind": "GlobalObject",
    "name": "Reflect",
    "members": [
      {
        "kind": "Method",
        "name": "apply",
        "isStatic": true,
        "params": "[target<(function [this<T> (& rest<args<A>>)])<R>> thisArgument<T> argumentsList<Readonly<A>>]",
        "returnType": "R"
      },
      {
        "kind": "Method",
        "name": "apply",
        "isStatic": true,
        "params": "[target<Function> thisArgument<any> argumentsList<ArrayLike<any>>]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "construct",
        "isStatic": true,
        "params": "[target<(new [(& rest<args<A>>)] R)> argumentsList<Readonly<A>> (optional newTarget<(new [(& rest<args<any>>)] any)>)]",
        "returnType": "R"
      },
      {
        "kind": "Method",
        "name": "construct",
        "isStatic": true,
        "params": "[target<Function> argumentsList<ArrayLike<any>> (optional newTarget<Function>)]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "defineProperty",
        "isStatic": true,
        "params": "[target<object> propertyKey<PropertyKey> attributes<(intersect PropertyDescriptor ThisType<any>)>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "deleteProperty",
        "isStatic": true,
        "params": "[target<object> propertyKey<PropertyKey>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": true,
        "params": "[target<T> propertyKey<P> (optional receiver<unknown>)]",
        "returnType": "(if (extends P (keyof T T)) (get T P) any)"
      },
      {
        "kind": "Method",
        "name": "getOwnPropertyDescriptor",
        "isStatic": true,
        "params": "[target<T> propertyKey<P>]",
        "returnType": "(or TypedPropertyDescriptor<(if (extends P (keyof T T)) (get T P) any)> undefined)"
      },
      {
        "kind": "Method",
        "name": "getPrototypeOf",
        "isStatic": true,
        "params": "[target<object>]",
        "returnType": "(or object null)"
      },
      {
        "kind": "Method",
        "name": "has",
        "isStatic": true,
        "params": "[target<object> propertyKey<PropertyKey>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isExtensible",
        "isStatic": true,
        "params": "[target<object>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ownKeys",
        "isStatic": true,
        "params": "[target<object>]",
        "returnType": "(array (list (or string symbol)))"
      },
      {
        "kind": "Method",
        "name": "preventExtensions",
        "isStatic": true,
        "params": "[target<object>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": true,
        "params": "[target<T> propertyKey<P> value<(if (extends P (keyof T T)) (get T P) any)> (optional receiver<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": true,
        "params": "[target<object> propertyKey<PropertyKey> value<any> (optional receiver<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setPrototypeOf",
        "isStatic": true,
        "params": "[target<object> proto<(or object null)>]",
        "returnType": "boolean"
      }
    ],
    "namespace": "Reflect"
  },
  "JSON": {
    "kind": "GlobalObject",
    "name": "JSON",
    "members": [
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "parse",
        "isStatic": false,
        "params": "[text<string> (optional reviver<(function [this<any> key<string> value<any>])<any>>)]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "stringify",
        "isStatic": false,
        "params": "[value<any> (optional replacer<(function [this<any> key<string> value<any>])<any>>) (optional space<(or string number)>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "stringify",
        "isStatic": false,
        "params": "[value<any> (optional replacer<(or (array (list (or number string))) null)>) (optional space<(or string number)>)]",
        "returnType": "string"
      }
    ]
  },
  "ArrayBuffer": {
    "kind": "GlobalObject",
    "name": "ArrayBuffer",
    "members": [
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "[Symbol.species]",
        "isStatic": true,
        "returnType": "ArrayBufferConstructor"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Method",
        "name": "resize",
        "isStatic": false,
        "params": "[(optional newByteLength<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "transfer",
        "isStatic": false,
        "params": "[(optional newByteLength<number>)]",
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Method",
        "name": "transferToFixedLength",
        "isStatic": false,
        "params": "[(optional newByteLength<number>)]",
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[byteLength<number> (optional options<{(property (optional {:maxByteLength number}))}>)]",
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[byteLength<number>]",
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Method",
        "name": "isView",
        "isStatic": false,
        "params": "[arg<any>]",
        "returnType": "(predicate arg ArrayBufferView)"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "DataView": {
    "kind": "GlobalObject",
    "name": "DataView",
    "members": [
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getBigInt64",
        "isStatic": false,
        "params": "[byteOffset<number> (optional littleEndian<boolean>)]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "getBigUint64",
        "isStatic": false,
        "params": "[byteOffset<number> (optional littleEndian<boolean>)]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "setBigInt64",
        "isStatic": false,
        "params": "[byteOffset<number> value<bigint> (optional littleEndian<boolean>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setBigUint64",
        "isStatic": false,
        "params": "[byteOffset<number> value<bigint> (optional littleEndian<boolean>)]",
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "TArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "byteOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getFloat32",
        "isStatic": false,
        "params": "[byteOffset<number> (optional littleEndian<boolean>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getFloat64",
        "isStatic": false,
        "params": "[byteOffset<number> (optional littleEndian<boolean>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getInt8",
        "isStatic": false,
        "params": "[byteOffset<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getInt16",
        "isStatic": false,
        "params": "[byteOffset<number> (optional littleEndian<boolean>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getInt32",
        "isStatic": false,
        "params": "[byteOffset<number> (optional littleEndian<boolean>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getUint8",
        "isStatic": false,
        "params": "[byteOffset<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getUint16",
        "isStatic": false,
        "params": "[byteOffset<number> (optional littleEndian<boolean>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getUint32",
        "isStatic": false,
        "params": "[byteOffset<number> (optional littleEndian<boolean>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "setFloat32",
        "isStatic": false,
        "params": "[byteOffset<number> value<number> (optional littleEndian<boolean>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setFloat64",
        "isStatic": false,
        "params": "[byteOffset<number> value<number> (optional littleEndian<boolean>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setInt8",
        "isStatic": false,
        "params": "[byteOffset<number> value<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setInt16",
        "isStatic": false,
        "params": "[byteOffset<number> value<number> (optional littleEndian<boolean>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setInt32",
        "isStatic": false,
        "params": "[byteOffset<number> value<number> (optional littleEndian<boolean>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setUint8",
        "isStatic": false,
        "params": "[byteOffset<number> value<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setUint16",
        "isStatic": false,
        "params": "[byteOffset<number> value<number> (optional littleEndian<boolean>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setUint32",
        "isStatic": false,
        "params": "[byteOffset<number> value<number> (optional littleEndian<boolean>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[buffer<TArrayBuffer> (optional byteOffset<number>) (optional byteLength<number>)]",
        "returnType": "DataView<TArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "DataView<ArrayBufferLike>"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "Intl": {
    "kind": "GlobalObject",
    "name": "Intl",
    "members": [
      {
        "kind": "Method",
        "name": "getCanonicalLocales",
        "isStatic": true,
        "params": "[(optional locale<(or string (readonly string[] (array string)))>)]",
        "returnType": "(array string)"
      },
      {
        "kind": "Property",
        "name": "PluralRules",
        "isStatic": true,
        "returnType": "PluralRulesConstructor"
      },
      {
        "kind": "Property",
        "name": "RelativeTimeFormat",
        "isStatic": true,
        "returnType": "{(new [(optional locales<LocalesArgument>) (optional options<RelativeTimeFormatOptions>)] RelativeTimeFormat) (method [(optional locales<LocalesArgument>) (optional options<RelativeTimeFormatOptions>)])<(array UnicodeBCP47LocaleIdentifier)>}"
      },
      {
        "kind": "Property",
        "name": "Locale",
        "isStatic": true,
        "returnType": "{(new [tag<(or UnicodeBCP47LocaleIdentifier Locale)> (optional options<LocaleOptions>)] Locale)}"
      },
      {
        "kind": "Property",
        "name": "DisplayNames",
        "isStatic": true,
        "returnType": "{(property {:prototype DisplayNames}) (new [locales<LocalesArgument> options<DisplayNamesOptions>] DisplayNames) (method [(optional locales<LocalesArgument>) (optional options<{(property (optional {:localeMatcher RelativeTimeFormatLocaleMatcher}))}>)])<(array UnicodeBCP47LocaleIdentifier)>}"
      },
      {
        "kind": "Property",
        "name": "ListFormat",
        "isStatic": true,
        "returnType": "{(property {:prototype ListFormat}) (new [(optional locales<LocalesArgument>) (optional options<ListFormatOptions>)] ListFormat) (method [locales<LocalesArgument> (optional options<Pick<ListFormatOptions \"localeMatcher\">>)])<(array UnicodeBCP47LocaleIdentifier)>}"
      },
      {
        "kind": "Property",
        "name": "Segmenter",
        "isStatic": true,
        "returnType": "{(property {:prototype Segmenter}) (new [(optional locales<LocalesArgument>) (optional options<SegmenterOptions>)] Segmenter) (method [locales<LocalesArgument> (optional options<Pick<SegmenterOptions \"localeMatcher\">>)])<(array UnicodeBCP47LocaleIdentifier)>}"
      },
      {
        "kind": "Method",
        "name": "supportedValuesOf",
        "isStatic": true,
        "params": "[key<(or \"calendar\" \"collation\" \"currency\" \"numberingSystem\" \"timeZone\" \"unit\")>]",
        "returnType": "(array string)"
      },
      {
        "kind": "Property",
        "name": "Collator",
        "isStatic": true,
        "returnType": "CollatorConstructor"
      },
      {
        "kind": "Property",
        "name": "NumberFormat",
        "isStatic": true,
        "returnType": "NumberFormatConstructor"
      },
      {
        "kind": "Property",
        "name": "DateTimeFormat",
        "isStatic": true,
        "returnType": "DateTimeFormatConstructor"
      }
    ],
    "namespace": "Intl"
  },
  "DateTimeFormat": {
    "kind": "GlobalObject",
    "name": "DateTimeFormat",
    "members": [
      {
        "kind": "Method",
        "name": "formatToParts",
        "isStatic": false,
        "params": "[(optional date<(or Date number)>)]",
        "returnType": "(array DateTimeFormatPart)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional locales<LocalesArgument>) (optional options<DateTimeFormatOptions>)]",
        "returnType": "DateTimeFormat"
      },
      {
        "kind": "Constructor",
        "params": "[(optional locales<LocalesArgument>) (optional options<DateTimeFormatOptions>)]",
        "returnType": "DateTimeFormat"
      },
      {
        "kind": "Method",
        "name": "supportedLocalesOf",
        "isStatic": false,
        "params": "[locales<LocalesArgument> (optional options<DateTimeFormatOptions>)]",
        "returnType": "(array string)"
      },
      {
        "kind": "Method",
        "name": "formatRange",
        "isStatic": false,
        "params": "[startDate<(or Date number bigint)> endDate<(or Date number bigint)>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "formatRangeToParts",
        "isStatic": false,
        "params": "[startDate<(or Date number bigint)> endDate<(or Date number bigint)>]",
        "returnType": "(array DateTimeRangeFormatPart)"
      },
      {
        "kind": "Method",
        "name": "format",
        "isStatic": false,
        "params": "[(optional date<(or Date number)>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "resolvedOptions",
        "isStatic": false,
        "params": "[]",
        "returnType": "ResolvedDateTimeFormatOptions"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional locales<(or string (array string))>) (optional options<DateTimeFormatOptions>)]",
        "returnType": "DateTimeFormat"
      },
      {
        "kind": "Constructor",
        "params": "[(optional locales<(or string (array string))>) (optional options<DateTimeFormatOptions>)]",
        "returnType": "DateTimeFormat"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "DateTimeFormat"
      },
      {
        "kind": "Method",
        "name": "supportedLocalesOf",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<DateTimeFormatOptions>)]",
        "returnType": "(array string)"
      }
    ]
  },
  "SharedArrayBuffer": {
    "kind": "GlobalObject",
    "name": "SharedArrayBuffer",
    "members": [
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "[Symbol.species]",
        "isStatic": true,
        "returnType": "SharedArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"SharedArrayBuffer\""
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "SharedArrayBuffer"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional byteLength<number>)]",
        "returnType": "SharedArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "SharedArrayBuffer"
      },
      {
        "kind": "Method",
        "name": "grow",
        "isStatic": false,
        "params": "[(optional newByteLength<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[byteLength<number> (optional options<{(property (optional {:maxByteLength number}))}>)]",
        "returnType": "SharedArrayBuffer"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "Atomics": {
    "kind": "GlobalObject",
    "name": "Atomics",
    "members": [
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"Atomics\""
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[typedArray<(or Int8Array<ArrayBufferLike> Uint8Array<ArrayBufferLike> Int16Array<ArrayBufferLike> Uint16Array<ArrayBufferLike> Int32Array<ArrayBufferLike> Uint32Array<ArrayBufferLike>)> index<number> value<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "and",
        "isStatic": false,
        "params": "[typedArray<(or Int8Array<ArrayBufferLike> Uint8Array<ArrayBufferLike> Int16Array<ArrayBufferLike> Uint16Array<ArrayBufferLike> Int32Array<ArrayBufferLike> Uint32Array<ArrayBufferLike>)> index<number> value<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "compareExchange",
        "isStatic": false,
        "params": "[typedArray<(or Int8Array<ArrayBufferLike> Uint8Array<ArrayBufferLike> Int16Array<ArrayBufferLike> Uint16Array<ArrayBufferLike> Int32Array<ArrayBufferLike> Uint32Array<ArrayBufferLike>)> index<number> expectedValue<number> replacementValue<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "exchange",
        "isStatic": false,
        "params": "[typedArray<(or Int8Array<ArrayBufferLike> Uint8Array<ArrayBufferLike> Int16Array<ArrayBufferLike> Uint16Array<ArrayBufferLike> Int32Array<ArrayBufferLike> Uint32Array<ArrayBufferLike>)> index<number> value<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "isLockFree",
        "isStatic": false,
        "params": "[size<number>]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "load",
        "isStatic": false,
        "params": "[typedArray<(or Int8Array<ArrayBufferLike> Uint8Array<ArrayBufferLike> Int16Array<ArrayBufferLike> Uint16Array<ArrayBufferLike> Int32Array<ArrayBufferLike> Uint32Array<ArrayBufferLike>)> index<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "or",
        "isStatic": false,
        "params": "[typedArray<(or Int8Array<ArrayBufferLike> Uint8Array<ArrayBufferLike> Int16Array<ArrayBufferLike> Uint16Array<ArrayBufferLike> Int32Array<ArrayBufferLike> Uint32Array<ArrayBufferLike>)> index<number> value<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "store",
        "isStatic": false,
        "params": "[typedArray<(or Int8Array<ArrayBufferLike> Uint8Array<ArrayBufferLike> Int16Array<ArrayBufferLike> Uint16Array<ArrayBufferLike> Int32Array<ArrayBufferLike> Uint32Array<ArrayBufferLike>)> index<number> value<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "sub",
        "isStatic": false,
        "params": "[typedArray<(or Int8Array<ArrayBufferLike> Uint8Array<ArrayBufferLike> Int16Array<ArrayBufferLike> Uint16Array<ArrayBufferLike> Int32Array<ArrayBufferLike> Uint32Array<ArrayBufferLike>)> index<number> value<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "wait",
        "isStatic": false,
        "params": "[typedArray<Int32Array<ArrayBufferLike>> index<number> value<number> (optional timeout<number>)]",
        "returnType": "(or \"ok\" \"not-equal\" \"timed-out\")"
      },
      {
        "kind": "Method",
        "name": "notify",
        "isStatic": false,
        "params": "[typedArray<Int32Array<ArrayBufferLike>> index<number> (optional count<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "xor",
        "isStatic": false,
        "params": "[typedArray<(or Int8Array<ArrayBufferLike> Uint8Array<ArrayBufferLike> Int16Array<ArrayBufferLike> Uint16Array<ArrayBufferLike> Int32Array<ArrayBufferLike> Uint32Array<ArrayBufferLike>)> index<number> value<number>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "add",
        "isStatic": false,
        "params": "[typedArray<(or BigInt64Array<ArrayBufferLike> BigUint64Array<ArrayBufferLike>)> index<number> value<bigint>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "and",
        "isStatic": false,
        "params": "[typedArray<(or BigInt64Array<ArrayBufferLike> BigUint64Array<ArrayBufferLike>)> index<number> value<bigint>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "compareExchange",
        "isStatic": false,
        "params": "[typedArray<(or BigInt64Array<ArrayBufferLike> BigUint64Array<ArrayBufferLike>)> index<number> expectedValue<bigint> replacementValue<bigint>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "exchange",
        "isStatic": false,
        "params": "[typedArray<(or BigInt64Array<ArrayBufferLike> BigUint64Array<ArrayBufferLike>)> index<number> value<bigint>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "load",
        "isStatic": false,
        "params": "[typedArray<(or BigInt64Array<ArrayBufferLike> BigUint64Array<ArrayBufferLike>)> index<number>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "or",
        "isStatic": false,
        "params": "[typedArray<(or BigInt64Array<ArrayBufferLike> BigUint64Array<ArrayBufferLike>)> index<number> value<bigint>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "store",
        "isStatic": false,
        "params": "[typedArray<(or BigInt64Array<ArrayBufferLike> BigUint64Array<ArrayBufferLike>)> index<number> value<bigint>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "sub",
        "isStatic": false,
        "params": "[typedArray<(or BigInt64Array<ArrayBufferLike> BigUint64Array<ArrayBufferLike>)> index<number> value<bigint>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "wait",
        "isStatic": false,
        "params": "[typedArray<BigInt64Array<ArrayBufferLike>> index<number> value<bigint> (optional timeout<number>)]",
        "returnType": "(or \"ok\" \"not-equal\" \"timed-out\")"
      },
      {
        "kind": "Method",
        "name": "notify",
        "isStatic": false,
        "params": "[typedArray<BigInt64Array<ArrayBufferLike>> index<number> (optional count<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "xor",
        "isStatic": false,
        "params": "[typedArray<(or BigInt64Array<ArrayBufferLike> BigUint64Array<ArrayBufferLike>)> index<number> value<bigint>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "waitAsync",
        "isStatic": false,
        "params": "[typedArray<Int32Array> index<number> value<number> (optional timeout<number>)]",
        "returnType": "(or {(property {:async false}) (property {:value (or \"not-equal\" \"timed-out\")})} {(property {:async true}) (property {:value Promise<(or \"ok\" \"timed-out\")>})})"
      },
      {
        "kind": "Method",
        "name": "waitAsync",
        "isStatic": false,
        "params": "[typedArray<BigInt64Array> index<number> value<bigint> (optional timeout<number>)]",
        "returnType": "(or {(property {:async false}) (property {:value (or \"not-equal\" \"timed-out\")})} {(property {:async true}) (property {:value Promise<(or \"ok\" \"timed-out\")>})})"
      }
    ]
  },
  "PluralRules": {
    "kind": "GlobalObject",
    "name": "PluralRules",
    "members": [
      {
        "kind": "Method",
        "name": "resolvedOptions",
        "isStatic": false,
        "params": "[]",
        "returnType": "ResolvedPluralRulesOptions"
      },
      {
        "kind": "Method",
        "name": "select",
        "isStatic": false,
        "params": "[n<number>]",
        "returnType": "LDMLPluralRule"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional locales<(or string (readonly string[] (array string)))>) (optional options<PluralRulesOptions>)]",
        "returnType": "PluralRules"
      },
      {
        "kind": "Constructor",
        "params": "[(optional locales<(or string (readonly string[] (array string)))>) (optional options<PluralRulesOptions>)]",
        "returnType": "PluralRules"
      },
      {
        "kind": "Method",
        "name": "supportedLocalesOf",
        "isStatic": false,
        "params": "[locales<(or string (readonly string[] (array string)))> (optional options<{(property (optional {:localeMatcher (or \"lookup\" \"best fit\")}))}>)]",
        "returnType": "(array string)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional locales<LocalesArgument>) (optional options<PluralRulesOptions>)]",
        "returnType": "PluralRules"
      },
      {
        "kind": "Constructor",
        "params": "[(optional locales<LocalesArgument>) (optional options<PluralRulesOptions>)]",
        "returnType": "PluralRules"
      },
      {
        "kind": "Method",
        "name": "supportedLocalesOf",
        "isStatic": false,
        "params": "[locales<LocalesArgument> (optional options<{(property (optional {:localeMatcher (or \"lookup\" \"best fit\")}))}>)]",
        "returnType": "(array string)"
      }
    ]
  },
  "NumberFormat": {
    "kind": "GlobalObject",
    "name": "NumberFormat",
    "members": [
      {
        "kind": "Method",
        "name": "formatToParts",
        "isStatic": false,
        "params": "[(optional number<(or number bigint)>)]",
        "returnType": "(array NumberFormatPart)"
      },
      {
        "kind": "Method",
        "name": "format",
        "isStatic": false,
        "params": "[value<(or number bigint)>]",
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional locales<LocalesArgument>) (optional options<NumberFormatOptions>)]",
        "returnType": "NumberFormat"
      },
      {
        "kind": "Constructor",
        "params": "[(optional locales<LocalesArgument>) (optional options<NumberFormatOptions>)]",
        "returnType": "NumberFormat"
      },
      {
        "kind": "Method",
        "name": "supportedLocalesOf",
        "isStatic": false,
        "params": "[locales<LocalesArgument> (optional options<NumberFormatOptions>)]",
        "returnType": "(array string)"
      },
      {
        "kind": "Method",
        "name": "format",
        "isStatic": false,
        "params": "[value<(or number bigint StringNumericLiteral)>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "formatToParts",
        "isStatic": false,
        "params": "[value<(or number bigint StringNumericLiteral)>]",
        "returnType": "(array NumberFormatPart)"
      },
      {
        "kind": "Method",
        "name": "formatRange",
        "isStatic": false,
        "params": "[start<(or number bigint StringNumericLiteral)> end<(or number bigint StringNumericLiteral)>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "formatRangeToParts",
        "isStatic": false,
        "params": "[start<(or number bigint StringNumericLiteral)> end<(or number bigint StringNumericLiteral)>]",
        "returnType": "(array NumberRangeFormatPart)"
      },
      {
        "kind": "Method",
        "name": "format",
        "isStatic": false,
        "params": "[value<number>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "resolvedOptions",
        "isStatic": false,
        "params": "[]",
        "returnType": "ResolvedNumberFormatOptions"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional locales<(or string (array string))>) (optional options<NumberFormatOptions>)]",
        "returnType": "NumberFormat"
      },
      {
        "kind": "Constructor",
        "params": "[(optional locales<(or string (array string))>) (optional options<NumberFormatOptions>)]",
        "returnType": "NumberFormat"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "NumberFormat"
      },
      {
        "kind": "Method",
        "name": "supportedLocalesOf",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<NumberFormatOptions>)]",
        "returnType": "(array string)"
      }
    ]
  },
  "BigInt": {
    "kind": "GlobalObject",
    "name": "BigInt",
    "members": [
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"BigInt\""
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[(optional radix<number>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[(optional locales<Intl.LocalesArgument>) (optional options<BigIntToLocaleStringOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "bigint"
      },
      {
        "kind": "Constructor",
        "params": "[value<(or bigint boolean number string)>]",
        "returnType": "bigint"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "BigInt"
      },
      {
        "kind": "Method",
        "name": "asIntN",
        "isStatic": false,
        "params": "[bits<number> int<bigint>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "asUintN",
        "isStatic": false,
        "params": "[bits<number> int<bigint>]",
        "returnType": "bigint"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "BigInt64Array": {
    "kind": "GlobalObject",
    "name": "BigInt64Array",
    "members": [
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "TArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "byteOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"BigInt64Array\""
      },
      {
        "kind": "Method",
        "name": "copyWithin",
        "isStatic": false,
        "params": "[target<number> start<number> (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number bigint]>"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<BigInt64Array<TArrayBuffer>>])<boolean>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "fill",
        "isStatic": false,
        "params": "[value<bigint> (optional start<number>) (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<BigInt64Array<TArrayBuffer>>])<any>> (optional thisArg<any>)]",
        "returnType": "BigInt64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<BigInt64Array<TArrayBuffer>>])<boolean>> (optional thisArg<any>)]",
        "returnType": "(or bigint undefined)"
      },
      {
        "kind": "Method",
        "name": "findIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<BigInt64Array<TArrayBuffer>>])<boolean>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<bigint> index<number> array<BigInt64Array<TArrayBuffer>>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchElement<bigint> (optional fromIndex<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchElement<bigint> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "join",
        "isStatic": false,
        "params": "[(optional separator<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchElement<bigint> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "map",
        "isStatic": false,
        "params": "[callbackfn<(function [value<bigint> index<number> array<BigInt64Array<TArrayBuffer>>])<bigint>> (optional thisArg<any>)]",
        "returnType": "BigInt64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<bigint> currentValue<bigint> currentIndex<number> array<BigInt64Array<TArrayBuffer>>])<bigint>>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<bigint> currentIndex<number> array<BigInt64Array<TArrayBuffer>>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<bigint> currentValue<bigint> currentIndex<number> array<BigInt64Array<TArrayBuffer>>])<bigint>>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<bigint> currentIndex<number> array<BigInt64Array<TArrayBuffer>>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[array<ArrayLike<bigint>> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "BigInt64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "some",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<BigInt64Array<TArrayBuffer>>])<boolean>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<bigint> b<bigint>])<(or number bigint)>>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "subarray",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "BigInt64Array<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[(optional locales<(or string (array string))>) (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "BigInt64Array<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<bigint>"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<bigint>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional length<number>)]",
        "returnType": "BigInt64Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<(or ArrayLike<bigint> Iterable<bigint>)>]",
        "returnType": "BigInt64Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[buffer<TArrayBuffer> (optional byteOffset<number>) (optional length<number>)]",
        "returnType": "BigInt64Array<TArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "BigInt64Array<ArrayBufferLike>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[(& rest<items<(array bigint)>>)]",
        "returnType": "BigInt64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<bigint>>]",
        "returnType": "BigInt64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<U>> mapfn<(function [v<U> k<number>])<bigint>> (optional thisArg<any>)]",
        "returnType": "BigInt64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or bigint undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<(this)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or bigint undefined)"
      },
      {
        "kind": "Method",
        "name": "findLastIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toReversed",
        "isStatic": false,
        "params": "[]",
        "returnType": "BigInt64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toSorted",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<bigint> b<bigint>])<number>>)]",
        "returnType": "BigInt64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "with",
        "isStatic": false,
        "params": "[index<number> value<bigint>]",
        "returnType": "BigInt64Array<ArrayBuffer>"
      }
    ],
    "inheritanceSources": [
      "TypedArray",
      "Object",
      "Function"
    ]
  },
  "BigUint64Array": {
    "kind": "GlobalObject",
    "name": "BigUint64Array",
    "members": [
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "buffer",
        "isStatic": true,
        "returnType": "TArrayBuffer"
      },
      {
        "kind": "Property",
        "name": "byteLength",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "byteOffset",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "length",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"BigUint64Array\""
      },
      {
        "kind": "Method",
        "name": "copyWithin",
        "isStatic": false,
        "params": "[target<number> start<number> (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "entries",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<[number bigint]>"
      },
      {
        "kind": "Method",
        "name": "every",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<BigUint64Array<TArrayBuffer>>])<boolean>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "fill",
        "isStatic": false,
        "params": "[value<bigint> (optional start<number>) (optional end<number>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "filter",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<BigUint64Array<TArrayBuffer>>])<any>> (optional thisArg<any>)]",
        "returnType": "BigUint64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "find",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<BigUint64Array<TArrayBuffer>>])<boolean>> (optional thisArg<any>)]",
        "returnType": "(or bigint undefined)"
      },
      {
        "kind": "Method",
        "name": "findIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<BigUint64Array<TArrayBuffer>>])<boolean>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "forEach",
        "isStatic": false,
        "params": "[callbackfn<(function [value<bigint> index<number> array<BigUint64Array<TArrayBuffer>>])<void>> (optional thisArg<any>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "includes",
        "isStatic": false,
        "params": "[searchElement<bigint> (optional fromIndex<number>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "indexOf",
        "isStatic": false,
        "params": "[searchElement<bigint> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "join",
        "isStatic": false,
        "params": "[(optional separator<string>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "keys",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<number>"
      },
      {
        "kind": "Method",
        "name": "lastIndexOf",
        "isStatic": false,
        "params": "[searchElement<bigint> (optional fromIndex<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "map",
        "isStatic": false,
        "params": "[callbackfn<(function [value<bigint> index<number> array<BigUint64Array<TArrayBuffer>>])<bigint>> (optional thisArg<any>)]",
        "returnType": "BigUint64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<bigint> currentValue<bigint> currentIndex<number> array<BigUint64Array<TArrayBuffer>>])<bigint>>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "reduce",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<bigint> currentIndex<number> array<BigUint64Array<TArrayBuffer>>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<bigint> currentValue<bigint> currentIndex<number> array<BigUint64Array<TArrayBuffer>>])<bigint>>]",
        "returnType": "bigint"
      },
      {
        "kind": "Method",
        "name": "reduceRight",
        "isStatic": false,
        "params": "[callbackfn<(function [previousValue<U> currentValue<bigint> currentIndex<number> array<BigUint64Array<TArrayBuffer>>])<U>> initialValue<U>]",
        "returnType": "U"
      },
      {
        "kind": "Method",
        "name": "reverse",
        "isStatic": false,
        "params": "[]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "set",
        "isStatic": false,
        "params": "[array<ArrayLike<bigint>> (optional offset<number>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "slice",
        "isStatic": false,
        "params": "[(optional start<number>) (optional end<number>)]",
        "returnType": "BigUint64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "some",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<BigUint64Array<TArrayBuffer>>])<boolean>> (optional thisArg<any>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "sort",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<bigint> b<bigint>])<(or number bigint)>>)]",
        "returnType": "(this)"
      },
      {
        "kind": "Method",
        "name": "subarray",
        "isStatic": false,
        "params": "[(optional begin<number>) (optional end<number>)]",
        "returnType": "BigUint64Array<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toLocaleString",
        "isStatic": false,
        "params": "[(optional locales<(or string (array string))>) (optional options<Intl.NumberFormatOptions>)]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "BigUint64Array<TArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "values",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<bigint>"
      },
      {
        "kind": "Method",
        "name": "[Symbol.iterator]",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayIterator<bigint>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional length<number>)]",
        "returnType": "BigUint64Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[array<(or ArrayLike<bigint> Iterable<bigint>)>]",
        "returnType": "BigUint64Array<ArrayBuffer>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[buffer<TArrayBuffer> (optional byteOffset<number>) (optional length<number>)]",
        "returnType": "BigUint64Array<TArrayBuffer>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "BigUint64Array<ArrayBufferLike>"
      },
      {
        "kind": "Property",
        "name": "BYTES_PER_ELEMENT",
        "isStatic": true,
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[(& rest<items<(array bigint)>>)]",
        "returnType": "BigUint64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<bigint>>]",
        "returnType": "BigUint64Array"
      },
      {
        "kind": "Method",
        "name": "from",
        "isStatic": false,
        "params": "[arrayLike<ArrayLike<U>> mapfn<(function [v<U> k<number>])<bigint>> (optional thisArg<any>)]",
        "returnType": "BigUint64Array"
      },
      {
        "kind": "Method",
        "name": "at",
        "isStatic": false,
        "params": "[index<number>]",
        "returnType": "(or bigint undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<(this)>])<(predicate value S)>> (optional thisArg<any>)]",
        "returnType": "(or S undefined)"
      },
      {
        "kind": "Method",
        "name": "findLast",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "(or bigint undefined)"
      },
      {
        "kind": "Method",
        "name": "findLastIndex",
        "isStatic": false,
        "params": "[predicate<(function [value<bigint> index<number> array<(this)>])<unknown>> (optional thisArg<any>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toReversed",
        "isStatic": false,
        "params": "[]",
        "returnType": "BigUint64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "toSorted",
        "isStatic": false,
        "params": "[(optional compareFn<(function [a<bigint> b<bigint>])<number>>)]",
        "returnType": "BigUint64Array<ArrayBuffer>"
      },
      {
        "kind": "Method",
        "name": "with",
        "isStatic": false,
        "params": "[index<number> value<bigint>]",
        "returnType": "BigUint64Array<ArrayBuffer>"
      }
    ],
    "inheritanceSources": [
      "TypedArray",
      "Object",
      "Function"
    ]
  },
  "RelativeTimeFormat": {
    "kind": "GlobalObject",
    "name": "RelativeTimeFormat",
    "members": [
      {
        "kind": "Method",
        "name": "format",
        "isStatic": false,
        "params": "[value<number> unit<RelativeTimeFormatUnit>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "formatToParts",
        "isStatic": false,
        "params": "[value<number> unit<RelativeTimeFormatUnit>]",
        "returnType": "(array RelativeTimeFormatPart)"
      },
      {
        "kind": "Method",
        "name": "resolvedOptions",
        "isStatic": false,
        "params": "[]",
        "returnType": "ResolvedRelativeTimeFormatOptions"
      }
    ]
  },
  "Locale": {
    "kind": "GlobalObject",
    "name": "Locale",
    "members": [
      {
        "kind": "Property",
        "name": "baseName",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "language",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "maximize",
        "isStatic": false,
        "params": "[]",
        "returnType": "Locale"
      },
      {
        "kind": "Method",
        "name": "minimize",
        "isStatic": false,
        "params": "[]",
        "returnType": "Locale"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "UnicodeBCP47LocaleIdentifier"
      }
    ],
    "inheritanceSources": [
      "LocaleOptions"
    ]
  },
  "DisplayNames": {
    "kind": "GlobalObject",
    "name": "DisplayNames",
    "members": [
      {
        "kind": "Method",
        "name": "of",
        "isStatic": false,
        "params": "[code<string>]",
        "returnType": "(or string undefined)"
      },
      {
        "kind": "Method",
        "name": "resolvedOptions",
        "isStatic": false,
        "params": "[]",
        "returnType": "ResolvedDisplayNamesOptions"
      }
    ]
  },
  "Collator": {
    "kind": "GlobalObject",
    "name": "Collator",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional locales<LocalesArgument>) (optional options<CollatorOptions>)]",
        "returnType": "Collator"
      },
      {
        "kind": "Constructor",
        "params": "[(optional locales<LocalesArgument>) (optional options<CollatorOptions>)]",
        "returnType": "Collator"
      },
      {
        "kind": "Method",
        "name": "supportedLocalesOf",
        "isStatic": false,
        "params": "[locales<LocalesArgument> (optional options<CollatorOptions>)]",
        "returnType": "(array string)"
      },
      {
        "kind": "Method",
        "name": "compare",
        "isStatic": false,
        "params": "[x<string> y<string>]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "resolvedOptions",
        "isStatic": false,
        "params": "[]",
        "returnType": "ResolvedCollatorOptions"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional locales<(or string (array string))>) (optional options<CollatorOptions>)]",
        "returnType": "Collator"
      },
      {
        "kind": "Constructor",
        "params": "[(optional locales<(or string (array string))>) (optional options<CollatorOptions>)]",
        "returnType": "Collator"
      },
      {
        "kind": "Method",
        "name": "supportedLocalesOf",
        "isStatic": false,
        "params": "[locales<(or string (array string))> (optional options<CollatorOptions>)]",
        "returnType": "(array string)"
      }
    ]
  },
  "ListFormat": {
    "kind": "GlobalObject",
    "name": "ListFormat",
    "members": [
      {
        "kind": "Method",
        "name": "format",
        "isStatic": false,
        "params": "[list<Iterable<string>>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "formatToParts",
        "isStatic": false,
        "params": "[list<Iterable<string>>]",
        "returnType": "(array {(property {:type (or \"element\" \"literal\")}) (property {:value string})})"
      },
      {
        "kind": "Method",
        "name": "resolvedOptions",
        "isStatic": false,
        "params": "[]",
        "returnType": "ResolvedListFormatOptions"
      }
    ]
  },
  "AggregateError": {
    "kind": "GlobalObject",
    "name": "AggregateError",
    "members": [
      {
        "kind": "Property",
        "name": "errors",
        "isStatic": true,
        "returnType": "(array any)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[errors<Iterable<any>> (optional message<string>)]",
        "returnType": "AggregateError"
      },
      {
        "kind": "Constructor",
        "params": "[errors<Iterable<any>> (optional message<string>)]",
        "returnType": "AggregateError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "AggregateError"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[errors<Iterable<any>> (optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "AggregateError"
      },
      {
        "kind": "Constructor",
        "params": "[errors<Iterable<any>> (optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "AggregateError"
      }
    ],
    "inheritanceSources": [
      "Error",
      "Object",
      "Function"
    ]
  },
  "WeakRef": {
    "kind": "GlobalObject",
    "name": "WeakRef",
    "members": [
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"WeakRef\""
      },
      {
        "kind": "Method",
        "name": "deref",
        "isStatic": false,
        "params": "[]",
        "returnType": "(or T undefined)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[target<T>]",
        "returnType": "WeakRef<T>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "WeakRef<any>"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "FinalizationRegistry": {
    "kind": "GlobalObject",
    "name": "FinalizationRegistry",
    "members": [
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "\"FinalizationRegistry\""
      },
      {
        "kind": "Method",
        "name": "register",
        "isStatic": false,
        "params": "[target<WeakKey> heldValue<T> (optional unregisterToken<WeakKey>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unregister",
        "isStatic": false,
        "params": "[unregisterToken<WeakKey>]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[cleanupCallback<(function [heldValue<T>])<void>>]",
        "returnType": "FinalizationRegistry<T>"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "FinalizationRegistry<any>"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "Error": {
    "kind": "GlobalObject",
    "name": "Error",
    "members": [
      {
        "kind": "Property",
        "name": "cause",
        "isStatic": true,
        "returnType": "unknown"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "Error"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "Error"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "message",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "stack",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>)]",
        "returnType": "Error"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>)]",
        "returnType": "Error"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Error"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "EvalError": {
    "kind": "GlobalObject",
    "name": "EvalError",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "EvalError"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "EvalError"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>)]",
        "returnType": "EvalError"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>)]",
        "returnType": "EvalError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "EvalError"
      }
    ],
    "inheritanceSources": [
      "Error",
      "Object",
      "Function"
    ]
  },
  "RangeError": {
    "kind": "GlobalObject",
    "name": "RangeError",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "RangeError"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "RangeError"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>)]",
        "returnType": "RangeError"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>)]",
        "returnType": "RangeError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "RangeError"
      }
    ],
    "inheritanceSources": [
      "Error",
      "Object",
      "Function"
    ]
  },
  "ReferenceError": {
    "kind": "GlobalObject",
    "name": "ReferenceError",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "ReferenceError"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "ReferenceError"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>)]",
        "returnType": "ReferenceError"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>)]",
        "returnType": "ReferenceError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "ReferenceError"
      }
    ],
    "inheritanceSources": [
      "Error",
      "Object",
      "Function"
    ]
  },
  "SyntaxError": {
    "kind": "GlobalObject",
    "name": "SyntaxError",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "SyntaxError"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "SyntaxError"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>)]",
        "returnType": "SyntaxError"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>)]",
        "returnType": "SyntaxError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "SyntaxError"
      }
    ],
    "inheritanceSources": [
      "Error",
      "Object",
      "Function"
    ]
  },
  "TypeError": {
    "kind": "GlobalObject",
    "name": "TypeError",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "TypeError"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "TypeError"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>)]",
        "returnType": "TypeError"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>)]",
        "returnType": "TypeError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "TypeError"
      }
    ],
    "inheritanceSources": [
      "Error",
      "Object",
      "Function"
    ]
  },
  "URIError": {
    "kind": "GlobalObject",
    "name": "URIError",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "URIError"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>) (optional options<ErrorOptions>)]",
        "returnType": "URIError"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional message<string>)]",
        "returnType": "URIError"
      },
      {
        "kind": "Constructor",
        "params": "[(optional message<string>)]",
        "returnType": "URIError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "URIError"
      }
    ],
    "inheritanceSources": [
      "Error",
      "Object",
      "Function"
    ]
  },
  "Segmenter": {
    "kind": "GlobalObject",
    "name": "Segmenter",
    "members": [
      {
        "kind": "Method",
        "name": "segment",
        "isStatic": false,
        "params": "[input<string>]",
        "returnType": "Segments"
      },
      {
        "kind": "Method",
        "name": "resolvedOptions",
        "isStatic": false,
        "params": "[]",
        "returnType": "ResolvedSegmenterOptions"
      }
    ]
  },
  "Boolean": {
    "kind": "GlobalObject",
    "name": "Boolean",
    "members": [
      {
        "kind": "Method",
        "name": "valueOf",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[(optional value<any>)]",
        "returnType": "Boolean"
      },
      {
        "kind": "Constructor",
        "params": "[(optional value<T>)]",
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "Boolean"
      }
    ],
    "inheritanceSources": [
      "Object",
      "Function"
    ]
  },
  "SuppressedError": {
    "kind": "GlobalObject",
    "name": "SuppressedError",
    "members": [
      {
        "kind": "Property",
        "name": "error",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "suppressed",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[error<any> suppressed<any> (optional message<string>)]",
        "returnType": "SuppressedError"
      },
      {
        "kind": "Constructor",
        "params": "[error<any> suppressed<any> (optional message<string>)]",
        "returnType": "SuppressedError"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "SuppressedError"
      }
    ],
    "inheritanceSources": [
      "Error"
    ]
  },
  "DisposableStack": {
    "kind": "GlobalObject",
    "name": "DisposableStack",
    "members": [
      {
        "kind": "Property",
        "name": "disposed",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "dispose",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "use",
        "isStatic": false,
        "params": "[value<T>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "adopt",
        "isStatic": false,
        "params": "[value<T> onDispose<(function [value<T>])<void>>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "defer",
        "isStatic": false,
        "params": "[onDispose<(function [])<void>>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "move",
        "isStatic": false,
        "params": "[]",
        "returnType": "DisposableStack"
      },
      {
        "kind": "Method",
        "name": "[Symbol.dispose]",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DisposableStack"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "DisposableStack"
      }
    ]
  },
  "AsyncDisposableStack": {
    "kind": "GlobalObject",
    "name": "AsyncDisposableStack",
    "members": [
      {
        "kind": "Property",
        "name": "disposed",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "[Symbol.toStringTag]",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "disposeAsync",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "use",
        "isStatic": false,
        "params": "[value<T>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "adopt",
        "isStatic": false,
        "params": "[value<T> onDisposeAsync<(function [value<T>])<(or PromiseLike<void> void)>>]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "defer",
        "isStatic": false,
        "params": "[onDisposeAsync<(function [])<(or PromiseLike<void> void)>>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "move",
        "isStatic": false,
        "params": "[]",
        "returnType": "AsyncDisposableStack"
      },
      {
        "kind": "Method",
        "name": "[Symbol.asyncDispose]",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "AsyncDisposableStack"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": true,
        "returnType": "AsyncDisposableStack"
      }
    ]
  },
  "global": {
    "kind": "GlobalObject",
    "name": "global",
    "members": [
      {
        "kind": "Property",
        "name": "Iterator",
        "isStatic": true,
        "returnType": "IteratorConstructor"
      }
    ],
    "namespace": "global"
  },
  "WScript": {
    "kind": "Property",
    "name": "WScript",
    "members": [
      {
        "kind": "Property",
        "name": "StdErr",
        "isStatic": false,
        "returnType": "TextStreamWriter"
      },
      {
        "kind": "Property",
        "name": "StdOut",
        "isStatic": false,
        "returnType": "TextStreamWriter"
      },
      {
        "kind": "Property",
        "name": "Arguments",
        "isStatic": false,
        "returnType": "{(property {:length number}) (method [n<number>])<string>}"
      },
      {
        "kind": "Property",
        "name": "ScriptFullName",
        "isStatic": false,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "BuildVersion",
        "isStatic": false,
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "FullName",
        "isStatic": false,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "Interactive",
        "isStatic": false,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "Name",
        "isStatic": false,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "Path",
        "isStatic": false,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ScriptName",
        "isStatic": false,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "StdIn",
        "isStatic": false,
        "returnType": "TextStreamReader"
      },
      {
        "kind": "Property",
        "name": "Version",
        "isStatic": false,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "Echo",
        "isStatic": false,
        "params": "[s<any>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "Quit",
        "isStatic": false,
        "params": "[(optional exitCode<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "ConnectObject",
        "isStatic": false,
        "params": "[objEventSource<any> strPrefix<string>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "CreateObject",
        "isStatic": false,
        "params": "[strProgID<string> (optional strPrefix<string>)]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "DisconnectObject",
        "isStatic": false,
        "params": "[obj<any>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "GetObject",
        "isStatic": false,
        "params": "[strPathname<string> (optional strProgID<string>) (optional strPrefix<string>)]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "Sleep",
        "isStatic": false,
        "params": "[intTime<number>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(method [s<any>])<void> (property {:StdErr TextStreamWriter}) (property {:StdOut TextStreamWriter}) (property {:Arguments {(property {:length number}) (method [n<number>])<string>}}) (property {:ScriptFullName string}) (method [(optional exitCode<number>)])<number> (property {:BuildVersion number}) (property {:FullName string}) (property {:Interactive boolean}) (property {:Name string}) (property {:Path string}) (property {:ScriptName string}) (property {:StdIn TextStreamReader}) (property {:Version string}) (method [objEventSource<any> strPrefix<string>])<void> (method [strProgID<string> (optional strPrefix<string>)])<any> (method [obj<any>])<void> (method [strPathname<string> (optional strProgID<string>) (optional strPrefix<string>)])<any> (method [intTime<number>])<void>}"
  },
  "ActiveXObject": {
    "kind": "GlobalObject",
    "name": "ActiveXObject",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[s<string>]",
        "returnType": "any"
      }
    ]
  },
  "Enumerator": {
    "kind": "GlobalObject",
    "name": "Enumerator",
    "members": [
      {
        "kind": "Method",
        "name": "atEnd",
        "isStatic": false,
        "params": "[]",
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "item",
        "isStatic": false,
        "params": "[]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "moveFirst",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "moveNext",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[safearray<SafeArray<T>>]",
        "returnType": "Enumerator<T>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[collection<{(method [index<any>])<T>}>]",
        "returnType": "Enumerator<T>"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[collection<any>]",
        "returnType": "Enumerator<T>"
      }
    ]
  },
  "VBArray": {
    "kind": "GlobalObject",
    "name": "VBArray",
    "members": [
      {
        "kind": "Method",
        "name": "dimensions",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "isStatic": false,
        "params": "[dimension1Index<number> (& rest<dimensionNIndexes<(array number)>>)]",
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "lbound",
        "isStatic": false,
        "params": "[(optional dimension<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "ubound",
        "isStatic": false,
        "params": "[(optional dimension<number>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "toArray",
        "isStatic": false,
        "params": "[]",
        "returnType": "(array T)"
      },
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[safeArray<SafeArray<T>>]",
        "returnType": "VBArray<T>"
      }
    ]
  },
  "SafeArray": {
    "kind": "GlobalObject",
    "name": "SafeArray",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]"
      },
      {
        "kind": "Property",
        "name": "SafeArray_typekey",
        "isStatic": false,
        "returnType": "SafeArray<T>"
      }
    ]
  },
  "VarDate": {
    "kind": "GlobalObject",
    "name": "VarDate",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]"
      },
      {
        "kind": "Property",
        "name": "VarDate_typekey",
        "isStatic": false,
        "returnType": "VarDate"
      }
    ]
  },
  "Client": {
    "kind": "Property",
    "name": "Client",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Client"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Client"
      },
      {
        "kind": "Property",
        "name": "frameType",
        "isStatic": true,
        "returnType": "FrameType"
      },
      {
        "kind": "Property",
        "name": "id",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "type",
        "isStatic": true,
        "returnType": "ClientTypes"
      },
      {
        "kind": "Property",
        "name": "url",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> transfer<(array Transferable)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> (optional options<StructuredSerializeOptions>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Client}) (new [] Client)}"
  },
  "Clients": {
    "kind": "Property",
    "name": "Clients",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "Clients"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "Clients"
      },
      {
        "kind": "Method",
        "name": "claim",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "get",
        "isStatic": false,
        "params": "[id<string>]",
        "returnType": "Promise<(or Client undefined)>"
      },
      {
        "kind": "Method",
        "name": "matchAll",
        "isStatic": false,
        "params": "[(optional options<T>)]",
        "returnType": "Promise<ReadonlyArray<(if (extends (get T \"type\") \"window\") WindowClient Client)>>"
      },
      {
        "kind": "Method",
        "name": "openWindow",
        "isStatic": false,
        "params": "[url<(or string URL)>]",
        "returnType": "Promise<(or WindowClient null)>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype Clients}) (new [] Clients)}"
  },
  "DedicatedWorkerGlobalScope": {
    "kind": "Property",
    "name": "DedicatedWorkerGlobalScope",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "DedicatedWorkerGlobalScope"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "DedicatedWorkerGlobalScope"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<DedicatedWorkerGlobalScope> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessageerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<DedicatedWorkerGlobalScope> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onrtctransform",
        "isStatic": true,
        "returnType": "(or (list (function [this<DedicatedWorkerGlobalScope> ev<RTCTransformEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> transfer<(array Transferable)>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "postMessage",
        "isStatic": false,
        "params": "[message<any> (optional options<StructuredSerializeOptions>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<DedicatedWorkerGlobalScope> ev<(get DedicatedWorkerGlobalScopeEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<DedicatedWorkerGlobalScope> ev<(get DedicatedWorkerGlobalScopeEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype DedicatedWorkerGlobalScope}) (new [] DedicatedWorkerGlobalScope)}"
  },
  "ExtendableEvent": {
    "kind": "Property",
    "name": "ExtendableEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<ExtendableEventInit>)]",
        "returnType": "ExtendableEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ExtendableEvent"
      },
      {
        "kind": "Method",
        "name": "waitUntil",
        "isStatic": false,
        "params": "[f<Promise<any>>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ExtendableEvent}) (new [type<string> (optional eventInitDict<ExtendableEventInit>)] ExtendableEvent)}"
  },
  "ExtendableMessageEvent": {
    "kind": "Property",
    "name": "ExtendableMessageEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<ExtendableMessageEventInit>)]",
        "returnType": "ExtendableMessageEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ExtendableMessageEvent"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "lastEventId",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "origin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "ports",
        "isStatic": true,
        "returnType": "ReadonlyArray<MessagePort>"
      },
      {
        "kind": "Property",
        "name": "source",
        "isStatic": true,
        "returnType": "(or Client ServiceWorker MessagePort null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ExtendableMessageEvent}) (new [type<string> (optional eventInitDict<ExtendableMessageEventInit>)] ExtendableMessageEvent)}"
  },
  "FetchEvent": {
    "kind": "Property",
    "name": "FetchEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<FetchEventInit>]",
        "returnType": "FetchEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FetchEvent"
      },
      {
        "kind": "Property",
        "name": "clientId",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "handled",
        "isStatic": true,
        "returnType": "Promise<undefined>"
      },
      {
        "kind": "Property",
        "name": "preloadResponse",
        "isStatic": true,
        "returnType": "Promise<any>"
      },
      {
        "kind": "Property",
        "name": "request",
        "isStatic": true,
        "returnType": "Request"
      },
      {
        "kind": "Property",
        "name": "resultingClientId",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "respondWith",
        "isStatic": false,
        "params": "[r<(or Response PromiseLike<Response>)>]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FetchEvent}) (new [type<string> eventInitDict<FetchEventInit>] FetchEvent)}"
  },
  "FileReaderSync": {
    "kind": "Property",
    "name": "FileReaderSync",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileReaderSync"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileReaderSync"
      },
      {
        "kind": "Method",
        "name": "readAsArrayBuffer",
        "isStatic": false,
        "params": "[blob<Blob>]",
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Method",
        "name": "readAsBinaryString",
        "isStatic": false,
        "params": "[blob<Blob>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "readAsDataURL",
        "isStatic": false,
        "params": "[blob<Blob>]",
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "readAsText",
        "isStatic": false,
        "params": "[blob<Blob> (optional encoding<string>)]",
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FileReaderSync}) (new [] FileReaderSync)}"
  },
  "FileSystemSyncAccessHandle": {
    "kind": "Property",
    "name": "FileSystemSyncAccessHandle",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "FileSystemSyncAccessHandle"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "FileSystemSyncAccessHandle"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "flush",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getSize",
        "isStatic": false,
        "params": "[]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "read",
        "isStatic": false,
        "params": "[buffer<AllowSharedBufferSource> (optional options<FileSystemReadWriteOptions>)]",
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "truncate",
        "isStatic": false,
        "params": "[newSize<number>]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "write",
        "isStatic": false,
        "params": "[buffer<AllowSharedBufferSource> (optional options<FileSystemReadWriteOptions>)]",
        "returnType": "number"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype FileSystemSyncAccessHandle}) (new [] FileSystemSyncAccessHandle)}"
  },
  "MediaStreamTrackProcessor": {
    "kind": "Property",
    "name": "MediaStreamTrackProcessor",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[init<MediaStreamTrackProcessorInit>]",
        "returnType": "MediaStreamTrackProcessor"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "MediaStreamTrackProcessor"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype MediaStreamTrackProcessor}) (new [init<MediaStreamTrackProcessorInit>] MediaStreamTrackProcessor)}"
  },
  "NotificationEvent": {
    "kind": "Property",
    "name": "NotificationEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> eventInitDict<NotificationEventInit>]",
        "returnType": "NotificationEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "NotificationEvent"
      },
      {
        "kind": "Property",
        "name": "action",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "notification",
        "isStatic": true,
        "returnType": "Notification"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype NotificationEvent}) (new [type<string> eventInitDict<NotificationEventInit>] NotificationEvent)}"
  },
  "PushEvent": {
    "kind": "Property",
    "name": "PushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[type<string> (optional eventInitDict<PushEventInit>)]",
        "returnType": "PushEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PushEvent"
      },
      {
        "kind": "Property",
        "name": "data",
        "isStatic": true,
        "returnType": "(or PushMessageData null)"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PushEvent}) (new [type<string> (optional eventInitDict<PushEventInit>)] PushEvent)}"
  },
  "PushMessageData": {
    "kind": "Property",
    "name": "PushMessageData",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "PushMessageData"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "PushMessageData"
      },
      {
        "kind": "Method",
        "name": "arrayBuffer",
        "isStatic": false,
        "params": "[]",
        "returnType": "ArrayBuffer"
      },
      {
        "kind": "Method",
        "name": "blob",
        "isStatic": false,
        "params": "[]",
        "returnType": "Blob"
      },
      {
        "kind": "Method",
        "name": "bytes",
        "isStatic": false,
        "params": "[]",
        "returnType": "Uint8Array"
      },
      {
        "kind": "Method",
        "name": "json",
        "isStatic": false,
        "params": "[]",
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "text",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype PushMessageData}) (new [] PushMessageData)}"
  },
  "RTCRtpScriptTransformer": {
    "kind": "Property",
    "name": "RTCRtpScriptTransformer",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCRtpScriptTransformer"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCRtpScriptTransformer"
      },
      {
        "kind": "Property",
        "name": "options",
        "isStatic": true,
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "readable",
        "isStatic": true,
        "returnType": "ReadableStream"
      },
      {
        "kind": "Property",
        "name": "writable",
        "isStatic": true,
        "returnType": "WritableStream"
      },
      {
        "kind": "Method",
        "name": "generateKeyFrame",
        "isStatic": false,
        "params": "[(optional rid<string>)]",
        "returnType": "Promise<number>"
      },
      {
        "kind": "Method",
        "name": "sendKeyFrameRequest",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCRtpScriptTransformer}) (new [] RTCRtpScriptTransformer)}"
  },
  "RTCTransformEvent": {
    "kind": "Property",
    "name": "RTCTransformEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "RTCTransformEvent"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "RTCTransformEvent"
      },
      {
        "kind": "Property",
        "name": "transformer",
        "isStatic": true,
        "returnType": "RTCRtpScriptTransformer"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype RTCTransformEvent}) (new [] RTCTransformEvent)}"
  },
  "ServiceWorkerGlobalScope": {
    "kind": "Property",
    "name": "ServiceWorkerGlobalScope",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "ServiceWorkerGlobalScope"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "ServiceWorkerGlobalScope"
      },
      {
        "kind": "Property",
        "name": "clients",
        "isStatic": true,
        "returnType": "Clients"
      },
      {
        "kind": "Property",
        "name": "onactivate",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerGlobalScope> ev<ExtendableEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onfetch",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerGlobalScope> ev<FetchEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "oninstall",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerGlobalScope> ev<ExtendableEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessage",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerGlobalScope> ev<ExtendableMessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onmessageerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerGlobalScope> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onnotificationclick",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerGlobalScope> ev<NotificationEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onnotificationclose",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerGlobalScope> ev<NotificationEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpush",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerGlobalScope> ev<PushEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onpushsubscriptionchange",
        "isStatic": true,
        "returnType": "(or (list (function [this<ServiceWorkerGlobalScope> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "registration",
        "isStatic": true,
        "returnType": "ServiceWorkerRegistration"
      },
      {
        "kind": "Property",
        "name": "serviceWorker",
        "isStatic": true,
        "returnType": "ServiceWorker"
      },
      {
        "kind": "Method",
        "name": "skipWaiting",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorkerGlobalScope> ev<(get ServiceWorkerGlobalScopeEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<ServiceWorkerGlobalScope> ev<(get ServiceWorkerGlobalScopeEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype ServiceWorkerGlobalScope}) (new [] ServiceWorkerGlobalScope)}"
  },
  "SharedWorkerGlobalScope": {
    "kind": "Property",
    "name": "SharedWorkerGlobalScope",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "SharedWorkerGlobalScope"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "SharedWorkerGlobalScope"
      },
      {
        "kind": "Property",
        "name": "name",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "onconnect",
        "isStatic": true,
        "returnType": "(or (list (function [this<SharedWorkerGlobalScope> ev<MessageEvent>])<any>) null)"
      },
      {
        "kind": "Method",
        "name": "close",
        "isStatic": false,
        "params": "[]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SharedWorkerGlobalScope> ev<(get SharedWorkerGlobalScopeEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<SharedWorkerGlobalScope> ev<(get SharedWorkerGlobalScopeEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype SharedWorkerGlobalScope}) (new [] SharedWorkerGlobalScope)}"
  },
  "WindowClient": {
    "kind": "Property",
    "name": "WindowClient",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WindowClient"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WindowClient"
      },
      {
        "kind": "Property",
        "name": "focused",
        "isStatic": true,
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "visibilityState",
        "isStatic": true,
        "returnType": "DocumentVisibilityState"
      },
      {
        "kind": "Method",
        "name": "focus",
        "isStatic": false,
        "params": "[]",
        "returnType": "Promise<WindowClient>"
      },
      {
        "kind": "Method",
        "name": "navigate",
        "isStatic": false,
        "params": "[url<(or string URL)>]",
        "returnType": "Promise<(or WindowClient null)>"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WindowClient}) (new [] WindowClient)}"
  },
  "WorkerGlobalScope": {
    "kind": "Property",
    "name": "WorkerGlobalScope",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WorkerGlobalScope"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WorkerGlobalScope"
      },
      {
        "kind": "Property",
        "name": "location",
        "isStatic": true,
        "returnType": "WorkerLocation"
      },
      {
        "kind": "Property",
        "name": "navigator",
        "isStatic": true,
        "returnType": "WorkerNavigator"
      },
      {
        "kind": "Property",
        "name": "onerror",
        "isStatic": true,
        "returnType": "(or (list (function [this<WorkerGlobalScope> ev<ErrorEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onlanguagechange",
        "isStatic": true,
        "returnType": "(or (list (function [this<WorkerGlobalScope> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onoffline",
        "isStatic": true,
        "returnType": "(or (list (function [this<WorkerGlobalScope> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "ononline",
        "isStatic": true,
        "returnType": "(or (list (function [this<WorkerGlobalScope> ev<Event>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onrejectionhandled",
        "isStatic": true,
        "returnType": "(or (list (function [this<WorkerGlobalScope> ev<PromiseRejectionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "onunhandledrejection",
        "isStatic": true,
        "returnType": "(or (list (function [this<WorkerGlobalScope> ev<PromiseRejectionEvent>])<any>) null)"
      },
      {
        "kind": "Property",
        "name": "self",
        "isStatic": true,
        "returnType": "(intersect WorkerGlobalScope (typeof globalThis))"
      },
      {
        "kind": "Method",
        "name": "importScripts",
        "isStatic": false,
        "params": "[(& rest<urls<(array (list (or string URL)))>>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<WorkerGlobalScope> ev<(get WorkerGlobalScopeEventMap K)>])<any>> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean AddEventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<K> listener<(function [this<WorkerGlobalScope> ev<(get WorkerGlobalScopeEventMap K)>])<any>> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEventListener",
        "isStatic": false,
        "params": "[type<string> listener<EventListenerOrEventListenerObject> (optional options<(or boolean EventListenerOptions)>)]",
        "returnType": "void"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WorkerGlobalScope}) (new [] WorkerGlobalScope)}"
  },
  "WorkerLocation": {
    "kind": "Property",
    "name": "WorkerLocation",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WorkerLocation"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WorkerLocation"
      },
      {
        "kind": "Property",
        "name": "hash",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "host",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "hostname",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "href",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "origin",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pathname",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "port",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "protocol",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "search",
        "isStatic": true,
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "toString",
        "isStatic": false,
        "params": "[]",
        "returnType": "string"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WorkerLocation}) (new [] WorkerLocation)}"
  },
  "WorkerNavigator": {
    "kind": "Property",
    "name": "WorkerNavigator",
    "members": [
      {
        "kind": "Constructor",
        "name": "new",
        "params": "[]",
        "returnType": "WorkerNavigator"
      },
      {
        "kind": "Property",
        "name": "prototype",
        "isStatic": false,
        "returnType": "WorkerNavigator"
      },
      {
        "kind": "Property",
        "name": "mediaCapabilities",
        "isStatic": true,
        "returnType": "MediaCapabilities"
      },
      {
        "kind": "Property",
        "name": "permissions",
        "isStatic": true,
        "returnType": "Permissions"
      }
    ],
    "isStatic": false,
    "returnType": "{(property {:prototype WorkerNavigator}) (new [] WorkerNavigator)}"
  }
}
